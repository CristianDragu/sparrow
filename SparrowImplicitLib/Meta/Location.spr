package Meta;

public class[ct] SourceCode
{
    /// Returns the source code object corresponding to the location of the function call
    public fun[static, native("$Meta.SourceCode.current")] current: SourceCode;

    /// Returns a location from the given filename
    public fun[static, native("$Meta.SourceCode.fromFilename")] fromFilename(filename: StringRef): SourceCode;

    public fun[native("$Meta.SourceCode.filename")] filename: StringRef;

    public fun isValid = impl !== null;

    public fun ctor
    {
        impl := null;
    }
    private fun ctor(impl: @Int)
    {
        this.impl := impl;
    }
    private var impl: @Int;    
}

public class[ct] Location
{
    public var sourceCode: SourceCode;
    public var startLineNo: UInt;
    public var startColNo: UInt;
    public var endLineNo: UInt;
    public var endColNo: UInt;

    public fun ctor
    {
        sourceCode ctor;
        startLineNo ctor 0;
        startColNo ctor 0;
        endLineNo ctor 0;
        endColNo ctor 0;
    }

    public fun ctor(sourceCode: SourceCode)
    {
        this.sourceCode ctor sourceCode;
        startLineNo ctor 1;
        startColNo ctor 1;
        endLineNo ctor 1;
        endColNo ctor 1;
    }

    public fun ctor(sourceCode: SourceCode, startLineNo, endLineNo, startColNo, endColNo: UInt)
    {
        this.sourceCode ctor sourceCode;
        this.startLineNo ctor startLineNo;
        this.startColNo ctor startColNo;
        this.endLineNo ctor endLineNo;
        this.endColNo ctor endColNo;
    }

    /// Gets the code corresponding to the current location
    public fun[native("$Meta.Location.getCorrespondingCode")] getCorrespondingCode: StringRef;
}

