package Par.TasksImpl;

import Meta.ASTNodes;
import TaskPrefix;

using traceCalls = true;

fun pr(t: @TaskPrefix) = TaskPrinter(t);
fun pr(t: TaskPtr) = TaskPrinter(t);

class TaskPrinter {
    private var task: @TaskPrefix;

    fun ctor(t: @TaskPrefix) {
        this.task := t;
    }
    fun ctor(t: TaskPtr) {
        this.task := t.get();
    }
}

fun >>(t: TaskPrinter, os: @OutStream) {
    if ( t.task === null )
        os << "<null>";
    else
        os << '<' << mkStreamRefWrapper(t.task) << ", " << (t.task.depth) << '>';
}


class[initCtor] Depth {
    var depth: Int;
}

fun >> (d: Depth, os: @OutStream) {
    if ( d.depth > 0 )
        os << String(d.depth*2, '.');
}
