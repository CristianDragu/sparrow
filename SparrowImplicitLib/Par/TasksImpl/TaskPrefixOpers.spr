package Par.TasksImpl;

import TaskPrefix;
import Assert;

// Reference counting (of the children)

fun refCount(task: @TaskPrefix): Int = task.refCount load;

fun setRefCount(task: @TaskPrefix, count: Int) { task.refCount = count; }
fun addRefCount(task: @TaskPrefix, count: Int) { task.refCount += count; }
fun incrementRefCount(task: @TaskPrefix) { task.refCount++; }
fun decrementRefCount(task: @TaskPrefix) { task.refCount--; }

fun assertValid(task: @TaskPrefix) {
    if[ct] ( isValidAndTrue(debugMode) ) {
        using ExecuteFnType = FunctionPtr(Null rt, @TaskPrefix);

        assert(task !== null);
        assert(task.executeFn != ExecuteFnType());
        assert(task.worker isSet);
    }
}
