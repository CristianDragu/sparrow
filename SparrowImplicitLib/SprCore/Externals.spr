
fun cast();
fun reinterpretCast();
fun[ct] sizeOf(): SizeType;
fun[ct] typeOf(): Type;
fun[ct] isValid(): Bool;
fun[ct] isValidAndTrue(): Bool;
fun[ct] valueIfValid(): Bool;
fun[ct] ctEval();
fun[ct, native("$injectBackendCodeRt")] injectBackendCodeRt(code: StringRef);
fun[ct, native("$injectBackendCodeCt")] injectBackendCodeCt(code: StringRef);
fun[ct, native("$injectBackendCodeRtCt")] injectBackendCodeRtCt(code: StringRef);


fun[autoCt, native("_opRefEQ")] _opRefEQ(x,y: @Byte): Bool;
fun[autoCt, native("_opRefNE")] _opRefNE(x,y: @Byte): Bool;
fun[autoCt, native("isNullRef")] isNullRef(x: @Byte): Bool;

/// Given any Sparrow node as parameter, this will transform it into an AST node
fun[ct, native("$Meta.lift")] lift();
