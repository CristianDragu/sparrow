import basicDecls(Number, Char, Bool, StringRef, Byte, UByte, Short, UShort, Int, UInt, Long, ULong, SizeType, DiffType, Double, Range)

[rtct]
    var cout: ConsoleOutputStream

    class ConsoleOutputStream
        fun <<<(x: Number)                          { _Impl.write(x) }
        fun <<<(x: Char)                            { _Impl.write(x) }
        fun <<<(x: Bool)                            { if x ; this <<< "true" else this <<< "false" }
        fun <<<(x: StringRef)                       { for c = x { _Impl.write(c) } }

        // This stream supports flush
        fun flush                                   { _Impl.flushOutput }

package _Impl
    [rtct]
        [native("writeByte")] fun write(x: Byte)
        [native("writeByte")] fun write(x: UByte)
        [native("writeShort")] fun write(x: Short)
        [native("writeShort")] fun write(x: UShort)
        [native("writeInt")] fun write(x: Int)
        [native("writeUInt")] fun write(x: UInt)
        [native("writeLong")] fun write(x: Long)
        [native("writeULong")] fun write(x: ULong)
        [native("writeDouble")] fun write(x: Double)
        [native("writeChar")] fun write(x: Char)
        [native("writeULong")] fun write(x: SizeType)
        [native("writeLong")] fun write(x: DiffType)

        [native("flushOutput")] fun flushOutput

