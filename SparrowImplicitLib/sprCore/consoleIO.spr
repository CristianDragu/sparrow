import basicDecls(Number, Char, Bool, StringRef, Byte, UByte, Short, UShort, Int, UInt, Long, ULong, SizeType, DiffType, Double, Range);

var[rtct] cout: ConsoleOutputStream;

class[rtct] ConsoleOutputStream
{
    fun <<<(x: Number)                          { Impl.write(x); }
    fun <<<(x: Char)                            { Impl.write(x); }
    fun <<<(x: Bool)                            { if ( x ) this <<< "true"; else this <<< "false"; }
    fun <<<(x: StringRef)                       { for ( c = x ) Impl.write(c); }

    // This stream supports flush
    fun flush                                   { Impl.flushOutput(); }
}

package Impl
{
    fun[rtct, native("writeByte")] write(x: Byte);
    fun[rtct, native("writeByte")] write(x: UByte);
    fun[rtct, native("writeShort")] write(x: Short);
    fun[rtct, native("writeShort")] write(x: UShort);
    fun[rtct, native("writeInt")] write(x: Int);
    fun[rtct, native("writeUInt")] write(x: UInt);
    fun[rtct, native("writeLong")] write(x: Long);
    fun[rtct, native("writeULong")] write(x: ULong);
    fun[rtct, native("writeDouble")] write(x: Double);
    fun[rtct, native("writeChar")] write(x: Char);
    fun[rtct, native("writeULong")] write(x: SizeType);
    fun[rtct, native("writeLong")] write(x: DiffType);

    fun[rtct, native("flushOutput")] flushOutput;
}

