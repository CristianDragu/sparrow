module std.scopedPtr;

import newDelete(delete);

class[noDefault] ScopedPtr(type: Type)
{
    using ValueType = type;

    fun ctor()
    {
        ref := null;
    }

    fun ctor(ref: @ValueType)
    {
        this.ref := ref;
    }

    fun dtor()
    {
        delete(ref);
    }

    fun get: @ValueType         = ref;
    fun isNull                  = ref === null;
    fun isSet                   = ref !== null;

    fun ==(other: ScopedPtr)    = ref === other.ref;

    fun reset                   { delete(ref); ref := null; }
    fun reset(ref: @ValueType)  { delete(this.ref); this.ref := ref; }

    fun swap(other: @ScopedPtr)
    {
        var tmp: @ValueType = other.ref;

        other.ref := ref;
        ref := tmp;
    }

    private var ref: @ValueType;
}
