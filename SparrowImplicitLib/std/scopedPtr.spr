module std.scopedPtr;

import newDelete(delete);

[noDefault] class ScopedPtr(type: Type)
{
    using ValueType = type;

    fun ctor()
    {
        _ref := null;
    }

    fun ctor(_ref: @ValueType)
    {
        this._ref := _ref;
    }

    fun dtor()
    {
        delete(_ref);
    }

    fun get: @ValueType         = _ref;
    fun isNull                  = _ref === null;
    fun isSet                   = _ref !== null;

    fun ==(other: ScopedPtr)    = _ref === other._ref;

    fun reset                   { delete(_ref); _ref := null; }
    fun reset(ref: @ValueType)  { delete(this._ref); this._ref := ref; }

    fun swap(other: @ScopedPtr)
    {
        var tmp: @ValueType = other._ref;

        other._ref := _ref;
        _ref := tmp;
    }

    var _ref: @ValueType;
}
