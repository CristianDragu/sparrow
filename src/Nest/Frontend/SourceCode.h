#pragma once

#include <Nest/Intermediate/NodeVector.h>

#include <boost/function.hpp>


FWD_CLASS1(Nest, CompilationContext);

namespace Nest
{
    /// Base class for the source code classes of the compiler.
    /// A code source object represents a file that contains source code. Such an object is able to parse the source
    /// file and generate corresponding intermediate code and symbol table stack.
    class SourceCode
    {
    public:
        SourceCode(const string& filename);
        virtual ~SourceCode();

        /// Parse the source program and generate the intermediate code and the symbol table.
        /// To be implemented by a language-specific parser subclass.
        virtual void parse(CompilationContext* context) = 0;

        /// Gets the source code line string corresponding to the given line no.
        /// Return an empty string if the source-code class doesn't support getting the source code line.
        virtual string getSourceCodeLine(int lineNo) const = 0;


        /// Getter for the name of the file containing the source code
        const string& filename() const { return filename_; }

        /// Getter for the intermediate code generated by this parser
        DynNode* iCode() const { return iCode_; }

        /// Getter for the additional nodes generated during the compilation of this source code
        const DynNodeVector& additionalNodes() const { return additionalNodes_; }

        /// Adds an additional node to this source code
        void addAdditionalNode(DynNode* node) { additionalNodes_.push_back(node); }

        /// Get a functor that can translate CT nodes into RT nodes, in the context of this source code
        virtual boost::function<DynNode*(DynNode*)> ctToRtTranslator() const;

    protected:
        /// The name of the file containing the source code
        const string filename_;

        /// The intermediate code that was generated out of the source file
        DynNode* iCode_;

        /// Additional nodes generated during the compilation of this source code
        DynNodeVector additionalNodes_;
    };
}
