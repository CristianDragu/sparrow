; ModuleID = 'LLVM backend module Runtime'
target datalayout = "e-i64:64-f80:128-n8:16:32:64"
target triple = "x86_64-apple-macosx10.9.0"

%EndLineHelperClass = type {}
%FlushHelperClass = type {}
%ConsoleOutputStream = type {}
%MainParameters = type { %CStrPtr, %CStrPtr }
%CStrPtr = type { %CStr* }
%CStr = type { i8* }
%struct._IO_FILE = type opaque
%Uninitialized = type {}
%Null = type {}
%StringRef = type { i8*, i8* }
%StreamRefWrapperHelperClass = type { i8* }
%ExternalErrorReporter = type {}
%Location = type { %SourceCode, %LineCol, %LineCol }
%SourceCode = type { i8* }
%LineCol = type { i32, i32 }
%String = type { %"RawPtr[Char/rtct]", %"RawPtr[Char/rtct]", %"RawPtr[Char/rtct]" }
%"RawPtr[Char/rtct]" = type { i8* }
%_CharSource = type { %FileRange*, %StringRef }
%FileRange = type { %File*, i1, i8 }
%File = type { i8* }
%ParserContext = type { %File, %FileRange, %_CharSource, %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]" }
%"SparrowScanner[_CharSource, ExternalErrorReporter]" = type { %Location, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %Token, i1, %ExternalErrorReporter }
%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]" = type { %"RangeWithLookahead[_CharSource]", %Location* }
%"RangeWithLookahead[_CharSource]" = type { %_CharSource, %"Vector[Char/rtct]" }
%"Vector[Char/rtct]" = type { %"RawPtr[Char/rtct]", %"RawPtr[Char/rtct]", %"RawPtr[Char/rtct]" }
%Token = type { %Location, %TokenType, %String, i64, double }
%TokenType = type { i32 }
%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" = type { %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %ExternalErrorReporter, %"Vector[UInt/rtct]", %"Vector[Char/rtct]", %TokenType, i32 }
%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]" = type { %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"Vector[Token]" }
%"Vector[Token]" = type { %"RawPtr[Token]", %"RawPtr[Token]", %"RawPtr[Token]" }
%"RawPtr[Token]" = type { %Token* }
%"Vector[UInt/rtct]" = type { %"RawPtr[UInt/rtct]", %"RawPtr[UInt/rtct]", %"RawPtr[UInt/rtct]" }
%"RawPtr[UInt/rtct]" = type { i32* }
%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]" = type { %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %Token, i1, %ExternalErrorReporter }
%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]" = type { %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"Vector[Token]" }
%StringOutputStream = type { %String }
%"$lambdaEnclosure" = type {}
%"$lambdaEnclosure.0" = type {}
%"$lambdaEnclosure.1" = type {}
%"$lambdaEnclosure.2" = type {}
%"ContiguousMemoryRange[Char/rtct]" = type { %"RawPtr[Char/rtct]", %"RawPtr[Char/rtct]" }
%"FunctionPtr1[Bool, Char]" = type { i8* }
%"FunctionPtr1[Bool/rtct, Char/rtct]" = type { i8* }
%"ContiguousMemoryRange[Token]" = type { %"RawPtr[Token]", %"RawPtr[Token]" }
%Node = type { %UntypedPtr }
%UntypedPtr = type { i8* }
%"Vector[LocString]" = type { %"RawPtr[LocString]", %"RawPtr[LocString]", %"RawPtr[LocString]" }
%"RawPtr[LocString]" = type { %LocString* }
%LocString = type { %"Tuple[Location/rtct, String/rtct]" }
%"Tuple[Location/rtct, String/rtct]" = type { %Location, %String }
%"ContiguousMemoryRange[LocString]" = type { %"RawPtr[LocString]", %"RawPtr[LocString]" }
%"ContiguousMemoryRange[UInt/rtct]" = type { %"RawPtr[UInt/rtct]", %"RawPtr[UInt/rtct]" }

@.fmtInt = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.fmtUInt = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.fmtLong = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@.fmtULong = private unnamed_addr constant [5 x i8] c"%llu\00", align 1
@.fmtChar = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.fmtDouble = private unnamed_addr constant [3 x i8] c"%g\00", align 1
@.fmtPointer = private unnamed_addr constant [3 x i8] c"%p\00", align 1
@endl = global %EndLineHelperClass zeroinitializer
@flush = global %FlushHelperClass zeroinitializer
@cout = global %ConsoleOutputStream zeroinitializer
@str = private unnamed_addr constant [5 x i8] c"true\00"
@str120 = private unnamed_addr constant [6 x i8] c"false\00"
@programArgs = global %MainParameters zeroinitializer
@str191 = private unnamed_addr constant [2 x i8] c"r\00"
@str195 = private unnamed_addr constant [1 x i8] zeroinitializer
@str215 = private unnamed_addr constant [19 x i8] c"Cannot open file: \00"
@str313 = private unnamed_addr constant [30 x i8] c"Tabs are not valid characters\00"
@str329 = private unnamed_addr constant [33 x i8] c"End of file found inside comment\00"
@str332 = private unnamed_addr constant [40 x i8] c"End of file found inside string literal\00"
@str336 = private unnamed_addr constant [37 x i8] c"Not enough digits for character code\00"
@str339 = private unnamed_addr constant [40 x i8] c"End of file found inside string literal\00"
@str341 = private unnamed_addr constant [40 x i8] c"End of file found inside string literal\00"
@str344 = private unnamed_addr constant [6 x i8] c"break\00"
@str345 = private unnamed_addr constant [6 x i8] c"catch\00"
@str346 = private unnamed_addr constant [6 x i8] c"class\00"
@str347 = private unnamed_addr constant [8 x i8] c"concept\00"
@str348 = private unnamed_addr constant [9 x i8] c"continue\00"
@str349 = private unnamed_addr constant [9 x i8] c"datatype\00"
@str350 = private unnamed_addr constant [4 x i8] c"fun\00"
@str351 = private unnamed_addr constant [3 x i8] c"if\00"
@str352 = private unnamed_addr constant [5 x i8] c"else\00"
@str353 = private unnamed_addr constant [6 x i8] c"false\00"
@str354 = private unnamed_addr constant [8 x i8] c"finally\00"
@str355 = private unnamed_addr constant [4 x i8] c"for\00"
@str356 = private unnamed_addr constant [7 x i8] c"import\00"
@str357 = private unnamed_addr constant [7 x i8] c"module\00"
@str358 = private unnamed_addr constant [5 x i8] c"null\00"
@str359 = private unnamed_addr constant [8 x i8] c"package\00"
@str360 = private unnamed_addr constant [7 x i8] c"return\00"
@str361 = private unnamed_addr constant [6 x i8] c"throw\00"
@str362 = private unnamed_addr constant [5 x i8] c"true\00"
@str363 = private unnamed_addr constant [4 x i8] c"try\00"
@str364 = private unnamed_addr constant [6 x i8] c"using\00"
@str365 = private unnamed_addr constant [4 x i8] c"var\00"
@str366 = private unnamed_addr constant [6 x i8] c"while\00"
@str375 = private unnamed_addr constant [24 x i8] c"Invalid numeric literal\00"
@str385 = private unnamed_addr constant [27 x i8] c"Invalid character found: '\00"
@str386 = private unnamed_addr constant [4 x i8] c"' (\00"
@str438 = private unnamed_addr constant [32 x i8] c"Invalid indentation, expecting \00"
@str439 = private unnamed_addr constant [7 x i8] c", got \00"
@str515 = private unnamed_addr constant [12 x i8] c"end-of-file\00"
@str516 = private unnamed_addr constant [9 x i8] c"new-line\00"
@str517 = private unnamed_addr constant [9 x i8] c"'module'\00"
@str518 = private unnamed_addr constant [9 x i8] c"'import'\00"
@str519 = private unnamed_addr constant [8 x i8] c"'class'\00"
@str520 = private unnamed_addr constant [10 x i8] c"'concept'\00"
@str521 = private unnamed_addr constant [11 x i8] c"'datatype'\00"
@str522 = private unnamed_addr constant [6 x i8] c"'fun'\00"
@str523 = private unnamed_addr constant [10 x i8] c"'package'\00"
@str524 = private unnamed_addr constant [8 x i8] c"'using'\00"
@str525 = private unnamed_addr constant [6 x i8] c"'var'\00"
@str526 = private unnamed_addr constant [8 x i8] c"'break'\00"
@str527 = private unnamed_addr constant [8 x i8] c"'catch'\00"
@str528 = private unnamed_addr constant [11 x i8] c"'continue'\00"
@str529 = private unnamed_addr constant [10 x i8] c"'finally'\00"
@str530 = private unnamed_addr constant [6 x i8] c"'for'\00"
@str531 = private unnamed_addr constant [5 x i8] c"'if'\00"
@str532 = private unnamed_addr constant [9 x i8] c"'return'\00"
@str533 = private unnamed_addr constant [8 x i8] c"'throw'\00"
@str534 = private unnamed_addr constant [6 x i8] c"'try'\00"
@str535 = private unnamed_addr constant [8 x i8] c"'while'\00"
@str536 = private unnamed_addr constant [8 x i8] c"'false'\00"
@str537 = private unnamed_addr constant [7 x i8] c"'null'\00"
@str538 = private unnamed_addr constant [7 x i8] c"'true'\00"
@str539 = private unnamed_addr constant [7 x i8] c"'else'\00"
@str540 = private unnamed_addr constant [16 x i8] c"'{' (or indent)\00"
@str541 = private unnamed_addr constant [16 x i8] c"'}' (or dedent)\00"
@str542 = private unnamed_addr constant [4 x i8] c"'['\00"
@str543 = private unnamed_addr constant [4 x i8] c"']'\00"
@str544 = private unnamed_addr constant [4 x i8] c"'('\00"
@str545 = private unnamed_addr constant [4 x i8] c"')'\00"
@str546 = private unnamed_addr constant [4 x i8] c"':'\00"
@str547 = private unnamed_addr constant [17 x i8] c"';' (or newline)\00"
@str548 = private unnamed_addr constant [4 x i8] c"','\00"
@str549 = private unnamed_addr constant [4 x i8] c"'.'\00"
@str550 = private unnamed_addr constant [4 x i8] c"'`'\00"
@str551 = private unnamed_addr constant [4 x i8] c"'='\00"
@str552 = private unnamed_addr constant [11 x i8] c"identifier\00"
@str553 = private unnamed_addr constant [9 x i8] c"operator\00"
@str554 = private unnamed_addr constant [13 x i8] c"char literal\00"
@str555 = private unnamed_addr constant [15 x i8] c"string literal\00"
@str556 = private unnamed_addr constant [12 x i8] c"int literal\00"
@str557 = private unnamed_addr constant [13 x i8] c"long literal\00"
@str558 = private unnamed_addr constant [13 x i8] c"uint literal\00"
@str559 = private unnamed_addr constant [14 x i8] c"ulong literal\00"
@str560 = private unnamed_addr constant [14 x i8] c"float literal\00"
@str561 = private unnamed_addr constant [15 x i8] c"double literal\00"
@str562 = private unnamed_addr constant [26 x i8] c"Syntax error, unexpected \00"
@str563 = private unnamed_addr constant [13 x i8] c", expecting \00"
@str606 = private unnamed_addr constant [8 x i8] c"AnyType\00"
@str609 = private unnamed_addr constant [26 x i8] c"Syntax error, unexpected \00"
@str610 = private unnamed_addr constant [28 x i8] c", expecting block statement\00"
@str611 = private unnamed_addr constant [26 x i8] c"Syntax error, unexpected \00"
@str612 = private unnamed_addr constant [23 x i8] c", expecting expression\00"
@str613 = private unnamed_addr constant [3 x i8] c"()\00"
@str614 = private unnamed_addr constant [2 x i8] c"=\00"
@str615 = private unnamed_addr constant [26 x i8] c"Syntax error, unexpected \00"
@str616 = private unnamed_addr constant [35 x i8] c", expecting identifier or operator\00"
@str617 = private unnamed_addr constant [2 x i8] c"=\00"
@str618 = private unnamed_addr constant [3 x i8] c"()\00"
@str619 = private unnamed_addr constant [26 x i8] c"Syntax error, unexpected \00"
@str620 = private unnamed_addr constant [42 x i8] c", expecting expression or block statement\00"
@str621 = private unnamed_addr constant [26 x i8] c"Syntax error, unexpected \00"
@str622 = private unnamed_addr constant [22 x i8] c", expecting statement\00"
@str653 = private unnamed_addr constant [2 x i8] c"\0A\00"
@llvm.global_ctors = appending global [4 x { i32, void ()* }] [{ i32, void ()* } { i32 0, void ()* @__global_ctor }, { i32, void ()* } { i32 1, void ()* @__global_ctor101 }, { i32, void ()* } { i32 2, void ()* @__global_ctor112 }, { i32, void ()* } { i32 3, void ()* @__global_ctor150 }]
@llvm.global_dtors = appending global [4 x { i32, void ()* }] [{ i32, void ()* } { i32 0, void ()* @__global_dtor152 }, { i32, void ()* } { i32 1, void ()* @__global_dtor114 }, { i32, void ()* } { i32 2, void ()* @__global_dtor103 }, { i32, void ()* } { i32 3, void ()* @__global_dtor }]

; Function Attrs: alwaysinline
define void @_zero_init_1(i1* %"$this") #0 {
  store i1 false, i1* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_zero_init_8(i8* %"$this") #0 {
  store i8 0, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_zero_init_16(i16* %"$this") #0 {
  store i16 0, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_zero_init_32(i32* %"$this") #0 {
  store i32 0, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_zero_init_64(i64* %"$this") #0 {
  store i64 0, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_zero_init_f(float* %"$this") #0 {
  store float 0.000000e+00, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_zero_init_d(double* %"$this") #0 {
  store double 0.000000e+00, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_1_1(i1* %"$this", i1 %src) #0 {
  store i1 %src, i1* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_8_8(i8* %"$this", i8 %src) #0 {
  store i8 %src, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_16_16(i16* %"$this", i16 %src) #0 {
  store i16 %src, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_32_32(i32* %"$this", i32 %src) #0 {
  store i32 %src, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_64(i64* %"$this", i64 %src) #0 {
  store i64 %src, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_f(float* %"$this", float %src) #0 {
  store float %src, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_d(double* %"$this", double %src) #0 {
  store double %src, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_8_16(i8* %"$this", i16 %src) #0 {
  %1 = trunc i16 %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_8_32(i8* %"$this", i32 %src) #0 {
  %1 = trunc i32 %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_8_64(i8* %"$this", i64 %src) #0 {
  %1 = trunc i64 %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_16_32(i16* %"$this", i32 %src) #0 {
  %1 = trunc i32 %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_16_64(i16* %"$this", i64 %src) #0 {
  %1 = trunc i64 %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_32_64(i32* %"$this", i64 %src) #0 {
  %1 = trunc i64 %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_16_8s(i16* %"$this", i8 %src) #0 {
  %1 = sext i8 %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_16_8z(i16* %"$this", i8 %src) #0 {
  %1 = zext i8 %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_32_8s(i32* %"$this", i8 %src) #0 {
  %1 = sext i8 %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_32_8z(i32* %"$this", i8 %src) #0 {
  %1 = zext i8 %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_32_16s(i32* %"$this", i16 %src) #0 {
  %1 = sext i16 %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_32_16z(i32* %"$this", i16 %src) #0 {
  %1 = zext i16 %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_8s(i64* %"$this", i8 %src) #0 {
  %1 = sext i8 %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_8z(i64* %"$this", i8 %src) #0 {
  %1 = zext i8 %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_16s(i64* %"$this", i16 %src) #0 {
  %1 = sext i16 %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_16z(i64* %"$this", i16 %src) #0 {
  %1 = zext i16 %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_32s(i64* %"$this", i32 %src) #0 {
  %1 = sext i32 %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_32z(i64* %"$this", i32 %src) #0 {
  %1 = zext i32 %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i8_f(i8* %"$this", float %src) #0 {
  %1 = fptosi float %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i8_d(i8* %"$this", double %src) #0 {
  %1 = fptosi double %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u8_f(i8* %"$this", float %src) #0 {
  %1 = fptoui float %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u8_d(i8* %"$this", double %src) #0 {
  %1 = fptoui double %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i16_f(i16* %"$this", float %src) #0 {
  %1 = fptosi float %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i16_d(i16* %"$this", double %src) #0 {
  %1 = fptosi double %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u16_f(i16* %"$this", float %src) #0 {
  %1 = fptoui float %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u16_d(i16* %"$this", double %src) #0 {
  %1 = fptoui double %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i32_f(i32* %"$this", float %src) #0 {
  %1 = fptosi float %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i32_d(i32* %"$this", double %src) #0 {
  %1 = fptosi double %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u32_f(i32* %"$this", float %src) #0 {
  %1 = fptoui float %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u32_d(i32* %"$this", double %src) #0 {
  %1 = fptoui double %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i64_f(i64* %"$this", float %src) #0 {
  %1 = fptosi float %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i64_d(i64* %"$this", double %src) #0 {
  %1 = fptosi double %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u64_f(i64* %"$this", float %src) #0 {
  %1 = fptoui float %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u64_d(i64* %"$this", double %src) #0 {
  %1 = fptoui double %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_i8(float* %"$this", i8 %src) #0 {
  %1 = sitofp i8 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_u8(float* %"$this", i8 %src) #0 {
  %1 = uitofp i8 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_i16(float* %"$this", i16 %src) #0 {
  %1 = sitofp i16 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_u16(float* %"$this", i16 %src) #0 {
  %1 = uitofp i16 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_i32(float* %"$this", i32 %src) #0 {
  %1 = sitofp i32 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_u32(float* %"$this", i32 %src) #0 {
  %1 = uitofp i32 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_i64(float* %"$this", i64 %src) #0 {
  %1 = sitofp i64 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_u64(float* %"$this", i64 %src) #0 {
  %1 = uitofp i64 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_d(float* %"$this", double %src) #0 {
  %1 = fptrunc double %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_i8(double* %"$this", i8 %src) #0 {
  %1 = sitofp i8 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_u8(double* %"$this", i8 %src) #0 {
  %1 = uitofp i8 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_i16(double* %"$this", i16 %src) #0 {
  %1 = sitofp i16 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_u16(double* %"$this", i16 %src) #0 {
  %1 = uitofp i16 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_i32(double* %"$this", i32 %src) #0 {
  %1 = sitofp i32 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_u32(double* %"$this", i32 %src) #0 {
  %1 = uitofp i32 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_i64(double* %"$this", i64 %src) #0 {
  %1 = sitofp i64 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_u64(double* %"$this", i64 %src) #0 {
  %1 = uitofp i64 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_f(double* %"$this", float %src) #0 {
  %1 = fpext float %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define i1 @_Bool_opAssign(i1* %x, i1 %y) #0 {
  store i1 %y, i1* %x
  ret i1 %y
}

; Function Attrs: alwaysinline
define i1 @_Bool_opOr(i1 %x, i1 %y) #0 {
  %1 = or i1 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Bool_opXor(i1 %x, i1 %y) #0 {
  %1 = xor i1 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Bool_opAnd(i1 %x, i1 %y) #0 {
  %1 = and i1 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Bool_opEQ(i1 %x, i1 %y) #0 {
  %1 = icmp eq i1 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Bool_opNE(i1 %x, i1 %y) #0 {
  %1 = icmp ne i1 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Bool_opNeg(i1 %x) #0 {
  %1 = xor i1 %x, true
  ret i1 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opAssign(i8* %x, i8 %y) #0 {
  store i8 %y, i8* %x
  ret i8 %y
}

; Function Attrs: alwaysinline
define i1 @_Byte_opEQ(i8 %x, i8 %y) #0 {
  %1 = icmp eq i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Byte_opNE(i8 %x, i8 %y) #0 {
  %1 = icmp ne i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Byte_opLT(i8 %x, i8 %y) #0 {
  %1 = icmp slt i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Byte_opGT(i8 %x, i8 %y) #0 {
  %1 = icmp sgt i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Byte_opLE(i8 %x, i8 %y) #0 {
  %1 = icmp sle i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Byte_opGE(i8 %x, i8 %y) #0 {
  %1 = icmp sge i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opPlus(i8 %x, i8 %y) #0 {
  %1 = add i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opMinus(i8 %x, i8 %y) #0 {
  %1 = sub i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opMul(i8 %x, i8 %y) #0 {
  %1 = mul i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opDiv(i8 %x, i8 %y) #0 {
  %1 = sdiv i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opMod(i8 %x, i8 %y) #0 {
  %1 = srem i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opPlus1(i8 %x) #0 {
  ret i8 %x
}

; Function Attrs: alwaysinline
define i8 @_Byte_opMinus1(i8 %x) #0 {
  %1 = sub i8 0, %x
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opAssign(i8* %x, i8 %y) #0 {
  store i8 %y, i8* %x
  ret i8 %y
}

; Function Attrs: alwaysinline
define i1 @_UByte_opEQ(i8 %x, i8 %y) #0 {
  %1 = icmp eq i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UByte_opNE(i8 %x, i8 %y) #0 {
  %1 = icmp ne i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UByte_opLT(i8 %x, i8 %y) #0 {
  %1 = icmp ult i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UByte_opGT(i8 %x, i8 %y) #0 {
  %1 = icmp ugt i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UByte_opLE(i8 %x, i8 %y) #0 {
  %1 = icmp ule i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UByte_opGE(i8 %x, i8 %y) #0 {
  %1 = icmp uge i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opPlus(i8 %x, i8 %y) #0 {
  %1 = add i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opMinus(i8 %x, i8 %y) #0 {
  %1 = sub i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opMul(i8 %x, i8 %y) #0 {
  %1 = mul i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opDiv(i8 %x, i8 %y) #0 {
  %1 = udiv i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opMod(i8 %x, i8 %y) #0 {
  %1 = urem i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opPlus1(i8 %x) #0 {
  ret i8 %x
}

; Function Attrs: alwaysinline
define i16 @_Short_opAssign(i16* %x, i16 %y) #0 {
  store i16 %y, i16* %x
  ret i16 %y
}

; Function Attrs: alwaysinline
define i1 @_Short_opEQ(i16 %x, i16 %y) #0 {
  %1 = icmp eq i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Short_opNE(i16 %x, i16 %y) #0 {
  %1 = icmp ne i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Short_opLT(i16 %x, i16 %y) #0 {
  %1 = icmp slt i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Short_opGT(i16 %x, i16 %y) #0 {
  %1 = icmp sgt i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Short_opLE(i16 %x, i16 %y) #0 {
  %1 = icmp sle i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Short_opGE(i16 %x, i16 %y) #0 {
  %1 = icmp sge i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i16 @_Short_opPlus(i16 %x, i16 %y) #0 {
  %1 = add i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_Short_opMinus(i16 %x, i16 %y) #0 {
  %1 = sub i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_Short_opMul(i16 %x, i16 %y) #0 {
  %1 = mul i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_Short_opDiv(i16 %x, i16 %y) #0 {
  %1 = sdiv i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_Short_opMod(i16 %x, i16 %y) #0 {
  %1 = srem i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_Short_opPlus1(i16 %x) #0 {
  ret i16 %x
}

; Function Attrs: alwaysinline
define i16 @_Short_opMinus1(i16 %x) #0 {
  %1 = sub i16 0, %x
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opAssign(i16* %x, i16 %y) #0 {
  store i16 %y, i16* %x
  ret i16 %y
}

; Function Attrs: alwaysinline
define i1 @_UShort_opEQ(i16 %x, i16 %y) #0 {
  %1 = icmp eq i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UShort_opNE(i16 %x, i16 %y) #0 {
  %1 = icmp ne i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UShort_opLT(i16 %x, i16 %y) #0 {
  %1 = icmp ult i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UShort_opGT(i16 %x, i16 %y) #0 {
  %1 = icmp ugt i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UShort_opLE(i16 %x, i16 %y) #0 {
  %1 = icmp ule i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UShort_opGE(i16 %x, i16 %y) #0 {
  %1 = icmp uge i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opPlus(i16 %x, i16 %y) #0 {
  %1 = add i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opMinus(i16 %x, i16 %y) #0 {
  %1 = sub i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opMul(i16 %x, i16 %y) #0 {
  %1 = mul i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opDiv(i16 %x, i16 %y) #0 {
  %1 = udiv i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opMod(i16 %x, i16 %y) #0 {
  %1 = urem i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opPlus1(i16 %x) #0 {
  ret i16 %x
}

; Function Attrs: alwaysinline
define i32 @_Int_opAssign(i32* %x, i32 %y) #0 {
  store i32 %y, i32* %x
  ret i32 %y
}

; Function Attrs: alwaysinline
define i1 @_Int_opEQ(i32 %x, i32 %y) #0 {
  %1 = icmp eq i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Int_opNE(i32 %x, i32 %y) #0 {
  %1 = icmp ne i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Int_opLT(i32 %x, i32 %y) #0 {
  %1 = icmp slt i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Int_opGT(i32 %x, i32 %y) #0 {
  %1 = icmp sgt i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Int_opLE(i32 %x, i32 %y) #0 {
  %1 = icmp sle i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Int_opGE(i32 %x, i32 %y) #0 {
  %1 = icmp sge i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i32 @_Int_opPlus(i32 %x, i32 %y) #0 {
  %1 = add i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_Int_opMinus(i32 %x, i32 %y) #0 {
  %1 = sub i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_Int_opMul(i32 %x, i32 %y) #0 {
  %1 = mul i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_Int_opDiv(i32 %x, i32 %y) #0 {
  %1 = sdiv i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_Int_opMod(i32 %x, i32 %y) #0 {
  %1 = srem i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_Int_opPlus1(i32 %x) #0 {
  ret i32 %x
}

; Function Attrs: alwaysinline
define i32 @_Int_opMinus1(i32 %x) #0 {
  %1 = sub i32 0, %x
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opAssign(i32* %x, i32 %y) #0 {
  store i32 %y, i32* %x
  ret i32 %y
}

; Function Attrs: alwaysinline
define i1 @_UInt_opEQ(i32 %x, i32 %y) #0 {
  %1 = icmp eq i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UInt_opNE(i32 %x, i32 %y) #0 {
  %1 = icmp ne i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UInt_opLT(i32 %x, i32 %y) #0 {
  %1 = icmp ult i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UInt_opGT(i32 %x, i32 %y) #0 {
  %1 = icmp ugt i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UInt_opLE(i32 %x, i32 %y) #0 {
  %1 = icmp ule i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UInt_opGE(i32 %x, i32 %y) #0 {
  %1 = icmp uge i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opPlus(i32 %x, i32 %y) #0 {
  %1 = add i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opMinus(i32 %x, i32 %y) #0 {
  %1 = sub i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opMul(i32 %x, i32 %y) #0 {
  %1 = mul i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opDiv(i32 %x, i32 %y) #0 {
  %1 = udiv i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opMod(i32 %x, i32 %y) #0 {
  %1 = urem i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opPlus1(i32 %x) #0 {
  ret i32 %x
}

; Function Attrs: alwaysinline
define i64 @_Long_opAssign(i64* %x, i64 %y) #0 {
  store i64 %y, i64* %x
  ret i64 %y
}

; Function Attrs: alwaysinline
define i1 @_Long_opEQ(i64 %x, i64 %y) #0 {
  %1 = icmp eq i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Long_opNE(i64 %x, i64 %y) #0 {
  %1 = icmp ne i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Long_opLT(i64 %x, i64 %y) #0 {
  %1 = icmp slt i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Long_opGT(i64 %x, i64 %y) #0 {
  %1 = icmp sgt i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Long_opLE(i64 %x, i64 %y) #0 {
  %1 = icmp sle i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Long_opGE(i64 %x, i64 %y) #0 {
  %1 = icmp sge i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i64 @_Long_opPlus(i64 %x, i64 %y) #0 {
  %1 = add i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_Long_opMinus(i64 %x, i64 %y) #0 {
  %1 = sub i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_Long_opMul(i64 %x, i64 %y) #0 {
  %1 = mul i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_Long_opDiv(i64 %x, i64 %y) #0 {
  %1 = sdiv i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_Long_opMod(i64 %x, i64 %y) #0 {
  %1 = srem i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_Long_opPlus1(i64 %x) #0 {
  ret i64 %x
}

; Function Attrs: alwaysinline
define i64 @_Long_opMinus1(i64 %x) #0 {
  %1 = sub i64 0, %x
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opAssign(i64* %x, i64 %y) #0 {
  store i64 %y, i64* %x
  ret i64 %y
}

; Function Attrs: alwaysinline
define i1 @_ULong_opEQ(i64 %x, i64 %y) #0 {
  %1 = icmp eq i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_ULong_opNE(i64 %x, i64 %y) #0 {
  %1 = icmp ne i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_ULong_opLT(i64 %x, i64 %y) #0 {
  %1 = icmp ult i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_ULong_opGT(i64 %x, i64 %y) #0 {
  %1 = icmp ugt i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_ULong_opLE(i64 %x, i64 %y) #0 {
  %1 = icmp ule i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_ULong_opGE(i64 %x, i64 %y) #0 {
  %1 = icmp uge i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opPlus(i64 %x, i64 %y) #0 {
  %1 = add i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opMinus(i64 %x, i64 %y) #0 {
  %1 = sub i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opMul(i64 %x, i64 %y) #0 {
  %1 = mul i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opDiv(i64 %x, i64 %y) #0 {
  %1 = udiv i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opMod(i64 %x, i64 %y) #0 {
  %1 = urem i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opPlus1(i64 %x) #0 {
  ret i64 %x
}

; Function Attrs: alwaysinline
define float @_Float_opAssign(float* %x, float %y) #0 {
  store float %y, float* %x
  ret float %y
}

; Function Attrs: alwaysinline
define i1 @_Float_opEQ(float %x, float %y) #0 {
  %1 = fcmp ueq float %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Float_opNE(float %x, float %y) #0 {
  %1 = fcmp une float %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Float_opLT(float %x, float %y) #0 {
  %1 = fcmp ult float %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Float_opGT(float %x, float %y) #0 {
  %1 = fcmp ugt float %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Float_opLE(float %x, float %y) #0 {
  %1 = fcmp ule float %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Float_opGE(float %x, float %y) #0 {
  %1 = fcmp uge float %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define float @_Float_opPlus(float %x, float %y) #0 {
  %1 = fadd float %x, %y
  ret float %1
}

; Function Attrs: alwaysinline
define float @_Float_opMinus(float %x, float %y) #0 {
  %1 = fsub float %x, %y
  ret float %1
}

; Function Attrs: alwaysinline
define float @_Float_opMul(float %x, float %y) #0 {
  %1 = fmul float %x, %y
  ret float %1
}

; Function Attrs: alwaysinline
define float @_Float_opDiv(float %x, float %y) #0 {
  %1 = fdiv float %x, %y
  ret float %1
}

; Function Attrs: alwaysinline
define float @_Float_opPlus1(float %x) #0 {
  ret float %x
}

; Function Attrs: alwaysinline
define float @_Float_opMinus1(float %x) #0 {
  %1 = fsub float 0.000000e+00, %x
  ret float %1
}

; Function Attrs: alwaysinline
define double @_Double_opAssign(double* %x, double %y) #0 {
  store double %y, double* %x
  ret double %y
}

; Function Attrs: alwaysinline
define i1 @_Double_opEQ(double %x, double %y) #0 {
  %1 = fcmp ueq double %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Double_opNE(double %x, double %y) #0 {
  %1 = fcmp une double %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Double_opLT(double %x, double %y) #0 {
  %1 = fcmp ult double %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Double_opGT(double %x, double %y) #0 {
  %1 = fcmp ugt double %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Double_opLE(double %x, double %y) #0 {
  %1 = fcmp ule double %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Double_opGE(double %x, double %y) #0 {
  %1 = fcmp uge double %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define double @_Double_opPlus(double %x, double %y) #0 {
  %1 = fadd double %x, %y
  ret double %1
}

; Function Attrs: alwaysinline
define double @_Double_opMinus(double %x, double %y) #0 {
  %1 = fsub double %x, %y
  ret double %1
}

; Function Attrs: alwaysinline
define double @_Double_opMul(double %x, double %y) #0 {
  %1 = fmul double %x, %y
  ret double %1
}

; Function Attrs: alwaysinline
define double @_Double_opDiv(double %x, double %y) #0 {
  %1 = fdiv double %x, %y
  ret double %1
}

; Function Attrs: alwaysinline
define double @_Double_opPlus1(double %x) #0 {
  ret double %x
}

; Function Attrs: alwaysinline
define double @_Double_opMinus1(double %x) #0 {
  %1 = fsub double 0.000000e+00, %x
  ret double %1
}

; Function Attrs: alwaysinline
define i8 @_Char_opAssign(i8* %x, i8 %y) #0 {
  store i8 %y, i8* %x
  ret i8 %y
}

; Function Attrs: alwaysinline
define i1 @_Char_opEQ(i8 %x, i8 %y) #0 {
  %1 = icmp eq i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Char_opNE(i8 %x, i8 %y) #0 {
  %1 = icmp ne i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Char_opLT(i8 %x, i8 %y) #0 {
  %1 = icmp slt i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Char_opGT(i8 %x, i8 %y) #0 {
  %1 = icmp sgt i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Char_opLE(i8 %x, i8 %y) #0 {
  %1 = icmp sle i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Char_opGE(i8 %x, i8 %y) #0 {
  %1 = icmp sge i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opAssign(i64* %x, i64 %y) #0 {
  store i64 %y, i64* %x
  ret i64 %y
}

; Function Attrs: alwaysinline
define i1 @_SizeType_opEQ(i64 %x, i64 %y) #0 {
  %1 = icmp eq i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_SizeType_opNE(i64 %x, i64 %y) #0 {
  %1 = icmp ne i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_SizeType_opLT(i64 %x, i64 %y) #0 {
  %1 = icmp ult i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_SizeType_opGT(i64 %x, i64 %y) #0 {
  %1 = icmp ugt i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_SizeType_opLE(i64 %x, i64 %y) #0 {
  %1 = icmp ule i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_SizeType_opGE(i64 %x, i64 %y) #0 {
  %1 = icmp uge i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opPlus(i64 %x, i64 %y) #0 {
  %1 = add i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opPlusInt(i64 %x, i32 %y) #0 {
  %1 = sext i32 %y to i64
  %2 = add i64 %x, %1
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opPlusInt1(i32 %x, i64 %y) #0 {
  %1 = sext i32 %x to i64
  %2 = add i64 %1, %y
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opMinus(i64 %x, i64 %y) #0 {
  %1 = sub i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opMinusInt(i64 %x, i32 %y) #0 {
  %1 = sext i32 %y to i64
  %2 = sub i64 %x, %1
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opMinusInt1(i32 %x, i64 %y) #0 {
  %1 = sext i32 %x to i64
  %2 = sub i64 %1, %y
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opMul(i64 %x, i64 %y) #0 {
  %1 = mul i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opDiv(i64 %x, i64 %y) #0 {
  %1 = udiv i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opMod(i64 %x, i64 %y) #0 {
  %1 = urem i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opPlus1(i64 %x) #0 {
  ret i64 %x
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opAssign(i64* %x, i64 %y) #0 {
  store i64 %y, i64* %x
  ret i64 %y
}

; Function Attrs: alwaysinline
define i1 @_DiffType_opEQ(i64 %x, i64 %y) #0 {
  %1 = icmp eq i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_DiffType_opNE(i64 %x, i64 %y) #0 {
  %1 = icmp ne i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_DiffType_opLT(i64 %x, i64 %y) #0 {
  %1 = icmp slt i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_DiffType_opGT(i64 %x, i64 %y) #0 {
  %1 = icmp sgt i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_DiffType_opLE(i64 %x, i64 %y) #0 {
  %1 = icmp sle i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_DiffType_opGE(i64 %x, i64 %y) #0 {
  %1 = icmp sge i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opPlus(i64 %x, i64 %y) #0 {
  %1 = add i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opPlusInt(i64 %x, i32 %y) #0 {
  %1 = sext i32 %y to i64
  %2 = add i64 %x, %1
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opPlusInt1(i32 %x, i64 %y) #0 {
  %1 = sext i32 %x to i64
  %2 = add i64 %1, %y
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opMinus(i64 %x, i64 %y) #0 {
  %1 = sub i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opMinusInt(i64 %x, i32 %y) #0 {
  %1 = sext i32 %y to i64
  %2 = sub i64 %x, %1
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opMinusInt1(i32 %x, i64 %y) #0 {
  %1 = sext i32 %x to i64
  %2 = sub i64 %1, %y
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opMul(i64 %x, i64 %y) #0 {
  %1 = mul i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opDiv(i64 %x, i64 %y) #0 {
  %1 = sdiv i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opMod(i64 %x, i64 %y) #0 {
  %1 = srem i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opPlus1(i64 %x) #0 {
  ret i64 %x
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opMinus1(i64 %x) #0 {
  %1 = sub i64 0, %x
  ret i64 %1
}

declare i32 @printf(i8*, ...)

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #1

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #1

; Function Attrs: nounwind
declare i32 @fflush(%struct._IO_FILE*) #1

; Function Attrs: alwaysinline
define i1 @isNullRef(i8* %x) #0 {
  %1 = icmp eq i8* %x, null
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @implOpRefEQ(i8* %x, i8* %y) #0 {
  %1 = icmp eq i8* %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @implOpRefNE(i8* %x, i8* %y) #0 {
  %1 = icmp ne i8* %x, %y
  ret i1 %1
}

define void @_Type_ctor(i8** %"$this") {
  store i8* null, i8** %"$this"
  ret void
}

define void @_Type_copy_ctor(i8** %"$this", i8* %other) {
  store i8* %other, i8** %"$this"
  ret void
}

; Function Attrs: alwaysinline
define i8* @ptrAdd(i8* %p, i64 %n) #0 {
  %1 = getelementptr i8* %p, i64 %n
  ret i8* %1
}

; Function Attrs: alwaysinline
define i8* @ptrSub(i8* %p, i64 %n) #0 {
  %1 = sub i64 0, %n
  %2 = getelementptr i8* %p, i64 %1
  ret i8* %2
}

; Function Attrs: alwaysinline
define i64 @ptrDiff(i8* %p1, i8* %p2) #0 {
  %1 = ptrtoint i8* %p1 to i64
  %2 = ptrtoint i8* %p2 to i64
  %3 = sub i64 %1, %2
  ret i64 %3
}

; Function Attrs: alwaysinline
define void @_spr_memcpy(i8* %dest, i8* %src, i64 %size) #0 {
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %dest, i8* %src, i64 %size, i32 1, i1 false)
  ret void
}

; Function Attrs: alwaysinline
define void @_spr_memmove(i8* %dest, i8* %src, i64 %size) #0 {
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %dest, i8* %src, i64 %size, i32 1, i1 false)
  ret void
}

; Function Attrs: alwaysinline
define void @_spr_memset(i8* %dest, i8 %value, i64 %size) #0 {
  call void @llvm.memset.p0i8.i64(i8* %dest, i8 %value, i64 %size, i32 1, i1 false)
  ret void
}

; Function Attrs: alwaysinline
define void @flushOutput() #0 {
  %1 = call i32 @fflush(%struct._IO_FILE* null)
  ret void
}

; Function Attrs: alwaysinline
define void @writeByte(i8 %val) #0 {
  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.fmtInt, i32 0, i32 0), i8 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeShort(i16 %val) #0 {
  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.fmtInt, i32 0, i32 0), i16 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeInt(i32 %val) #0 {
  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.fmtInt, i32 0, i32 0), i32 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeUInt(i32 %val) #0 {
  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.fmtUInt, i32 0, i32 0), i32 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeLong(i64 %val) #0 {
  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.fmtLong, i32 0, i32 0), i64 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeULong(i64 %val) #0 {
  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.fmtULong, i32 0, i32 0), i64 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeDouble(double %val) #0 {
  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.fmtDouble, i32 0, i32 0), double %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeChar(i8 %val) #0 {
  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.fmtChar, i32 0, i32 0), i8 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writePointer(i8* %val) #0 {
  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.fmtPointer, i32 0, i32 0), i8* %val)
  ret void
}

; Function Attrs: alwaysinline
define void @_Int_to_CString(i32 %val, i8* %buffer) #0 {
  %1 = call i32 (i8*, i8*, ...)* @sprintf(i8* %buffer, i8* getelementptr inbounds ([3 x i8]* @.fmtInt, i32 0, i32 0), i32 %val) #1
  ret void
}

; Function Attrs: alwaysinline
define void @_ULong_to_CString(i64 %val, i8* %buffer) #0 {
  %1 = call i32 (i8*, i8*, ...)* @sprintf(i8* %buffer, i8* getelementptr inbounds ([5 x i8]* @.fmtULong, i32 0, i32 0), i64 %val) #1
  ret void
}

; Function Attrs: alwaysinline
define i8 @_bit_neg_8(i8 %n) #0 {
  %1 = xor i8 %n, 0
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_bit_shl_8(i8 %n, i8 %k) #0 {
  %1 = shl i8 %n, %k
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_bit_lshr_8(i8 %n, i8 %k) #0 {
  %1 = lshr i8 %n, %k
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_bit_ashr_8(i8 %n, i8 %k) #0 {
  %1 = ashr i8 %n, %k
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_bit_xor_8(i8 %n1, i8 %n2) #0 {
  %1 = xor i8 %n1, %n2
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_bit_or_8(i8 %n1, i8 %n2) #0 {
  %1 = or i8 %n1, %n2
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_bit_and_8(i8 %n1, i8 %n2) #0 {
  %1 = and i8 %n1, %n2
  ret i8 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_neg_16(i16 %n) #0 {
  %1 = xor i16 %n, 0
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_shl_16(i16 %n, i16 %k) #0 {
  %1 = shl i16 %n, %k
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_lshr_16(i16 %n, i16 %k) #0 {
  %1 = lshr i16 %n, %k
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_ashr_16(i16 %n, i16 %k) #0 {
  %1 = ashr i16 %n, %k
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_xor_16(i16 %n1, i16 %n2) #0 {
  %1 = xor i16 %n1, %n2
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_or_16(i16 %n1, i16 %n2) #0 {
  %1 = or i16 %n1, %n2
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_and_16(i16 %n1, i16 %n2) #0 {
  %1 = and i16 %n1, %n2
  ret i16 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_neg_32(i32 %n) #0 {
  %1 = xor i32 %n, 0
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_shl_32(i32 %n, i32 %k) #0 {
  %1 = shl i32 %n, %k
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_lshr_32(i32 %n, i32 %k) #0 {
  %1 = lshr i32 %n, %k
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_ashr_32(i32 %n, i32 %k) #0 {
  %1 = ashr i32 %n, %k
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_xor_32(i32 %n1, i32 %n2) #0 {
  %1 = xor i32 %n1, %n2
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_or_32(i32 %n1, i32 %n2) #0 {
  %1 = or i32 %n1, %n2
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_and_32(i32 %n1, i32 %n2) #0 {
  %1 = and i32 %n1, %n2
  ret i32 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_neg_64(i64 %n) #0 {
  %1 = xor i64 %n, 0
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_shl_64(i64 %n, i64 %k) #0 {
  %1 = shl i64 %n, %k
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_lshr_64(i64 %n, i64 %k) #0 {
  %1 = lshr i64 %n, %k
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_ashr_64(i64 %n, i64 %k) #0 {
  %1 = ashr i64 %n, %k
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_xor_64(i64 %n1, i64 %n2) #0 {
  %1 = xor i64 %n1, %n2
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_or_64(i64 %n1, i64 %n2) #0 {
  %1 = or i64 %n1, %n2
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_and_64(i64 %n1, i64 %n2) #0 {
  %1 = and i64 %n1, %n2
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor(%Uninitialized %this) #2 {
  %this.addr = alloca %Uninitialized
  store %Uninitialized %this, %Uninitialized* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor1(%Uninitialized %this, %Uninitialized %other) #2 {
  %this.addr = alloca %Uninitialized
  store %Uninitialized %this, %Uninitialized* %this.addr
  %other.addr = alloca %Uninitialized
  store %Uninitialized %other, %Uninitialized* %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor(%Uninitialized %this) #2 {
  %this.addr = alloca %Uninitialized
  store %Uninitialized %this, %Uninitialized* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor2(%Null %this) #2 {
  %this.addr = alloca %Null
  store %Null %this, %Null* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor3(%Null %this, %Null %other) #2 {
  %this.addr = alloca %Null
  store %Null %this, %Null* %this.addr
  %other.addr = alloca %Null
  store %Null %other, %Null* %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor4(%Null %this) #2 {
  %this.addr = alloca %Null
  store %Null %this, %Null* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor5(i1* %this) #2 {
  %this.addr = alloca i1*
  store i1* %this, i1** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor6(i8 %this) #2 {
  %this.addr = alloca i8
  store i8 %this, i8* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor7(i8 %this) #2 {
  %this.addr = alloca i8
  store i8 %this, i8* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor8(i16 %this) #2 {
  %this.addr = alloca i16
  store i16 %this, i16* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor9(i16 %this) #2 {
  %this.addr = alloca i16
  store i16 %this, i16* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor10(i32 %this) #2 {
  %this.addr = alloca i32
  store i32 %this, i32* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor11(i32 %this) #2 {
  %this.addr = alloca i32
  store i32 %this, i32* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor12(i64 %this) #2 {
  %this.addr = alloca i64
  store i64 %this, i64* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor13(i64* %this) #2 {
  %this.addr = alloca i64*
  store i64* %this, i64** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor14(i64 %this) #2 {
  %this.addr = alloca i64
  store i64 %this, i64* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor15(i64 %this) #2 {
  %this.addr = alloca i64
  store i64 %this, i64* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor16(float %this) #2 {
  %this.addr = alloca float
  store float %this, float* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor17(double %this) #2 {
  %this.addr = alloca double
  store double %this, double* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor18(i8 %this) #2 {
  %this.addr = alloca i8
  store i8 %this, i8* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

declare i1 @"$logicalOr"(i1, i1)

declare i1 @"$logicalAnd"(i1, i1)

; Function Attrs: alwaysinline nounwind
define internal i8 @"pre_++"(i8* %n) #2 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %n.addr
  %2 = load i8* %1
  store i8 1, i8* %tmp.v
  %3 = load i8* %tmp.v
  %4 = call i8 @"+"(i8 %2, i8 %3)
  %5 = load i8** %n.addr
  store i8 %4, i8* %5
  %6 = load i8** %n.addr
  %7 = load i8* %6
  ret i8 %7
}

; Function Attrs: inlinehint nounwind
define internal i8 @"+"(i8 %x, i8 %y) #3 {
  %x.addr = alloca i8
  store i8 %x, i8* %x.addr
  %y.addr = alloca i8
  store i8 %y, i8* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %x.addr
  %2 = load i8* %y.addr
  %3 = call i8 @cmn(i8 %1, i8 %2)
  %4 = load i8* %y.addr
  %5 = load i8* %x.addr
  %6 = call i8 @cmn(i8 %4, i8 %5)
  %7 = add i8 %3, %6
  ret i8 %7
}

; Function Attrs: inlinehint nounwind
define internal i8 @cmn(i8 %x, i8 %y) #3 {
  %x.addr = alloca i8
  store i8 %x, i8* %x.addr
  %y.addr = alloca i8
  store i8 %y, i8* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %x.addr
  ret i8 %1
}

; Function Attrs: alwaysinline nounwind
define internal i8 @"pre_++19"(i8* %n) #2 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %n.addr
  %2 = load i8* %1
  store i8 1, i8* %tmp.v
  %3 = load i8* %tmp.v
  %4 = call i8 @"+20"(i8 %2, i8 %3)
  %5 = load i8** %n.addr
  store i8 %4, i8* %5
  %6 = load i8** %n.addr
  %7 = load i8* %6
  ret i8 %7
}

; Function Attrs: inlinehint nounwind
define internal i8 @"+20"(i8 %x, i8 %y) #3 {
  %x.addr = alloca i8
  store i8 %x, i8* %x.addr
  %y.addr = alloca i8
  store i8 %y, i8* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %x.addr
  %2 = load i8* %y.addr
  %3 = call i8 @cmn21(i8 %1, i8 %2)
  %4 = load i8* %y.addr
  %5 = load i8* %x.addr
  %6 = call i8 @cmn21(i8 %4, i8 %5)
  %7 = add i8 %3, %6
  ret i8 %7
}

; Function Attrs: inlinehint nounwind
define internal i8 @cmn21(i8 %x, i8 %y) #3 {
  %x.addr = alloca i8
  store i8 %x, i8* %x.addr
  %y.addr = alloca i8
  store i8 %y, i8* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %x.addr
  ret i8 %1
}

; Function Attrs: alwaysinline nounwind
define internal i16 @"pre_++22"(i16* %n) #2 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16** %n.addr
  %2 = load i16* %1
  store i16 1, i16* %tmp.v
  %3 = load i16* %tmp.v
  %4 = call i16 @"+23"(i16 %2, i16 %3)
  %5 = load i16** %n.addr
  store i16 %4, i16* %5
  %6 = load i16** %n.addr
  %7 = load i16* %6
  ret i16 %7
}

; Function Attrs: inlinehint nounwind
define internal i16 @"+23"(i16 %x, i16 %y) #3 {
  %x.addr = alloca i16
  store i16 %x, i16* %x.addr
  %y.addr = alloca i16
  store i16 %y, i16* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i16* %x.addr
  %2 = load i16* %y.addr
  %3 = call i16 @cmn24(i16 %1, i16 %2)
  %4 = load i16* %y.addr
  %5 = load i16* %x.addr
  %6 = call i16 @cmn24(i16 %4, i16 %5)
  %7 = add i16 %3, %6
  ret i16 %7
}

; Function Attrs: inlinehint nounwind
define internal i16 @cmn24(i16 %x, i16 %y) #3 {
  %x.addr = alloca i16
  store i16 %x, i16* %x.addr
  %y.addr = alloca i16
  store i16 %y, i16* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i16* %x.addr
  ret i16 %1
}

; Function Attrs: alwaysinline nounwind
define internal i16 @"pre_++25"(i16* %n) #2 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16** %n.addr
  %2 = load i16* %1
  store i16 1, i16* %tmp.v
  %3 = load i16* %tmp.v
  %4 = call i16 @"+26"(i16 %2, i16 %3)
  %5 = load i16** %n.addr
  store i16 %4, i16* %5
  %6 = load i16** %n.addr
  %7 = load i16* %6
  ret i16 %7
}

; Function Attrs: inlinehint nounwind
define internal i16 @"+26"(i16 %x, i16 %y) #3 {
  %x.addr = alloca i16
  store i16 %x, i16* %x.addr
  %y.addr = alloca i16
  store i16 %y, i16* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i16* %x.addr
  %2 = load i16* %y.addr
  %3 = call i16 @cmn27(i16 %1, i16 %2)
  %4 = load i16* %y.addr
  %5 = load i16* %x.addr
  %6 = call i16 @cmn27(i16 %4, i16 %5)
  %7 = add i16 %3, %6
  ret i16 %7
}

; Function Attrs: inlinehint nounwind
define internal i16 @cmn27(i16 %x, i16 %y) #3 {
  %x.addr = alloca i16
  store i16 %x, i16* %x.addr
  %y.addr = alloca i16
  store i16 %y, i16* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i16* %x.addr
  ret i16 %1
}

; Function Attrs: alwaysinline nounwind
define internal i32 @"pre_++28"(i32* %n) #2 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32** %n.addr
  %2 = load i32* %1
  %3 = call i32 @"+29"(i32 %2, i32 1)
  %4 = load i32** %n.addr
  store i32 %3, i32* %4
  %5 = load i32** %n.addr
  %6 = load i32* %5
  ret i32 %6
}

; Function Attrs: inlinehint nounwind
define internal i32 @"+29"(i32 %x, i32 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn30(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn30(i32 %4, i32 %5)
  %7 = add i32 %3, %6
  ret i32 %7
}

; Function Attrs: inlinehint nounwind
define internal i32 @cmn30(i32 %x, i32 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  ret i32 %1
}

; Function Attrs: alwaysinline nounwind
define internal i32 @"pre_++31"(i32* %n) #2 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32** %n.addr
  %2 = load i32* %1
  store i32 1, i32* %tmp.v
  %3 = load i32* %tmp.v
  %4 = call i32 @"+32"(i32 %2, i32 %3)
  %5 = load i32** %n.addr
  store i32 %4, i32* %5
  %6 = load i32** %n.addr
  %7 = load i32* %6
  ret i32 %7
}

; Function Attrs: inlinehint nounwind
define internal i32 @"+32"(i32 %x, i32 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn33(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn33(i32 %4, i32 %5)
  %7 = add i32 %3, %6
  ret i32 %7
}

; Function Attrs: inlinehint nounwind
define internal i32 @cmn33(i32 %x, i32 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  ret i32 %1
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"pre_++34"(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64* %tmp.v
  %4 = call i64 @"+35"(i64 %2, i64 %3)
  %5 = load i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64** %n.addr
  %7 = load i64* %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @"+35"(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn36(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn36(i64 %4, i64 %5)
  %7 = add i64 %3, %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @cmn36(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"pre_++37"(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64* %tmp.v
  %4 = call i64 @"+38"(i64 %2, i64 %3)
  %5 = load i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64** %n.addr
  %7 = load i64* %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @"+38"(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn39(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn39(i64 %4, i64 %5)
  %7 = add i64 %3, %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @cmn39(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"pre_++40"(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64* %tmp.v
  %4 = call i64 @"+41"(i64 %2, i64 %3)
  %5 = load i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64** %n.addr
  %7 = load i64* %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @"+41"(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn42(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn42(i64 %4, i64 %5)
  %7 = add i64 %3, %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @cmn42(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"pre_++43"(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64* %tmp.v
  %4 = call i64 @"+44"(i64 %2, i64 %3)
  %5 = load i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64** %n.addr
  %7 = load i64* %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @"+44"(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn45(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn45(i64 %4, i64 %5)
  %7 = add i64 %3, %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @cmn45(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind
define internal i8 @pre_--(i8* %n) #2 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %n.addr
  %2 = load i8* %1
  store i8 1, i8* %tmp.v
  %3 = load i8* %tmp.v
  %4 = call i8 @-(i8 %2, i8 %3)
  %5 = load i8** %n.addr
  store i8 %4, i8* %5
  %6 = load i8** %n.addr
  %7 = load i8* %6
  ret i8 %7
}

; Function Attrs: inlinehint nounwind
define internal i8 @-(i8 %x, i8 %y) #3 {
  %x.addr = alloca i8
  store i8 %x, i8* %x.addr
  %y.addr = alloca i8
  store i8 %y, i8* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %x.addr
  %2 = load i8* %y.addr
  %3 = call i8 @cmn(i8 %1, i8 %2)
  %4 = load i8* %y.addr
  %5 = load i8* %x.addr
  %6 = call i8 @cmn(i8 %4, i8 %5)
  %7 = sub i8 %3, %6
  ret i8 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8 @pre_--46(i8* %n) #2 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %n.addr
  %2 = load i8* %1
  store i8 1, i8* %tmp.v
  %3 = load i8* %tmp.v
  %4 = call i8 @-47(i8 %2, i8 %3)
  %5 = load i8** %n.addr
  store i8 %4, i8* %5
  %6 = load i8** %n.addr
  %7 = load i8* %6
  ret i8 %7
}

; Function Attrs: inlinehint nounwind
define internal i8 @-47(i8 %x, i8 %y) #3 {
  %x.addr = alloca i8
  store i8 %x, i8* %x.addr
  %y.addr = alloca i8
  store i8 %y, i8* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %x.addr
  %2 = load i8* %y.addr
  %3 = call i8 @cmn21(i8 %1, i8 %2)
  %4 = load i8* %y.addr
  %5 = load i8* %x.addr
  %6 = call i8 @cmn21(i8 %4, i8 %5)
  %7 = sub i8 %3, %6
  ret i8 %7
}

; Function Attrs: alwaysinline nounwind
define internal i16 @pre_--48(i16* %n) #2 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16** %n.addr
  %2 = load i16* %1
  store i16 1, i16* %tmp.v
  %3 = load i16* %tmp.v
  %4 = call i16 @-49(i16 %2, i16 %3)
  %5 = load i16** %n.addr
  store i16 %4, i16* %5
  %6 = load i16** %n.addr
  %7 = load i16* %6
  ret i16 %7
}

; Function Attrs: inlinehint nounwind
define internal i16 @-49(i16 %x, i16 %y) #3 {
  %x.addr = alloca i16
  store i16 %x, i16* %x.addr
  %y.addr = alloca i16
  store i16 %y, i16* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i16* %x.addr
  %2 = load i16* %y.addr
  %3 = call i16 @cmn24(i16 %1, i16 %2)
  %4 = load i16* %y.addr
  %5 = load i16* %x.addr
  %6 = call i16 @cmn24(i16 %4, i16 %5)
  %7 = sub i16 %3, %6
  ret i16 %7
}

; Function Attrs: alwaysinline nounwind
define internal i16 @pre_--50(i16* %n) #2 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16** %n.addr
  %2 = load i16* %1
  store i16 1, i16* %tmp.v
  %3 = load i16* %tmp.v
  %4 = call i16 @-51(i16 %2, i16 %3)
  %5 = load i16** %n.addr
  store i16 %4, i16* %5
  %6 = load i16** %n.addr
  %7 = load i16* %6
  ret i16 %7
}

; Function Attrs: inlinehint nounwind
define internal i16 @-51(i16 %x, i16 %y) #3 {
  %x.addr = alloca i16
  store i16 %x, i16* %x.addr
  %y.addr = alloca i16
  store i16 %y, i16* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i16* %x.addr
  %2 = load i16* %y.addr
  %3 = call i16 @cmn27(i16 %1, i16 %2)
  %4 = load i16* %y.addr
  %5 = load i16* %x.addr
  %6 = call i16 @cmn27(i16 %4, i16 %5)
  %7 = sub i16 %3, %6
  ret i16 %7
}

; Function Attrs: alwaysinline nounwind
define internal i32 @pre_--52(i32* %n) #2 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32** %n.addr
  %2 = load i32* %1
  %3 = call i32 @-53(i32 %2, i32 1)
  %4 = load i32** %n.addr
  store i32 %3, i32* %4
  %5 = load i32** %n.addr
  %6 = load i32* %5
  ret i32 %6
}

; Function Attrs: inlinehint nounwind
define internal i32 @-53(i32 %x, i32 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn30(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn30(i32 %4, i32 %5)
  %7 = sub i32 %3, %6
  ret i32 %7
}

; Function Attrs: alwaysinline nounwind
define internal i32 @pre_--54(i32* %n) #2 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32** %n.addr
  %2 = load i32* %1
  store i32 1, i32* %tmp.v
  %3 = load i32* %tmp.v
  %4 = call i32 @-55(i32 %2, i32 %3)
  %5 = load i32** %n.addr
  store i32 %4, i32* %5
  %6 = load i32** %n.addr
  %7 = load i32* %6
  ret i32 %7
}

; Function Attrs: inlinehint nounwind
define internal i32 @-55(i32 %x, i32 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn33(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn33(i32 %4, i32 %5)
  %7 = sub i32 %3, %6
  ret i32 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @pre_--56(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64* %tmp.v
  %4 = call i64 @-57(i64 %2, i64 %3)
  %5 = load i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64** %n.addr
  %7 = load i64* %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @-57(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn36(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn36(i64 %4, i64 %5)
  %7 = sub i64 %3, %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @pre_--58(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64* %tmp.v
  %4 = call i64 @-59(i64 %2, i64 %3)
  %5 = load i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64** %n.addr
  %7 = load i64* %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @-59(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn39(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn39(i64 %4, i64 %5)
  %7 = sub i64 %3, %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @pre_--60(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64* %tmp.v
  %4 = call i64 @-61(i64 %2, i64 %3)
  %5 = load i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64** %n.addr
  %7 = load i64* %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @-61(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn42(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn42(i64 %4, i64 %5)
  %7 = call i64 @_SizeType_opMinus(i64 %3, i64 %6)
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @pre_--62(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64* %tmp.v
  %4 = call i64 @-63(i64 %2, i64 %3)
  %5 = load i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64** %n.addr
  %7 = load i64* %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @-63(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn45(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn45(i64 %4, i64 %5)
  %7 = call i64 @_DiffType_opMinus(i64 %3, i64 %6)
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8 @"post_++"(i8* %n) #2 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %old = alloca i8
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %n.addr
  %2 = load i8* %1
  store i8 %2, i8* %old
  %3 = load i8** %n.addr
  %4 = load i8* %3
  store i8 1, i8* %tmp.v
  %5 = load i8* %tmp.v
  %6 = call i8 @"+"(i8 %4, i8 %5)
  %7 = load i8** %n.addr
  store i8 %6, i8* %7
  %8 = load i8* %old
  ret i8 %8
}

; Function Attrs: alwaysinline nounwind
define internal i8 @"post_++64"(i8* %n) #2 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %old = alloca i8
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %n.addr
  %2 = load i8* %1
  store i8 %2, i8* %old
  %3 = load i8** %n.addr
  %4 = load i8* %3
  store i8 1, i8* %tmp.v
  %5 = load i8* %tmp.v
  %6 = call i8 @"+20"(i8 %4, i8 %5)
  %7 = load i8** %n.addr
  store i8 %6, i8* %7
  %8 = load i8* %old
  ret i8 %8
}

; Function Attrs: alwaysinline nounwind
define internal i16 @"post_++65"(i16* %n) #2 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %old = alloca i16
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16** %n.addr
  %2 = load i16* %1
  store i16 %2, i16* %old
  %3 = load i16** %n.addr
  %4 = load i16* %3
  store i16 1, i16* %tmp.v
  %5 = load i16* %tmp.v
  %6 = call i16 @"+23"(i16 %4, i16 %5)
  %7 = load i16** %n.addr
  store i16 %6, i16* %7
  %8 = load i16* %old
  ret i16 %8
}

; Function Attrs: alwaysinline nounwind
define internal i16 @"post_++66"(i16* %n) #2 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %old = alloca i16
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16** %n.addr
  %2 = load i16* %1
  store i16 %2, i16* %old
  %3 = load i16** %n.addr
  %4 = load i16* %3
  store i16 1, i16* %tmp.v
  %5 = load i16* %tmp.v
  %6 = call i16 @"+26"(i16 %4, i16 %5)
  %7 = load i16** %n.addr
  store i16 %6, i16* %7
  %8 = load i16* %old
  ret i16 %8
}

; Function Attrs: alwaysinline nounwind
define internal i32 @"post_++67"(i32* %n) #2 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  %old = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32** %n.addr
  %2 = load i32* %1
  store i32 %2, i32* %old
  %3 = load i32** %n.addr
  %4 = load i32* %3
  %5 = call i32 @"+29"(i32 %4, i32 1)
  %6 = load i32** %n.addr
  store i32 %5, i32* %6
  %7 = load i32* %old
  ret i32 %7
}

; Function Attrs: alwaysinline nounwind
define internal i32 @"post_++68"(i32* %n) #2 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  %old = alloca i32
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32** %n.addr
  %2 = load i32* %1
  store i32 %2, i32* %old
  %3 = load i32** %n.addr
  %4 = load i32* %3
  store i32 1, i32* %tmp.v
  %5 = load i32* %tmp.v
  %6 = call i32 @"+32"(i32 %4, i32 %5)
  %7 = load i32** %n.addr
  store i32 %6, i32* %7
  %8 = load i32* %old
  ret i32 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"post_++69"(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 %2, i64* %old
  %3 = load i64** %n.addr
  %4 = load i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i64 @"+35"(i64 %4, i64 %5)
  %7 = load i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"post_++70"(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 %2, i64* %old
  %3 = load i64** %n.addr
  %4 = load i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i64 @"+38"(i64 %4, i64 %5)
  %7 = load i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"post_++71"(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 %2, i64* %old
  %3 = load i64** %n.addr
  %4 = load i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i64 @"+41"(i64 %4, i64 %5)
  %7 = load i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"post_++72"(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 %2, i64* %old
  %3 = load i64** %n.addr
  %4 = load i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i64 @"+44"(i64 %4, i64 %5)
  %7 = load i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i8 @post_--(i8* %n) #2 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %old = alloca i8
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %n.addr
  %2 = load i8* %1
  store i8 %2, i8* %old
  %3 = load i8** %n.addr
  %4 = load i8* %3
  store i8 1, i8* %tmp.v
  %5 = load i8* %tmp.v
  %6 = call i8 @-(i8 %4, i8 %5)
  %7 = load i8** %n.addr
  store i8 %6, i8* %7
  %8 = load i8* %old
  ret i8 %8
}

; Function Attrs: alwaysinline nounwind
define internal i8 @post_--73(i8* %n) #2 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %old = alloca i8
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %n.addr
  %2 = load i8* %1
  store i8 %2, i8* %old
  %3 = load i8** %n.addr
  %4 = load i8* %3
  store i8 1, i8* %tmp.v
  %5 = load i8* %tmp.v
  %6 = call i8 @-47(i8 %4, i8 %5)
  %7 = load i8** %n.addr
  store i8 %6, i8* %7
  %8 = load i8* %old
  ret i8 %8
}

; Function Attrs: alwaysinline nounwind
define internal i16 @post_--74(i16* %n) #2 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %old = alloca i16
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16** %n.addr
  %2 = load i16* %1
  store i16 %2, i16* %old
  %3 = load i16** %n.addr
  %4 = load i16* %3
  store i16 1, i16* %tmp.v
  %5 = load i16* %tmp.v
  %6 = call i16 @-49(i16 %4, i16 %5)
  %7 = load i16** %n.addr
  store i16 %6, i16* %7
  %8 = load i16* %old
  ret i16 %8
}

; Function Attrs: alwaysinline nounwind
define internal i16 @post_--75(i16* %n) #2 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %old = alloca i16
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16** %n.addr
  %2 = load i16* %1
  store i16 %2, i16* %old
  %3 = load i16** %n.addr
  %4 = load i16* %3
  store i16 1, i16* %tmp.v
  %5 = load i16* %tmp.v
  %6 = call i16 @-51(i16 %4, i16 %5)
  %7 = load i16** %n.addr
  store i16 %6, i16* %7
  %8 = load i16* %old
  ret i16 %8
}

; Function Attrs: alwaysinline nounwind
define internal i32 @post_--76(i32* %n) #2 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  %old = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32** %n.addr
  %2 = load i32* %1
  store i32 %2, i32* %old
  %3 = load i32** %n.addr
  %4 = load i32* %3
  %5 = call i32 @-53(i32 %4, i32 1)
  %6 = load i32** %n.addr
  store i32 %5, i32* %6
  %7 = load i32* %old
  ret i32 %7
}

; Function Attrs: alwaysinline nounwind
define internal i32 @post_--77(i32* %n) #2 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  %old = alloca i32
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32** %n.addr
  %2 = load i32* %1
  store i32 %2, i32* %old
  %3 = load i32** %n.addr
  %4 = load i32* %3
  store i32 1, i32* %tmp.v
  %5 = load i32* %tmp.v
  %6 = call i32 @-55(i32 %4, i32 %5)
  %7 = load i32** %n.addr
  store i32 %6, i32* %7
  %8 = load i32* %old
  ret i32 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @post_--78(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 %2, i64* %old
  %3 = load i64** %n.addr
  %4 = load i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i64 @-57(i64 %4, i64 %5)
  %7 = load i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @post_--79(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 %2, i64* %old
  %3 = load i64** %n.addr
  %4 = load i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i64 @-59(i64 %4, i64 %5)
  %7 = load i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @post_--80(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 %2, i64* %old
  %3 = load i64** %n.addr
  %4 = load i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i64 @-61(i64 %4, i64 %5)
  %7 = load i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @post_--81(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 %2, i64* %old
  %3 = load i64** %n.addr
  %4 = load i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i64 @-63(i64 %4, i64 %5)
  %7 = load i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64* %old
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal void @ctor82(%StringRef* %this) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = load %StringRef** %this.addr
  %4 = getelementptr inbounds %StringRef* %3, i32 0, i32 1
  store i8* null, i8** %4
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor83(%StringRef* %this, i64 %size) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %size.addr = alloca i64
  store i64 %size, i64* %size.addr
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %size.addr
  %2 = call i64 @"+84"(i64 %1, i32 1)
  %3 = call i8* @malloc(i64 %2)
  %4 = load %StringRef** %this.addr
  %5 = getelementptr inbounds %StringRef* %4, i32 0, i32 0
  store i8* %3, i8** %5
  %6 = load %StringRef** %this.addr
  %7 = getelementptr inbounds %StringRef* %6, i32 0, i32 0
  %8 = load i8** %7
  %9 = load i64* %size.addr
  %10 = call i8* @ptrAdd(i8* %8, i64 %9)
  %11 = load %StringRef** %this.addr
  %12 = getelementptr inbounds %StringRef* %11, i32 0, i32 1
  store i8* %10, i8** %12
  store i8 0, i8* %tmp.v
  %13 = load i8* %tmp.v
  %14 = load %StringRef** %this.addr
  %15 = getelementptr inbounds %StringRef* %14, i32 0, i32 1
  %16 = load i8** %15
  store i8 %13, i8* %16
  ret void
}

declare i8* @malloc(i64)

; Function Attrs: inlinehint nounwind
define internal i64 @"+84"(i64 %x, i32 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i32* %y.addr
  %3 = call i64 @cmn85(i64 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn86(i32 %4, i64 %5)
  %7 = add i64 %3, %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @cmn85(i64 %x, i32 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  ret i64 %1
}

; Function Attrs: inlinehint nounwind
define internal i64 @cmn86(i32 %x, i64 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = zext i32 %1 to i64
  store i64 %2, i64* %tmp.v
  %3 = load i64* %tmp.v
  ret i64 %3
}

; Function Attrs: inlinehint nounwind
define internal void @ctor87(%StringRef* %this, %StringRef %other) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %other.addr = alloca %StringRef
  store %StringRef %other, %StringRef* %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %StringRef* %other.addr, i32 0, i32 0
  %2 = load i8** %1
  %3 = load %StringRef** %this.addr
  %4 = getelementptr inbounds %StringRef* %3, i32 0, i32 0
  store i8* %2, i8** %4
  %5 = getelementptr inbounds %StringRef* %other.addr, i32 0, i32 1
  %6 = load i8** %5
  %7 = load %StringRef** %this.addr
  %8 = getelementptr inbounds %StringRef* %7, i32 0, i32 1
  store i8* %6, i8** %8
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor88(%StringRef* %this, i8* %begin, i8* %end) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %begin.addr = alloca i8*
  store i8* %begin, i8** %begin.addr
  %end.addr = alloca i8*
  store i8* %end, i8** %end.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %begin.addr
  %2 = load %StringRef** %this.addr
  %3 = getelementptr inbounds %StringRef* %2, i32 0, i32 0
  store i8* %1, i8** %3
  %4 = load i8** %end.addr
  %5 = load %StringRef** %this.addr
  %6 = getelementptr inbounds %StringRef* %5, i32 0, i32 1
  store i8* %4, i8** %6
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor89(%StringRef* %this) #2 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty(%StringRef* %this) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 1
  %3 = load i8** %2
  %4 = load %StringRef** %this.addr
  %5 = getelementptr inbounds %StringRef* %4, i32 0, i32 0
  %6 = load i8** %5
  %7 = call i64 @ptrDiff(i8* %3, i8* %6)
  %8 = call i1 @"=="(i64 %7, i32 0)
  ret i1 %8
}

; Function Attrs: inlinehint nounwind
define internal i1 @"=="(i64 %x, i32 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i32* %y.addr
  %3 = call i64 @cmn90(i64 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn91(i32 %4, i64 %5)
  %7 = icmp eq i64 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @cmn90(i64 %x, i32 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  ret i64 %1
}

; Function Attrs: inlinehint nounwind
define internal i64 @cmn91(i32 %x, i64 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = sext i32 %1 to i64
  store i64 %2, i64* %tmp.v
  %3 = load i64* %tmp.v
  ret i64 %3
}

; Function Attrs: inlinehint nounwind
define internal i64 @size(%StringRef* %this) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 1
  %3 = load i8** %2
  %4 = load %StringRef** %this.addr
  %5 = getelementptr inbounds %StringRef* %4, i32 0, i32 0
  %6 = load i8** %5
  %7 = call i64 @ptrDiff(i8* %3, i8* %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal i8* @front(%StringRef* %this) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 0
  %3 = load i8** %2
  ret i8* %3
}

; Function Attrs: inlinehint nounwind
define internal i8* @back(%StringRef* %this) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 1
  %3 = load i8** %2
  %4 = call i8* @ptrAdd(i8* %3, i64 4294967295)
  ret i8* %4
}

; Function Attrs: inlinehint nounwind
define internal i8* @"()"(%StringRef* %this) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 0
  %3 = load i8** %2
  ret i8* %3
}

; Function Attrs: inlinehint nounwind
define internal i8* @"()92"(%StringRef* %this, i64 %index) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load i64* %index.addr
  %5 = call i8* @ptrAdd(i8* %3, i64 %4)
  ret i8* %5
}

; Function Attrs: inlinehint nounwind
define internal i8* @at(%StringRef* %this, i64 %index) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load i64* %index.addr
  %5 = call i8* @ptrAdd(i8* %3, i64 %4)
  ret i8* %5
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront(%StringRef* %this) #2 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = call i8* @ptrAdd(i8* %3, i64 1)
  %5 = load %StringRef** %this.addr
  %6 = getelementptr inbounds %StringRef* %5, i32 0, i32 0
  store i8* %4, i8** %6
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack(%StringRef* %this) #2 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 1
  %3 = load i8** %2
  %4 = call i8* @ptrAdd(i8* %3, i64 4294967295)
  %5 = load %StringRef** %this.addr
  %6 = getelementptr inbounds %StringRef* %5, i32 0, i32 1
  store i8* %4, i8** %6
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront93(%StringRef* %this, i64 %n) #2 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load i64* %n.addr
  %5 = call i8* @ptrAdd(i8* %3, i64 %4)
  %6 = load %StringRef** %this.addr
  %7 = getelementptr inbounds %StringRef* %6, i32 0, i32 0
  store i8* %5, i8** %7
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack94(%StringRef* %this, i64 %n) #2 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 1
  %3 = load i8** %2
  %4 = load i64* %n.addr
  store i64 %4, i64* %tmp.v1
  %5 = load i64* %tmp.v1
  %6 = sub i64 0, %5
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  %8 = call i8* @ptrAdd(i8* %3, i64 %7)
  %9 = load %StringRef** %this.addr
  %10 = getelementptr inbounds %StringRef* %9, i32 0, i32 1
  store i8* %8, i8** %10
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i8* @cStr(%StringRef* %this) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 0
  %3 = load i8** %2
  ret i8* %3
}

; Function Attrs: inlinehint nounwind
define internal %StringRef* @"="(%StringRef* %this, %StringRef %src) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %src.addr = alloca %StringRef
  store %StringRef %src, %StringRef* %src.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %StringRef* %src.addr, i32 0, i32 0
  %2 = load i8** %1
  %3 = load %StringRef** %this.addr
  %4 = getelementptr inbounds %StringRef* %3, i32 0, i32 0
  store i8* %2, i8** %4
  %5 = getelementptr inbounds %StringRef* %src.addr, i32 0, i32 1
  %6 = load i8** %5
  %7 = load %StringRef** %this.addr
  %8 = getelementptr inbounds %StringRef* %7, i32 0, i32 1
  store i8* %6, i8** %8
  %9 = load %StringRef** %this.addr
  ret %StringRef* %9
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==95"(%StringRef* %this, %StringRef %other) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %other.addr = alloca %StringRef
  store %StringRef %other, %StringRef* %other.addr
  %s = alloca i64
  %i = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %this.addr
  %2 = call i64 @size(%StringRef* %1)
  store i64 %2, i64* %s
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64* %s
  %4 = call i64 @size(%StringRef* %other.addr)
  %5 = call i1 @"!="(i64 %3, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  store i64 0, i64* %i
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %6 = load i64* %i
  %7 = load i64* %s
  %8 = call i1 @"<"(i64 %6, i64 %7)
  br i1 %8, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block1

while_step:                                       ; preds = %if_end3
  %9 = load i64* %i
  %10 = call i64 @"+84"(i64 %9, i32 1)
  store i64 %10, i64* %i
  br label %while_block

while_end:                                        ; preds = %while_block
  ret i1 true

if_block1:                                        ; preds = %while_body
  %11 = load %StringRef** %this.addr
  %12 = load i64* %i
  %13 = call i8* @at(%StringRef* %11, i64 %12)
  %14 = load i8* %13
  %15 = load i64* %i
  %16 = call i8* @at(%StringRef* %other.addr, i64 %15)
  %17 = load i8* %16
  %18 = icmp ne i8 %14, %17
  br i1 %18, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block4, %if_block1
  br label %while_step

dumy_block4:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: inlinehint nounwind
define internal i1 @"!="(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn42(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn42(i64 %4, i64 %5)
  %7 = icmp ne i64 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i1 @"<"(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn42(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn42(i64 %4, i64 %5)
  %7 = icmp slt i64 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal %StringRef @_String_fromCString(i8* %s) #3 {
  %s.addr = alloca i8*
  store i8* %s, i8** %s.addr
  %len = alloca i64
  %res = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %s.addr
  %2 = call i64 @cStringLen(i8* %1)
  store i64 %2, i64* %len
  call void @ctor82(%StringRef* %res)
  %3 = load i8** %s.addr
  %4 = getelementptr inbounds %StringRef* %res, i32 0, i32 0
  store i8* %3, i8** %4
  %5 = getelementptr inbounds %StringRef* %res, i32 0, i32 0
  %6 = load i8** %5
  %7 = load i64* %len
  %8 = call i8* @ptrAdd(i8* %6, i64 %7)
  %9 = getelementptr inbounds %StringRef* %res, i32 0, i32 1
  store i8* %8, i8** %9
  %10 = load %StringRef* %res
  ret %StringRef %10
}

; Function Attrs: inlinehint nounwind
define internal i64 @cStringLen(i8* %s) #3 {
  %s.addr = alloca i8*
  store i8* %s, i8** %s.addr
  %p = alloca i8*
  %len = alloca i64
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %s.addr
  store i8* %1, i8** %p
  store i64 0, i64* %len
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %2 = load i8** %p
  %3 = load i8* %2
  store i8 0, i8* %tmp.v
  %4 = load i8* %tmp.v
  %5 = call i1 @"!=96"(i8 %3, i8 %4)
  br i1 %5, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %6 = load i64* %len
  %7 = call i64 @"+84"(i64 %6, i32 1)
  store i64 %7, i64* %len
  br label %while_step

while_step:                                       ; preds = %while_body
  %8 = load i8** %p
  %9 = call i8* @ptrAdd(i8* %8, i64 1)
  store i8* %9, i8** %p
  br label %while_block

while_end:                                        ; preds = %while_block
  %10 = load i64* %len
  ret i64 %10
}

; Function Attrs: inlinehint nounwind
define internal i1 @"!=96"(i8 %x, i8 %y) #3 {
  %x.addr = alloca i8
  store i8 %x, i8* %x.addr
  %y.addr = alloca i8
  store i8 %y, i8* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %x.addr
  %2 = load i8* %y.addr
  %3 = call i8 @cmn(i8 %1, i8 %2)
  %4 = load i8* %y.addr
  %5 = load i8* %x.addr
  %6 = call i8 @cmn(i8 %4, i8 %5)
  %7 = icmp ne i8 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i8 @char(%StringRef* %this) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %StringRef** %this.addr
  %2 = call i1 @isEmpty(%StringRef* %1)
  br i1 %2, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  store i8 0, i8* %tmp.v
  %3 = load i8* %tmp.v
  ret i8 %3

if_else:                                          ; preds = %if_block
  %4 = load %StringRef** %this.addr
  %5 = call i8* @at(%StringRef* %4, i64 0)
  %6 = load i8* %5
  ret i8 %6

if_end:                                           ; preds = %dumy_block1, %dumy_block
  unreachable

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block1:                                      ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @"+97"(%StringRef* sret %_result, %StringRef %x, %StringRef %y) #3 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %x.addr = alloca %StringRef
  store %StringRef %x, %StringRef* %x.addr
  %y.addr = alloca %StringRef
  store %StringRef %y, %StringRef* %y.addr
  %sz1 = alloca i64
  %sz2 = alloca i64
  %res = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = call i64 @size(%StringRef* %x.addr)
  store i64 %1, i64* %sz1
  %2 = call i64 @size(%StringRef* %y.addr)
  store i64 %2, i64* %sz2
  %3 = load i64* %sz1
  %4 = load i64* %sz2
  %5 = call i64 @"+41"(i64 %3, i64 %4)
  call void @ctor83(%StringRef* %res, i64 %5)
  %6 = getelementptr inbounds %StringRef* %res, i32 0, i32 0
  %7 = load i8** %6
  %8 = getelementptr inbounds %StringRef* %x.addr, i32 0, i32 0
  %9 = load i8** %8
  %10 = load i64* %sz1
  call void @_spr_memcpy(i8* %7, i8* %9, i64 %10)
  %11 = getelementptr inbounds %StringRef* %res, i32 0, i32 0
  %12 = load i8** %11
  %13 = load i64* %sz1
  %14 = call i8* @ptrAdd(i8* %12, i64 %13)
  %15 = getelementptr inbounds %StringRef* %y.addr, i32 0, i32 0
  %16 = load i8** %15
  %17 = load i64* %sz2
  call void @_spr_memcpy(i8* %14, i8* %16, i64 %17)
  %18 = load %StringRef** %_result.addr
  %19 = load %StringRef* %res
  call void @ctor87(%StringRef* %18, %StringRef %19)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"+98"(%StringRef* sret %_result, %StringRef %x, i8 %y) #3 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %x.addr = alloca %StringRef
  store %StringRef %x, %StringRef* %x.addr
  %y.addr = alloca i8
  store i8 %y, i8* %y.addr
  %sz1 = alloca i64
  %sz2 = alloca i32
  %res = alloca %StringRef
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = call i64 @size(%StringRef* %x.addr)
  store i64 %1, i64* %sz1
  store i32 1, i32* %sz2
  %2 = load i64* %sz1
  %3 = load i32* %sz2
  %4 = call i64 @"+84"(i64 %2, i32 %3)
  call void @ctor83(%StringRef* %res, i64 %4)
  %5 = getelementptr inbounds %StringRef* %res, i32 0, i32 0
  %6 = load i8** %5
  %7 = getelementptr inbounds %StringRef* %x.addr, i32 0, i32 0
  %8 = load i8** %7
  %9 = load i64* %sz1
  call void @_spr_memcpy(i8* %6, i8* %8, i64 %9)
  %10 = getelementptr inbounds %StringRef* %res, i32 0, i32 0
  %11 = load i8** %10
  %12 = load i64* %sz1
  %13 = call i8* @ptrAdd(i8* %11, i64 %12)
  %14 = load i32* %sz2
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %tmp.v
  %16 = load i64* %tmp.v
  call void @_spr_memcpy(i8* %13, i8* %y.addr, i64 %16)
  %17 = load %StringRef** %_result.addr
  %18 = load %StringRef* %res
  call void @ctor87(%StringRef* %17, %StringRef %18)
  ret void
}

; Function Attrs: nounwind
declare void @cast() #1

; Function Attrs: nounwind
declare void @reinterpretCast() #1

; Function Attrs: nounwind
declare void @construct() #1

declare i8* @calloc(i64, i64)

declare i8* @realloc(i8*, i64)

declare void @free(i8*)

declare i32 @strcmp(i8*, i8*)

declare void @system(i8*)

declare void @sleep(i32)

define private void @__global_ctor() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor99(%EndLineHelperClass* %this) #2 {
  %this.addr = alloca %EndLineHelperClass*
  store %EndLineHelperClass* %this, %EndLineHelperClass** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

define private void @__global_dtor() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor100(%EndLineHelperClass* %dest) #2 {
  %dest.addr = alloca %EndLineHelperClass*
  store %EndLineHelperClass* %dest, %EndLineHelperClass** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

define private void @__global_ctor101() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor102(%FlushHelperClass* %this) #2 {
  %this.addr = alloca %FlushHelperClass*
  store %FlushHelperClass* %this, %FlushHelperClass** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

define private void @__global_dtor103() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor104(%FlushHelperClass* %dest) #2 {
  %dest.addr = alloca %FlushHelperClass*
  store %FlushHelperClass* %dest, %FlushHelperClass** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=105"(%EndLineHelperClass* %dest, %EndLineHelperClass* %other) #2 {
  %dest.addr = alloca %EndLineHelperClass*
  store %EndLineHelperClass* %dest, %EndLineHelperClass** %dest.addr
  %other.addr = alloca %EndLineHelperClass*
  store %EndLineHelperClass* %other, %EndLineHelperClass** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==106"(%EndLineHelperClass* %this, %EndLineHelperClass* %other) #2 {
  %this.addr = alloca %EndLineHelperClass*
  store %EndLineHelperClass* %this, %EndLineHelperClass** %this.addr
  %other.addr = alloca %EndLineHelperClass*
  store %EndLineHelperClass* %other, %EndLineHelperClass** %other.addr
  br label %code

code:                                             ; preds = %0
  ret i1 true
}

; Function Attrs: alwaysinline nounwind
define internal void @"=107"(%FlushHelperClass* %dest, %FlushHelperClass* %other) #2 {
  %dest.addr = alloca %FlushHelperClass*
  store %FlushHelperClass* %dest, %FlushHelperClass** %dest.addr
  %other.addr = alloca %FlushHelperClass*
  store %FlushHelperClass* %other, %FlushHelperClass** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==108"(%FlushHelperClass* %this, %FlushHelperClass* %other) #2 {
  %this.addr = alloca %FlushHelperClass*
  store %FlushHelperClass* %this, %FlushHelperClass** %this.addr
  %other.addr = alloca %FlushHelperClass*
  store %FlushHelperClass* %other, %FlushHelperClass** %other.addr
  br label %code

code:                                             ; preds = %0
  ret i1 true
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor109(%StreamRefWrapperHelperClass* %dest) #2 {
  %dest.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %dest, %StreamRefWrapperHelperClass** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=110"(%StreamRefWrapperHelperClass* %dest, %StreamRefWrapperHelperClass* %other) #2 {
  %dest.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %dest, %StreamRefWrapperHelperClass** %dest.addr
  %other.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %other, %StreamRefWrapperHelperClass** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StreamRefWrapperHelperClass** %other.addr
  %2 = getelementptr inbounds %StreamRefWrapperHelperClass* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %StreamRefWrapperHelperClass** %dest.addr
  %5 = getelementptr inbounds %StreamRefWrapperHelperClass* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==111"(%StreamRefWrapperHelperClass* %this, %StreamRefWrapperHelperClass* %other) #2 {
  %this.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %this, %StreamRefWrapperHelperClass** %this.addr
  %other.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %other, %StreamRefWrapperHelperClass** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StreamRefWrapperHelperClass** %this.addr
  %2 = getelementptr inbounds %StreamRefWrapperHelperClass* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %StreamRefWrapperHelperClass** %other.addr
  %5 = getelementptr inbounds %StreamRefWrapperHelperClass* %4, i32 0, i32 0
  %6 = load i8** %5
  %7 = call i1 @implOpRefEQ(i8* %3, i8* %6)
  ret i1 %7
}

define private void @__global_ctor112() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor113(%ConsoleOutputStream* %this) #2 {
  %this.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %this, %ConsoleOutputStream** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

define private void @__global_dtor114() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor115(%ConsoleOutputStream* %dest) #2 {
  %dest.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %dest, %ConsoleOutputStream** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=116"(%ConsoleOutputStream* %dest, %ConsoleOutputStream* %other) #2 {
  %dest.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %dest, %ConsoleOutputStream** %dest.addr
  %other.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %other, %ConsoleOutputStream** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==117"(%ConsoleOutputStream* %this, %ConsoleOutputStream* %other) #2 {
  %this.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %this, %ConsoleOutputStream** %this.addr
  %other.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %other, %ConsoleOutputStream** %other.addr
  br label %code

code:                                             ; preds = %0
  ret i1 true
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<"(%ConsoleOutputStream %this, i8 %x) #2 {
  %this.addr = alloca %ConsoleOutputStream
  store %ConsoleOutputStream %this, %ConsoleOutputStream* %this.addr
  %x.addr = alloca i8
  store i8 %x, i8* %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %x.addr
  call void @writeChar(i8 %1)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<118"(%ConsoleOutputStream %this, i1 %x) #2 {
  %this.addr = alloca %ConsoleOutputStream
  store %ConsoleOutputStream %this, %ConsoleOutputStream* %this.addr
  %x.addr = alloca i1
  store i1 %x, i1* %x.addr
  %tmp.StringRef = alloca %StringRef
  %tmp.StringRef1 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load i1* %x.addr
  br i1 %1, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %2 = load %ConsoleOutputStream* %this.addr
  %3 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %4 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([5 x i8]* @str, i32 0, i32 0), i8** %3
  store i8* getelementptr inbounds ([5 x i8]* @str, i32 0, i32 4), i8** %4
  %5 = load %StringRef* %tmp.StringRef
  call void @"<<<119"(%ConsoleOutputStream %2, %StringRef %5)
  br label %if_end

if_else:                                          ; preds = %if_block
  %6 = load %ConsoleOutputStream* %this.addr
  %7 = getelementptr inbounds %StringRef* %tmp.StringRef1, i32 0, i32 0
  %8 = getelementptr inbounds %StringRef* %tmp.StringRef1, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8]* @str120, i32 0, i32 0), i8** %7
  store i8* getelementptr inbounds ([6 x i8]* @str120, i32 0, i32 5), i8** %8
  %9 = load %StringRef* %tmp.StringRef1
  call void @"<<<119"(%ConsoleOutputStream %6, %StringRef %9)
  br label %if_end

if_end:                                           ; preds = %if_else, %if_then
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<119"(%ConsoleOutputStream %this, %StringRef %x) #2 {
  %this.addr = alloca %ConsoleOutputStream
  store %ConsoleOutputStream %this, %ConsoleOutputStream* %this.addr
  %x.addr = alloca %StringRef
  store %StringRef %x, %StringRef* %x.addr
  %"$rangeVar" = alloca %StringRef
  %c = alloca i8*
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef* %x.addr
  call void @ctor87(%StringRef* %"$rangeVar", %StringRef %1)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %2 = call i1 @isEmpty(%StringRef* %"$rangeVar")
  %3 = xor i1 true, %2
  br i1 %3, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %4 = call i8* @front(%StringRef* %"$rangeVar")
  store i8* %4, i8** %c
  %5 = load i8** %c
  %6 = load i8* %5
  call void @writeChar(i8 %6)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @popFront(%StringRef* %"$rangeVar")
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @flush121(%ConsoleOutputStream %this, %FlushHelperClass %x) #2 {
  %this.addr = alloca %ConsoleOutputStream
  store %ConsoleOutputStream %this, %ConsoleOutputStream* %this.addr
  %x.addr = alloca %FlushHelperClass
  store %FlushHelperClass %x, %FlushHelperClass* %x.addr
  br label %code

code:                                             ; preds = %0
  call void @flushOutput()
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor122(%MainParameters* %this, i32 %argc, i8** %argv) #3 {
  %this.addr = alloca %MainParameters*
  store %MainParameters* %this, %MainParameters** %this.addr
  %argc.addr = alloca i32
  store i32 %argc, i32* %argc.addr
  %argv.addr = alloca i8**
  store i8** %argv, i8*** %argv.addr
  %"$tmpC" = alloca %CStrPtr
  %"$tmpC1" = alloca %CStrPtr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters** %this.addr
  %2 = getelementptr inbounds %MainParameters* %1, i32 0, i32 0
  call void @ctor123(%CStrPtr* %2)
  %3 = load %MainParameters** %this.addr
  %4 = getelementptr inbounds %MainParameters* %3, i32 0, i32 1
  call void @ctor123(%CStrPtr* %4)
  %5 = load %MainParameters** %this.addr
  %6 = getelementptr inbounds %MainParameters* %5, i32 0, i32 0
  %7 = load i8*** %argv.addr
  call void @fromArgvPtr(%CStrPtr* %"$tmpC", i8** %7)
  call void @"=124"(%CStrPtr* %6, %CStrPtr* %"$tmpC")
  %8 = load %MainParameters** %this.addr
  %9 = getelementptr inbounds %MainParameters* %8, i32 0, i32 1
  %10 = load %MainParameters** %this.addr
  %11 = getelementptr inbounds %MainParameters* %10, i32 0, i32 0
  %12 = load %CStrPtr* %11
  %13 = load i32* %argc.addr
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %tmp.v
  %15 = load i64* %tmp.v
  call void @"+127"(%CStrPtr* %"$tmpC1", %CStrPtr %12, i64 %15)
  call void @"=124"(%CStrPtr* %9, %CStrPtr* %"$tmpC1")
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor123(%CStrPtr* %this) #2 {
  %this.addr = alloca %CStrPtr*
  store %CStrPtr* %this, %CStrPtr** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr** %this.addr
  %2 = getelementptr inbounds %CStrPtr* %1, i32 0, i32 0
  store %CStr* null, %CStr** %2
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=124"(%CStrPtr* %dest, %CStrPtr* %other) #2 {
  %dest.addr = alloca %CStrPtr*
  store %CStrPtr* %dest, %CStrPtr** %dest.addr
  %other.addr = alloca %CStrPtr*
  store %CStrPtr* %other, %CStrPtr** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr** %other.addr
  %2 = getelementptr inbounds %CStrPtr* %1, i32 0, i32 0
  %3 = load %CStr** %2
  %4 = load %CStrPtr** %dest.addr
  %5 = getelementptr inbounds %CStrPtr* %4, i32 0, i32 0
  store %CStr* %3, %CStr** %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @fromArgvPtr(%CStrPtr* sret %_result, i8** %argv) #3 {
  %_result.addr = alloca %CStrPtr*
  store %CStrPtr* %_result, %CStrPtr** %_result.addr
  %argv.addr = alloca i8**
  store i8** %argv, i8*** %argv.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr** %_result.addr
  %2 = load i8*** %argv.addr
  %3 = bitcast i8** %2 to %CStr*
  call void @ctor125(%CStrPtr* %1, %CStr* %3)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor125(%CStrPtr* %this, %CStr* %fptr) #2 {
  %this.addr = alloca %CStrPtr*
  store %CStrPtr* %this, %CStrPtr** %this.addr
  %fptr.addr = alloca %CStr*
  store %CStr* %fptr, %CStr** %fptr.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStr** %fptr.addr
  %2 = load %CStrPtr** %this.addr
  %3 = getelementptr inbounds %CStrPtr* %2, i32 0, i32 0
  store %CStr* %1, %CStr** %3
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor126(%CStrPtr* %dest) #2 {
  %dest.addr = alloca %CStrPtr*
  store %CStrPtr* %dest, %CStrPtr** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"+127"(%CStrPtr* sret %_result, %CStrPtr %p, i64 %n) #3 {
  %_result.addr = alloca %CStrPtr*
  store %CStrPtr* %_result, %CStrPtr** %_result.addr
  %p.addr = alloca %CStrPtr
  store %CStrPtr %p, %CStrPtr* %p.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr** %_result.addr
  %2 = load %CStrPtr* %p.addr
  %3 = call i8* @toBytePtr(%CStrPtr %2)
  %4 = load i64* %n.addr
  %5 = call i64 @"*"(i64 %4, i64 8)
  %6 = call i8* @ptrAdd(i8* %3, i64 %5)
  call void @fromBytePtr(%CStrPtr* %1, i8* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @fromBytePtr(%CStrPtr* sret %_result, i8* %p) #3 {
  %_result.addr = alloca %CStrPtr*
  store %CStrPtr* %_result, %CStrPtr** %_result.addr
  %p.addr = alloca i8*
  store i8* %p, i8** %p.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr** %_result.addr
  %2 = load i8** %p.addr
  %3 = bitcast i8* %2 to %CStr*
  call void @ctor125(%CStrPtr* %1, %CStr* %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i8* @toBytePtr(%CStrPtr %p) #3 {
  %p.addr = alloca %CStrPtr
  store %CStrPtr %p, %CStrPtr* %p.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %CStrPtr* %p.addr, i32 0, i32 0
  %2 = load %CStr** %1
  %3 = bitcast %CStr* %2 to i8*
  ret i8* %3
}

; Function Attrs: inlinehint nounwind
define internal i64 @"*"(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn42(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn42(i64 %4, i64 %5)
  %7 = mul i64 %3, %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor128(%MainParameters* %dest) #2 {
  %dest.addr = alloca %MainParameters*
  store %MainParameters* %dest, %MainParameters** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=129"(%MainParameters* %dest, %MainParameters* %other) #2 {
  %dest.addr = alloca %MainParameters*
  store %MainParameters* %dest, %MainParameters** %dest.addr
  %other.addr = alloca %MainParameters*
  store %MainParameters* %other, %MainParameters** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters** %dest.addr
  %2 = getelementptr inbounds %MainParameters* %1, i32 0, i32 0
  %3 = load %MainParameters** %other.addr
  %4 = getelementptr inbounds %MainParameters* %3, i32 0, i32 0
  call void @"=124"(%CStrPtr* %2, %CStrPtr* %4)
  %5 = load %MainParameters** %dest.addr
  %6 = getelementptr inbounds %MainParameters* %5, i32 0, i32 1
  %7 = load %MainParameters** %other.addr
  %8 = getelementptr inbounds %MainParameters* %7, i32 0, i32 1
  call void @"=124"(%CStrPtr* %6, %CStrPtr* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==130"(%MainParameters* %this, %MainParameters* %other) #2 {
  %this.addr = alloca %MainParameters*
  store %MainParameters* %this, %MainParameters** %this.addr
  %other.addr = alloca %MainParameters*
  store %MainParameters* %other, %MainParameters** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters** %this.addr
  %2 = getelementptr inbounds %MainParameters* %1, i32 0, i32 0
  %3 = load %MainParameters** %other.addr
  %4 = getelementptr inbounds %MainParameters* %3, i32 0, i32 0
  %5 = call i1 @"==131"(%CStrPtr* %2, %CStrPtr* %4)
  br i1 %5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %6 = load %MainParameters** %this.addr
  %7 = getelementptr inbounds %MainParameters* %6, i32 0, i32 1
  %8 = load %MainParameters** %other.addr
  %9 = getelementptr inbounds %MainParameters* %8, i32 0, i32 1
  %10 = call i1 @"==131"(%CStrPtr* %7, %CStrPtr* %9)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==131"(%CStrPtr* %this, %CStrPtr* %other) #2 {
  %this.addr = alloca %CStrPtr*
  store %CStrPtr* %this, %CStrPtr** %this.addr
  %other.addr = alloca %CStrPtr*
  store %CStrPtr* %other, %CStrPtr** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr** %this.addr
  %2 = getelementptr inbounds %CStrPtr* %1, i32 0, i32 0
  %3 = load %CStr** %2
  %4 = bitcast %CStr* %3 to i8*
  %5 = load %CStrPtr** %other.addr
  %6 = getelementptr inbounds %CStrPtr* %5, i32 0, i32 0
  %7 = load %CStr** %6
  %8 = bitcast %CStr* %7 to i8*
  %9 = call i1 @implOpRefEQ(i8* %4, i8* %8)
  ret i1 %9
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty132(%MainParameters %this) #3 {
  %this.addr = alloca %MainParameters
  store %MainParameters %this, %MainParameters* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters* %this.addr
  %2 = call i64 @size134(%MainParameters %1)
  %3 = call i1 @"==133"(i64 %2, i32 0)
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==133"(i64 %x, i32 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i32* %y.addr
  %3 = call i64 @cmn85(i64 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn86(i32 %4, i64 %5)
  %7 = icmp eq i64 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @size134(%MainParameters %this) #3 {
  %this.addr = alloca %MainParameters
  store %MainParameters %this, %MainParameters* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %MainParameters* %this.addr, i32 0, i32 1
  %2 = load %CStrPtr* %1
  %3 = getelementptr inbounds %MainParameters* %this.addr, i32 0, i32 0
  %4 = load %CStrPtr* %3
  %5 = call i64 @-135(%CStrPtr %2, %CStrPtr %4)
  ret i64 %5
}

; Function Attrs: inlinehint nounwind
define internal i64 @-135(%CStrPtr %p, %CStrPtr %q) #3 {
  %p.addr = alloca %CStrPtr
  store %CStrPtr %p, %CStrPtr* %p.addr
  %q.addr = alloca %CStrPtr
  store %CStrPtr %q, %CStrPtr* %q.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr* %p.addr
  %2 = call i8* @toBytePtr(%CStrPtr %1)
  %3 = load %CStrPtr* %q.addr
  %4 = call i8* @toBytePtr(%CStrPtr %3)
  %5 = call i64 @ptrDiff(i8* %2, i8* %4)
  %6 = call i64 @"/"(i64 %5, i64 8)
  ret i64 %6
}

; Function Attrs: inlinehint nounwind
define internal i64 @"/"(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn136(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn137(i64 %4, i64 %5)
  %7 = call i64 @_SizeType_opDiv(i64 %3, i64 %6)
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @cmn136(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  store i64 %1, i64* %tmp.v
  %2 = load i64* %tmp.v
  ret i64 %2
}

; Function Attrs: inlinehint nounwind
define internal i64 @cmn137(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  ret i64 %1
}

; Function Attrs: inlinehint nounwind
define internal void @front138(%StringRef* sret %_result, %MainParameters %this) #3 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %this.addr = alloca %MainParameters
  store %MainParameters %this, %MainParameters* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %_result.addr
  %2 = getelementptr inbounds %MainParameters* %this.addr, i32 0, i32 0
  %3 = load %CStrPtr* %2
  call void @toStringRef(%StringRef* %1, %CStrPtr %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @toStringRef(%StringRef* sret %_result, %CStrPtr %p) #3 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %p.addr = alloca %CStrPtr
  store %CStrPtr %p, %CStrPtr* %p.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %_result.addr
  %2 = getelementptr inbounds %CStrPtr* %p.addr, i32 0, i32 0
  %3 = load %CStr** %2
  %4 = getelementptr inbounds %CStr* %3, i32 0, i32 0
  %5 = load i8** %4
  %6 = call %StringRef @_String_fromCString(i8* %5)
  call void @ctor87(%StringRef* %1, %StringRef %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @back139(%StringRef* sret %_result, %MainParameters %this) #3 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %this.addr = alloca %MainParameters
  store %MainParameters %this, %MainParameters* %this.addr
  %"$tmpC" = alloca %CStrPtr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %_result.addr
  %2 = getelementptr inbounds %MainParameters* %this.addr, i32 0, i32 1
  %3 = load %CStrPtr* %2
  call void @-140(%CStrPtr* %"$tmpC", %CStrPtr %3, i64 1)
  %4 = load %CStrPtr* %"$tmpC"
  call void @toStringRef(%StringRef* %1, %CStrPtr %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @-140(%CStrPtr* sret %_result, %CStrPtr %p, i64 %n) #3 {
  %_result.addr = alloca %CStrPtr*
  store %CStrPtr* %_result, %CStrPtr** %_result.addr
  %p.addr = alloca %CStrPtr
  store %CStrPtr %p, %CStrPtr* %p.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr** %_result.addr
  %2 = load %CStrPtr* %p.addr
  %3 = call i8* @toBytePtr(%CStrPtr %2)
  %4 = load i64* %n.addr
  %5 = call i64 @"*"(i64 %4, i64 8)
  %6 = call i8* @ptrSub(i8* %3, i64 %5)
  call void @fromBytePtr(%CStrPtr* %1, i8* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"()141"(%StringRef* sret %_result, %MainParameters %this) #3 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %this.addr = alloca %MainParameters
  store %MainParameters %this, %MainParameters* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %_result.addr
  %2 = getelementptr inbounds %MainParameters* %this.addr, i32 0, i32 0
  %3 = load %CStrPtr* %2
  call void @toStringRef(%StringRef* %1, %CStrPtr %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"()142"(%StringRef* sret %_result, %MainParameters %this, i64 %n) #3 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %this.addr = alloca %MainParameters
  store %MainParameters %this, %MainParameters* %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %CStrPtr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %_result.addr
  %2 = getelementptr inbounds %MainParameters* %this.addr, i32 0, i32 0
  %3 = load %CStrPtr* %2
  %4 = load i64* %n.addr
  call void @"+127"(%CStrPtr* %"$tmpC", %CStrPtr %3, i64 %4)
  %5 = load %CStrPtr* %"$tmpC"
  call void @toStringRef(%StringRef* %1, %CStrPtr %5)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront143(%MainParameters* %this) #2 {
  %this.addr = alloca %MainParameters*
  store %MainParameters* %this, %MainParameters** %this.addr
  %"$tmpC" = alloca %CStrPtr
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters** %this.addr
  %2 = getelementptr inbounds %MainParameters* %1, i32 0, i32 0
  %3 = load %MainParameters** %this.addr
  %4 = getelementptr inbounds %MainParameters* %3, i32 0, i32 0
  %5 = load %CStrPtr* %4
  call void @"+127"(%CStrPtr* %"$tmpC", %CStrPtr %5, i64 1)
  call void @"=124"(%CStrPtr* %2, %CStrPtr* %"$tmpC")
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack144(%MainParameters* %this) #2 {
  %this.addr = alloca %MainParameters*
  store %MainParameters* %this, %MainParameters** %this.addr
  %"$tmpC" = alloca %CStrPtr
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters** %this.addr
  %2 = getelementptr inbounds %MainParameters* %1, i32 0, i32 1
  %3 = load %MainParameters** %this.addr
  %4 = getelementptr inbounds %MainParameters* %3, i32 0, i32 1
  %5 = load %CStrPtr* %4
  call void @-140(%CStrPtr* %"$tmpC", %CStrPtr %5, i64 1)
  call void @"=124"(%CStrPtr* %2, %CStrPtr* %"$tmpC")
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront145(%MainParameters* %this, i64 %n) #2 {
  %this.addr = alloca %MainParameters*
  store %MainParameters* %this, %MainParameters** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %CStrPtr
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters** %this.addr
  %2 = getelementptr inbounds %MainParameters* %1, i32 0, i32 0
  %3 = load %MainParameters** %this.addr
  %4 = getelementptr inbounds %MainParameters* %3, i32 0, i32 0
  %5 = load %CStrPtr* %4
  %6 = load i64* %n.addr
  call void @"+127"(%CStrPtr* %"$tmpC", %CStrPtr %5, i64 %6)
  call void @"=124"(%CStrPtr* %2, %CStrPtr* %"$tmpC")
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack146(%MainParameters* %this, i64 %n) #2 {
  %this.addr = alloca %MainParameters*
  store %MainParameters* %this, %MainParameters** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %CStrPtr
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters** %this.addr
  %2 = getelementptr inbounds %MainParameters* %1, i32 0, i32 1
  %3 = load %MainParameters** %this.addr
  %4 = getelementptr inbounds %MainParameters* %3, i32 0, i32 1
  %5 = load %CStrPtr* %4
  %6 = load i64* %n.addr
  call void @-140(%CStrPtr* %"$tmpC", %CStrPtr %5, i64 %6)
  call void @"=124"(%CStrPtr* %2, %CStrPtr* %"$tmpC")
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor147(%CStr* %dest) #2 {
  %dest.addr = alloca %CStr*
  store %CStr* %dest, %CStr** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=148"(%CStr* %dest, %CStr* %other) #2 {
  %dest.addr = alloca %CStr*
  store %CStr* %dest, %CStr** %dest.addr
  %other.addr = alloca %CStr*
  store %CStr* %other, %CStr** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStr** %other.addr
  %2 = getelementptr inbounds %CStr* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %CStr** %dest.addr
  %5 = getelementptr inbounds %CStr* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==149"(%CStr* %this, %CStr* %other) #2 {
  %this.addr = alloca %CStr*
  store %CStr* %this, %CStr** %this.addr
  %other.addr = alloca %CStr*
  store %CStr* %other, %CStr** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStr** %this.addr
  %2 = getelementptr inbounds %CStr* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %CStr** %other.addr
  %5 = getelementptr inbounds %CStr* %4, i32 0, i32 0
  %6 = load i8** %5
  %7 = call i1 @implOpRefEQ(i8* %3, i8* %6)
  ret i1 %7
}

define private void @__global_ctor150() {
  br label %code

code:                                             ; preds = %0
  call void @ctor151(%MainParameters* @programArgs)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor151(%MainParameters* %this) #2 {
  %this.addr = alloca %MainParameters*
  store %MainParameters* %this, %MainParameters** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters** %this.addr
  %2 = getelementptr inbounds %MainParameters* %1, i32 0, i32 0
  call void @ctor123(%CStrPtr* %2)
  %3 = load %MainParameters** %this.addr
  %4 = getelementptr inbounds %MainParameters* %3, i32 0, i32 1
  call void @ctor123(%CStrPtr* %4)
  ret void
}

define private void @__global_dtor152() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: nounwind
declare void @sprMain() #1

; Function Attrs: inlinehint nounwind
define internal i32 @asInt(%StringRef %src) #3 {
  %src.addr = alloca %StringRef
  store %StringRef %src, %StringRef* %src.addr
  br label %code

code:                                             ; preds = %0
  %1 = call i8* @cStr(%StringRef* %src.addr)
  %2 = call i32 @atoi(i8* %1)
  ret i32 %2
}

declare i32 @atoi(i8*)

; Function Attrs: inlinehint nounwind
define internal i64 @asLong(%StringRef %src) #3 {
  %src.addr = alloca %StringRef
  store %StringRef %src, %StringRef* %src.addr
  br label %code

code:                                             ; preds = %0
  %1 = call i8* @cStr(%StringRef* %src.addr)
  %2 = call i64 @atoll(i8* %1)
  ret i64 %2
}

declare i64 @atoll(i8*)

; Function Attrs: inlinehint nounwind
define internal double @asDouble(%StringRef %src) #3 {
  %src.addr = alloca %StringRef
  store %StringRef %src, %StringRef* %src.addr
  br label %code

code:                                             ; preds = %0
  %1 = call i8* @cStr(%StringRef* %src.addr)
  %2 = call double @atof(i8* %1)
  ret double %2
}

declare double @atof(i8*)

; Function Attrs: inlinehint nounwind
define internal void @reportError(%ExternalErrorReporter* %this, %Location %loc, %String* %msg) #3 {
  %this.addr = alloca %ExternalErrorReporter*
  store %ExternalErrorReporter* %this, %ExternalErrorReporter** %this.addr
  %loc.addr = alloca %Location
  store %Location %loc, %Location* %loc.addr
  %msg.addr = alloca %String*
  store %String* %msg, %String** %msg.addr
  %"$tmpC" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %msg.addr
  call void @asStringRef(%StringRef* %"$tmpC", %String* %1)
  %2 = load %StringRef* %"$tmpC"
  call void @comp_parser_reportError(%Location* %loc.addr, %StringRef %2)
  ret void
}

declare void @comp_parser_reportError(%Location*, %StringRef)

; Function Attrs: inlinehint nounwind
define internal void @asStringRef(%StringRef* sret %_result, %String* %this) #3 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %_result.addr
  %2 = load %String** %this.addr
  %3 = getelementptr inbounds %String* %2, i32 0, i32 0
  %4 = load %"RawPtr[Char/rtct]"* %3
  %5 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %4)
  %6 = load %String** %this.addr
  %7 = getelementptr inbounds %String* %6, i32 0, i32 1
  %8 = load %"RawPtr[Char/rtct]"* %7
  %9 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %8)
  call void @ctor88(%StringRef* %1, i8* %5, i8* %9)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i8* @bytePtr(%"RawPtr[Char/rtct]" %this) #3 {
  %this.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %this, %"RawPtr[Char/rtct]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[Char/rtct]"* %this.addr, i32 0, i32 0
  %2 = load i8** %1
  ret i8* %2
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor153(%ExternalErrorReporter* %dest) #2 {
  %dest.addr = alloca %ExternalErrorReporter*
  store %ExternalErrorReporter* %dest, %ExternalErrorReporter** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=154"(%ExternalErrorReporter* %dest, %ExternalErrorReporter* %other) #2 {
  %dest.addr = alloca %ExternalErrorReporter*
  store %ExternalErrorReporter* %dest, %ExternalErrorReporter** %dest.addr
  %other.addr = alloca %ExternalErrorReporter*
  store %ExternalErrorReporter* %other, %ExternalErrorReporter** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==155"(%ExternalErrorReporter* %this, %ExternalErrorReporter* %other) #2 {
  %this.addr = alloca %ExternalErrorReporter*
  store %ExternalErrorReporter* %this, %ExternalErrorReporter** %this.addr
  %other.addr = alloca %ExternalErrorReporter*
  store %ExternalErrorReporter* %other, %ExternalErrorReporter** %other.addr
  br label %code

code:                                             ; preds = %0
  ret i1 true
}

; Function Attrs: inlinehint nounwind
define internal void @ctor156(%_CharSource* %this, %FileRange* %fileRange, %StringRef %code) #3 {
  %this.addr = alloca %_CharSource*
  store %_CharSource* %this, %_CharSource** %this.addr
  %fileRange.addr = alloca %FileRange*
  store %FileRange* %fileRange, %FileRange** %fileRange.addr
  %code.addr = alloca %StringRef
  store %StringRef %code, %StringRef* %code.addr
  br label %code1

code1:                                            ; preds = %0
  %1 = load %_CharSource** %this.addr
  %2 = getelementptr inbounds %_CharSource* %1, i32 0, i32 0
  store %FileRange* null, %FileRange** %2
  %3 = load %FileRange** %fileRange.addr
  %4 = load %_CharSource** %this.addr
  %5 = getelementptr inbounds %_CharSource* %4, i32 0, i32 0
  store %FileRange* %3, %FileRange** %5
  %6 = load %_CharSource** %this.addr
  %7 = getelementptr inbounds %_CharSource* %6, i32 0, i32 1
  %8 = load %StringRef* %code.addr
  call void @ctor87(%StringRef* %7, %StringRef %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor157(%_CharSource* %dest) #2 {
  %dest.addr = alloca %_CharSource*
  store %_CharSource* %dest, %_CharSource** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=158"(%_CharSource* %dest, %_CharSource* %other) #2 {
  %dest.addr = alloca %_CharSource*
  store %_CharSource* %dest, %_CharSource** %dest.addr
  %other.addr = alloca %_CharSource*
  store %_CharSource* %other, %_CharSource** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource** %other.addr
  %2 = getelementptr inbounds %_CharSource* %1, i32 0, i32 0
  %3 = load %FileRange** %2
  %4 = load %_CharSource** %dest.addr
  %5 = getelementptr inbounds %_CharSource* %4, i32 0, i32 0
  store %FileRange* %3, %FileRange** %5
  %6 = load %_CharSource** %dest.addr
  %7 = getelementptr inbounds %_CharSource* %6, i32 0, i32 1
  %8 = load %_CharSource** %other.addr
  %9 = getelementptr inbounds %_CharSource* %8, i32 0, i32 1
  %10 = load %StringRef* %9
  %11 = call %StringRef* @"="(%StringRef* %7, %StringRef %10)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==159"(%_CharSource* %this, %_CharSource* %other) #2 {
  %this.addr = alloca %_CharSource*
  store %_CharSource* %this, %_CharSource** %this.addr
  %other.addr = alloca %_CharSource*
  store %_CharSource* %other, %_CharSource** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource** %this.addr
  %2 = getelementptr inbounds %_CharSource* %1, i32 0, i32 0
  %3 = load %FileRange** %2
  %4 = bitcast %FileRange* %3 to i8*
  %5 = load %_CharSource** %other.addr
  %6 = getelementptr inbounds %_CharSource* %5, i32 0, i32 0
  %7 = load %FileRange** %6
  %8 = bitcast %FileRange* %7 to i8*
  %9 = call i1 @implOpRefEQ(i8* %4, i8* %8)
  br i1 %9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %10 = load %_CharSource** %this.addr
  %11 = getelementptr inbounds %_CharSource* %10, i32 0, i32 1
  %12 = load %_CharSource** %other.addr
  %13 = getelementptr inbounds %_CharSource* %12, i32 0, i32 1
  %14 = load %StringRef* %13
  %15 = call i1 @"==95"(%StringRef* %11, %StringRef %14)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %15, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty160(%_CharSource* %this) #3 {
  %this.addr = alloca %_CharSource*
  store %_CharSource* %this, %_CharSource** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource** %this.addr
  %2 = getelementptr inbounds %_CharSource* %1, i32 0, i32 0
  %3 = load %FileRange** %2
  %4 = bitcast %FileRange* %3 to i8*
  %5 = call i1 @implOpRefNE(i8* %4, i8* null)
  br i1 %5, label %cond_alt1, label %cond_alt2

cond_alt1:                                        ; preds = %code
  %6 = load %_CharSource** %this.addr
  %7 = getelementptr inbounds %_CharSource* %6, i32 0, i32 0
  %8 = load %FileRange** %7
  %9 = call i1 @isEmpty161(%FileRange* %8)
  br label %cond_end

cond_alt2:                                        ; preds = %code
  %10 = load %_CharSource** %this.addr
  %11 = getelementptr inbounds %_CharSource* %10, i32 0, i32 1
  %12 = call i1 @isEmpty(%StringRef* %11)
  br label %cond_end

cond_end:                                         ; preds = %cond_alt2, %cond_alt1
  %cond = phi i1 [ %9, %cond_alt1 ], [ %12, %cond_alt2 ]
  ret i1 %cond
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty161(%FileRange* %s) #3 {
  %s.addr = alloca %FileRange*
  store %FileRange* %s, %FileRange** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange** %s.addr
  %2 = getelementptr inbounds %FileRange* %1, i32 0, i32 1
  %3 = load i1* %2
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal i8 @front162(%_CharSource* %this) #3 {
  %this.addr = alloca %_CharSource*
  store %_CharSource* %this, %_CharSource** %this.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %_CharSource** %this.addr
  %2 = getelementptr inbounds %_CharSource* %1, i32 0, i32 0
  %3 = load %FileRange** %2
  %4 = bitcast %FileRange* %3 to i8*
  %5 = call i1 @implOpRefNE(i8* %4, i8* null)
  br i1 %5, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %6 = load %_CharSource** %this.addr
  %7 = getelementptr inbounds %_CharSource* %6, i32 0, i32 0
  %8 = load %FileRange** %7
  %9 = call i8 @front163(%FileRange* %8)
  ret i8 %9

if_else:                                          ; preds = %if_block
  %10 = load %_CharSource** %this.addr
  %11 = getelementptr inbounds %_CharSource* %10, i32 0, i32 1
  %12 = call i8* @front(%StringRef* %11)
  %13 = load i8* %12
  ret i8 %13

if_end:                                           ; preds = %dumy_block1, %dumy_block
  unreachable

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block1:                                      ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i8 @front163(%FileRange* %s) #3 {
  %s.addr = alloca %FileRange*
  store %FileRange* %s, %FileRange** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange** %s.addr
  %2 = getelementptr inbounds %FileRange* %1, i32 0, i32 2
  %3 = load i8* %2
  ret i8 %3
}

; Function Attrs: inlinehint nounwind
define internal void @popFront164(%_CharSource* %this) #3 {
  %this.addr = alloca %_CharSource*
  store %_CharSource* %this, %_CharSource** %this.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %_CharSource** %this.addr
  %2 = getelementptr inbounds %_CharSource* %1, i32 0, i32 0
  %3 = load %FileRange** %2
  %4 = bitcast %FileRange* %3 to i8*
  %5 = call i1 @implOpRefNE(i8* %4, i8* null)
  br i1 %5, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %6 = load %_CharSource** %this.addr
  %7 = getelementptr inbounds %_CharSource* %6, i32 0, i32 0
  %8 = load %FileRange** %7
  call void @popFront165(%FileRange* %8)
  br label %if_end

if_else:                                          ; preds = %if_block
  %9 = load %_CharSource** %this.addr
  %10 = getelementptr inbounds %_CharSource* %9, i32 0, i32 1
  call void @popFront(%StringRef* %10)
  br label %if_end

if_end:                                           ; preds = %if_else, %if_then
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popFront165(%FileRange* %s) #3 {
  %s.addr = alloca %FileRange*
  store %FileRange* %s, %FileRange** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange** %s.addr
  %2 = getelementptr inbounds %FileRange* %1, i32 0, i32 0
  %3 = load %File** %2
  %4 = call i8 @readChar(%File* %3)
  %5 = load %FileRange** %s.addr
  %6 = getelementptr inbounds %FileRange* %5, i32 0, i32 2
  store i8 %4, i8* %6
  br label %if_block

if_block:                                         ; preds = %code
  %7 = load %FileRange** %s.addr
  %8 = getelementptr inbounds %FileRange* %7, i32 0, i32 0
  %9 = load %File** %8
  %10 = call i1 @isEof(%File* %9)
  br i1 %10, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %11 = load %FileRange** %s.addr
  %12 = getelementptr inbounds %FileRange* %11, i32 0, i32 1
  store i1 true, i1* %12
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i8 @readChar(%File* %this) #3 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %File** %this.addr
  %2 = getelementptr inbounds %File* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = call i32 @fgetc(i8* %3)
  %5 = trunc i32 %4 to i8
  store i8 %5, i8* %tmp.v
  %6 = load i8* %tmp.v
  ret i8 %6
}

declare i32 @fgetc(i8*)

; Function Attrs: inlinehint nounwind
define internal i1 @isEof(%File* %this) #3 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File** %this.addr
  %2 = getelementptr inbounds %File* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = call i32 @feof(i8* %3)
  %5 = call i1 @"!=166"(i32 0, i32 %4)
  ret i1 %5
}

; Function Attrs: inlinehint nounwind
define internal i1 @"!=166"(i32 %x, i32 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn30(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn30(i32 %4, i32 %5)
  %7 = icmp ne i32 %3, %6
  ret i1 %7
}

declare i32 @feof(i8*)

; Function Attrs: inlinehint nounwind
define internal void @ctor167(%ParserContext* %this, %StringRef %filename, %StringRef %code, %Location %loc, i1 %scannerOnly) #3 {
  %this.addr = alloca %ParserContext*
  store %ParserContext* %this, %ParserContext** %this.addr
  %filename.addr = alloca %StringRef
  store %StringRef %filename, %StringRef* %filename.addr
  %code.addr = alloca %StringRef
  store %StringRef %code, %StringRef* %code.addr
  %loc.addr = alloca %Location
  store %Location %loc, %Location* %loc.addr
  %scannerOnly.addr = alloca i1
  store i1 %scannerOnly, i1* %scannerOnly.addr
  %reporter = alloca %ExternalErrorReporter
  %tmp.StringRef = alloca %StringRef
  %"$tmpC" = alloca %FileRange
  %tmp.StringRef2 = alloca %StringRef
  %"$tmpC6" = alloca %String
  %tmp.StringRef7 = alloca %StringRef
  br label %code1

code1:                                            ; preds = %0
  %1 = load %ParserContext** %this.addr
  %2 = getelementptr inbounds %ParserContext* %1, i32 0, i32 0
  call void @ctor168(%File* %2)
  %3 = load %ParserContext** %this.addr
  %4 = getelementptr inbounds %ParserContext* %3, i32 0, i32 1
  call void @ctor169(%FileRange* %4)
  %5 = load %ParserContext** %this.addr
  %6 = getelementptr inbounds %ParserContext* %5, i32 0, i32 2
  call void @ctor170(%_CharSource* %6)
  %7 = load %ParserContext** %this.addr
  %8 = getelementptr inbounds %ParserContext* %7, i32 0, i32 4
  call void @ctor171(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %ParserContext** %this.addr
  %10 = getelementptr inbounds %ParserContext* %9, i32 0, i32 5
  call void @ctor188(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10)
  br label %if_block

if_block:                                         ; preds = %code1
  %11 = call i1 @isEmpty(%StringRef* %code.addr)
  br i1 %11, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %12 = load %ParserContext** %this.addr
  %13 = getelementptr inbounds %ParserContext* %12, i32 0, i32 0
  %14 = load %StringRef* %filename.addr
  %15 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %16 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([2 x i8]* @str191, i32 0, i32 0), i8** %15
  store i8* getelementptr inbounds ([2 x i8]* @str191, i32 0, i32 1), i8** %16
  %17 = load %StringRef* %tmp.StringRef
  call void @ctor190(%File* %13, %StringRef %14, %StringRef %17)
  %18 = load %ParserContext** %this.addr
  %19 = getelementptr inbounds %ParserContext* %18, i32 0, i32 1
  %20 = load %ParserContext** %this.addr
  %21 = getelementptr inbounds %ParserContext* %20, i32 0, i32 0
  call void @all(%FileRange* %"$tmpC", %File* %21)
  call void @ctor192(%FileRange* %19, %FileRange* %"$tmpC")
  %22 = load %ParserContext** %this.addr
  %23 = getelementptr inbounds %ParserContext* %22, i32 0, i32 2
  %24 = load %ParserContext** %this.addr
  %25 = getelementptr inbounds %ParserContext* %24, i32 0, i32 1
  %26 = getelementptr inbounds %StringRef* %tmp.StringRef2, i32 0, i32 0
  %27 = getelementptr inbounds %StringRef* %tmp.StringRef2, i32 0, i32 1
  store i8* getelementptr inbounds ([1 x i8]* @str195, i32 0, i32 0), i8** %26
  store i8* getelementptr inbounds ([1 x i8]* @str195, i32 0, i32 0), i8** %27
  %28 = load %StringRef* %tmp.StringRef2
  call void @ctor156(%_CharSource* %23, %FileRange* %25, %StringRef %28)
  br label %if_block3

if_else:                                          ; preds = %if_block
  %29 = load %ParserContext** %this.addr
  %30 = getelementptr inbounds %ParserContext* %29, i32 0, i32 0
  call void @ctor168(%File* %30)
  %31 = load %ParserContext** %this.addr
  %32 = getelementptr inbounds %ParserContext* %31, i32 0, i32 1
  call void @ctor169(%FileRange* %32)
  %33 = load %ParserContext** %this.addr
  %34 = getelementptr inbounds %ParserContext* %33, i32 0, i32 2
  %35 = load %StringRef* %code.addr
  call void @ctor156(%_CharSource* %34, %FileRange* null, %StringRef %35)
  br label %if_end

if_end:                                           ; preds = %if_else, %if_end5
  %36 = load %ParserContext** %this.addr
  %37 = getelementptr inbounds %ParserContext* %36, i32 0, i32 3
  %38 = load %ParserContext** %this.addr
  %39 = getelementptr inbounds %ParserContext* %38, i32 0, i32 2
  %40 = load %_CharSource* %39
  %41 = load %ExternalErrorReporter* %reporter
  call void @ctor216(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %37, %_CharSource %40, %ExternalErrorReporter %41, %Location* %loc.addr)
  br label %if_block8

if_block3:                                        ; preds = %if_then
  %42 = load %ParserContext** %this.addr
  %43 = getelementptr inbounds %ParserContext* %42, i32 0, i32 0
  %44 = call i1 @isOpen(%File* %43)
  %45 = xor i1 true, %44
  br i1 %45, label %if_then4, label %if_end5

if_then4:                                         ; preds = %if_block3
  %46 = load %Location* %loc.addr
  %47 = getelementptr inbounds %StringRef* %tmp.StringRef7, i32 0, i32 0
  %48 = getelementptr inbounds %StringRef* %tmp.StringRef7, i32 0, i32 1
  store i8* getelementptr inbounds ([19 x i8]* @str215, i32 0, i32 0), i8** %47
  store i8* getelementptr inbounds ([19 x i8]* @str215, i32 0, i32 18), i8** %48
  %49 = load %StringRef* %tmp.StringRef7
  %50 = load %StringRef* %filename.addr
  call void @toString(%String* %"$tmpC6", %StringRef %49, %StringRef %50)
  call void @reportError(%ExternalErrorReporter* %reporter, %Location %46, %String* %"$tmpC6")
  call void @dtor214(%String* %"$tmpC6")
  br label %if_end5

if_end5:                                          ; preds = %if_then4, %if_block3
  br label %if_end

if_block8:                                        ; preds = %if_end
  %51 = load i1* %scannerOnly.addr
  %52 = xor i1 true, %51
  br i1 %52, label %if_then9, label %if_end10

if_then9:                                         ; preds = %if_block8
  %53 = load %ParserContext** %this.addr
  %54 = getelementptr inbounds %ParserContext* %53, i32 0, i32 4
  %55 = load %ParserContext** %this.addr
  %56 = getelementptr inbounds %ParserContext* %55, i32 0, i32 3
  %57 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %56
  %58 = load %ExternalErrorReporter* %reporter
  call void @ctor234(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %54, %"SparrowScanner[_CharSource, ExternalErrorReporter]" %57, %ExternalErrorReporter %58)
  %59 = load %ParserContext** %this.addr
  %60 = getelementptr inbounds %ParserContext* %59, i32 0, i32 5
  %61 = load %ParserContext** %this.addr
  %62 = getelementptr inbounds %ParserContext* %61, i32 0, i32 4
  %63 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %62
  %64 = load %ExternalErrorReporter* %reporter
  call void @ctor441(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %60, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" %63, %ExternalErrorReporter %64)
  br label %if_end10

if_end10:                                         ; preds = %if_then9, %if_block8
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor168(%File* %this) #3 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File** %this.addr
  %2 = getelementptr inbounds %File* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = load %File** %this.addr
  %4 = getelementptr inbounds %File* %3, i32 0, i32 0
  store i8* null, i8** %4
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor169(%FileRange* %this) #2 {
  %this.addr = alloca %FileRange*
  store %FileRange* %this, %FileRange** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange** %this.addr
  %2 = getelementptr inbounds %FileRange* %1, i32 0, i32 0
  store %File* null, %File** %2
  %3 = load %FileRange** %this.addr
  %4 = getelementptr inbounds %FileRange* %3, i32 0, i32 1
  store i1 false, i1* %4
  %5 = load %FileRange** %this.addr
  %6 = getelementptr inbounds %FileRange* %5, i32 0, i32 2
  store i8 0, i8* %6
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor170(%_CharSource* %this) #2 {
  %this.addr = alloca %_CharSource*
  store %_CharSource* %this, %_CharSource** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource** %this.addr
  %2 = getelementptr inbounds %_CharSource* %1, i32 0, i32 0
  store %FileRange* null, %FileRange** %2
  %3 = load %_CharSource** %this.addr
  %4 = getelementptr inbounds %_CharSource* %3, i32 0, i32 1
  call void @ctor82(%StringRef* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor171(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this) #2 {
  %this.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @ctor172(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %2)
  %3 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 2
  call void @ctor186(%"Vector[UInt/rtct]"* %4)
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 3
  call void @ctor179(%"Vector[Char/rtct]"* %6)
  %7 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %8 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 4
  call void @ctor182(%TokenType* %8)
  %9 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %10 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %9, i32 0, i32 5
  store i32 0, i32* %10
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor172(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this) #2 {
  %this.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 0
  call void @ctor173(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %2)
  %3 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %3, i32 0, i32 1
  call void @ctor184(%"Vector[Token]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor173(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #2 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @ctor174(%Location* %2)
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 0, i32 1
  call void @ctor177(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  %5 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %5, i32 0, i32 2
  call void @ctor181(%Token* %6)
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %8 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 0, i32 3
  store i1 false, i1* %8
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor174(%Location* %this) #2 {
  %this.addr = alloca %Location*
  store %Location* %this, %Location** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %this.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 0
  call void @ctor175(%SourceCode* %2)
  %3 = load %Location** %this.addr
  %4 = getelementptr inbounds %Location* %3, i32 0, i32 1
  call void @ctor176(%LineCol* %4)
  %5 = load %Location** %this.addr
  %6 = getelementptr inbounds %Location* %5, i32 0, i32 2
  call void @ctor176(%LineCol* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor175(%SourceCode* %this) #2 {
  %this.addr = alloca %SourceCode*
  store %SourceCode* %this, %SourceCode** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %SourceCode** %this.addr
  %2 = getelementptr inbounds %SourceCode* %1, i32 0, i32 0
  store i8* null, i8** %2
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor176(%LineCol* %this) #2 {
  %this.addr = alloca %LineCol*
  store %LineCol* %this, %LineCol** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LineCol** %this.addr
  %2 = getelementptr inbounds %LineCol* %1, i32 0, i32 0
  store i32 0, i32* %2
  %3 = load %LineCol** %this.addr
  %4 = getelementptr inbounds %LineCol* %3, i32 0, i32 1
  store i32 0, i32* %4
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor177(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this) #2 {
  %this.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  call void @ctor178(%"RangeWithLookahead[_CharSource]"* %2)
  %3 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %4 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %3, i32 0, i32 1
  store %Location* null, %Location** %4
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor178(%"RangeWithLookahead[_CharSource]"* %this) #2 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 0
  call void @ctor170(%_CharSource* %2)
  %3 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %3, i32 0, i32 1
  call void @ctor179(%"Vector[Char/rtct]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor179(%"Vector[Char/rtct]"* %this) #2 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 0
  call void @ctor180(%"RawPtr[Char/rtct]"* %2)
  %3 = load %"Vector[Char/rtct]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Char/rtct]"* %3, i32 0, i32 1
  call void @ctor180(%"RawPtr[Char/rtct]"* %4)
  %5 = load %"Vector[Char/rtct]"** %this.addr
  %6 = getelementptr inbounds %"Vector[Char/rtct]"* %5, i32 0, i32 2
  call void @ctor180(%"RawPtr[Char/rtct]"* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor180(%"RawPtr[Char/rtct]"* %this) #3 {
  %this.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %this, %"RawPtr[Char/rtct]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[Char/rtct]"* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = load %"RawPtr[Char/rtct]"** %this.addr
  %4 = getelementptr inbounds %"RawPtr[Char/rtct]"* %3, i32 0, i32 0
  store i8* null, i8** %4
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor181(%Token* %this) #2 {
  %this.addr = alloca %Token*
  store %Token* %this, %Token** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token** %this.addr
  %2 = getelementptr inbounds %Token* %1, i32 0, i32 0
  call void @ctor174(%Location* %2)
  %3 = load %Token** %this.addr
  %4 = getelementptr inbounds %Token* %3, i32 0, i32 1
  call void @ctor182(%TokenType* %4)
  %5 = load %Token** %this.addr
  %6 = getelementptr inbounds %Token* %5, i32 0, i32 2
  call void @ctor183(%String* %6)
  %7 = load %Token** %this.addr
  %8 = getelementptr inbounds %Token* %7, i32 0, i32 3
  store i64 0, i64* %8
  %9 = load %Token** %this.addr
  %10 = getelementptr inbounds %Token* %9, i32 0, i32 4
  store double 0.000000e+00, double* %10
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor182(%TokenType* %this) #2 {
  %this.addr = alloca %TokenType*
  store %TokenType* %this, %TokenType** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %TokenType** %this.addr
  %2 = getelementptr inbounds %TokenType* %1, i32 0, i32 0
  store i32 0, i32* %2
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor183(%String* %this) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = getelementptr inbounds %String* %1, i32 0, i32 0
  call void @ctor180(%"RawPtr[Char/rtct]"* %2)
  %3 = load %String** %this.addr
  %4 = getelementptr inbounds %String* %3, i32 0, i32 1
  call void @ctor180(%"RawPtr[Char/rtct]"* %4)
  %5 = load %String** %this.addr
  %6 = getelementptr inbounds %String* %5, i32 0, i32 2
  call void @ctor180(%"RawPtr[Char/rtct]"* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor184(%"Vector[Token]"* %this) #2 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 0
  call void @ctor185(%"RawPtr[Token]"* %2)
  %3 = load %"Vector[Token]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Token]"* %3, i32 0, i32 1
  call void @ctor185(%"RawPtr[Token]"* %4)
  %5 = load %"Vector[Token]"** %this.addr
  %6 = getelementptr inbounds %"Vector[Token]"* %5, i32 0, i32 2
  call void @ctor185(%"RawPtr[Token]"* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor185(%"RawPtr[Token]"* %this) #3 {
  %this.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %this, %"RawPtr[Token]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[Token]"* %1, i32 0, i32 0
  store %Token* null, %Token** %2
  %3 = load %"RawPtr[Token]"** %this.addr
  %4 = getelementptr inbounds %"RawPtr[Token]"* %3, i32 0, i32 0
  store %Token* null, %Token** %4
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor186(%"Vector[UInt/rtct]"* %this) #2 {
  %this.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 0
  call void @ctor187(%"RawPtr[UInt/rtct]"* %2)
  %3 = load %"Vector[UInt/rtct]"** %this.addr
  %4 = getelementptr inbounds %"Vector[UInt/rtct]"* %3, i32 0, i32 1
  call void @ctor187(%"RawPtr[UInt/rtct]"* %4)
  %5 = load %"Vector[UInt/rtct]"** %this.addr
  %6 = getelementptr inbounds %"Vector[UInt/rtct]"* %5, i32 0, i32 2
  call void @ctor187(%"RawPtr[UInt/rtct]"* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor187(%"RawPtr[UInt/rtct]"* %this) #3 {
  %this.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %this, %"RawPtr[UInt/rtct]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %1, i32 0, i32 0
  store i32* null, i32** %2
  %3 = load %"RawPtr[UInt/rtct]"** %this.addr
  %4 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %3, i32 0, i32 0
  store i32* null, i32** %4
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor188(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #2 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @ctor189(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2)
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 1
  call void @ctor181(%Token* %4)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 2
  store i1 false, i1* %6
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor189(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this) #2 {
  %this.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1, i32 0, i32 0
  call void @ctor171(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %3, i32 0, i32 1
  call void @ctor184(%"Vector[Token]"* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor190(%File* %this, %StringRef %filename, %StringRef %mode) #3 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  %filename.addr = alloca %StringRef
  store %StringRef %filename, %StringRef* %filename.addr
  %mode.addr = alloca %StringRef
  store %StringRef %mode, %StringRef* %mode.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File** %this.addr
  %2 = getelementptr inbounds %File* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = call i8* @cStr(%StringRef* %filename.addr)
  %4 = call i8* @cStr(%StringRef* %mode.addr)
  %5 = call i8* @fopen(i8* %3, i8* %4)
  %6 = load %File** %this.addr
  %7 = getelementptr inbounds %File* %6, i32 0, i32 0
  store i8* %5, i8** %7
  ret void
}

declare i8* @fopen(i8*, i8*)

; Function Attrs: alwaysinline nounwind
define internal void @ctor192(%FileRange* %this, %FileRange* %other) #2 {
  %this.addr = alloca %FileRange*
  store %FileRange* %this, %FileRange** %this.addr
  %other.addr = alloca %FileRange*
  store %FileRange* %other, %FileRange** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange** %other.addr
  %2 = getelementptr inbounds %FileRange* %1, i32 0, i32 0
  %3 = load %File** %2
  %4 = load %FileRange** %this.addr
  %5 = getelementptr inbounds %FileRange* %4, i32 0, i32 0
  store %File* %3, %File** %5
  %6 = load %FileRange** %other.addr
  %7 = getelementptr inbounds %FileRange* %6, i32 0, i32 1
  %8 = load i1* %7
  %9 = load %FileRange** %this.addr
  %10 = getelementptr inbounds %FileRange* %9, i32 0, i32 1
  store i1 %8, i1* %10
  %11 = load %FileRange** %other.addr
  %12 = getelementptr inbounds %FileRange* %11, i32 0, i32 2
  %13 = load i8* %12
  %14 = load %FileRange** %this.addr
  %15 = getelementptr inbounds %FileRange* %14, i32 0, i32 2
  store i8 %13, i8* %15
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @all(%FileRange* sret %_result, %File* %this) #3 {
  %_result.addr = alloca %FileRange*
  store %FileRange* %_result, %FileRange** %_result.addr
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange** %_result.addr
  %2 = load %File** %this.addr
  call void @ctor193(%FileRange* %1, %File* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor193(%FileRange* %this, %File* %file) #3 {
  %this.addr = alloca %FileRange*
  store %FileRange* %this, %FileRange** %this.addr
  %file.addr = alloca %File*
  store %File* %file, %File** %file.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange** %this.addr
  %2 = getelementptr inbounds %FileRange* %1, i32 0, i32 0
  store %File* null, %File** %2
  %3 = load %FileRange** %this.addr
  %4 = getelementptr inbounds %FileRange* %3, i32 0, i32 1
  store i1 false, i1* %4
  %5 = load %File** %file.addr
  %6 = load %FileRange** %this.addr
  %7 = getelementptr inbounds %FileRange* %6, i32 0, i32 0
  store %File* %5, %File** %7
  %8 = load %FileRange** %this.addr
  %9 = getelementptr inbounds %FileRange* %8, i32 0, i32 1
  store i1 true, i1* %9
  %10 = load %FileRange** %this.addr
  %11 = getelementptr inbounds %FileRange* %10, i32 0, i32 2
  store i8 0, i8* %11
  br label %if_block

if_block:                                         ; preds = %code
  %12 = load %FileRange** %this.addr
  %13 = getelementptr inbounds %FileRange* %12, i32 0, i32 0
  %14 = load %File** %13
  %15 = call i1 @isEof(%File* %14)
  %16 = xor i1 true, %15
  br i1 %16, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %17 = load %FileRange** %this.addr
  %18 = getelementptr inbounds %FileRange* %17, i32 0, i32 0
  %19 = load %File** %18
  %20 = call i8 @readChar(%File* %19)
  %21 = load %FileRange** %this.addr
  %22 = getelementptr inbounds %FileRange* %21, i32 0, i32 2
  store i8 %20, i8* %22
  %23 = load %FileRange** %this.addr
  %24 = getelementptr inbounds %FileRange* %23, i32 0, i32 1
  store i1 false, i1* %24
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor194(%FileRange* %dest) #2 {
  %dest.addr = alloca %FileRange*
  store %FileRange* %dest, %FileRange** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isOpen(%File* %this) #3 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File** %this.addr
  %2 = getelementptr inbounds %File* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = call i1 @implOpRefNE(i8* %3, i8* null)
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal void @toString(%String* sret %_result, %StringRef %a1, %StringRef %a2) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %a1.addr = alloca %StringRef
  store %StringRef %a1, %StringRef* %a1.addr
  %a2.addr = alloca %StringRef
  store %StringRef %a2, %StringRef* %a2.addr
  %s = alloca %StringOutputStream
  br label %code

code:                                             ; preds = %0
  call void @ctor196(%StringOutputStream* %s)
  %1 = call %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %a1.addr)
  %2 = call %StringOutputStream* @"<<"(%StringOutputStream* %1, %StringRef* %a2.addr)
  %3 = load %String** %_result.addr
  %4 = getelementptr inbounds %StringOutputStream* %s, i32 0, i32 0
  call void @ctor209(%String* %3, %String* %4)
  call void @dtor213(%StringOutputStream* %s)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor213(%StringOutputStream* %s)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor196(%StringOutputStream* %this) #2 {
  %this.addr = alloca %StringOutputStream*
  store %StringOutputStream* %this, %StringOutputStream** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %this.addr
  %2 = getelementptr inbounds %StringOutputStream* %1, i32 0, i32 0
  call void @ctor183(%String* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %x) #3 {
  %s.addr = alloca %StringOutputStream*
  store %StringOutputStream* %s, %StringOutputStream** %s.addr
  %x.addr = alloca %StringRef*
  store %StringRef* %x, %StringRef** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %s.addr
  %2 = load %StringRef** %x.addr
  %3 = load %StringRef* %2
  call void @"<<<197"(%StringOutputStream* %1, %StringRef %3)
  %4 = load %StringOutputStream** %s.addr
  ret %StringOutputStream* %4
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<197"(%StringOutputStream* %this, %StringRef %s) #2 {
  %this.addr = alloca %StringOutputStream*
  store %StringOutputStream* %this, %StringOutputStream** %this.addr
  %s.addr = alloca %StringRef
  store %StringRef %s, %StringRef* %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %this.addr
  %2 = getelementptr inbounds %StringOutputStream* %1, i32 0, i32 0
  %3 = load %StringRef* %s.addr
  call void @append(%String* %2, %StringRef %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @append(%String* %this, %StringRef %range) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %range.addr = alloca %StringRef
  store %StringRef %range, %StringRef* %range.addr
  %tmp.v = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = load %StringRef* %range.addr
  %3 = load %String** %this.addr
  %4 = getelementptr inbounds %String* %3, i32 0, i32 1
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %5)
  %7 = load %String** %this.addr
  %8 = getelementptr inbounds %String* %7, i32 0, i32 1
  %9 = load %"RawPtr[Char/rtct]"* %8
  %10 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %9)
  call void @ctor88(%StringRef* %tmp.v, i8* %6, i8* %10)
  %11 = load %StringRef* %tmp.v
  call void @insertBefore(%String* %1, %StringRef %2, %StringRef %11)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @insertBefore(%String* %this, %StringRef %range, %StringRef %pos) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %range.addr = alloca %StringRef
  store %StringRef %range, %StringRef* %range.addr
  %pos.addr = alloca %StringRef
  store %StringRef %pos, %StringRef* %pos.addr
  %n = alloca i64
  %index = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %p = alloca %"RawPtr[Char/rtct]"
  %q = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  %"$tmpC1" = alloca %"RawPtr[Char/rtct]"
  %tmp.v2 = alloca i64
  %"$tmpC3" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC4" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC9" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC10" = alloca %"RawPtr[Char/rtct]"
  %tmp.v11 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = call i64 @size(%StringRef* %range.addr)
  store i64 %1, i64* %n
  %2 = load %StringRef* %pos.addr
  call void @_frontPtr(%"RawPtr[Char/rtct]"* %"$tmpC", %StringRef %2)
  %3 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  %4 = load %String** %this.addr
  %5 = getelementptr inbounds %String* %4, i32 0, i32 0
  %6 = load %"RawPtr[Char/rtct]"* %5
  %7 = call i64 @diff(%"RawPtr[Char/rtct]" %3, %"RawPtr[Char/rtct]" %6)
  store i64 %7, i64* %index
  %8 = load %String** %this.addr
  %9 = load %String** %this.addr
  %10 = call i64 @size204(%String* %9)
  %11 = load i64* %n
  %12 = call i64 @"+41"(i64 %10, i64 %11)
  call void @reserve(%String* %8, i64 %12)
  %13 = load %String** %this.addr
  %14 = getelementptr inbounds %String* %13, i32 0, i32 1
  %15 = load %"RawPtr[Char/rtct]"* %14
  call void @advance(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %15, i64 -1)
  %16 = load %String** %this.addr
  %17 = getelementptr inbounds %String* %16, i32 0, i32 0
  %18 = load %"RawPtr[Char/rtct]"* %17
  %19 = load i64* %index
  store i64 1, i64* %tmp.v
  %20 = load i64* %tmp.v
  %21 = call i64 @-63(i64 %19, i64 %20)
  call void @advance(%"RawPtr[Char/rtct]"* %q, %"RawPtr[Char/rtct]" %18, i64 %21)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %22 = load %"RawPtr[Char/rtct]"* %q
  %23 = call i1 @"==207"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %22)
  %24 = xor i1 true, %23
  br i1 %24, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %25 = load %"RawPtr[Char/rtct]"* %p
  %26 = call i8* @value(%"RawPtr[Char/rtct]" %25)
  %27 = load i8* %26
  %28 = load %"RawPtr[Char/rtct]"* %p
  %29 = load i64* %n
  store i64 %29, i64* %tmp.v2
  %30 = load i64* %tmp.v2
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC1", %"RawPtr[Char/rtct]" %28, i64 %30)
  %31 = load %"RawPtr[Char/rtct]"* %"$tmpC1"
  %32 = call i8* @value(%"RawPtr[Char/rtct]" %31)
  store i8 %27, i8* %32
  %33 = load %"RawPtr[Char/rtct]"* %p
  %34 = call i8* @value(%"RawPtr[Char/rtct]" %33)
  %35 = load i8* %34
  br label %while_step

while_step:                                       ; preds = %while_body
  %36 = load %"RawPtr[Char/rtct]"* %p
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC3", %"RawPtr[Char/rtct]" %36, i64 -1)
  %37 = load %"RawPtr[Char/rtct]"* %"$tmpC3"
  call void @"=205"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %37)
  br label %while_block

while_end:                                        ; preds = %while_block
  %38 = load %"RawPtr[Char/rtct]"* %p
  call void @advance208(%"RawPtr[Char/rtct]"* %"$tmpC4", %"RawPtr[Char/rtct]" %38)
  %39 = load %"RawPtr[Char/rtct]"* %"$tmpC4"
  call void @"=205"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %39)
  br label %while_block5

while_block5:                                     ; preds = %while_step7, %while_end
  %40 = call i1 @isEmpty(%StringRef* %range.addr)
  %41 = xor i1 true, %40
  br i1 %41, label %while_body6, label %while_end8

while_body6:                                      ; preds = %while_block5
  %42 = call i8* @front(%StringRef* %range.addr)
  %43 = load i8* %42
  %44 = load %"RawPtr[Char/rtct]"* %p
  %45 = call i8* @value(%"RawPtr[Char/rtct]" %44)
  store i8 %43, i8* %45
  %46 = load %"RawPtr[Char/rtct]"* %p
  call void @advance208(%"RawPtr[Char/rtct]"* %"$tmpC9", %"RawPtr[Char/rtct]" %46)
  %47 = load %"RawPtr[Char/rtct]"* %"$tmpC9"
  call void @"=205"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %47)
  call void @popFront(%StringRef* %range.addr)
  br label %while_step7

while_step7:                                      ; preds = %while_body6
  br label %while_block5

while_end8:                                       ; preds = %while_block5
  %48 = load %String** %this.addr
  %49 = getelementptr inbounds %String* %48, i32 0, i32 1
  %50 = load %String** %this.addr
  %51 = getelementptr inbounds %String* %50, i32 0, i32 1
  %52 = load %"RawPtr[Char/rtct]"* %51
  %53 = load i64* %n
  store i64 %53, i64* %tmp.v11
  %54 = load i64* %tmp.v11
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC10", %"RawPtr[Char/rtct]" %52, i64 %54)
  %55 = load %"RawPtr[Char/rtct]"* %"$tmpC10"
  call void @"=205"(%"RawPtr[Char/rtct]"* %49, %"RawPtr[Char/rtct]" %55)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i64 @diff(%"RawPtr[Char/rtct]" %this, %"RawPtr[Char/rtct]" %other) #3 {
  %this.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %this, %"RawPtr[Char/rtct]"* %this.addr
  %other.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %other, %"RawPtr[Char/rtct]"* %other.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"* %this.addr
  %2 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %1)
  %3 = load %"RawPtr[Char/rtct]"* %other.addr
  %4 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %3)
  %5 = call i64 @ptrDiff(i8* %2, i8* %4)
  store i64 1, i64* %tmp.v1
  %6 = load i64* %tmp.v1
  %7 = call i64 @"/198"(i64 %5, i64 %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal i64 @"/198"(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn45(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn45(i64 %4, i64 %5)
  %7 = sdiv i64 %3, %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal void @_frontPtr(%"RawPtr[Char/rtct]"* sret %_result, %StringRef %s) #3 {
  %_result.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %_result, %"RawPtr[Char/rtct]"** %_result.addr
  %s.addr = alloca %StringRef
  store %StringRef %s, %StringRef* %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %_result.addr
  %2 = getelementptr inbounds %StringRef* %s.addr, i32 0, i32 0
  %3 = load i8** %2
  call void @ctor199(%"RawPtr[Char/rtct]"* %1, i8* %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor199(%"RawPtr[Char/rtct]"* %this, i8* %byteRef) #3 {
  %this.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %this, %"RawPtr[Char/rtct]"** %this.addr
  %byteRef.addr = alloca i8*
  store i8* %byteRef, i8** %byteRef.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %byteRef.addr
  %2 = load %"RawPtr[Char/rtct]"** %this.addr
  %3 = getelementptr inbounds %"RawPtr[Char/rtct]"* %2, i32 0, i32 0
  store i8* %1, i8** %3
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @reserve(%String* %this, i64 %n) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %curCapacity = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  %tmp.v8 = alloca i64
  %curSize = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %tmp.v9 = alloca i64
  %"$tmpC10" = alloca %"RawPtr[Char/rtct]"
  %tmp.v11 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = call i64 @capacity(%String* %1)
  store i64 %2, i64* %curCapacity
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64* %n.addr
  %4 = load i64* %curCapacity
  %5 = call i1 @"<="(i64 %3, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64* %n.addr
  store i64 16, i64* %tmp.v
  %7 = load i64* %tmp.v
  %8 = call i1 @"<"(i64 %6, i64 %7)
  br i1 %8, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 16, i64* %tmp.v4
  %9 = load i64* %tmp.v4
  store i64 %9, i64* %n.addr
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  br label %if_block5

if_block5:                                        ; preds = %if_end3
  %10 = load i64* %n.addr
  %11 = load i64* %curCapacity
  %12 = call double @"*203"(double 1.500000e+00, i64 %11)
  %13 = call i1 @"<200"(i64 %10, double %12)
  br i1 %13, label %if_then6, label %if_end7

if_then6:                                         ; preds = %if_block5
  %14 = load i64* %curCapacity
  %15 = call double @"*203"(double 1.500000e+00, i64 %14)
  %16 = fptoui double %15 to i64
  store i64 %16, i64* %tmp.v8
  %17 = load i64* %tmp.v8
  store i64 %17, i64* %n.addr
  br label %if_end7

if_end7:                                          ; preds = %if_then6, %if_block5
  %18 = load %String** %this.addr
  %19 = call i64 @size204(%String* %18)
  store i64 %19, i64* %curSize
  %20 = load %String** %this.addr
  %21 = getelementptr inbounds %String* %20, i32 0, i32 0
  %22 = load i64* %n.addr
  call void @reallocPtr(%"RawPtr[Char/rtct]"* %21, i64 %22)
  %23 = load %String** %this.addr
  %24 = getelementptr inbounds %String* %23, i32 0, i32 1
  %25 = load %String** %this.addr
  %26 = getelementptr inbounds %String* %25, i32 0, i32 0
  %27 = load %"RawPtr[Char/rtct]"* %26
  %28 = load i64* %curSize
  store i64 %28, i64* %tmp.v9
  %29 = load i64* %tmp.v9
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %27, i64 %29)
  %30 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=205"(%"RawPtr[Char/rtct]"* %24, %"RawPtr[Char/rtct]" %30)
  %31 = load %String** %this.addr
  %32 = getelementptr inbounds %String* %31, i32 0, i32 2
  %33 = load %String** %this.addr
  %34 = getelementptr inbounds %String* %33, i32 0, i32 0
  %35 = load %"RawPtr[Char/rtct]"* %34
  %36 = load i64* %n.addr
  store i64 %36, i64* %tmp.v11
  %37 = load i64* %tmp.v11
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC10", %"RawPtr[Char/rtct]" %35, i64 %37)
  %38 = load %"RawPtr[Char/rtct]"* %"$tmpC10"
  call void @"=205"(%"RawPtr[Char/rtct]"* %32, %"RawPtr[Char/rtct]" %38)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i64 @capacity(%String* %this) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = getelementptr inbounds %String* %1, i32 0, i32 2
  %3 = load %"RawPtr[Char/rtct]"* %2
  %4 = load %String** %this.addr
  %5 = getelementptr inbounds %String* %4, i32 0, i32 0
  %6 = load %"RawPtr[Char/rtct]"* %5
  %7 = call i64 @diff(%"RawPtr[Char/rtct]" %3, %"RawPtr[Char/rtct]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal i1 @"<="(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn42(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn42(i64 %4, i64 %5)
  %7 = icmp sle i64 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i1 @"<200"(i64 %x, double %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca double
  store double %y, double* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load double* %y.addr
  %3 = call double @cmn201(i64 %1, double %2)
  %4 = load double* %y.addr
  %5 = load i64* %x.addr
  %6 = call double @cmn202(double %4, i64 %5)
  %7 = call i1 @_Double_opLT(double %3, double %6)
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal double @cmn201(i64 %x, double %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca double
  store double %y, double* %y.addr
  %tmp.v = alloca double
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = sitofp i64 %1 to double
  store double %2, double* %tmp.v
  %3 = load double* %tmp.v
  ret double %3
}

; Function Attrs: inlinehint nounwind
define internal double @cmn202(double %x, i64 %y) #3 {
  %x.addr = alloca double
  store double %x, double* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load double* %x.addr
  ret double %1
}

; Function Attrs: inlinehint nounwind
define internal double @"*203"(double %x, i64 %y) #3 {
  %x.addr = alloca double
  store double %x, double* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load double* %x.addr
  %2 = load i64* %y.addr
  %3 = call double @cmn202(double %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load double* %x.addr
  %6 = call double @cmn201(i64 %4, double %5)
  %7 = call double @_Double_opMul(double %3, double %6)
  ret double %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @size204(%String* %this) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = getelementptr inbounds %String* %1, i32 0, i32 1
  %3 = load %"RawPtr[Char/rtct]"* %2
  %4 = load %String** %this.addr
  %5 = getelementptr inbounds %String* %4, i32 0, i32 0
  %6 = load %"RawPtr[Char/rtct]"* %5
  %7 = call i64 @diff(%"RawPtr[Char/rtct]" %3, %"RawPtr[Char/rtct]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal void @reallocPtr(%"RawPtr[Char/rtct]"* %this, i64 %n) #3 {
  %this.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %this, %"RawPtr[Char/rtct]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %this.addr
  %2 = load %"RawPtr[Char/rtct]"* %1
  %3 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %2)
  %4 = load i64* %n.addr
  %5 = call i64 @"*"(i64 %4, i64 1)
  %6 = call i8* @realloc(i8* %3, i64 %5)
  %7 = load %"RawPtr[Char/rtct]"** %this.addr
  %8 = getelementptr inbounds %"RawPtr[Char/rtct]"* %7, i32 0, i32 0
  store i8* %6, i8** %8
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=205"(%"RawPtr[Char/rtct]"* %this, %"RawPtr[Char/rtct]" %other) #2 {
  %this.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %this, %"RawPtr[Char/rtct]"** %this.addr
  %other.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %other, %"RawPtr[Char/rtct]"* %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[Char/rtct]"* %other.addr, i32 0, i32 0
  %2 = load i8** %1
  %3 = load %"RawPtr[Char/rtct]"** %this.addr
  %4 = getelementptr inbounds %"RawPtr[Char/rtct]"* %3, i32 0, i32 0
  store i8* %2, i8** %4
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advance(%"RawPtr[Char/rtct]"* sret %_result, %"RawPtr[Char/rtct]" %this, i64 %n) #3 {
  %_result.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %_result, %"RawPtr[Char/rtct]"** %_result.addr
  %this.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %this, %"RawPtr[Char/rtct]"* %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %_result.addr
  %2 = load %"RawPtr[Char/rtct]"* %this.addr
  %3 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %2)
  %4 = load i64* %n.addr
  store i64 1, i64* %tmp.v1
  %5 = load i64* %tmp.v1
  %6 = call i64 @"*206"(i64 %4, i64 %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  %8 = call i8* @ptrAdd(i8* %3, i64 %7)
  call void @ctor199(%"RawPtr[Char/rtct]"* %1, i8* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i64 @"*206"(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn45(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn45(i64 %4, i64 %5)
  %7 = mul i64 %3, %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==207"(%"RawPtr[Char/rtct]"* %this, %"RawPtr[Char/rtct]" %other) #3 {
  %this.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %this, %"RawPtr[Char/rtct]"** %this.addr
  %other.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %other, %"RawPtr[Char/rtct]"* %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[Char/rtct]"* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = getelementptr inbounds %"RawPtr[Char/rtct]"* %other.addr, i32 0, i32 0
  %5 = load i8** %4
  %6 = call i1 @implOpRefEQ(i8* %3, i8* %5)
  ret i1 %6
}

; Function Attrs: inlinehint nounwind
define internal i8* @value(%"RawPtr[Char/rtct]" %this) #3 {
  %this.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %this, %"RawPtr[Char/rtct]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[Char/rtct]"* %this.addr, i32 0, i32 0
  %2 = load i8** %1
  ret i8* %2
}

; Function Attrs: inlinehint nounwind
define internal void @advance208(%"RawPtr[Char/rtct]"* sret %_result, %"RawPtr[Char/rtct]" %this) #3 {
  %_result.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %_result, %"RawPtr[Char/rtct]"** %_result.addr
  %this.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %this, %"RawPtr[Char/rtct]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %_result.addr
  %2 = load %"RawPtr[Char/rtct]"* %this.addr
  %3 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %2)
  %4 = call i8* @ptrAdd(i8* %3, i64 1)
  call void @ctor199(%"RawPtr[Char/rtct]"* %1, i8* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor209(%String* %this, %String* %other) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %other.addr = alloca %String*
  store %String* %other, %String** %other.addr
  %size = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %other.addr
  %2 = call i64 @size204(%String* %1)
  store i64 %2, i64* %size
  %3 = load %String** %this.addr
  %4 = load i64* %size
  call void @ctor210(%String* %3, i64 %4)
  %5 = load %String** %this.addr
  %6 = getelementptr inbounds %String* %5, i32 0, i32 0
  %7 = load %"RawPtr[Char/rtct]"* %6
  %8 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %7)
  %9 = load %String** %other.addr
  %10 = getelementptr inbounds %String* %9, i32 0, i32 0
  %11 = load %"RawPtr[Char/rtct]"* %10
  %12 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %11)
  %13 = load i64* %size
  call void @_spr_memcpy(i8* %8, i8* %12, i64 %13)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor210(%String* %this, i64 %size) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %size.addr = alloca i64
  store i64 %size, i64* %size.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC1" = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  %tmp.v2 = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = getelementptr inbounds %String* %1, i32 0, i32 0
  %3 = load i64* %size.addr
  %4 = call i64 @"+84"(i64 %3, i32 1)
  call void @allocRawPtr(%"RawPtr[Char/rtct]"* %"$tmpC", i64 %4)
  call void @ctor211(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]"* %"$tmpC")
  %5 = load %String** %this.addr
  %6 = getelementptr inbounds %String* %5, i32 0, i32 1
  %7 = load %String** %this.addr
  %8 = getelementptr inbounds %String* %7, i32 0, i32 0
  %9 = load %"RawPtr[Char/rtct]"* %8
  %10 = load i64* %size.addr
  store i64 %10, i64* %tmp.v
  %11 = load i64* %tmp.v
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC1", %"RawPtr[Char/rtct]" %9, i64 %11)
  call void @ctor211(%"RawPtr[Char/rtct]"* %6, %"RawPtr[Char/rtct]"* %"$tmpC1")
  %12 = load %String** %this.addr
  %13 = getelementptr inbounds %String* %12, i32 0, i32 2
  %14 = load %String** %this.addr
  %15 = getelementptr inbounds %String* %14, i32 0, i32 1
  call void @ctor211(%"RawPtr[Char/rtct]"* %13, %"RawPtr[Char/rtct]"* %15)
  store i8 0, i8* %tmp.v2
  %16 = load i8* %tmp.v2
  %17 = load %String** %this.addr
  %18 = getelementptr inbounds %String* %17, i32 0, i32 1
  %19 = load %"RawPtr[Char/rtct]"* %18
  %20 = call i8* @value(%"RawPtr[Char/rtct]" %19)
  store i8 %16, i8* %20
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor211(%"RawPtr[Char/rtct]"* %this, %"RawPtr[Char/rtct]"* %other) #2 {
  %this.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %this, %"RawPtr[Char/rtct]"** %this.addr
  %other.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %other, %"RawPtr[Char/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %other.addr
  %2 = getelementptr inbounds %"RawPtr[Char/rtct]"* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %"RawPtr[Char/rtct]"** %this.addr
  %5 = getelementptr inbounds %"RawPtr[Char/rtct]"* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @allocRawPtr(%"RawPtr[Char/rtct]"* sret %_result, i64 %num) #3 {
  %_result.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %_result, %"RawPtr[Char/rtct]"** %_result.addr
  %num.addr = alloca i64
  store i64 %num, i64* %num.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %_result.addr
  %2 = load i64* %num.addr
  %3 = call i64 @"*"(i64 %2, i64 1)
  %4 = call i8* @malloc(i64 %3)
  call void @ctor212(%"RawPtr[Char/rtct]"* %1, i8* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor212(%"RawPtr[Char/rtct]"* %this, i8* %ref) #3 {
  %this.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %this, %"RawPtr[Char/rtct]"** %this.addr
  %ref.addr = alloca i8*
  store i8* %ref, i8** %ref.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[Char/rtct]"* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = load i8** %ref.addr
  %4 = load %"RawPtr[Char/rtct]"** %this.addr
  %5 = getelementptr inbounds %"RawPtr[Char/rtct]"* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor213(%StringOutputStream* %dest) #2 {
  %dest.addr = alloca %StringOutputStream*
  store %StringOutputStream* %dest, %StringOutputStream** %dest.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %dest.addr
  %2 = getelementptr inbounds %StringOutputStream* %1, i32 0, i32 0
  call void @dtor214(%String* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @dtor214(%String* %this) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = getelementptr inbounds %String* %1, i32 0, i32 0
  %3 = load %"RawPtr[Char/rtct]"* %2
  call void @freePtr(%"RawPtr[Char/rtct]" %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @freePtr(%"RawPtr[Char/rtct]" %this) #3 {
  %this.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %this, %"RawPtr[Char/rtct]"* %this.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"RawPtr[Char/rtct]"* %this.addr
  %2 = call i1 @isSet(%"RawPtr[Char/rtct]" %1)
  br i1 %2, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %3 = load %"RawPtr[Char/rtct]"* %this.addr
  %4 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %3)
  call void @free(i8* %4)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isSet(%"RawPtr[Char/rtct]" %this) #3 {
  %this.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %this, %"RawPtr[Char/rtct]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[Char/rtct]"* %this.addr, i32 0, i32 0
  %2 = load i8** %1
  %3 = call i1 @implOpRefNE(i8* %2, i8* null)
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal void @ctor216(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %_CharSource %source, %ExternalErrorReporter %errorReporter, %Location* %iniLocation) #3 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %source.addr = alloca %_CharSource
  store %_CharSource %source, %_CharSource* %source.addr
  %errorReporter.addr = alloca %ExternalErrorReporter
  store %ExternalErrorReporter %errorReporter, %ExternalErrorReporter* %errorReporter.addr
  %iniLocation.addr = alloca %Location*
  store %Location* %iniLocation, %Location** %iniLocation.addr
  %tmp.v = alloca %"RangeWithLookahead[_CharSource]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %Location** %iniLocation.addr
  call void @ctor217(%Location* %2, %Location* %3)
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = load %_CharSource* %source.addr
  call void @ctor226(%"RangeWithLookahead[_CharSource]"* %tmp.v, %_CharSource %6)
  %7 = load %"RangeWithLookahead[_CharSource]"* %tmp.v
  %8 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %9 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %8, i32 0, i32 0
  call void @ctor220(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5, %"RangeWithLookahead[_CharSource]" %7, %Location* %9)
  call void @dtor232(%"RangeWithLookahead[_CharSource]"* %tmp.v)
  %10 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %11 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %10, i32 0, i32 2
  call void @ctor181(%Token* %11)
  %12 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %12, i32 0, i32 3
  store i1 false, i1* %13
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor217(%Location* %this, %Location* %other) #2 {
  %this.addr = alloca %Location*
  store %Location* %this, %Location** %this.addr
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %this.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 0
  %3 = load %Location** %other.addr
  %4 = getelementptr inbounds %Location* %3, i32 0, i32 0
  call void @ctor218(%SourceCode* %2, %SourceCode* %4)
  %5 = load %Location** %this.addr
  %6 = getelementptr inbounds %Location* %5, i32 0, i32 1
  %7 = load %Location** %other.addr
  %8 = getelementptr inbounds %Location* %7, i32 0, i32 1
  call void @ctor219(%LineCol* %6, %LineCol* %8)
  %9 = load %Location** %this.addr
  %10 = getelementptr inbounds %Location* %9, i32 0, i32 2
  %11 = load %Location** %other.addr
  %12 = getelementptr inbounds %Location* %11, i32 0, i32 2
  call void @ctor219(%LineCol* %10, %LineCol* %12)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor218(%SourceCode* %this, %SourceCode* %other) #2 {
  %this.addr = alloca %SourceCode*
  store %SourceCode* %this, %SourceCode** %this.addr
  %other.addr = alloca %SourceCode*
  store %SourceCode* %other, %SourceCode** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %SourceCode** %other.addr
  %2 = getelementptr inbounds %SourceCode* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %SourceCode** %this.addr
  %5 = getelementptr inbounds %SourceCode* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor219(%LineCol* %this, %LineCol* %other) #2 {
  %this.addr = alloca %LineCol*
  store %LineCol* %this, %LineCol** %this.addr
  %other.addr = alloca %LineCol*
  store %LineCol* %other, %LineCol** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LineCol** %other.addr
  %2 = getelementptr inbounds %LineCol* %1, i32 0, i32 0
  %3 = load i32* %2
  %4 = load %LineCol** %this.addr
  %5 = getelementptr inbounds %LineCol* %4, i32 0, i32 0
  store i32 %3, i32* %5
  %6 = load %LineCol** %other.addr
  %7 = getelementptr inbounds %LineCol* %6, i32 0, i32 1
  %8 = load i32* %7
  %9 = load %LineCol** %this.addr
  %10 = getelementptr inbounds %LineCol* %9, i32 0, i32 1
  store i32 %8, i32* %10
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor220(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"RangeWithLookahead[_CharSource]" %fsource, %Location* %flocation) #2 {
  %this.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %fsource.addr = alloca %"RangeWithLookahead[_CharSource]"
  store %"RangeWithLookahead[_CharSource]" %fsource, %"RangeWithLookahead[_CharSource]"* %fsource.addr
  %flocation.addr = alloca %Location*
  store %Location* %flocation, %Location** %flocation.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  call void @ctor221(%"RangeWithLookahead[_CharSource]"* %2, %"RangeWithLookahead[_CharSource]"* %fsource.addr)
  %3 = load %Location** %flocation.addr
  %4 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %5 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4, i32 0, i32 1
  store %Location* %3, %Location** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor221(%"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"* %other) #2 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  %other.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %other, %"RangeWithLookahead[_CharSource]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 0
  %3 = load %"RangeWithLookahead[_CharSource]"** %other.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %3, i32 0, i32 0
  call void @ctor222(%_CharSource* %2, %_CharSource* %4)
  %5 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %6 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %5, i32 0, i32 1
  %7 = load %"RangeWithLookahead[_CharSource]"** %other.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %7, i32 0, i32 1
  call void @ctor223(%"Vector[Char/rtct]"* %6, %"Vector[Char/rtct]"* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor222(%_CharSource* %this, %_CharSource* %other) #2 {
  %this.addr = alloca %_CharSource*
  store %_CharSource* %this, %_CharSource** %this.addr
  %other.addr = alloca %_CharSource*
  store %_CharSource* %other, %_CharSource** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource** %other.addr
  %2 = getelementptr inbounds %_CharSource* %1, i32 0, i32 0
  %3 = load %FileRange** %2
  %4 = load %_CharSource** %this.addr
  %5 = getelementptr inbounds %_CharSource* %4, i32 0, i32 0
  store %FileRange* %3, %FileRange** %5
  %6 = load %_CharSource** %this.addr
  %7 = getelementptr inbounds %_CharSource* %6, i32 0, i32 1
  %8 = load %_CharSource** %other.addr
  %9 = getelementptr inbounds %_CharSource* %8, i32 0, i32 1
  %10 = load %StringRef* %9
  call void @ctor87(%StringRef* %7, %StringRef %10)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor223(%"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"* %other) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  %other.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %other, %"Vector[Char/rtct]"** %other.addr
  %size = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC1" = alloca %"RawPtr[Char/rtct]"
  %dst = alloca %"RawPtr[Char/rtct]"
  %src = alloca %"RawPtr[Char/rtct]"
  %"$tmpC2" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC3" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 0
  call void @ctor180(%"RawPtr[Char/rtct]"* %2)
  %3 = load %"Vector[Char/rtct]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Char/rtct]"* %3, i32 0, i32 1
  call void @ctor180(%"RawPtr[Char/rtct]"* %4)
  %5 = load %"Vector[Char/rtct]"** %this.addr
  %6 = getelementptr inbounds %"Vector[Char/rtct]"* %5, i32 0, i32 2
  call void @ctor180(%"RawPtr[Char/rtct]"* %6)
  %7 = load %"Vector[Char/rtct]"** %other.addr
  %8 = call i64 @size224(%"Vector[Char/rtct]"* %7)
  store i64 %8, i64* %size
  %9 = load %"Vector[Char/rtct]"** %this.addr
  %10 = getelementptr inbounds %"Vector[Char/rtct]"* %9, i32 0, i32 0
  %11 = load i64* %size
  call void @allocRawPtr(%"RawPtr[Char/rtct]"* %"$tmpC", i64 %11)
  %12 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=205"(%"RawPtr[Char/rtct]"* %10, %"RawPtr[Char/rtct]" %12)
  %13 = load %"Vector[Char/rtct]"** %this.addr
  %14 = getelementptr inbounds %"Vector[Char/rtct]"* %13, i32 0, i32 1
  %15 = load %"Vector[Char/rtct]"** %this.addr
  %16 = getelementptr inbounds %"Vector[Char/rtct]"* %15, i32 0, i32 0
  %17 = load %"RawPtr[Char/rtct]"* %16
  %18 = load i64* %size
  call void @advance225(%"RawPtr[Char/rtct]"* %"$tmpC1", %"RawPtr[Char/rtct]" %17, i64 %18)
  %19 = load %"RawPtr[Char/rtct]"* %"$tmpC1"
  call void @"=205"(%"RawPtr[Char/rtct]"* %14, %"RawPtr[Char/rtct]" %19)
  %20 = load %"Vector[Char/rtct]"** %this.addr
  %21 = getelementptr inbounds %"Vector[Char/rtct]"* %20, i32 0, i32 2
  %22 = load %"Vector[Char/rtct]"** %this.addr
  %23 = getelementptr inbounds %"Vector[Char/rtct]"* %22, i32 0, i32 1
  %24 = load %"RawPtr[Char/rtct]"* %23
  call void @"=205"(%"RawPtr[Char/rtct]"* %21, %"RawPtr[Char/rtct]" %24)
  %25 = load %"Vector[Char/rtct]"** %this.addr
  %26 = getelementptr inbounds %"Vector[Char/rtct]"* %25, i32 0, i32 0
  call void @ctor211(%"RawPtr[Char/rtct]"* %dst, %"RawPtr[Char/rtct]"* %26)
  %27 = load %"Vector[Char/rtct]"** %other.addr
  %28 = getelementptr inbounds %"Vector[Char/rtct]"* %27, i32 0, i32 0
  call void @ctor211(%"RawPtr[Char/rtct]"* %src, %"RawPtr[Char/rtct]"* %28)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %29 = load %"Vector[Char/rtct]"** %this.addr
  %30 = getelementptr inbounds %"Vector[Char/rtct]"* %29, i32 0, i32 1
  %31 = load %"RawPtr[Char/rtct]"* %30
  %32 = call i1 @"==207"(%"RawPtr[Char/rtct]"* %dst, %"RawPtr[Char/rtct]" %31)
  %33 = xor i1 true, %32
  br i1 %33, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %34 = load %"RawPtr[Char/rtct]"* %src
  %35 = call i8* @value(%"RawPtr[Char/rtct]" %34)
  %36 = load i8* %35
  %37 = load %"RawPtr[Char/rtct]"* %dst
  %38 = call i8* @value(%"RawPtr[Char/rtct]" %37)
  store i8 %36, i8* %38
  %39 = load %"RawPtr[Char/rtct]"* %dst
  call void @advance208(%"RawPtr[Char/rtct]"* %"$tmpC2", %"RawPtr[Char/rtct]" %39)
  %40 = load %"RawPtr[Char/rtct]"* %"$tmpC2"
  call void @"=205"(%"RawPtr[Char/rtct]"* %dst, %"RawPtr[Char/rtct]" %40)
  %41 = load %"RawPtr[Char/rtct]"* %src
  call void @advance208(%"RawPtr[Char/rtct]"* %"$tmpC3", %"RawPtr[Char/rtct]" %41)
  %42 = load %"RawPtr[Char/rtct]"* %"$tmpC3"
  call void @"=205"(%"RawPtr[Char/rtct]"* %src, %"RawPtr[Char/rtct]" %42)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i64 @size224(%"Vector[Char/rtct]"* %this) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 1
  %3 = load %"RawPtr[Char/rtct]"* %2
  %4 = load %"Vector[Char/rtct]"** %this.addr
  %5 = getelementptr inbounds %"Vector[Char/rtct]"* %4, i32 0, i32 0
  %6 = load %"RawPtr[Char/rtct]"* %5
  %7 = call i64 @diff(%"RawPtr[Char/rtct]" %3, %"RawPtr[Char/rtct]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal void @advance225(%"RawPtr[Char/rtct]"* sret %_result, %"RawPtr[Char/rtct]" %this, i64 %n) #3 {
  %_result.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %_result, %"RawPtr[Char/rtct]"** %_result.addr
  %this.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %this, %"RawPtr[Char/rtct]"* %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %_result.addr
  %2 = load %"RawPtr[Char/rtct]"* %this.addr
  %3 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %2)
  %4 = load i64* %n.addr
  %5 = call i64 @"*"(i64 %4, i64 1)
  %6 = call i8* @ptrAdd(i8* %3, i64 %5)
  call void @ctor199(%"RawPtr[Char/rtct]"* %1, i8* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor226(%"RangeWithLookahead[_CharSource]"* %this, %_CharSource %src) #3 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  %src.addr = alloca %_CharSource
  store %_CharSource %src, %_CharSource* %src.addr
  %"$tmpForRef" = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 0
  call void @ctor170(%_CharSource* %2)
  %3 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %3, i32 0, i32 0
  call void @"=158"(%_CharSource* %4, %_CharSource* %src.addr)
  %5 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %6 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %5, i32 0, i32 1
  call void @ctor179(%"Vector[Char/rtct]"* %6)
  %7 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %7, i32 0, i32 1
  call void @reserve227(%"Vector[Char/rtct]"* %8, i64 10)
  br label %if_block

if_block:                                         ; preds = %code
  %9 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %10 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %9, i32 0, i32 0
  %11 = call i1 @"pre_!!"(%_CharSource* %10)
  br i1 %11, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %12 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %13 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %12, i32 0, i32 1
  %14 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %15 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %14, i32 0, i32 0
  %16 = call i8 @"post_++231"(%_CharSource* %15)
  store i8 %16, i8* %"$tmpForRef"
  call void @"+="(%"Vector[Char/rtct]"* %13, i8* %"$tmpForRef")
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @reserve227(%"Vector[Char/rtct]"* %this, i64 %n) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %curCapacity = alloca i64
  %tmp.v = alloca i64
  %curSize = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC7" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %this.addr
  %2 = call i64 @capacity228(%"Vector[Char/rtct]"* %1)
  store i64 %2, i64* %curCapacity
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64* %n.addr
  %4 = load i64* %curCapacity
  %5 = call i1 @"<="(i64 %3, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64* %n.addr
  %7 = call i1 @"<229"(i64 %6, i32 8)
  br i1 %7, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 8, i64* %n.addr
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  br label %if_block4

if_block4:                                        ; preds = %if_end3
  %8 = load i64* %n.addr
  %9 = load i64* %curCapacity
  %10 = call double @"*203"(double 2.000000e+00, i64 %9)
  %11 = call i1 @"<200"(i64 %8, double %10)
  br i1 %11, label %if_then5, label %if_end6

if_then5:                                         ; preds = %if_block4
  %12 = load i64* %curCapacity
  %13 = call double @"*203"(double 2.000000e+00, i64 %12)
  %14 = fptoui double %13 to i64
  store i64 %14, i64* %tmp.v
  %15 = load i64* %tmp.v
  store i64 %15, i64* %n.addr
  br label %if_end6

if_end6:                                          ; preds = %if_then5, %if_block4
  %16 = load %"Vector[Char/rtct]"** %this.addr
  %17 = call i64 @size224(%"Vector[Char/rtct]"* %16)
  store i64 %17, i64* %curSize
  %18 = load %"Vector[Char/rtct]"** %this.addr
  %19 = getelementptr inbounds %"Vector[Char/rtct]"* %18, i32 0, i32 0
  %20 = load i64* %n.addr
  call void @reallocPtr(%"RawPtr[Char/rtct]"* %19, i64 %20)
  %21 = load %"Vector[Char/rtct]"** %this.addr
  %22 = getelementptr inbounds %"Vector[Char/rtct]"* %21, i32 0, i32 1
  %23 = load %"Vector[Char/rtct]"** %this.addr
  %24 = getelementptr inbounds %"Vector[Char/rtct]"* %23, i32 0, i32 0
  %25 = load %"RawPtr[Char/rtct]"* %24
  %26 = load i64* %curSize
  call void @advance225(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %25, i64 %26)
  %27 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=205"(%"RawPtr[Char/rtct]"* %22, %"RawPtr[Char/rtct]" %27)
  %28 = load %"Vector[Char/rtct]"** %this.addr
  %29 = getelementptr inbounds %"Vector[Char/rtct]"* %28, i32 0, i32 2
  %30 = load %"Vector[Char/rtct]"** %this.addr
  %31 = getelementptr inbounds %"Vector[Char/rtct]"* %30, i32 0, i32 0
  %32 = load %"RawPtr[Char/rtct]"* %31
  %33 = load i64* %n.addr
  call void @advance225(%"RawPtr[Char/rtct]"* %"$tmpC7", %"RawPtr[Char/rtct]" %32, i64 %33)
  %34 = load %"RawPtr[Char/rtct]"* %"$tmpC7"
  call void @"=205"(%"RawPtr[Char/rtct]"* %29, %"RawPtr[Char/rtct]" %34)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i64 @capacity228(%"Vector[Char/rtct]"* %this) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 2
  %3 = load %"RawPtr[Char/rtct]"* %2
  %4 = load %"Vector[Char/rtct]"** %this.addr
  %5 = getelementptr inbounds %"Vector[Char/rtct]"* %4, i32 0, i32 0
  %6 = load %"RawPtr[Char/rtct]"* %5
  %7 = call i64 @diff(%"RawPtr[Char/rtct]" %3, %"RawPtr[Char/rtct]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal i1 @"<229"(i64 %x, i32 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i32* %y.addr
  %3 = call i64 @cmn85(i64 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn86(i32 %4, i64 %5)
  %7 = icmp slt i64 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i1 @"pre_!!"(%_CharSource* %r) #3 {
  %r.addr = alloca %_CharSource*
  store %_CharSource* %r, %_CharSource** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource** %r.addr
  %2 = call i1 @isEmpty160(%_CharSource* %1)
  %3 = xor i1 true, %2
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal void @"+="(%"Vector[Char/rtct]"* %this, i8* %value) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  %value.addr = alloca i8*
  store i8* %value, i8** %value.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %this.addr
  %2 = load i8** %value.addr
  call void @pushBack(%"Vector[Char/rtct]"* %1, i8* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @pushBack(%"Vector[Char/rtct]"* %this, i8* %value) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  %value.addr = alloca i8*
  store i8* %value, i8** %value.addr
  %t = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 1
  %3 = load %"Vector[Char/rtct]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Char/rtct]"* %3, i32 0, i32 2
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i1 @"==207"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  br i1 %6, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %7 = load %"Vector[Char/rtct]"** %this.addr
  %8 = call i64 @capacity228(%"Vector[Char/rtct]"* %7)
  %9 = call i64 @"*230"(i32 2, i64 %8)
  store i64 %9, i64* %t
  br label %if_block1

if_end:                                           ; preds = %if_end3, %if_block
  %10 = load i8** %value.addr
  %11 = load i8* %10
  %12 = load %"Vector[Char/rtct]"** %this.addr
  %13 = getelementptr inbounds %"Vector[Char/rtct]"* %12, i32 0, i32 1
  %14 = load %"RawPtr[Char/rtct]"* %13
  %15 = call i8* @value(%"RawPtr[Char/rtct]" %14)
  store i8 %11, i8* %15
  %16 = load %"Vector[Char/rtct]"** %this.addr
  %17 = getelementptr inbounds %"Vector[Char/rtct]"* %16, i32 0, i32 1
  %18 = load %"Vector[Char/rtct]"** %this.addr
  %19 = getelementptr inbounds %"Vector[Char/rtct]"* %18, i32 0, i32 1
  %20 = load %"RawPtr[Char/rtct]"* %19
  call void @advance208(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %20)
  %21 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=205"(%"RawPtr[Char/rtct]"* %17, %"RawPtr[Char/rtct]" %21)
  ret void

if_block1:                                        ; preds = %if_then
  %22 = load i64* %t
  %23 = call i1 @"<229"(i64 %22, i32 2)
  br i1 %23, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 2, i64* %t
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %24 = load %"Vector[Char/rtct]"** %this.addr
  %25 = load i64* %t
  call void @reserve227(%"Vector[Char/rtct]"* %24, i64 %25)
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i64 @"*230"(i32 %x, i64 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn86(i32 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i32* %x.addr
  %6 = call i64 @cmn85(i64 %4, i32 %5)
  %7 = mul i64 %3, %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i8 @"post_++231"(%_CharSource* %r) #3 {
  %r.addr = alloca %_CharSource*
  store %_CharSource* %r, %_CharSource** %r.addr
  %res = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource** %r.addr
  %2 = call i8 @front162(%_CharSource* %1)
  store i8 %2, i8* %res
  %3 = load %_CharSource** %r.addr
  call void @popFront164(%_CharSource* %3)
  %4 = load i8* %res
  ret i8 %4
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor232(%"RangeWithLookahead[_CharSource]"* %dest) #2 {
  %dest.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %dest, %"RangeWithLookahead[_CharSource]"** %dest.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"** %dest.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 1
  call void @dtor233(%"Vector[Char/rtct]"* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @dtor233(%"Vector[Char/rtct]"* %this) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  %p = alloca %"RawPtr[Char/rtct]"
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 0
  call void @ctor211(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]"* %2)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %3 = load %"Vector[Char/rtct]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Char/rtct]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i1 @"==207"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %5)
  %7 = xor i1 true, %6
  br i1 %7, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %8 = load %"RawPtr[Char/rtct]"* %p
  %9 = call i8* @value(%"RawPtr[Char/rtct]" %8)
  %10 = load i8* %9
  br label %while_step

while_step:                                       ; preds = %while_body
  %11 = load %"RawPtr[Char/rtct]"* %p
  call void @advance208(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %11)
  %12 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=205"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %12)
  br label %while_block

while_end:                                        ; preds = %while_block
  %13 = load %"Vector[Char/rtct]"** %this.addr
  %14 = getelementptr inbounds %"Vector[Char/rtct]"* %13, i32 0, i32 0
  %15 = load %"RawPtr[Char/rtct]"* %14
  call void @freePtr(%"RawPtr[Char/rtct]" %15)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor234(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]" %tokens, %ExternalErrorReporter %errorReporter) #3 {
  %this.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tokens.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]" %tokens, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %tokens.addr
  %errorReporter.addr = alloca %ExternalErrorReporter
  store %ExternalErrorReporter %errorReporter, %ExternalErrorReporter* %errorReporter.addr
  %"$tmpForRef" = alloca i32
  %tmp.v = alloca %TokenType
  %"$tmpC" = alloca %Token
  %tmp.v1 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 2
  call void @ctor186(%"Vector[UInt/rtct]"* %2)
  %3 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 3
  call void @ctor179(%"Vector[Char/rtct]"* %4)
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 4
  call void @ctor182(%TokenType* %6)
  %7 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %8 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 5
  store i32 0, i32* %8
  %9 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %10 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %9, i32 0, i32 0
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %tokens.addr
  call void @ctor235(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %10, %"SparrowScanner[_CharSource, ExternalErrorReporter]" %11)
  %12 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 2
  store i32 1, i32* %"$tmpForRef"
  call void @"+=388"(%"Vector[UInt/rtct]"* %13, i32* %"$tmpForRef")
  %14 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %15 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %14, i32 0, i32 4
  call void @ctor272(%TokenType* %tmp.v, i32 32)
  call void @"=244"(%TokenType* %15, %TokenType* %tmp.v)
  %16 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %17 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %16, i32 0, i32 5
  store i32 0, i32* %17
  br label %if_block

if_block:                                         ; preds = %code
  %18 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %19 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %18, i32 0, i32 0
  %20 = call i1 @isEmpty402(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %19)
  %21 = xor i1 true, %20
  br i1 %21, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %22 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @popFront408(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %22)
  br label %if_end

if_end:                                           ; preds = %if_then, %cond.end
  br i1 %21, label %cond_destruct_alt1, label %cond_destruct_alt2

cond.true:                                        ; preds = %if_block
  %23 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %24 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %23, i32 0, i32 0
  call void @front406(%Token* %"$tmpC", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %24)
  %25 = getelementptr inbounds %Token* %"$tmpC", i32 0, i32 1
  call void @ctor272(%TokenType* %tmp.v1, i32 1)
  %26 = call i1 @"==404"(%TokenType* %25, %TokenType* %tmp.v1)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %26, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end

cond_destruct_alt1:                               ; preds = %if_end
  call void @dtor387(%Token* %"$tmpC")
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor235(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]" %src) #3 {
  %this.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %src.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]" %src, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %src.addr
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 0
  call void @ctor173(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %2)
  %3 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %3, i32 0, i32 0
  call void @"=236"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %src.addr)
  %5 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %6 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %5, i32 0, i32 1
  call void @ctor184(%"Vector[Token]"* %6)
  %7 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %7, i32 0, i32 1
  call void @reserve248(%"Vector[Token]"* %8, i64 10)
  br label %if_block

if_block:                                         ; preds = %code
  %9 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %10 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %9, i32 0, i32 0
  %11 = call i1 @"pre_!!257"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %10)
  br i1 %11, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %12 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %13 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %12, i32 0, i32 1
  %14 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %15 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %14, i32 0, i32 0
  call void @"post_++266"(%Token* %"$tmpC", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %15)
  call void @"+=259"(%"Vector[Token]"* %13, %Token* %"$tmpC")
  call void @dtor387(%Token* %"$tmpC")
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=236"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %dest, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %other) #2 {
  %dest.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %dest, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %dest.addr
  %other.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %other, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %dest.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %4 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 0, i32 0
  call void @"=237"(%Location* %2, %Location* %4)
  %5 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %dest.addr
  %6 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %8 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 0, i32 1
  call void @"=240"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %6, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8)
  %9 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %dest.addr
  %10 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %9, i32 0, i32 2
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %12 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11, i32 0, i32 2
  call void @"=243"(%Token* %10, %Token* %12)
  %13 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %14 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %13, i32 0, i32 3
  %15 = load i1* %14
  %16 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %dest.addr
  %17 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %16, i32 0, i32 3
  store i1 %15, i1* %17
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=237"(%Location* %dest, %Location* %other) #2 {
  %dest.addr = alloca %Location*
  store %Location* %dest, %Location** %dest.addr
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %dest.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 0
  %3 = load %Location** %other.addr
  %4 = getelementptr inbounds %Location* %3, i32 0, i32 0
  call void @"=238"(%SourceCode* %2, %SourceCode* %4)
  %5 = load %Location** %dest.addr
  %6 = getelementptr inbounds %Location* %5, i32 0, i32 1
  %7 = load %Location** %other.addr
  %8 = getelementptr inbounds %Location* %7, i32 0, i32 1
  call void @"=239"(%LineCol* %6, %LineCol* %8)
  %9 = load %Location** %dest.addr
  %10 = getelementptr inbounds %Location* %9, i32 0, i32 2
  %11 = load %Location** %other.addr
  %12 = getelementptr inbounds %Location* %11, i32 0, i32 2
  call void @"=239"(%LineCol* %10, %LineCol* %12)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=238"(%SourceCode* %dest, %SourceCode* %other) #2 {
  %dest.addr = alloca %SourceCode*
  store %SourceCode* %dest, %SourceCode** %dest.addr
  %other.addr = alloca %SourceCode*
  store %SourceCode* %other, %SourceCode** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %SourceCode** %other.addr
  %2 = getelementptr inbounds %SourceCode* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %SourceCode** %dest.addr
  %5 = getelementptr inbounds %SourceCode* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=239"(%LineCol* %dest, %LineCol* %other) #2 {
  %dest.addr = alloca %LineCol*
  store %LineCol* %dest, %LineCol** %dest.addr
  %other.addr = alloca %LineCol*
  store %LineCol* %other, %LineCol** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LineCol** %other.addr
  %2 = getelementptr inbounds %LineCol* %1, i32 0, i32 0
  %3 = load i32* %2
  %4 = load %LineCol** %dest.addr
  %5 = getelementptr inbounds %LineCol* %4, i32 0, i32 0
  store i32 %3, i32* %5
  %6 = load %LineCol** %other.addr
  %7 = getelementptr inbounds %LineCol* %6, i32 0, i32 1
  %8 = load i32* %7
  %9 = load %LineCol** %dest.addr
  %10 = getelementptr inbounds %LineCol* %9, i32 0, i32 1
  store i32 %8, i32* %10
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=240"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %dest, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %other) #2 {
  %dest.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %dest, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %dest.addr
  %other.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %other, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %dest.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  %3 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %other.addr
  %4 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %3, i32 0, i32 0
  call void @"=241"(%"RangeWithLookahead[_CharSource]"* %2, %"RangeWithLookahead[_CharSource]"* %4)
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %other.addr
  %6 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5, i32 0, i32 1
  %7 = load %Location** %6
  %8 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %dest.addr
  %9 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8, i32 0, i32 1
  store %Location* %7, %Location** %9
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=241"(%"RangeWithLookahead[_CharSource]"* %dest, %"RangeWithLookahead[_CharSource]"* %other) #2 {
  %dest.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %dest, %"RangeWithLookahead[_CharSource]"** %dest.addr
  %other.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %other, %"RangeWithLookahead[_CharSource]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"** %dest.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 0
  %3 = load %"RangeWithLookahead[_CharSource]"** %other.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %3, i32 0, i32 0
  call void @"=158"(%_CharSource* %2, %_CharSource* %4)
  %5 = load %"RangeWithLookahead[_CharSource]"** %dest.addr
  %6 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %5, i32 0, i32 1
  %7 = load %"RangeWithLookahead[_CharSource]"** %other.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %7, i32 0, i32 1
  %9 = call %"Vector[Char/rtct]"* @"=242"(%"Vector[Char/rtct]"* %6, %"Vector[Char/rtct]"* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %"Vector[Char/rtct]"* @"=242"(%"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"* %other) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  %other.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %other, %"Vector[Char/rtct]"** %other.addr
  %tmp = alloca %"Vector[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %other.addr
  call void @ctor223(%"Vector[Char/rtct]"* %tmp, %"Vector[Char/rtct]"* %1)
  %2 = load %"Vector[Char/rtct]"** %this.addr
  call void @swap(%"Vector[Char/rtct]"* %tmp, %"Vector[Char/rtct]"* %2)
  %3 = load %"Vector[Char/rtct]"** %this.addr
  call void @dtor233(%"Vector[Char/rtct]"* %tmp)
  ret %"Vector[Char/rtct]"* %3

dumy_block:                                       ; No predecessors!
  call void @dtor233(%"Vector[Char/rtct]"* %tmp)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @swap(%"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"* %other) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  %other.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %other, %"Vector[Char/rtct]"** %other.addr
  %tmp = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 0
  call void @ctor211(%"RawPtr[Char/rtct]"* %tmp, %"RawPtr[Char/rtct]"* %2)
  %3 = load %"Vector[Char/rtct]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Char/rtct]"* %3, i32 0, i32 0
  %5 = load %"Vector[Char/rtct]"** %other.addr
  %6 = getelementptr inbounds %"Vector[Char/rtct]"* %5, i32 0, i32 0
  %7 = load %"RawPtr[Char/rtct]"* %6
  call void @"=205"(%"RawPtr[Char/rtct]"* %4, %"RawPtr[Char/rtct]" %7)
  %8 = load %"Vector[Char/rtct]"** %other.addr
  %9 = getelementptr inbounds %"Vector[Char/rtct]"* %8, i32 0, i32 0
  %10 = load %"RawPtr[Char/rtct]"* %tmp
  call void @"=205"(%"RawPtr[Char/rtct]"* %9, %"RawPtr[Char/rtct]" %10)
  %11 = load %"Vector[Char/rtct]"** %this.addr
  %12 = getelementptr inbounds %"Vector[Char/rtct]"* %11, i32 0, i32 1
  %13 = load %"RawPtr[Char/rtct]"* %12
  call void @"=205"(%"RawPtr[Char/rtct]"* %tmp, %"RawPtr[Char/rtct]" %13)
  %14 = load %"Vector[Char/rtct]"** %this.addr
  %15 = getelementptr inbounds %"Vector[Char/rtct]"* %14, i32 0, i32 1
  %16 = load %"Vector[Char/rtct]"** %other.addr
  %17 = getelementptr inbounds %"Vector[Char/rtct]"* %16, i32 0, i32 1
  %18 = load %"RawPtr[Char/rtct]"* %17
  call void @"=205"(%"RawPtr[Char/rtct]"* %15, %"RawPtr[Char/rtct]" %18)
  %19 = load %"Vector[Char/rtct]"** %other.addr
  %20 = getelementptr inbounds %"Vector[Char/rtct]"* %19, i32 0, i32 1
  %21 = load %"RawPtr[Char/rtct]"* %tmp
  call void @"=205"(%"RawPtr[Char/rtct]"* %20, %"RawPtr[Char/rtct]" %21)
  %22 = load %"Vector[Char/rtct]"** %this.addr
  %23 = getelementptr inbounds %"Vector[Char/rtct]"* %22, i32 0, i32 2
  %24 = load %"RawPtr[Char/rtct]"* %23
  call void @"=205"(%"RawPtr[Char/rtct]"* %tmp, %"RawPtr[Char/rtct]" %24)
  %25 = load %"Vector[Char/rtct]"** %this.addr
  %26 = getelementptr inbounds %"Vector[Char/rtct]"* %25, i32 0, i32 2
  %27 = load %"Vector[Char/rtct]"** %other.addr
  %28 = getelementptr inbounds %"Vector[Char/rtct]"* %27, i32 0, i32 2
  %29 = load %"RawPtr[Char/rtct]"* %28
  call void @"=205"(%"RawPtr[Char/rtct]"* %26, %"RawPtr[Char/rtct]" %29)
  %30 = load %"Vector[Char/rtct]"** %other.addr
  %31 = getelementptr inbounds %"Vector[Char/rtct]"* %30, i32 0, i32 2
  %32 = load %"RawPtr[Char/rtct]"* %tmp
  call void @"=205"(%"RawPtr[Char/rtct]"* %31, %"RawPtr[Char/rtct]" %32)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=243"(%Token* %dest, %Token* %other) #2 {
  %dest.addr = alloca %Token*
  store %Token* %dest, %Token** %dest.addr
  %other.addr = alloca %Token*
  store %Token* %other, %Token** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token** %dest.addr
  %2 = getelementptr inbounds %Token* %1, i32 0, i32 0
  %3 = load %Token** %other.addr
  %4 = getelementptr inbounds %Token* %3, i32 0, i32 0
  call void @"=237"(%Location* %2, %Location* %4)
  %5 = load %Token** %dest.addr
  %6 = getelementptr inbounds %Token* %5, i32 0, i32 1
  %7 = load %Token** %other.addr
  %8 = getelementptr inbounds %Token* %7, i32 0, i32 1
  call void @"=244"(%TokenType* %6, %TokenType* %8)
  %9 = load %Token** %dest.addr
  %10 = getelementptr inbounds %Token* %9, i32 0, i32 2
  %11 = load %Token** %other.addr
  %12 = getelementptr inbounds %Token* %11, i32 0, i32 2
  %13 = call %String* @"=245"(%String* %10, %String* %12)
  %14 = load %Token** %other.addr
  %15 = getelementptr inbounds %Token* %14, i32 0, i32 3
  %16 = load i64* %15
  %17 = load %Token** %dest.addr
  %18 = getelementptr inbounds %Token* %17, i32 0, i32 3
  store i64 %16, i64* %18
  %19 = load %Token** %other.addr
  %20 = getelementptr inbounds %Token* %19, i32 0, i32 4
  %21 = load double* %20
  %22 = load %Token** %dest.addr
  %23 = getelementptr inbounds %Token* %22, i32 0, i32 4
  store double %21, double* %23
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=244"(%TokenType* %dest, %TokenType* %other) #2 {
  %dest.addr = alloca %TokenType*
  store %TokenType* %dest, %TokenType** %dest.addr
  %other.addr = alloca %TokenType*
  store %TokenType* %other, %TokenType** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %TokenType** %other.addr
  %2 = getelementptr inbounds %TokenType* %1, i32 0, i32 0
  %3 = load i32* %2
  %4 = load %TokenType** %dest.addr
  %5 = getelementptr inbounds %TokenType* %4, i32 0, i32 0
  store i32 %3, i32* %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %String* @"=245"(%String* %this, %String* %other) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %other.addr = alloca %String*
  store %String* %other, %String** %other.addr
  %tmp = alloca %String
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %other.addr
  call void @ctor209(%String* %tmp, %String* %1)
  %2 = load %String** %this.addr
  call void @swap246(%String* %tmp, %String* %2)
  %3 = load %String** %this.addr
  call void @dtor214(%String* %tmp)
  ret %String* %3

dumy_block:                                       ; No predecessors!
  call void @dtor214(%String* %tmp)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @swap246(%String* %this, %String* %other) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %other.addr = alloca %String*
  store %String* %other, %String** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = getelementptr inbounds %String* %1, i32 0, i32 0
  %3 = load %String** %other.addr
  %4 = getelementptr inbounds %String* %3, i32 0, i32 0
  call void @swap247(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]"* %4)
  %5 = load %String** %this.addr
  %6 = getelementptr inbounds %String* %5, i32 0, i32 1
  %7 = load %String** %other.addr
  %8 = getelementptr inbounds %String* %7, i32 0, i32 1
  call void @swap247(%"RawPtr[Char/rtct]"* %6, %"RawPtr[Char/rtct]"* %8)
  %9 = load %String** %this.addr
  %10 = getelementptr inbounds %String* %9, i32 0, i32 2
  %11 = load %String** %other.addr
  %12 = getelementptr inbounds %String* %11, i32 0, i32 2
  call void @swap247(%"RawPtr[Char/rtct]"* %10, %"RawPtr[Char/rtct]"* %12)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @swap247(%"RawPtr[Char/rtct]"* %this, %"RawPtr[Char/rtct]"* %other) #3 {
  %this.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %this, %"RawPtr[Char/rtct]"** %this.addr
  %other.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %other, %"RawPtr[Char/rtct]"** %other.addr
  %t = alloca i8*
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[Char/rtct]"* %1, i32 0, i32 0
  %3 = load i8** %2
  store i8* %3, i8** %t
  %4 = load %"RawPtr[Char/rtct]"** %other.addr
  %5 = getelementptr inbounds %"RawPtr[Char/rtct]"* %4, i32 0, i32 0
  %6 = load i8** %5
  %7 = load %"RawPtr[Char/rtct]"** %this.addr
  %8 = getelementptr inbounds %"RawPtr[Char/rtct]"* %7, i32 0, i32 0
  store i8* %6, i8** %8
  %9 = load i8** %t
  %10 = load %"RawPtr[Char/rtct]"** %other.addr
  %11 = getelementptr inbounds %"RawPtr[Char/rtct]"* %10, i32 0, i32 0
  store i8* %9, i8** %11
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @reserve248(%"Vector[Token]"* %this, i64 %n) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %curCapacity = alloca i64
  %tmp.v = alloca i64
  %curSize = alloca i64
  %"$tmpC" = alloca %"RawPtr[Token]"
  %"$tmpC7" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %this.addr
  %2 = call i64 @capacity249(%"Vector[Token]"* %1)
  store i64 %2, i64* %curCapacity
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64* %n.addr
  %4 = load i64* %curCapacity
  %5 = call i1 @"<="(i64 %3, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64* %n.addr
  %7 = call i1 @"<229"(i64 %6, i32 8)
  br i1 %7, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 8, i64* %n.addr
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  br label %if_block4

if_block4:                                        ; preds = %if_end3
  %8 = load i64* %n.addr
  %9 = load i64* %curCapacity
  %10 = call double @"*203"(double 2.000000e+00, i64 %9)
  %11 = call i1 @"<200"(i64 %8, double %10)
  br i1 %11, label %if_then5, label %if_end6

if_then5:                                         ; preds = %if_block4
  %12 = load i64* %curCapacity
  %13 = call double @"*203"(double 2.000000e+00, i64 %12)
  %14 = fptoui double %13 to i64
  store i64 %14, i64* %tmp.v
  %15 = load i64* %tmp.v
  store i64 %15, i64* %n.addr
  br label %if_end6

if_end6:                                          ; preds = %if_then5, %if_block4
  %16 = load %"Vector[Token]"** %this.addr
  %17 = call i64 @size252(%"Vector[Token]"* %16)
  store i64 %17, i64* %curSize
  %18 = load %"Vector[Token]"** %this.addr
  %19 = getelementptr inbounds %"Vector[Token]"* %18, i32 0, i32 0
  %20 = load i64* %n.addr
  call void @reallocPtr253(%"RawPtr[Token]"* %19, i64 %20)
  %21 = load %"Vector[Token]"** %this.addr
  %22 = getelementptr inbounds %"Vector[Token]"* %21, i32 0, i32 1
  %23 = load %"Vector[Token]"** %this.addr
  %24 = getelementptr inbounds %"Vector[Token]"* %23, i32 0, i32 0
  %25 = load %"RawPtr[Token]"* %24
  %26 = load i64* %curSize
  call void @advance255(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]" %25, i64 %26)
  %27 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=254"(%"RawPtr[Token]"* %22, %"RawPtr[Token]" %27)
  %28 = load %"Vector[Token]"** %this.addr
  %29 = getelementptr inbounds %"Vector[Token]"* %28, i32 0, i32 2
  %30 = load %"Vector[Token]"** %this.addr
  %31 = getelementptr inbounds %"Vector[Token]"* %30, i32 0, i32 0
  %32 = load %"RawPtr[Token]"* %31
  %33 = load i64* %n.addr
  call void @advance255(%"RawPtr[Token]"* %"$tmpC7", %"RawPtr[Token]" %32, i64 %33)
  %34 = load %"RawPtr[Token]"* %"$tmpC7"
  call void @"=254"(%"RawPtr[Token]"* %29, %"RawPtr[Token]" %34)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i64 @capacity249(%"Vector[Token]"* %this) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 2
  %3 = load %"RawPtr[Token]"* %2
  %4 = load %"Vector[Token]"** %this.addr
  %5 = getelementptr inbounds %"Vector[Token]"* %4, i32 0, i32 0
  %6 = load %"RawPtr[Token]"* %5
  %7 = call i64 @diff250(%"RawPtr[Token]" %3, %"RawPtr[Token]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal i64 @diff250(%"RawPtr[Token]" %this, %"RawPtr[Token]" %other) #3 {
  %this.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %this, %"RawPtr[Token]"* %this.addr
  %other.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %other, %"RawPtr[Token]"* %other.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"* %this.addr
  %2 = call i8* @bytePtr251(%"RawPtr[Token]" %1)
  %3 = load %"RawPtr[Token]"* %other.addr
  %4 = call i8* @bytePtr251(%"RawPtr[Token]" %3)
  %5 = call i64 @ptrDiff(i8* %2, i8* %4)
  store i64 72, i64* %tmp.v1
  %6 = load i64* %tmp.v1
  %7 = call i64 @"/198"(i64 %5, i64 %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal i8* @bytePtr251(%"RawPtr[Token]" %this) #3 {
  %this.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %this, %"RawPtr[Token]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[Token]"* %this.addr, i32 0, i32 0
  %2 = load %Token** %1
  %3 = bitcast %Token* %2 to i8*
  ret i8* %3
}

; Function Attrs: inlinehint nounwind
define internal i64 @size252(%"Vector[Token]"* %this) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 1
  %3 = load %"RawPtr[Token]"* %2
  %4 = load %"Vector[Token]"** %this.addr
  %5 = getelementptr inbounds %"Vector[Token]"* %4, i32 0, i32 0
  %6 = load %"RawPtr[Token]"* %5
  %7 = call i64 @diff250(%"RawPtr[Token]" %3, %"RawPtr[Token]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal void @reallocPtr253(%"RawPtr[Token]"* %this, i64 %n) #3 {
  %this.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %this, %"RawPtr[Token]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %this.addr
  %2 = load %"RawPtr[Token]"* %1
  %3 = call i8* @bytePtr251(%"RawPtr[Token]" %2)
  %4 = load i64* %n.addr
  %5 = call i64 @"*"(i64 %4, i64 72)
  %6 = call i8* @realloc(i8* %3, i64 %5)
  %7 = bitcast i8* %6 to %Token*
  %8 = load %"RawPtr[Token]"** %this.addr
  %9 = getelementptr inbounds %"RawPtr[Token]"* %8, i32 0, i32 0
  store %Token* %7, %Token** %9
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=254"(%"RawPtr[Token]"* %this, %"RawPtr[Token]" %other) #2 {
  %this.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %this, %"RawPtr[Token]"** %this.addr
  %other.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %other, %"RawPtr[Token]"* %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[Token]"* %other.addr, i32 0, i32 0
  %2 = load %Token** %1
  %3 = load %"RawPtr[Token]"** %this.addr
  %4 = getelementptr inbounds %"RawPtr[Token]"* %3, i32 0, i32 0
  store %Token* %2, %Token** %4
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advance255(%"RawPtr[Token]"* sret %_result, %"RawPtr[Token]" %this, i64 %n) #3 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %this.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %this, %"RawPtr[Token]"* %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %_result.addr
  %2 = load %"RawPtr[Token]"* %this.addr
  %3 = call i8* @bytePtr251(%"RawPtr[Token]" %2)
  %4 = load i64* %n.addr
  %5 = call i64 @"*"(i64 %4, i64 72)
  %6 = call i8* @ptrAdd(i8* %3, i64 %5)
  call void @ctor256(%"RawPtr[Token]"* %1, i8* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor256(%"RawPtr[Token]"* %this, i8* %byteRef) #3 {
  %this.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %this, %"RawPtr[Token]"** %this.addr
  %byteRef.addr = alloca i8*
  store i8* %byteRef, i8** %byteRef.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %byteRef.addr
  %2 = bitcast i8* %1 to %Token*
  %3 = load %"RawPtr[Token]"** %this.addr
  %4 = getelementptr inbounds %"RawPtr[Token]"* %3, i32 0, i32 0
  store %Token* %2, %Token** %4
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"pre_!!257"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %r) #3 {
  %r.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %r, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %r.addr
  %2 = call i1 @isEmpty258(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1)
  %3 = xor i1 true, %2
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty258(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #3 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret i1 false
}

; Function Attrs: inlinehint nounwind
define internal void @"+=259"(%"Vector[Token]"* %this, %Token* %value) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %value.addr = alloca %Token*
  store %Token* %value, %Token** %value.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %this.addr
  %2 = load %Token** %value.addr
  call void @pushBack260(%"Vector[Token]"* %1, %Token* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @pushBack260(%"Vector[Token]"* %this, %Token* %value) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %value.addr = alloca %Token*
  store %Token* %value, %Token** %value.addr
  %t = alloca i64
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 1
  %3 = load %"Vector[Token]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Token]"* %3, i32 0, i32 2
  %5 = load %"RawPtr[Token]"* %4
  %6 = call i1 @"==261"(%"RawPtr[Token]"* %2, %"RawPtr[Token]" %5)
  br i1 %6, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %7 = load %"Vector[Token]"** %this.addr
  %8 = call i64 @capacity249(%"Vector[Token]"* %7)
  %9 = call i64 @"*230"(i32 2, i64 %8)
  store i64 %9, i64* %t
  br label %if_block1

if_end:                                           ; preds = %if_end3, %if_block
  %10 = load %"Vector[Token]"** %this.addr
  %11 = getelementptr inbounds %"Vector[Token]"* %10, i32 0, i32 1
  %12 = load %"RawPtr[Token]"* %11
  %13 = call %Token* @value264(%"RawPtr[Token]" %12)
  %14 = load %Token** %value.addr
  call void @ctor262(%Token* %13, %Token* %14)
  %15 = load %"Vector[Token]"** %this.addr
  %16 = getelementptr inbounds %"Vector[Token]"* %15, i32 0, i32 1
  %17 = load %"Vector[Token]"** %this.addr
  %18 = getelementptr inbounds %"Vector[Token]"* %17, i32 0, i32 1
  %19 = load %"RawPtr[Token]"* %18
  call void @advance265(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]" %19)
  %20 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=254"(%"RawPtr[Token]"* %16, %"RawPtr[Token]" %20)
  ret void

if_block1:                                        ; preds = %if_then
  %21 = load i64* %t
  %22 = call i1 @"<229"(i64 %21, i32 2)
  br i1 %22, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 2, i64* %t
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %23 = load %"Vector[Token]"** %this.addr
  %24 = load i64* %t
  call void @reserve248(%"Vector[Token]"* %23, i64 %24)
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==261"(%"RawPtr[Token]"* %this, %"RawPtr[Token]" %other) #3 {
  %this.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %this, %"RawPtr[Token]"** %this.addr
  %other.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %other, %"RawPtr[Token]"* %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[Token]"* %1, i32 0, i32 0
  %3 = load %Token** %2
  %4 = bitcast %Token* %3 to i8*
  %5 = getelementptr inbounds %"RawPtr[Token]"* %other.addr, i32 0, i32 0
  %6 = load %Token** %5
  %7 = bitcast %Token* %6 to i8*
  %8 = call i1 @implOpRefEQ(i8* %4, i8* %7)
  ret i1 %8
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor262(%Token* %this, %Token* %other) #2 {
  %this.addr = alloca %Token*
  store %Token* %this, %Token** %this.addr
  %other.addr = alloca %Token*
  store %Token* %other, %Token** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token** %this.addr
  %2 = getelementptr inbounds %Token* %1, i32 0, i32 0
  %3 = load %Token** %other.addr
  %4 = getelementptr inbounds %Token* %3, i32 0, i32 0
  call void @ctor217(%Location* %2, %Location* %4)
  %5 = load %Token** %this.addr
  %6 = getelementptr inbounds %Token* %5, i32 0, i32 1
  %7 = load %Token** %other.addr
  %8 = getelementptr inbounds %Token* %7, i32 0, i32 1
  call void @ctor263(%TokenType* %6, %TokenType* %8)
  %9 = load %Token** %this.addr
  %10 = getelementptr inbounds %Token* %9, i32 0, i32 2
  %11 = load %Token** %other.addr
  %12 = getelementptr inbounds %Token* %11, i32 0, i32 2
  call void @ctor209(%String* %10, %String* %12)
  %13 = load %Token** %other.addr
  %14 = getelementptr inbounds %Token* %13, i32 0, i32 3
  %15 = load i64* %14
  %16 = load %Token** %this.addr
  %17 = getelementptr inbounds %Token* %16, i32 0, i32 3
  store i64 %15, i64* %17
  %18 = load %Token** %other.addr
  %19 = getelementptr inbounds %Token* %18, i32 0, i32 4
  %20 = load double* %19
  %21 = load %Token** %this.addr
  %22 = getelementptr inbounds %Token* %21, i32 0, i32 4
  store double %20, double* %22
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor263(%TokenType* %this, %TokenType* %other) #2 {
  %this.addr = alloca %TokenType*
  store %TokenType* %this, %TokenType** %this.addr
  %other.addr = alloca %TokenType*
  store %TokenType* %other, %TokenType** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %TokenType** %other.addr
  %2 = getelementptr inbounds %TokenType* %1, i32 0, i32 0
  %3 = load i32* %2
  %4 = load %TokenType** %this.addr
  %5 = getelementptr inbounds %TokenType* %4, i32 0, i32 0
  store i32 %3, i32* %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %Token* @value264(%"RawPtr[Token]" %this) #3 {
  %this.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %this, %"RawPtr[Token]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[Token]"* %this.addr, i32 0, i32 0
  %2 = load %Token** %1
  ret %Token* %2
}

; Function Attrs: inlinehint nounwind
define internal void @advance265(%"RawPtr[Token]"* sret %_result, %"RawPtr[Token]" %this) #3 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %this.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %this, %"RawPtr[Token]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %_result.addr
  %2 = load %"RawPtr[Token]"* %this.addr
  %3 = call i8* @bytePtr251(%"RawPtr[Token]" %2)
  %4 = call i8* @ptrAdd(i8* %3, i64 72)
  call void @ctor256(%"RawPtr[Token]"* %1, i8* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"post_++266"(%Token* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %r) #3 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %r.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %r, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %r.addr
  %res = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %r.addr
  call void @front267(%Token* %res, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1)
  %2 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %r.addr
  call void @popFront268(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %2)
  %3 = load %Token** %_result.addr
  call void @ctor262(%Token* %3, %Token* %res)
  call void @dtor387(%Token* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor387(%Token* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @front267(%Token* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 3
  %3 = load i1* %2
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %5, i32 0, i32 3
  store i1 true, i1* %6
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @popFront268(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  %8 = load %Token** %_result.addr
  %9 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %10 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %9, i32 0, i32 2
  call void @ctor262(%Token* %8, %Token* %10)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popFront268(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #3 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  %"$tmpC" = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = call i1 @isEmpty269(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  br i1 %3, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5, i32 0, i32 1
  %7 = load %Location** %6
  call void @stepOver(%Location* %7)
  %8 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %9 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %8, i32 0, i32 2
  %10 = getelementptr inbounds %Token* %9, i32 0, i32 1
  call void @ctor272(%TokenType* %tmp.v, i32 0)
  call void @"=244"(%TokenType* %10, %TokenType* %tmp.v)
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %12 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11, i32 0, i32 2
  %13 = getelementptr inbounds %Token* %12, i32 0, i32 2
  call void @clear(%String* %13)
  %14 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %15 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %14, i32 0, i32 2
  %16 = getelementptr inbounds %Token* %15, i32 0, i32 0
  %17 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %18 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %17, i32 0, i32 1
  %19 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %18, i32 0, i32 1
  %20 = load %Location** %19
  call void @"=237"(%Location* %16, %Location* %20)
  br label %if_end

if_else:                                          ; preds = %if_block
  %21 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %22 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %21, i32 0, i32 2
  %23 = getelementptr inbounds %Token* %22, i32 0, i32 1
  %24 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @nextToken(%TokenType* %"$tmpC", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %24)
  call void @"=244"(%TokenType* %23, %TokenType* %"$tmpC")
  %25 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %26 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %25, i32 0, i32 2
  %27 = getelementptr inbounds %Token* %26, i32 0, i32 0
  %28 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %29 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %28, i32 0, i32 1
  %30 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %29, i32 0, i32 1
  %31 = load %Location** %30
  call void @"=237"(%Location* %27, %Location* %31)
  br label %if_end

if_end:                                           ; preds = %if_else, %if_then
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty269(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this) #3 {
  %this.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  %3 = call i1 @isEmpty270(%"RangeWithLookahead[_CharSource]"* %2)
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty270(%"RangeWithLookahead[_CharSource]"* %this) #3 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 1
  %3 = call i1 @isEmpty271(%"Vector[Char/rtct]"* %2)
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty271(%"Vector[Char/rtct]"* %this) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 0
  %3 = load %"Vector[Char/rtct]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Char/rtct]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i1 @"==207"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  ret i1 %6
}

; Function Attrs: inlinehint nounwind
define internal void @stepOver(%Location* %l) #3 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %l.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 1
  %3 = load %Location** %l.addr
  %4 = getelementptr inbounds %Location* %3, i32 0, i32 2
  call void @"=239"(%LineCol* %2, %LineCol* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor272(%TokenType* %this, i32 %fdata) #2 {
  %this.addr = alloca %TokenType*
  store %TokenType* %this, %TokenType** %this.addr
  %fdata.addr = alloca i32
  store i32 %fdata, i32* %fdata.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %fdata.addr
  %2 = load %TokenType** %this.addr
  %3 = getelementptr inbounds %TokenType* %2, i32 0, i32 0
  store i32 %1, i32* %3
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor273(%TokenType* %dest) #2 {
  %dest.addr = alloca %TokenType*
  store %TokenType* %dest, %TokenType** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @clear(%String* %this) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %tmp.v = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = load %String** %this.addr
  %3 = getelementptr inbounds %String* %2, i32 0, i32 0
  %4 = load %"RawPtr[Char/rtct]"* %3
  %5 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %4)
  %6 = load %String** %this.addr
  %7 = getelementptr inbounds %String* %6, i32 0, i32 1
  %8 = load %"RawPtr[Char/rtct]"* %7
  %9 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %8)
  call void @ctor88(%StringRef* %tmp.v, i8* %5, i8* %9)
  %10 = load %StringRef* %tmp.v
  call void @remove(%String* %1, %StringRef %10)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @remove(%String* %this, %StringRef %range) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %range.addr = alloca %StringRef
  store %StringRef %range, %StringRef* %range.addr
  %rSize = alloca i64
  %rBegin = alloca %"RawPtr[Char/rtct]"
  %rEnd = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC1" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = call i64 @size(%StringRef* %range.addr)
  store i64 %1, i64* %rSize
  %2 = load %StringRef* %range.addr
  call void @_frontPtr(%"RawPtr[Char/rtct]"* %rBegin, %StringRef %2)
  %3 = load %"RawPtr[Char/rtct]"* %rBegin
  %4 = load i64* %rSize
  store i64 %4, i64* %tmp.v
  %5 = load i64* %tmp.v
  call void @advance(%"RawPtr[Char/rtct]"* %rEnd, %"RawPtr[Char/rtct]" %3, i64 %5)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %6 = load %String** %this.addr
  %7 = getelementptr inbounds %String* %6, i32 0, i32 1
  %8 = load %"RawPtr[Char/rtct]"* %7
  %9 = call i1 @"==207"(%"RawPtr[Char/rtct]"* %rEnd, %"RawPtr[Char/rtct]" %8)
  %10 = xor i1 true, %9
  br i1 %10, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %11 = load %"RawPtr[Char/rtct]"* %rBegin
  %12 = call i8* @value(%"RawPtr[Char/rtct]" %11)
  %13 = load i8* %12
  %14 = load %"RawPtr[Char/rtct]"* %rEnd
  %15 = call i8* @value(%"RawPtr[Char/rtct]" %14)
  %16 = load i8* %15
  %17 = load %"RawPtr[Char/rtct]"* %rBegin
  %18 = call i8* @value(%"RawPtr[Char/rtct]" %17)
  store i8 %16, i8* %18
  %19 = load %"RawPtr[Char/rtct]"* %rBegin
  call void @advance208(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %19)
  %20 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=205"(%"RawPtr[Char/rtct]"* %rBegin, %"RawPtr[Char/rtct]" %20)
  %21 = load %"RawPtr[Char/rtct]"* %rEnd
  call void @advance208(%"RawPtr[Char/rtct]"* %"$tmpC1", %"RawPtr[Char/rtct]" %21)
  %22 = load %"RawPtr[Char/rtct]"* %"$tmpC1"
  call void @"=205"(%"RawPtr[Char/rtct]"* %rEnd, %"RawPtr[Char/rtct]" %22)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %23 = load %String** %this.addr
  %24 = getelementptr inbounds %String* %23, i32 0, i32 1
  %25 = load %"RawPtr[Char/rtct]"* %rBegin
  call void @"=205"(%"RawPtr[Char/rtct]"* %24, %"RawPtr[Char/rtct]" %25)
  ret void
}

; Function Attrs: noinline nounwind
define void @nextToken(%TokenType* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %TokenType*
  store %TokenType* %_result, %TokenType** %_result.addr
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %loc = alloca %Location*
  %ch = alloca i8
  %ch2 = alloca i8
  %tmp.v = alloca %"$lambdaEnclosure"
  %ch14 = alloca i8
  %ch215 = alloca i8
  %tmp.v19 = alloca %"$lambdaEnclosure.0"
  %"$tmpC" = alloca %String
  %tmp.StringRef = alloca %StringRef
  %tmp.v24 = alloca %"$lambdaEnclosure.1"
  %tmp.v37 = alloca %"$lambdaEnclosure.2"
  %c1 = alloca i8
  %c2 = alloca i8
  %"$tmpForRef" = alloca %String
  %tmp.v61 = alloca %String
  %"$tmpC175" = alloca %String
  %tmp.StringRef176 = alloca %StringRef
  %tmp.StringRef177 = alloca %StringRef
  %tmp.v178 = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2, i32 0, i32 1
  %4 = load %Location** %3
  store %Location* %4, %Location** %loc
  br label %if_block

if_block:                                         ; preds = %code
  %5 = load %Location** %loc
  %6 = getelementptr inbounds %Location* %5, i32 0, i32 1
  %7 = getelementptr inbounds %LineCol* %6, i32 0, i32 0
  %8 = load i32* %7
  %9 = call i1 @"==274"(i32 %8, i32 1)
  br i1 %9, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %10 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %11 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %10, i32 0, i32 1
  %12 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %11)
  store i8 %12, i8* %ch
  %13 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %14 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %13)
  store i8 %14, i8* %ch2
  br label %if_block1

if_end:                                           ; preds = %if_end3, %cond.end
  br label %while_block

cond.true:                                        ; preds = %if_block
  %15 = load %Location** %loc
  %16 = getelementptr inbounds %Location* %15, i32 0, i32 1
  %17 = getelementptr inbounds %LineCol* %16, i32 0, i32 1
  %18 = load i32* %17
  %19 = call i1 @"==274"(i32 %18, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %19, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end

if_block1:                                        ; preds = %if_then
  %20 = load i8* %ch
  %21 = icmp eq i8 %20, 35
  br i1 %21, label %cond.true4, label %cond.false5

if_then2:                                         ; preds = %cond.end6
  %22 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %23 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %22, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %23)
  %24 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %25 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %24, i32 0, i32 1
  %26 = load %"$lambdaEnclosure"* %tmp.v
  call void @advanceIf(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %25, %"$lambdaEnclosure" %26)
  br label %if_block8

if_end3:                                          ; preds = %if_end10, %cond.end6
  br label %if_end

cond.true4:                                       ; preds = %if_block1
  %27 = load i8* %ch2
  %28 = icmp eq i8 %27, 33
  br label %cond.end6

cond.false5:                                      ; preds = %if_block1
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res7 = phi i1 [ %28, %cond.true4 ], [ false, %cond.false5 ]
  br i1 %cond.res7, label %if_then2, label %if_end3

if_block8:                                        ; preds = %if_then2
  %29 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %30 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %29, i32 0, i32 1
  %31 = call i1 @"pre_!!304"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %30)
  br i1 %31, label %if_then9, label %if_end10

if_then9:                                         ; preds = %if_block8
  %32 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %33 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %32, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %33)
  br label %if_end10

if_end10:                                         ; preds = %if_then9, %if_block8
  br label %if_end3

while_block:                                      ; preds = %while_step, %if_end
  br i1 true, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %34 = load %Location** %loc
  call void @stepOver(%Location* %34)
  %35 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %36 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %35, i32 0, i32 2
  %37 = getelementptr inbounds %Token* %36, i32 0, i32 2
  call void @clear(%String* %37)
  br label %if_block11

while_step:                                       ; preds = %dumy_block179, %if_then65, %if_end60, %if_then31, %if_then22, %if_then17
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void

if_block11:                                       ; preds = %while_body
  %38 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %39 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %38, i32 0, i32 1
  %40 = call i1 @isEmpty269(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %39)
  br i1 %40, label %if_then12, label %if_end13

if_then12:                                        ; preds = %if_block11
  %41 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %41, i32 0)
  ret void

if_end13:                                         ; preds = %dumy_block, %if_block11
  %42 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %43 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %42, i32 0, i32 1
  %44 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %43)
  store i8 %44, i8* %ch14
  %45 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %46 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %45)
  store i8 %46, i8* %ch215
  br label %if_block16

dumy_block:                                       ; No predecessors!
  br label %if_end13

if_block16:                                       ; preds = %if_end13
  %47 = load i8* %ch14
  %48 = icmp eq i8 %47, 32
  br i1 %48, label %if_then17, label %if_end18

if_then17:                                        ; preds = %if_block16
  %49 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %50 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %49, i32 0, i32 1
  %51 = load %"$lambdaEnclosure.0"* %tmp.v19
  call void @advanceIf305(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %50, %"$lambdaEnclosure.0" %51)
  br label %while_step

if_end18:                                         ; preds = %dumy_block20, %if_block16
  br label %if_block21

dumy_block20:                                     ; No predecessors!
  br label %if_end18

if_block21:                                       ; preds = %if_end18
  %52 = load i8* %ch14
  %53 = icmp eq i8 %52, 9
  br i1 %53, label %if_then22, label %if_end23

if_then22:                                        ; preds = %if_block21
  %54 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %55 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %56 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([30 x i8]* @str313, i32 0, i32 0), i8** %55
  store i8* getelementptr inbounds ([30 x i8]* @str313, i32 0, i32 29), i8** %56
  %57 = load %StringRef* %tmp.StringRef
  call void @toString312(%String* %"$tmpC", %StringRef %57)
  call void @reportError311(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %54, %String* %"$tmpC")
  call void @dtor214(%String* %"$tmpC")
  %58 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %59 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %58, i32 0, i32 1
  %60 = load %"$lambdaEnclosure.1"* %tmp.v24
  call void @advanceIf314(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %59, %"$lambdaEnclosure.1" %60)
  br label %while_step

if_end23:                                         ; preds = %dumy_block25, %if_block21
  br label %if_block26

dumy_block25:                                     ; No predecessors!
  br label %if_end23

if_block26:                                       ; preds = %if_end23
  %61 = load i8* %ch14
  %62 = icmp eq i8 %61, 10
  br i1 %62, label %if_then27, label %if_end28

if_then27:                                        ; preds = %if_block26
  %63 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %64 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %63, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %64)
  %65 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %65, i32 1)
  ret void

if_end28:                                         ; preds = %dumy_block29, %if_block26
  br label %if_block30

dumy_block29:                                     ; No predecessors!
  br label %if_end28

if_block30:                                       ; preds = %if_end28
  %66 = load i8* %ch14
  %67 = icmp eq i8 %66, 47
  br i1 %67, label %cond.true33, label %cond.false34

if_then31:                                        ; preds = %cond.end35
  %68 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %69 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %68, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %69)
  %70 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %71 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %70, i32 0, i32 1
  %72 = load %"$lambdaEnclosure.2"* %tmp.v37
  call void @advanceIf320(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %71, %"$lambdaEnclosure.2" %72)
  br label %while_step

if_end32:                                         ; preds = %dumy_block38, %cond.end35
  br label %if_block39

cond.true33:                                      ; preds = %if_block30
  %73 = load i8* %ch215
  %74 = icmp eq i8 %73, 47
  br label %cond.end35

cond.false34:                                     ; preds = %if_block30
  br label %cond.end35

cond.end35:                                       ; preds = %cond.false34, %cond.true33
  %cond.res36 = phi i1 [ %74, %cond.true33 ], [ false, %cond.false34 ]
  br i1 %cond.res36, label %if_then31, label %if_end32

dumy_block38:                                     ; No predecessors!
  br label %if_end32

if_block39:                                       ; preds = %if_end32
  %75 = load i8* %ch14
  %76 = icmp eq i8 %75, 47
  br i1 %76, label %cond.true42, label %cond.false43

if_then40:                                        ; preds = %cond.end44
  %77 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %78 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %77, i32 0, i32 1
  call void @advance326(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %78, i64 2)
  store i8 97, i8* %c1
  store i8 97, i8* %c2
  br label %while_block46

if_end41:                                         ; preds = %dumy_block63, %cond.end44
  br label %if_block64

cond.true42:                                      ; preds = %if_block39
  %79 = load i8* %ch215
  %80 = icmp eq i8 %79, 42
  br label %cond.end44

cond.false43:                                     ; preds = %if_block39
  br label %cond.end44

cond.end44:                                       ; preds = %cond.false43, %cond.true42
  %cond.res45 = phi i1 [ %80, %cond.true42 ], [ false, %cond.false43 ]
  br i1 %cond.res45, label %if_then40, label %if_end41

while_block46:                                    ; preds = %while_step48, %if_then40
  %81 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %82 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %81, i32 0, i32 1
  %83 = call i1 @"pre_!!304"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %82)
  br i1 %83, label %cond.true50, label %cond.false51

while_body47:                                     ; preds = %cond.end52
  %84 = load i8* %c2
  store i8 %84, i8* %c1
  %85 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %86 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %85, i32 0, i32 1
  %87 = call i8 @"pre_++327"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %86)
  store i8 %87, i8* %c2
  br label %while_step48

while_step48:                                     ; preds = %while_body47
  br label %while_block46

while_end49:                                      ; preds = %cond.end52
  br label %if_block58

cond.true50:                                      ; preds = %while_block46
  %88 = load i8* %c1
  %89 = icmp ne i8 %88, 42
  br i1 %89, label %cond.true53, label %cond.false54

cond.false51:                                     ; preds = %while_block46
  br label %cond.end52

cond.end52:                                       ; preds = %cond.false51, %cond.end55
  %cond.res57 = phi i1 [ %cond.res56, %cond.end55 ], [ false, %cond.false51 ]
  br i1 %cond.res57, label %while_body47, label %while_end49

cond.true53:                                      ; preds = %cond.true50
  br label %cond.end55

cond.false54:                                     ; preds = %cond.true50
  %90 = load i8* %c2
  %91 = icmp ne i8 %90, 47
  br label %cond.end55

cond.end55:                                       ; preds = %cond.false54, %cond.true53
  %cond.res56 = phi i1 [ true, %cond.true53 ], [ %91, %cond.false54 ]
  br label %cond.end52

if_block58:                                       ; preds = %while_end49
  %92 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %93 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %92, i32 0, i32 1
  %94 = call i1 @"pre_!"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %93)
  br i1 %94, label %if_then59, label %if_end60

if_then59:                                        ; preds = %if_block58
  %95 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @ctorFromCt(%String* %tmp.v61)
  %96 = load %String* %tmp.v61
  store %String %96, %String* %"$tmpForRef"
  call void @reportError311(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %95, %String* %"$tmpForRef")
  call void @dtor214(%String* %tmp.v61)
  %97 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %97, i32 0)
  ret void

if_end60:                                         ; preds = %dumy_block62, %if_block58
  %98 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %99 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %98, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %99)
  br label %while_step

dumy_block62:                                     ; No predecessors!
  br label %if_end60

dumy_block63:                                     ; No predecessors!
  br label %if_end41

if_block64:                                       ; preds = %if_end41
  %100 = load i8* %ch14
  %101 = icmp eq i8 %100, 92
  br i1 %101, label %cond.true67, label %cond.false68

if_then65:                                        ; preds = %cond.end69
  %102 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %103 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %102, i32 0, i32 1
  call void @advance326(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %103, i64 2)
  br label %while_step

if_end66:                                         ; preds = %dumy_block71, %cond.end69
  br label %if_block72

cond.true67:                                      ; preds = %if_block64
  %104 = load i8* %ch215
  %105 = icmp eq i8 %104, 10
  br label %cond.end69

cond.false68:                                     ; preds = %if_block64
  br label %cond.end69

cond.end69:                                       ; preds = %cond.false68, %cond.true67
  %cond.res70 = phi i1 [ %105, %cond.true67 ], [ false, %cond.false68 ]
  br i1 %cond.res70, label %if_then65, label %if_end66

dumy_block71:                                     ; No predecessors!
  br label %if_end66

if_block72:                                       ; preds = %if_end66
  %106 = load i8* %ch14
  %107 = icmp eq i8 %106, 39
  br i1 %107, label %if_then73, label %if_end74

if_then73:                                        ; preds = %if_block72
  %108 = load %TokenType** %_result.addr
  %109 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @parseString(%TokenType* %108, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %109, i8 39)
  ret void

if_end74:                                         ; preds = %dumy_block75, %if_block72
  br label %if_block76

dumy_block75:                                     ; No predecessors!
  br label %if_end74

if_block76:                                       ; preds = %if_end74
  %110 = load i8* %ch14
  %111 = icmp eq i8 %110, 34
  br i1 %111, label %if_then77, label %if_end78

if_then77:                                        ; preds = %if_block76
  %112 = load %TokenType** %_result.addr
  %113 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @parseString(%TokenType* %112, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %113, i8 34)
  ret void

if_end78:                                         ; preds = %dumy_block79, %if_block76
  br label %if_block80

dumy_block79:                                     ; No predecessors!
  br label %if_end78

if_block80:                                       ; preds = %if_end78
  %114 = load i8* %ch14
  %115 = icmp eq i8 %114, 60
  br i1 %115, label %cond.true83, label %cond.false84

if_then81:                                        ; preds = %cond.end85
  %116 = load %TokenType** %_result.addr
  %117 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @parseStringNE(%TokenType* %116, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %117)
  ret void

if_end82:                                         ; preds = %dumy_block87, %cond.end85
  br label %if_block88

cond.true83:                                      ; preds = %if_block80
  %118 = load i8* %ch215
  %119 = icmp eq i8 %118, 123
  br label %cond.end85

cond.false84:                                     ; preds = %if_block80
  br label %cond.end85

cond.end85:                                       ; preds = %cond.false84, %cond.true83
  %cond.res86 = phi i1 [ %119, %cond.true83 ], [ false, %cond.false84 ]
  br i1 %cond.res86, label %if_then81, label %if_end82

dumy_block87:                                     ; No predecessors!
  br label %if_end82

if_block88:                                       ; preds = %if_end82
  %120 = load i8* %ch14
  %121 = icmp eq i8 %120, 123
  br i1 %121, label %if_then89, label %if_end90

if_then89:                                        ; preds = %if_block88
  %122 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %123 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %122, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %123)
  %124 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %124, i32 25)
  ret void

if_end90:                                         ; preds = %dumy_block91, %if_block88
  br label %if_block92

dumy_block91:                                     ; No predecessors!
  br label %if_end90

if_block92:                                       ; preds = %if_end90
  %125 = load i8* %ch14
  %126 = icmp eq i8 %125, 123
  br i1 %126, label %if_then93, label %if_end94

if_then93:                                        ; preds = %if_block92
  %127 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %128 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %127, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %128)
  %129 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %129, i32 25)
  ret void

if_end94:                                         ; preds = %dumy_block95, %if_block92
  br label %if_block96

dumy_block95:                                     ; No predecessors!
  br label %if_end94

if_block96:                                       ; preds = %if_end94
  %130 = load i8* %ch14
  %131 = icmp eq i8 %130, 125
  br i1 %131, label %if_then97, label %if_end98

if_then97:                                        ; preds = %if_block96
  %132 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %133 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %132, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %133)
  %134 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %134, i32 26)
  ret void

if_end98:                                         ; preds = %dumy_block99, %if_block96
  br label %if_block100

dumy_block99:                                     ; No predecessors!
  br label %if_end98

if_block100:                                      ; preds = %if_end98
  %135 = load i8* %ch14
  %136 = icmp eq i8 %135, 91
  br i1 %136, label %if_then101, label %if_end102

if_then101:                                       ; preds = %if_block100
  %137 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %138 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %137, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %138)
  %139 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %139, i32 27)
  ret void

if_end102:                                        ; preds = %dumy_block103, %if_block100
  br label %if_block104

dumy_block103:                                    ; No predecessors!
  br label %if_end102

if_block104:                                      ; preds = %if_end102
  %140 = load i8* %ch14
  %141 = icmp eq i8 %140, 93
  br i1 %141, label %if_then105, label %if_end106

if_then105:                                       ; preds = %if_block104
  %142 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %143 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %142, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %143)
  %144 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %144, i32 28)
  ret void

if_end106:                                        ; preds = %dumy_block107, %if_block104
  br label %if_block108

dumy_block107:                                    ; No predecessors!
  br label %if_end106

if_block108:                                      ; preds = %if_end106
  %145 = load i8* %ch14
  %146 = icmp eq i8 %145, 40
  br i1 %146, label %if_then109, label %if_end110

if_then109:                                       ; preds = %if_block108
  %147 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %148 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %147, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %148)
  %149 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %149, i32 29)
  ret void

if_end110:                                        ; preds = %dumy_block111, %if_block108
  br label %if_block112

dumy_block111:                                    ; No predecessors!
  br label %if_end110

if_block112:                                      ; preds = %if_end110
  %150 = load i8* %ch14
  %151 = icmp eq i8 %150, 41
  br i1 %151, label %if_then113, label %if_end114

if_then113:                                       ; preds = %if_block112
  %152 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %153 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %152, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %153)
  %154 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %154, i32 30)
  ret void

if_end114:                                        ; preds = %dumy_block115, %if_block112
  br label %if_block116

dumy_block115:                                    ; No predecessors!
  br label %if_end114

if_block116:                                      ; preds = %if_end114
  %155 = load i8* %ch14
  %156 = icmp eq i8 %155, 59
  br i1 %156, label %if_then117, label %if_end118

if_then117:                                       ; preds = %if_block116
  %157 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %158 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %157, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %158)
  %159 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %159, i32 32)
  ret void

if_end118:                                        ; preds = %dumy_block119, %if_block116
  br label %if_block120

dumy_block119:                                    ; No predecessors!
  br label %if_end118

if_block120:                                      ; preds = %if_end118
  %160 = load i8* %ch14
  %161 = icmp eq i8 %160, 44
  br i1 %161, label %if_then121, label %if_end122

if_then121:                                       ; preds = %if_block120
  %162 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %163 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %162, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %163)
  %164 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %164, i32 33)
  ret void

if_end122:                                        ; preds = %dumy_block123, %if_block120
  br label %if_block124

dumy_block123:                                    ; No predecessors!
  br label %if_end122

if_block124:                                      ; preds = %if_end122
  %165 = load i8* %ch14
  %166 = icmp eq i8 %165, 96
  br i1 %166, label %if_then125, label %if_end126

if_then125:                                       ; preds = %if_block124
  %167 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %168 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %167, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %168)
  %169 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %169, i32 35)
  ret void

if_end126:                                        ; preds = %dumy_block127, %if_block124
  br label %if_block128

dumy_block127:                                    ; No predecessors!
  br label %if_end126

if_block128:                                      ; preds = %if_end126
  %170 = load i8* %ch14
  %171 = icmp eq i8 %170, 58
  br i1 %171, label %cond.true131, label %cond.false132

if_then129:                                       ; preds = %cond.end133
  %172 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %173 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %172, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %173)
  %174 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %174, i32 31)
  ret void

if_end130:                                        ; preds = %dumy_block135, %cond.end133
  br label %if_block136

cond.true131:                                     ; preds = %if_block128
  %175 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %176 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %175)
  %177 = call i1 @isOpChar(i8 %176)
  %178 = xor i1 true, %177
  br label %cond.end133

cond.false132:                                    ; preds = %if_block128
  br label %cond.end133

cond.end133:                                      ; preds = %cond.false132, %cond.true131
  %cond.res134 = phi i1 [ %178, %cond.true131 ], [ false, %cond.false132 ]
  br i1 %cond.res134, label %if_then129, label %if_end130

dumy_block135:                                    ; No predecessors!
  br label %if_end130

if_block136:                                      ; preds = %if_end130
  %179 = load i8* %ch14
  %180 = icmp eq i8 %179, 61
  br i1 %180, label %cond.true139, label %cond.false140

if_then137:                                       ; preds = %cond.end141
  %181 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %182 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %181, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %182)
  %183 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %183, i32 36)
  ret void

if_end138:                                        ; preds = %dumy_block143, %cond.end141
  br label %if_block144

cond.true139:                                     ; preds = %if_block136
  %184 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %185 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %184)
  %186 = call i1 @isOpChar(i8 %185)
  %187 = xor i1 true, %186
  br label %cond.end141

cond.false140:                                    ; preds = %if_block136
  br label %cond.end141

cond.end141:                                      ; preds = %cond.false140, %cond.true139
  %cond.res142 = phi i1 [ %187, %cond.true139 ], [ false, %cond.false140 ]
  br i1 %cond.res142, label %if_then137, label %if_end138

dumy_block143:                                    ; No predecessors!
  br label %if_end138

if_block144:                                      ; preds = %if_end138
  %188 = load i8* %ch14
  %189 = call i1 @isOpCharDot(i8 %188)
  br i1 %189, label %if_then145, label %if_end146

if_then145:                                       ; preds = %if_block144
  br label %if_block147

if_end146:                                        ; preds = %if_end149, %if_block144
  br label %if_block151

if_block147:                                      ; preds = %if_then145
  %190 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %191 = call i1 @parseOperator(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %190)
  br i1 %191, label %if_then148, label %if_end149

if_then148:                                       ; preds = %if_block147
  %192 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %192, i32 38)
  ret void

if_end149:                                        ; preds = %dumy_block150, %if_block147
  br label %if_end146

dumy_block150:                                    ; No predecessors!
  br label %if_end149

if_block151:                                      ; preds = %if_end146
  %193 = load i8* %ch14
  %194 = icmp eq i8 %193, 46
  br i1 %194, label %cond.true154, label %cond.false155

if_then152:                                       ; preds = %cond.end156
  %195 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %196 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %195, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %196)
  %197 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %197, i32 34)
  ret void

if_end153:                                        ; preds = %dumy_block158, %cond.end156
  br label %if_block159

cond.true154:                                     ; preds = %if_block151
  %198 = load i8* %ch215
  %199 = call i1 @isDigit(i8 %198)
  %200 = xor i1 true, %199
  br label %cond.end156

cond.false155:                                    ; preds = %if_block151
  br label %cond.end156

cond.end156:                                      ; preds = %cond.false155, %cond.true154
  %cond.res157 = phi i1 [ %200, %cond.true154 ], [ false, %cond.false155 ]
  br i1 %cond.res157, label %if_then152, label %if_end153

dumy_block158:                                    ; No predecessors!
  br label %if_end153

if_block159:                                      ; preds = %if_end153
  %201 = load i8* %ch14
  %202 = call i1 @isAlpha(i8 %201)
  br i1 %202, label %cond.true162, label %cond.false163

if_then160:                                       ; preds = %cond.end164
  %203 = load %TokenType** %_result.addr
  %204 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @parseIdentifer(%TokenType* %203, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %204)
  ret void

if_end161:                                        ; preds = %dumy_block166, %cond.end164
  br label %if_block167

cond.true162:                                     ; preds = %if_block159
  br label %cond.end164

cond.false163:                                    ; preds = %if_block159
  %205 = load i8* %ch14
  %206 = icmp eq i8 %205, 95
  br label %cond.end164

cond.end164:                                      ; preds = %cond.false163, %cond.true162
  %cond.res165 = phi i1 [ true, %cond.true162 ], [ %206, %cond.false163 ]
  br i1 %cond.res165, label %if_then160, label %if_end161

dumy_block166:                                    ; No predecessors!
  br label %if_end161

if_block167:                                      ; preds = %if_end161
  %207 = load i8* %ch14
  %208 = call i1 @isDigit(i8 %207)
  br i1 %208, label %cond.true170, label %cond.false171

if_then168:                                       ; preds = %cond.end172
  %209 = load %TokenType** %_result.addr
  %210 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @parseNumeric(%TokenType* %209, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %210)
  ret void

if_end169:                                        ; preds = %dumy_block174, %cond.end172
  %211 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %212 = getelementptr inbounds %StringRef* %tmp.StringRef176, i32 0, i32 0
  %213 = getelementptr inbounds %StringRef* %tmp.StringRef176, i32 0, i32 1
  store i8* getelementptr inbounds ([27 x i8]* @str385, i32 0, i32 0), i8** %212
  store i8* getelementptr inbounds ([27 x i8]* @str385, i32 0, i32 26), i8** %213
  %214 = load %StringRef* %tmp.StringRef176
  %215 = load i8* %ch14
  %216 = getelementptr inbounds %StringRef* %tmp.StringRef177, i32 0, i32 0
  %217 = getelementptr inbounds %StringRef* %tmp.StringRef177, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8]* @str386, i32 0, i32 0), i8** %216
  store i8* getelementptr inbounds ([4 x i8]* @str386, i32 0, i32 3), i8** %217
  %218 = load %StringRef* %tmp.StringRef177
  %219 = load i8* %ch14
  call void @_ass_32_8z(i32* %tmp.v178, i8 %219)
  %220 = load i32* %tmp.v178
  call void @toString377(%String* %"$tmpC175", %StringRef %214, i8 %215, %StringRef %218, i32 %220, i8 41)
  call void @reportError311(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %211, %String* %"$tmpC175")
  call void @dtor214(%String* %"$tmpC175")
  %221 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %222 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %221, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %222)
  %223 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %223, i32 0)
  ret void

cond.true170:                                     ; preds = %if_block167
  br label %cond.end172

cond.false171:                                    ; preds = %if_block167
  %224 = load i8* %ch14
  %225 = icmp eq i8 %224, 46
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false171, %cond.true170
  %cond.res173 = phi i1 [ true, %cond.true170 ], [ %225, %cond.false171 ]
  br i1 %cond.res173, label %if_then168, label %if_end169

dumy_block174:                                    ; No predecessors!
  br label %if_end169

dumy_block179:                                    ; No predecessors!
  br label %while_step
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==274"(i32 %x, i32 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn275(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn276(i32 %4, i32 %5)
  %7 = icmp eq i32 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i32 @cmn275(i32 %x, i32 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  ret i32 %1
}

; Function Attrs: inlinehint nounwind
define internal i32 @cmn276(i32 %x, i32 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  store i32 %1, i32* %tmp.v
  %2 = load i32* %tmp.v
  ret i32 %2
}

; Function Attrs: inlinehint nounwind
define internal i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r) #3 {
  %r.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %2 = call i8 @front277(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  ret i8 %2
}

; Function Attrs: inlinehint nounwind
define internal i8 @front277(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this) #3 {
  %this.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  %3 = call i8 @front278(%"RangeWithLookahead[_CharSource]"* %2)
  ret i8 %3
}

; Function Attrs: inlinehint nounwind
define internal i8 @front278(%"RangeWithLookahead[_CharSource]"* %this) #3 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 1
  %3 = call i8* @front279(%"Vector[Char/rtct]"* %2)
  %4 = load i8* %3
  ret i8 %4
}

; Function Attrs: inlinehint nounwind
define internal i8* @front279(%"Vector[Char/rtct]"* %this) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 0
  %3 = load %"RawPtr[Char/rtct]"* %2
  %4 = call i8* @value(%"RawPtr[Char/rtct]" %3)
  ret i8* %4
}

; Function Attrs: inlinehint nounwind
define internal i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #3 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2, i32 0, i32 0
  %4 = call i8 @peek(%"RangeWithLookahead[_CharSource]"* %3, i32 1)
  ret i8 %4
}

; Function Attrs: inlinehint nounwind
define internal i8 @peek(%"RangeWithLookahead[_CharSource]"* %this, i32 %n) #3 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  %n.addr = alloca i32
  store i32 %n, i32* %n.addr
  %"$tmpForRef" = alloca i8
  %tmp.v = alloca i64
  %tmp.v1 = alloca i8
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load i32* %n.addr
  %2 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %3 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %2, i32 0, i32 1
  %4 = call i64 @size224(%"Vector[Char/rtct]"* %3)
  %5 = call i1 @">="(i32 %1, i64 %4)
  br i1 %5, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %6 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %7 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %6, i32 0, i32 1
  %8 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %8, i32 0, i32 0
  %10 = call i8 @"post_++231"(%_CharSource* %9)
  store i8 %10, i8* %"$tmpForRef"
  call void @"+="(%"Vector[Char/rtct]"* %7, i8* %"$tmpForRef")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  br label %if_block

cond.true:                                        ; preds = %while_block
  %11 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %12 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %11, i32 0, i32 0
  %13 = call i1 @"pre_!!"(%_CharSource* %12)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %13, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end

if_block:                                         ; preds = %while_end
  %14 = load i32* %n.addr
  %15 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %16 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %15, i32 0, i32 1
  %17 = call i64 @size224(%"Vector[Char/rtct]"* %16)
  %18 = call i1 @"<282"(i32 %14, i64 %17)
  br i1 %18, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %19 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %20 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %19, i32 0, i32 1
  %21 = load i32* %n.addr
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %tmp.v
  %23 = load i64* %tmp.v
  %24 = call i8* @"()283"(%"Vector[Char/rtct]"* %20, i64 %23)
  %25 = load i8* %24
  ret i8 %25

if_else:                                          ; preds = %if_block
  store i8 0, i8* %tmp.v1
  %26 = load i8* %tmp.v1
  ret i8 %26

if_end:                                           ; preds = %dumy_block2, %dumy_block
  unreachable

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block2:                                      ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i1 @">="(i32 %x, i64 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn280(i32 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i32* %x.addr
  %6 = call i64 @cmn281(i64 %4, i32 %5)
  %7 = icmp sge i64 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @cmn280(i32 %x, i64 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = zext i32 %1 to i64
  store i64 %2, i64* %tmp.v
  %3 = load i64* %tmp.v
  ret i64 %3
}

; Function Attrs: inlinehint nounwind
define internal i64 @cmn281(i64 %x, i32 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  ret i64 %1
}

; Function Attrs: inlinehint nounwind
define internal i1 @"<282"(i32 %x, i64 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn280(i32 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i32* %x.addr
  %6 = call i64 @cmn281(i64 %4, i32 %5)
  %7 = icmp slt i64 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i8* @"()283"(%"Vector[Char/rtct]"* %this, i64 %index) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 0
  %3 = load %"RawPtr[Char/rtct]"* %2
  %4 = load i64* %index.addr
  call void @advance225(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %3, i64 %4)
  %5 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  %6 = call i8* @value(%"RawPtr[Char/rtct]" %5)
  ret i8* %6
}

; Function Attrs: inlinehint nounwind
define internal void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this) #3 {
  %this.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  %3 = call i8 @"pre_*285"(%"RangeWithLookahead[_CharSource]"* %2)
  %4 = icmp eq i8 %3, 10
  br i1 %4, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %6 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5, i32 0, i32 1
  %7 = load %Location** %6
  call void @addLines(%Location* %7, i32 1)
  br label %if_end

if_else:                                          ; preds = %if_block
  %8 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %9 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8, i32 0, i32 1
  %10 = load %Location** %9
  call void @addColumns(%Location* %10, i32 1)
  br label %if_end

if_end:                                           ; preds = %if_else, %if_then
  %11 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %12 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %11, i32 0, i32 0
  call void @popFront286(%"RangeWithLookahead[_CharSource]"* %12)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i8 @"pre_*285"(%"RangeWithLookahead[_CharSource]"* %r) #3 {
  %r.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %r, %"RangeWithLookahead[_CharSource]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"** %r.addr
  %2 = call i8 @front278(%"RangeWithLookahead[_CharSource]"* %1)
  ret i8 %2
}

; Function Attrs: inlinehint nounwind
define internal void @addLines(%Location* %l, i32 %count) #3 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  %count.addr = alloca i32
  store i32 %count, i32* %count.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %l.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 2
  %3 = getelementptr inbounds %LineCol* %2, i32 0, i32 0
  %4 = load i32* %3
  %5 = load i32* %count.addr
  %6 = call i32 @"+32"(i32 %4, i32 %5)
  %7 = load %Location** %l.addr
  %8 = getelementptr inbounds %Location* %7, i32 0, i32 2
  %9 = getelementptr inbounds %LineCol* %8, i32 0, i32 0
  store i32 %6, i32* %9
  %10 = load %Location** %l.addr
  %11 = getelementptr inbounds %Location* %10, i32 0, i32 2
  %12 = getelementptr inbounds %LineCol* %11, i32 0, i32 1
  store i32 1, i32* %12
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @addColumns(%Location* %l, i32 %count) #3 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  %count.addr = alloca i32
  store i32 %count, i32* %count.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %l.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 2
  %3 = getelementptr inbounds %LineCol* %2, i32 0, i32 1
  %4 = load i32* %3
  %5 = load i32* %count.addr
  %6 = call i32 @"+32"(i32 %4, i32 %5)
  %7 = load %Location** %l.addr
  %8 = getelementptr inbounds %Location* %7, i32 0, i32 2
  %9 = getelementptr inbounds %LineCol* %8, i32 0, i32 1
  store i32 %6, i32* %9
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popFront286(%"RangeWithLookahead[_CharSource]"* %this) #3 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  %"$tmpForRef" = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 1
  call void @remove287(%"Vector[Char/rtct]"* %2, i64 0)
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %3, i32 0, i32 1
  %5 = call i1 @isEmpty271(%"Vector[Char/rtct]"* %4)
  br i1 %5, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %6 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %7 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %6, i32 0, i32 1
  %8 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %8, i32 0, i32 0
  %10 = call i8 @"post_++231"(%_CharSource* %9)
  store i8 %10, i8* %"$tmpForRef"
  call void @"+="(%"Vector[Char/rtct]"* %7, i8* %"$tmpForRef")
  br label %if_end

if_end:                                           ; preds = %if_then, %cond.end
  ret void

cond.true:                                        ; preds = %if_block
  %11 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %12 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %11, i32 0, i32 0
  %13 = call i1 @"pre_!!"(%_CharSource* %12)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %13, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @remove287(%"Vector[Char/rtct]"* %this, i64 %index) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %r = alloca %"ContiguousMemoryRange[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %this.addr
  call void @all288(%"ContiguousMemoryRange[Char/rtct]"* %r, %"Vector[Char/rtct]"* %1)
  %2 = load i64* %index.addr
  call void @popFront290(%"ContiguousMemoryRange[Char/rtct]"* %r, i64 %2)
  %3 = load %"Vector[Char/rtct]"** %this.addr
  %4 = call i64 @size224(%"Vector[Char/rtct]"* %3)
  %5 = load i64* %index.addr
  %6 = call i64 @-61(i64 %4, i64 %5)
  %7 = call i64 @-292(i64 %6, i32 1)
  call void @popBack291(%"ContiguousMemoryRange[Char/rtct]"* %r, i64 %7)
  %8 = load %"Vector[Char/rtct]"** %this.addr
  %9 = load %"ContiguousMemoryRange[Char/rtct]"* %r
  call void @remove293(%"Vector[Char/rtct]"* %8, %"ContiguousMemoryRange[Char/rtct]" %9)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @all288(%"ContiguousMemoryRange[Char/rtct]"* sret %_result, %"Vector[Char/rtct]"* %this) #3 {
  %_result.addr = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %_result, %"ContiguousMemoryRange[Char/rtct]"** %_result.addr
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %_result.addr
  %2 = load %"Vector[Char/rtct]"** %this.addr
  %3 = getelementptr inbounds %"Vector[Char/rtct]"* %2, i32 0, i32 0
  %4 = load %"RawPtr[Char/rtct]"* %3
  %5 = load %"Vector[Char/rtct]"** %this.addr
  %6 = getelementptr inbounds %"Vector[Char/rtct]"* %5, i32 0, i32 1
  %7 = load %"RawPtr[Char/rtct]"* %6
  call void @ctor289(%"ContiguousMemoryRange[Char/rtct]"* %1, %"RawPtr[Char/rtct]" %4, %"RawPtr[Char/rtct]" %7)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor289(%"ContiguousMemoryRange[Char/rtct]"* %this, %"RawPtr[Char/rtct]" %f_begin, %"RawPtr[Char/rtct]" %f_end) #2 {
  %this.addr = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %this, %"ContiguousMemoryRange[Char/rtct]"** %this.addr
  %f_begin.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %f_begin, %"RawPtr[Char/rtct]"* %f_begin.addr
  %f_end.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %f_end, %"RawPtr[Char/rtct]"* %f_end.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %1, i32 0, i32 0
  call void @ctor211(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]"* %f_begin.addr)
  %3 = load %"ContiguousMemoryRange[Char/rtct]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %3, i32 0, i32 1
  call void @ctor211(%"RawPtr[Char/rtct]"* %4, %"RawPtr[Char/rtct]"* %f_end.addr)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront290(%"ContiguousMemoryRange[Char/rtct]"* %this, i64 %n) #2 {
  %this.addr = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %this, %"ContiguousMemoryRange[Char/rtct]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Char/rtct]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = load i64* %n.addr
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %5, i64 %7)
  %8 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=205"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack291(%"ContiguousMemoryRange[Char/rtct]"* %this, i64 %n) #2 {
  %this.addr = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %this, %"ContiguousMemoryRange[Char/rtct]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[Char/rtct]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = load i64* %n.addr
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  %8 = sub i64 0, %7
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %5, i64 %8)
  %9 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=205"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %9)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i64 @-292(i64 %x, i32 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i32* %y.addr
  %3 = call i64 @cmn85(i64 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn86(i32 %4, i64 %5)
  %7 = call i64 @_SizeType_opMinus(i64 %3, i64 %6)
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal void @remove293(%"Vector[Char/rtct]"* %this, %"ContiguousMemoryRange[Char/rtct]" %range) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  %range.addr = alloca %"ContiguousMemoryRange[Char/rtct]"
  store %"ContiguousMemoryRange[Char/rtct]" %range, %"ContiguousMemoryRange[Char/rtct]"* %range.addr
  %rBegin = alloca %"RawPtr[Char/rtct]"
  %rEnd = alloca %"RawPtr[Char/rtct]"
  %"$rangeVar" = alloca %"ContiguousMemoryRange[Char/rtct]"
  %el = alloca i8*
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC5" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"* %range.addr
  call void @frontPtr(%"RawPtr[Char/rtct]"* %rBegin, %"ContiguousMemoryRange[Char/rtct]" %1)
  %2 = load %"ContiguousMemoryRange[Char/rtct]"* %range.addr
  call void @backPtr(%"RawPtr[Char/rtct]"* %rEnd, %"ContiguousMemoryRange[Char/rtct]" %2)
  call void @ctor294(%"ContiguousMemoryRange[Char/rtct]"* %"$rangeVar", %"ContiguousMemoryRange[Char/rtct]"* %range.addr)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %3 = load %"ContiguousMemoryRange[Char/rtct]"* %"$rangeVar"
  %4 = call i1 @isEmpty295(%"ContiguousMemoryRange[Char/rtct]" %3)
  %5 = xor i1 true, %4
  br i1 %5, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %6 = load %"ContiguousMemoryRange[Char/rtct]"* %"$rangeVar"
  %7 = call i8* @front297(%"ContiguousMemoryRange[Char/rtct]" %6)
  store i8* %7, i8** %el
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @popFront298(%"ContiguousMemoryRange[Char/rtct]"* %"$rangeVar")
  br label %while_block

while_end:                                        ; preds = %while_block
  br label %while_block1

while_block1:                                     ; preds = %while_step3, %while_end
  %8 = load %"Vector[Char/rtct]"** %this.addr
  %9 = getelementptr inbounds %"Vector[Char/rtct]"* %8, i32 0, i32 1
  %10 = load %"RawPtr[Char/rtct]"* %9
  %11 = call i1 @"==207"(%"RawPtr[Char/rtct]"* %rEnd, %"RawPtr[Char/rtct]" %10)
  %12 = xor i1 true, %11
  br i1 %12, label %while_body2, label %while_end4

while_body2:                                      ; preds = %while_block1
  %13 = load %"RawPtr[Char/rtct]"* %rEnd
  %14 = call i8* @value(%"RawPtr[Char/rtct]" %13)
  %15 = load i8* %14
  %16 = load %"RawPtr[Char/rtct]"* %rBegin
  %17 = call i8* @value(%"RawPtr[Char/rtct]" %16)
  store i8 %15, i8* %17
  %18 = load %"RawPtr[Char/rtct]"* %rEnd
  %19 = call i8* @value(%"RawPtr[Char/rtct]" %18)
  %20 = load i8* %19
  %21 = load %"RawPtr[Char/rtct]"* %rBegin
  call void @advance208(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %21)
  %22 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=205"(%"RawPtr[Char/rtct]"* %rBegin, %"RawPtr[Char/rtct]" %22)
  %23 = load %"RawPtr[Char/rtct]"* %rEnd
  call void @advance208(%"RawPtr[Char/rtct]"* %"$tmpC5", %"RawPtr[Char/rtct]" %23)
  %24 = load %"RawPtr[Char/rtct]"* %"$tmpC5"
  call void @"=205"(%"RawPtr[Char/rtct]"* %rEnd, %"RawPtr[Char/rtct]" %24)
  br label %while_step3

while_step3:                                      ; preds = %while_body2
  br label %while_block1

while_end4:                                       ; preds = %while_block1
  %25 = load %"Vector[Char/rtct]"** %this.addr
  %26 = getelementptr inbounds %"Vector[Char/rtct]"* %25, i32 0, i32 1
  %27 = load %"RawPtr[Char/rtct]"* %rBegin
  call void @"=205"(%"RawPtr[Char/rtct]"* %26, %"RawPtr[Char/rtct]" %27)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @frontPtr(%"RawPtr[Char/rtct]"* sret %_result, %"ContiguousMemoryRange[Char/rtct]" %this) #3 {
  %_result.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %_result, %"RawPtr[Char/rtct]"** %_result.addr
  %this.addr = alloca %"ContiguousMemoryRange[Char/rtct]"
  store %"ContiguousMemoryRange[Char/rtct]" %this, %"ContiguousMemoryRange[Char/rtct]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %_result.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %this.addr, i32 0, i32 0
  call void @ctor211(%"RawPtr[Char/rtct]"* %1, %"RawPtr[Char/rtct]"* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @backPtr(%"RawPtr[Char/rtct]"* sret %_result, %"ContiguousMemoryRange[Char/rtct]" %this) #3 {
  %_result.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %_result, %"RawPtr[Char/rtct]"** %_result.addr
  %this.addr = alloca %"ContiguousMemoryRange[Char/rtct]"
  store %"ContiguousMemoryRange[Char/rtct]" %this, %"ContiguousMemoryRange[Char/rtct]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %_result.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %this.addr, i32 0, i32 1
  call void @ctor211(%"RawPtr[Char/rtct]"* %1, %"RawPtr[Char/rtct]"* %2)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor294(%"ContiguousMemoryRange[Char/rtct]"* %this, %"ContiguousMemoryRange[Char/rtct]"* %other) #2 {
  %this.addr = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %this, %"ContiguousMemoryRange[Char/rtct]"** %this.addr
  %other.addr = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %other, %"ContiguousMemoryRange[Char/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Char/rtct]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %3, i32 0, i32 0
  call void @ctor211(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]"* %4)
  %5 = load %"ContiguousMemoryRange[Char/rtct]"** %this.addr
  %6 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %5, i32 0, i32 1
  %7 = load %"ContiguousMemoryRange[Char/rtct]"** %other.addr
  %8 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %7, i32 0, i32 1
  call void @ctor211(%"RawPtr[Char/rtct]"* %6, %"RawPtr[Char/rtct]"* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty295(%"ContiguousMemoryRange[Char/rtct]" %this) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Char/rtct]"
  store %"ContiguousMemoryRange[Char/rtct]" %this, %"ContiguousMemoryRange[Char/rtct]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %this.addr, i32 0, i32 1
  %2 = load %"RawPtr[Char/rtct]"* %1
  %3 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %this.addr, i32 0, i32 0
  %4 = load %"RawPtr[Char/rtct]"* %3
  %5 = call i64 @diff(%"RawPtr[Char/rtct]" %2, %"RawPtr[Char/rtct]" %4)
  %6 = call i1 @"<=296"(i64 %5, i32 0)
  ret i1 %6
}

; Function Attrs: inlinehint nounwind
define internal i1 @"<=296"(i64 %x, i32 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i32* %y.addr
  %3 = call i64 @cmn90(i64 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn91(i32 %4, i64 %5)
  %7 = icmp sle i64 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i8* @front297(%"ContiguousMemoryRange[Char/rtct]" %this) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Char/rtct]"
  store %"ContiguousMemoryRange[Char/rtct]" %this, %"ContiguousMemoryRange[Char/rtct]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %this.addr, i32 0, i32 0
  %2 = load %"RawPtr[Char/rtct]"* %1
  %3 = call i8* @value(%"RawPtr[Char/rtct]" %2)
  ret i8* %3
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront298(%"ContiguousMemoryRange[Char/rtct]"* %this) #2 {
  %this.addr = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %this, %"ContiguousMemoryRange[Char/rtct]"** %this.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Char/rtct]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Char/rtct]"* %4
  call void @advance208(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %5)
  %6 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=205"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advanceIf(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"$lambdaEnclosure" %pred) #3 {
  %range.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %pred.addr = alloca %"$lambdaEnclosure"
  store %"$lambdaEnclosure" %pred, %"$lambdaEnclosure"* %pred.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %2 = call i1 @isEmpty269(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  %3 = xor i1 true, %2
  br i1 %3, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %4 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  ret void

cond.true:                                        ; preds = %while_block
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %6 = call i8 @front277(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  %7 = call i1 @"()299"(%"$lambdaEnclosure"* %pred.addr, i8 %6)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %7, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"()299"(%"$lambdaEnclosure"* %this, i8 %c) #2 {
  %this.addr = alloca %"$lambdaEnclosure"*
  store %"$lambdaEnclosure"* %this, %"$lambdaEnclosure"** %this.addr
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  %2 = icmp ne i8 %1, 10
  ret i1 %2
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor300(%"$lambdaEnclosure"* %this) #2 {
  %this.addr = alloca %"$lambdaEnclosure"*
  store %"$lambdaEnclosure"* %this, %"$lambdaEnclosure"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor301(%"$lambdaEnclosure"* %dest) #2 {
  %dest.addr = alloca %"$lambdaEnclosure"*
  store %"$lambdaEnclosure"* %dest, %"$lambdaEnclosure"** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=302"(%"$lambdaEnclosure"* %dest, %"$lambdaEnclosure"* %other) #2 {
  %dest.addr = alloca %"$lambdaEnclosure"*
  store %"$lambdaEnclosure"* %dest, %"$lambdaEnclosure"** %dest.addr
  %other.addr = alloca %"$lambdaEnclosure"*
  store %"$lambdaEnclosure"* %other, %"$lambdaEnclosure"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==303"(%"$lambdaEnclosure"* %this, %"$lambdaEnclosure"* %other) #2 {
  %this.addr = alloca %"$lambdaEnclosure"*
  store %"$lambdaEnclosure"* %this, %"$lambdaEnclosure"** %this.addr
  %other.addr = alloca %"$lambdaEnclosure"*
  store %"$lambdaEnclosure"* %other, %"$lambdaEnclosure"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret i1 true
}

; Function Attrs: inlinehint nounwind
define internal i1 @"pre_!!304"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r) #3 {
  %r.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %2 = call i1 @isEmpty269(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  %3 = xor i1 true, %2
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal void @advanceIf305(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"$lambdaEnclosure.0" %pred) #3 {
  %range.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %pred.addr = alloca %"$lambdaEnclosure.0"
  store %"$lambdaEnclosure.0" %pred, %"$lambdaEnclosure.0"* %pred.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %2 = call i1 @isEmpty269(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  %3 = xor i1 true, %2
  br i1 %3, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %4 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  ret void

cond.true:                                        ; preds = %while_block
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %6 = call i8 @front277(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  %7 = call i1 @"()306"(%"$lambdaEnclosure.0"* %pred.addr, i8 %6)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %7, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"()306"(%"$lambdaEnclosure.0"* %this, i8 %c) #2 {
  %this.addr = alloca %"$lambdaEnclosure.0"*
  store %"$lambdaEnclosure.0"* %this, %"$lambdaEnclosure.0"** %this.addr
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  %2 = icmp eq i8 %1, 32
  ret i1 %2
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor307(%"$lambdaEnclosure.0"* %this) #2 {
  %this.addr = alloca %"$lambdaEnclosure.0"*
  store %"$lambdaEnclosure.0"* %this, %"$lambdaEnclosure.0"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor308(%"$lambdaEnclosure.0"* %dest) #2 {
  %dest.addr = alloca %"$lambdaEnclosure.0"*
  store %"$lambdaEnclosure.0"* %dest, %"$lambdaEnclosure.0"** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=309"(%"$lambdaEnclosure.0"* %dest, %"$lambdaEnclosure.0"* %other) #2 {
  %dest.addr = alloca %"$lambdaEnclosure.0"*
  store %"$lambdaEnclosure.0"* %dest, %"$lambdaEnclosure.0"** %dest.addr
  %other.addr = alloca %"$lambdaEnclosure.0"*
  store %"$lambdaEnclosure.0"* %other, %"$lambdaEnclosure.0"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==310"(%"$lambdaEnclosure.0"* %this, %"$lambdaEnclosure.0"* %other) #2 {
  %this.addr = alloca %"$lambdaEnclosure.0"*
  store %"$lambdaEnclosure.0"* %this, %"$lambdaEnclosure.0"** %this.addr
  %other.addr = alloca %"$lambdaEnclosure.0"*
  store %"$lambdaEnclosure.0"* %other, %"$lambdaEnclosure.0"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret i1 true
}

; Function Attrs: inlinehint nounwind
define internal void @reportError311(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %String* %msg) #3 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %msg.addr = alloca %String*
  store %String* %msg, %String** %msg.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 4
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4, i32 0, i32 1
  %6 = load %Location** %5
  %7 = load %Location* %6
  %8 = load %String** %msg.addr
  call void @reportError(%ExternalErrorReporter* %2, %Location %7, %String* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @toString312(%String* sret %_result, %StringRef %a1) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %a1.addr = alloca %StringRef
  store %StringRef %a1, %StringRef* %a1.addr
  %s = alloca %StringOutputStream
  br label %code

code:                                             ; preds = %0
  call void @ctor196(%StringOutputStream* %s)
  %1 = call %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %a1.addr)
  %2 = load %String** %_result.addr
  %3 = getelementptr inbounds %StringOutputStream* %s, i32 0, i32 0
  call void @ctor209(%String* %2, %String* %3)
  call void @dtor213(%StringOutputStream* %s)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor213(%StringOutputStream* %s)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advanceIf314(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"$lambdaEnclosure.1" %pred) #3 {
  %range.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %pred.addr = alloca %"$lambdaEnclosure.1"
  store %"$lambdaEnclosure.1" %pred, %"$lambdaEnclosure.1"* %pred.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %2 = call i1 @isEmpty269(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  %3 = xor i1 true, %2
  br i1 %3, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %4 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  ret void

cond.true:                                        ; preds = %while_block
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %6 = call i8 @front277(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  %7 = call i1 @"()315"(%"$lambdaEnclosure.1"* %pred.addr, i8 %6)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %7, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"()315"(%"$lambdaEnclosure.1"* %this, i8 %c) #2 {
  %this.addr = alloca %"$lambdaEnclosure.1"*
  store %"$lambdaEnclosure.1"* %this, %"$lambdaEnclosure.1"** %this.addr
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  %2 = icmp eq i8 %1, 9
  ret i1 %2
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor316(%"$lambdaEnclosure.1"* %this) #2 {
  %this.addr = alloca %"$lambdaEnclosure.1"*
  store %"$lambdaEnclosure.1"* %this, %"$lambdaEnclosure.1"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor317(%"$lambdaEnclosure.1"* %dest) #2 {
  %dest.addr = alloca %"$lambdaEnclosure.1"*
  store %"$lambdaEnclosure.1"* %dest, %"$lambdaEnclosure.1"** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=318"(%"$lambdaEnclosure.1"* %dest, %"$lambdaEnclosure.1"* %other) #2 {
  %dest.addr = alloca %"$lambdaEnclosure.1"*
  store %"$lambdaEnclosure.1"* %dest, %"$lambdaEnclosure.1"** %dest.addr
  %other.addr = alloca %"$lambdaEnclosure.1"*
  store %"$lambdaEnclosure.1"* %other, %"$lambdaEnclosure.1"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==319"(%"$lambdaEnclosure.1"* %this, %"$lambdaEnclosure.1"* %other) #2 {
  %this.addr = alloca %"$lambdaEnclosure.1"*
  store %"$lambdaEnclosure.1"* %this, %"$lambdaEnclosure.1"** %this.addr
  %other.addr = alloca %"$lambdaEnclosure.1"*
  store %"$lambdaEnclosure.1"* %other, %"$lambdaEnclosure.1"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret i1 true
}

; Function Attrs: inlinehint nounwind
define internal void @advanceIf320(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"$lambdaEnclosure.2" %pred) #3 {
  %range.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %pred.addr = alloca %"$lambdaEnclosure.2"
  store %"$lambdaEnclosure.2" %pred, %"$lambdaEnclosure.2"* %pred.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %2 = call i1 @isEmpty269(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  %3 = xor i1 true, %2
  br i1 %3, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %4 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  ret void

cond.true:                                        ; preds = %while_block
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %6 = call i8 @front277(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  %7 = call i1 @"()321"(%"$lambdaEnclosure.2"* %pred.addr, i8 %6)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %7, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"()321"(%"$lambdaEnclosure.2"* %this, i8 %c) #2 {
  %this.addr = alloca %"$lambdaEnclosure.2"*
  store %"$lambdaEnclosure.2"* %this, %"$lambdaEnclosure.2"** %this.addr
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  %2 = icmp ne i8 %1, 10
  ret i1 %2
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor322(%"$lambdaEnclosure.2"* %this) #2 {
  %this.addr = alloca %"$lambdaEnclosure.2"*
  store %"$lambdaEnclosure.2"* %this, %"$lambdaEnclosure.2"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor323(%"$lambdaEnclosure.2"* %dest) #2 {
  %dest.addr = alloca %"$lambdaEnclosure.2"*
  store %"$lambdaEnclosure.2"* %dest, %"$lambdaEnclosure.2"** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=324"(%"$lambdaEnclosure.2"* %dest, %"$lambdaEnclosure.2"* %other) #2 {
  %dest.addr = alloca %"$lambdaEnclosure.2"*
  store %"$lambdaEnclosure.2"* %dest, %"$lambdaEnclosure.2"** %dest.addr
  %other.addr = alloca %"$lambdaEnclosure.2"*
  store %"$lambdaEnclosure.2"* %other, %"$lambdaEnclosure.2"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==325"(%"$lambdaEnclosure.2"* %this, %"$lambdaEnclosure.2"* %other) #2 {
  %this.addr = alloca %"$lambdaEnclosure.2"*
  store %"$lambdaEnclosure.2"* %this, %"$lambdaEnclosure.2"** %this.addr
  %other.addr = alloca %"$lambdaEnclosure.2"*
  store %"$lambdaEnclosure.2"* %other, %"$lambdaEnclosure.2"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret i1 true
}

; Function Attrs: inlinehint nounwind
define internal void @advance326(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, i64 %n) #3 {
  %range.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = call i64 @post_--80(i64* %n.addr)
  %2 = call i1 @">"(i64 %1, i32 0)
  br i1 %2, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %3 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %3)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @">"(i64 %x, i32 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i32* %y.addr
  %3 = call i64 @cmn85(i64 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn86(i32 %4, i64 %5)
  %7 = icmp sgt i64 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i8 @"pre_++327"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r) #3 {
  %r.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  %2 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %3 = call i8 @front277(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  ret i8 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @"pre_!"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r) #3 {
  %r.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %2 = call i1 @isEmpty269(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  ret i1 %2
}

; Function Attrs: inlinehint nounwind
define internal void @ctorFromCt(%String* %this) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %3 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([33 x i8]* @str329, i32 0, i32 0), i8** %2
  store i8* getelementptr inbounds ([33 x i8]* @str329, i32 0, i32 32), i8** %3
  %4 = load %StringRef* %tmp.StringRef
  store %StringRef %4, %StringRef* %"$tmpForRef"
  call void @ctor328(%String* %1, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor328(%String* %this, %StringRef* %other) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %other.addr = alloca %StringRef*
  store %StringRef* %other, %StringRef** %other.addr
  %size = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %other.addr
  %2 = call i64 @size(%StringRef* %1)
  store i64 %2, i64* %size
  %3 = load %String** %this.addr
  %4 = load i64* %size
  call void @ctor210(%String* %3, i64 %4)
  %5 = load %String** %this.addr
  %6 = getelementptr inbounds %String* %5, i32 0, i32 0
  %7 = load %"RawPtr[Char/rtct]"* %6
  %8 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %7)
  %9 = load %StringRef** %other.addr
  %10 = getelementptr inbounds %StringRef* %9, i32 0, i32 0
  %11 = load i8** %10
  %12 = load i64* %size
  call void @_spr_memcpy(i8* %8, i8* %11, i64 %12)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseString(%TokenType* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, i8 %endChar) #3 {
  %_result.addr = alloca %TokenType*
  store %TokenType* %_result, %TokenType** %_result.addr
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %endChar.addr = alloca i8
  store i8 %endChar, i8* %endChar.addr
  %"$tmpForRef" = alloca %String
  %tmp.v = alloca %String
  %"$tmpForRef7" = alloca %String
  %tmp.v8 = alloca %String
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %4 = call i1 @hasLessThan(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 1)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @ctorFromCt331(%String* %tmp.v)
  %6 = load %String* %tmp.v
  store %String %6, %String* %"$tmpForRef"
  call void @reportError311(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %5, %String* %"$tmpForRef")
  call void @dtor214(%String* %tmp.v)
  %7 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %7, i32 0)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %8 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %9 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %8, i32 0, i32 1
  %10 = call i1 @"pre_!!304"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %9)
  br i1 %10, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  br label %if_block1

while_step:                                       ; preds = %if_end3
  br label %while_block

while_end:                                        ; preds = %cond.end
  br label %if_block4

cond.true:                                        ; preds = %while_block
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %12 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11, i32 0, i32 1
  %13 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %12)
  %14 = load i8* %endChar.addr
  %15 = icmp ne i8 %13, %14
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %15, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end

if_block1:                                        ; preds = %while_body
  %16 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %17 = call i1 @checkEscapeChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %16)
  %18 = xor i1 true, %17
  br i1 %18, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  %19 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @advanceAndCapture1(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %19)
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  br label %while_step

if_block4:                                        ; preds = %while_end
  %20 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %21 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %20, i32 0, i32 1
  %22 = call i1 @"pre_!"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %21)
  br i1 %22, label %if_then5, label %if_end6

if_then5:                                         ; preds = %if_block4
  %23 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @ctorFromCt338(%String* %tmp.v8)
  %24 = load %String* %tmp.v8
  store %String %24, %String* %"$tmpForRef7"
  call void @reportError311(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %23, %String* %"$tmpForRef7")
  call void @dtor214(%String* %tmp.v8)
  %25 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %25, i32 0)
  ret void

if_end6:                                          ; preds = %dumy_block9, %if_block4
  %26 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %27 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %26, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %27)
  %28 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %28, i32 40)
  ret void

dumy_block9:                                      ; No predecessors!
  br label %if_end6
}

; Function Attrs: inlinehint nounwind
define internal i1 @hasLessThan(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, i32 %n) #3 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %n.addr = alloca i32
  store i32 %n, i32* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2, i32 0, i32 0
  %4 = load i32* %n.addr
  %5 = call i1 @hasLessThan330(%"RangeWithLookahead[_CharSource]"* %3, i32 %4)
  ret i1 %5
}

; Function Attrs: inlinehint nounwind
define internal i1 @hasLessThan330(%"RangeWithLookahead[_CharSource]"* %this, i32 %n) #3 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  %n.addr = alloca i32
  store i32 %n, i32* %n.addr
  %"$tmpForRef" = alloca i8
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load i32* %n.addr
  %2 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %3 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %2, i32 0, i32 1
  %4 = call i64 @size224(%"Vector[Char/rtct]"* %3)
  %5 = call i1 @">="(i32 %1, i64 %4)
  br i1 %5, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %6 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %7 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %6, i32 0, i32 1
  %8 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %8, i32 0, i32 0
  %10 = call i8 @"post_++231"(%_CharSource* %9)
  store i8 %10, i8* %"$tmpForRef"
  call void @"+="(%"Vector[Char/rtct]"* %7, i8* %"$tmpForRef")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  %11 = load i32* %n.addr
  %12 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %13 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %12, i32 0, i32 1
  %14 = call i64 @size224(%"Vector[Char/rtct]"* %13)
  %15 = call i1 @">="(i32 %11, i64 %14)
  ret i1 %15

cond.true:                                        ; preds = %while_block
  %16 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %17 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %16, i32 0, i32 0
  %18 = call i1 @"pre_!!"(%_CharSource* %17)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %18, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end
}

; Function Attrs: inlinehint nounwind
define internal void @ctorFromCt331(%String* %this) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %3 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([40 x i8]* @str332, i32 0, i32 0), i8** %2
  store i8* getelementptr inbounds ([40 x i8]* @str332, i32 0, i32 39), i8** %3
  %4 = load %StringRef* %tmp.StringRef
  store %StringRef %4, %StringRef* %"$tmpForRef"
  call void @ctor328(%String* %1, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: noinline nounwind
define i1 @checkEscapeChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #4 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %ch = alloca i8
  %"$tmpForRef" = alloca %String
  %tmp.v = alloca %String
  %charVal = alloca i32
  %tmp.v39 = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  store i8 %3, i8* %ch
  br label %if_block

if_block:                                         ; preds = %code
  %4 = load i8* %ch
  %5 = icmp eq i8 %4, 92
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %6 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %7 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %6, i32 0, i32 1
  %8 = call i8 @"pre_++327"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %7)
  store i8 %8, i8* %ch
  br label %if_block1

if_end:                                           ; preds = %dumy_block40, %if_block
  ret i1 false

if_block1:                                        ; preds = %if_then
  %9 = load i8* %ch
  %10 = icmp eq i8 %9, 114
  br i1 %10, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %12 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11, i32 0, i32 2
  %13 = getelementptr inbounds %Token* %12, i32 0, i32 2
  call void @"+=333"(%String* %13, i8 13)
  br label %if_end3

if_else:                                          ; preds = %if_block1
  br label %if_block4

if_end3:                                          ; preds = %if_end7, %if_then2
  %14 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %15 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %14, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %15)
  ret i1 true

if_block4:                                        ; preds = %if_else
  %16 = load i8* %ch
  %17 = icmp eq i8 %16, 110
  br i1 %17, label %if_then5, label %if_else6

if_then5:                                         ; preds = %if_block4
  %18 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %19 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %18, i32 0, i32 2
  %20 = getelementptr inbounds %Token* %19, i32 0, i32 2
  call void @"+=333"(%String* %20, i8 10)
  br label %if_end7

if_else6:                                         ; preds = %if_block4
  br label %if_block8

if_end7:                                          ; preds = %if_end11, %if_then5
  br label %if_end3

if_block8:                                        ; preds = %if_else6
  %21 = load i8* %ch
  %22 = icmp eq i8 %21, 98
  br i1 %22, label %if_then9, label %if_else10

if_then9:                                         ; preds = %if_block8
  %23 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %24 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %23, i32 0, i32 2
  %25 = getelementptr inbounds %Token* %24, i32 0, i32 2
  call void @"+=333"(%String* %25, i8 8)
  br label %if_end11

if_else10:                                        ; preds = %if_block8
  br label %if_block12

if_end11:                                         ; preds = %if_end15, %if_then9
  br label %if_end7

if_block12:                                       ; preds = %if_else10
  %26 = load i8* %ch
  %27 = icmp eq i8 %26, 102
  br i1 %27, label %if_then13, label %if_else14

if_then13:                                        ; preds = %if_block12
  %28 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %29 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %28, i32 0, i32 2
  %30 = getelementptr inbounds %Token* %29, i32 0, i32 2
  call void @"+=333"(%String* %30, i8 12)
  br label %if_end15

if_else14:                                        ; preds = %if_block12
  br label %if_block16

if_end15:                                         ; preds = %if_end19, %if_then13
  br label %if_end11

if_block16:                                       ; preds = %if_else14
  %31 = load i8* %ch
  %32 = icmp eq i8 %31, 116
  br i1 %32, label %if_then17, label %if_else18

if_then17:                                        ; preds = %if_block16
  %33 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %34 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %33, i32 0, i32 2
  %35 = getelementptr inbounds %Token* %34, i32 0, i32 2
  call void @"+=333"(%String* %35, i8 9)
  br label %if_end19

if_else18:                                        ; preds = %if_block16
  br label %if_block20

if_end19:                                         ; preds = %if_end23, %if_then17
  br label %if_end15

if_block20:                                       ; preds = %if_else18
  %36 = load i8* %ch
  %37 = icmp eq i8 %36, 92
  br i1 %37, label %if_then21, label %if_else22

if_then21:                                        ; preds = %if_block20
  %38 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %39 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %38, i32 0, i32 2
  %40 = getelementptr inbounds %Token* %39, i32 0, i32 2
  call void @"+=333"(%String* %40, i8 92)
  br label %if_end23

if_else22:                                        ; preds = %if_block20
  br label %if_block24

if_end23:                                         ; preds = %if_end27, %if_then21
  br label %if_end19

if_block24:                                       ; preds = %if_else22
  %41 = load i8* %ch
  %42 = icmp eq i8 %41, 39
  br i1 %42, label %if_then25, label %if_else26

if_then25:                                        ; preds = %if_block24
  %43 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %44 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %43, i32 0, i32 2
  %45 = getelementptr inbounds %Token* %44, i32 0, i32 2
  call void @"+=333"(%String* %45, i8 39)
  br label %if_end27

if_else26:                                        ; preds = %if_block24
  br label %if_block28

if_end27:                                         ; preds = %if_end31, %if_then25
  br label %if_end23

if_block28:                                       ; preds = %if_else26
  %46 = load i8* %ch
  %47 = icmp eq i8 %46, 34
  br i1 %47, label %if_then29, label %if_else30

if_then29:                                        ; preds = %if_block28
  %48 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %49 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %48, i32 0, i32 2
  %50 = getelementptr inbounds %Token* %49, i32 0, i32 2
  call void @"+=333"(%String* %50, i8 34)
  br label %if_end31

if_else30:                                        ; preds = %if_block28
  br label %if_block32

if_end31:                                         ; preds = %if_end35, %if_then29
  br label %if_end27

if_block32:                                       ; preds = %if_else30
  %51 = load i8* %ch
  %52 = icmp eq i8 %51, 120
  br i1 %52, label %cond.true, label %cond.false

if_then33:                                        ; preds = %cond.end
  br label %if_block36

if_else34:                                        ; preds = %cond.end
  %53 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %54 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %53, i32 0, i32 2
  %55 = getelementptr inbounds %Token* %54, i32 0, i32 2
  %56 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %57 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %56, i32 0, i32 1
  %58 = call i8 @"pre_++327"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %57)
  call void @"+=333"(%String* %55, i8 %58)
  br label %if_end35

if_end35:                                         ; preds = %if_else34, %if_end38
  br label %if_end31

cond.true:                                        ; preds = %if_block32
  br label %cond.end

cond.false:                                       ; preds = %if_block32
  %59 = load i8* %ch
  %60 = icmp eq i8 %59, 88
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ true, %cond.true ], [ %60, %cond.false ]
  br i1 %cond.res, label %if_then33, label %if_else34

if_block36:                                       ; preds = %if_then33
  %61 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %62 = call i1 @hasLessThan(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %61, i32 2)
  br i1 %62, label %if_then37, label %if_end38

if_then37:                                        ; preds = %if_block36
  %63 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @ctorFromCt335(%String* %tmp.v)
  %64 = load %String* %tmp.v
  store %String %64, %String* %"$tmpForRef"
  call void @reportError311(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %63, %String* %"$tmpForRef")
  call void @dtor214(%String* %tmp.v)
  ret i1 true

if_end38:                                         ; preds = %dumy_block, %if_block36
  %65 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %66 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %65, i32 0, i32 1
  %67 = call i8 @"pre_++327"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %66)
  %68 = call i32 @getXdigitVal(i8 %67)
  %69 = call i32 @"*337"(i32 16, i32 %68)
  store i32 %69, i32* %charVal
  %70 = load i32* %charVal
  %71 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %72 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %71, i32 0, i32 1
  %73 = call i8 @"pre_++327"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %72)
  %74 = call i32 @getXdigitVal(i8 %73)
  %75 = call i32 @"+29"(i32 %70, i32 %74)
  store i32 %75, i32* %charVal
  %76 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %77 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %76, i32 0, i32 2
  %78 = getelementptr inbounds %Token* %77, i32 0, i32 2
  %79 = load i32* %charVal
  %80 = trunc i32 %79 to i8
  store i8 %80, i8* %tmp.v39
  %81 = load i8* %tmp.v39
  call void @"+=333"(%String* %78, i8 %81)
  br label %if_end35

dumy_block:                                       ; No predecessors!
  br label %if_end38

dumy_block40:                                     ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @"+=333"(%String* %this, i8 %value) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %value.addr = alloca i8
  store i8 %value, i8* %value.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = load i8* %value.addr
  call void @pushBack334(%String* %1, i8 %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @pushBack334(%String* %this, i8 %value) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %value.addr = alloca i8
  store i8 %value, i8* %value.addr
  %t = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %String** %this.addr
  %2 = getelementptr inbounds %String* %1, i32 0, i32 1
  %3 = load %String** %this.addr
  %4 = getelementptr inbounds %String* %3, i32 0, i32 2
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i1 @"==207"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  br i1 %6, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %7 = load %String** %this.addr
  %8 = call i64 @capacity(%String* %7)
  %9 = call i64 @"*230"(i32 2, i64 %8)
  store i64 %9, i64* %t
  br label %if_block1

if_end:                                           ; preds = %if_end3, %if_block
  %10 = load i8* %value.addr
  %11 = load %String** %this.addr
  %12 = getelementptr inbounds %String* %11, i32 0, i32 1
  %13 = load %"RawPtr[Char/rtct]"* %12
  %14 = call i8* @value(%"RawPtr[Char/rtct]" %13)
  store i8 %10, i8* %14
  %15 = load %String** %this.addr
  %16 = getelementptr inbounds %String* %15, i32 0, i32 1
  %17 = load %String** %this.addr
  %18 = getelementptr inbounds %String* %17, i32 0, i32 1
  %19 = load %"RawPtr[Char/rtct]"* %18
  call void @advance208(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %19)
  %20 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=205"(%"RawPtr[Char/rtct]"* %16, %"RawPtr[Char/rtct]" %20)
  ret void

if_block1:                                        ; preds = %if_then
  %21 = load i64* %t
  %22 = call i1 @"<229"(i64 %21, i32 2)
  br i1 %22, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 2, i64* %t
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %23 = load %String** %this.addr
  %24 = load i64* %t
  call void @reserve(%String* %23, i64 %24)
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @ctorFromCt335(%String* %this) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %3 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([37 x i8]* @str336, i32 0, i32 0), i8** %2
  store i8* getelementptr inbounds ([37 x i8]* @str336, i32 0, i32 36), i8** %3
  %4 = load %StringRef* %tmp.StringRef
  store %StringRef %4, %StringRef* %"$tmpForRef"
  call void @ctor328(%String* %1, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i32 @"*337"(i32 %x, i32 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn30(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn30(i32 %4, i32 %5)
  %7 = mul i32 %3, %6
  ret i32 %7
}

; Function Attrs: inlinehint nounwind
define internal i32 @getXdigitVal(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  %tmp.v1 = alloca i32
  %tmp.v2 = alloca i32
  %tmp.v3 = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  %2 = call i1 @isDigit(i8 %1)
  br i1 %2, label %cond_alt1, label %cond_alt2

cond_alt1:                                        ; preds = %code
  %3 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %3)
  %4 = load i32* %tmp.v
  call void @_ass_32_8z(i32* %tmp.v1, i8 48)
  %5 = load i32* %tmp.v1
  %6 = call i32 @-53(i32 %4, i32 %5)
  br label %cond_end

cond_alt2:                                        ; preds = %code
  %7 = load i8* %c.addr
  %8 = call i8 @toLower(i8 %7)
  call void @_ass_32_8z(i32* %tmp.v2, i8 %8)
  %9 = load i32* %tmp.v2
  %10 = call i32 @"+29"(i32 10, i32 %9)
  call void @_ass_32_8z(i32* %tmp.v3, i8 97)
  %11 = load i32* %tmp.v3
  %12 = call i32 @-53(i32 %10, i32 %11)
  br label %cond_end

cond_end:                                         ; preds = %cond_alt2, %cond_alt1
  %cond = phi i32 [ %6, %cond_alt1 ], [ %12, %cond_alt2 ]
  br i1 %2, label %cond_destruct_alt1, label %cond_destruct_alt2

cond_destruct_alt1:                               ; preds = %cond_end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %cond_end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  ret i32 %cond

cond_destruct_alt14:                              ; preds = %dumy_block
  br label %cond_destruct_end6

cond_destruct_alt25:                              ; preds = %dumy_block
  br label %cond_destruct_end6

cond_destruct_end6:                               ; preds = %cond_destruct_alt25, %cond_destruct_alt14
  unreachable

dumy_block:                                       ; No predecessors!
  br i1 %2, label %cond_destruct_alt14, label %cond_destruct_alt25
}

; Function Attrs: inlinehint nounwind
define internal i1 @isDigit(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @isdigit(i32 %2)
  %4 = call i1 @"!=166"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @isdigit(i32)

; Function Attrs: inlinehint nounwind
define internal i8 @toLower(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i8
  %tmp.v1 = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v1, i8 %1)
  %2 = load i32* %tmp.v1
  %3 = call i32 @tolower(i32 %2)
  %4 = trunc i32 %3 to i8
  store i8 %4, i8* %tmp.v
  %5 = load i8* %tmp.v
  ret i8 %5
}

declare i32 @tolower(i32)

; Function Attrs: inlinehint nounwind
define internal void @advanceAndCapture1(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #3 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 2
  %3 = getelementptr inbounds %Token* %2, i32 0, i32 2
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  call void @"+=333"(%String* %3, i8 %6)
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %8 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctorFromCt338(%String* %this) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %3 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([40 x i8]* @str339, i32 0, i32 0), i8** %2
  store i8* getelementptr inbounds ([40 x i8]* @str339, i32 0, i32 39), i8** %3
  %4 = load %StringRef* %tmp.StringRef
  store %StringRef %4, %StringRef* %"$tmpForRef"
  call void @ctor328(%String* %1, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseStringNE(%TokenType* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %TokenType*
  store %TokenType* %_result, %TokenType** %_result.addr
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %"$tmpForRef" = alloca %String
  %tmp.v = alloca %String
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  call void @advance326(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2, i64 2)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 0, i32 1
  %5 = call i1 @"pre_!!304"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  br i1 %5, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %6 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @advanceAndCapture1(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %6)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  br label %if_block

cond.true:                                        ; preds = %while_block
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %8 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 0, i32 1
  %9 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8)
  %10 = icmp eq i8 %9, 125
  br i1 %10, label %cond.true1, label %cond.false2

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.end3
  %cond.res4 = phi i1 [ %14, %cond.end3 ], [ false, %cond.false ]
  br i1 %cond.res4, label %while_body, label %while_end

cond.true1:                                       ; preds = %cond.true
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %12 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11)
  %13 = icmp eq i8 %12, 62
  br label %cond.end3

cond.false2:                                      ; preds = %cond.true
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ %13, %cond.true1 ], [ false, %cond.false2 ]
  %14 = xor i1 true, %cond.res
  br label %cond.end

if_block:                                         ; preds = %while_end
  %15 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %16 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %15, i32 0, i32 1
  %17 = call i1 @"pre_!"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %16)
  br i1 %17, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %18 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @ctorFromCt340(%String* %tmp.v)
  %19 = load %String* %tmp.v
  store %String %19, %String* %"$tmpForRef"
  call void @reportError311(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %18, %String* %"$tmpForRef")
  call void @dtor214(%String* %tmp.v)
  %20 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %20, i32 0)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %21 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %22 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %21, i32 0, i32 1
  call void @advance326(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %22, i64 2)
  %23 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %23, i32 40)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @ctorFromCt340(%String* %this) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %3 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([40 x i8]* @str341, i32 0, i32 0), i8** %2
  store i8* getelementptr inbounds ([40 x i8]* @str341, i32 0, i32 39), i8** %3
  %4 = load %StringRef* %tmp.StringRef
  store %StringRef %4, %StringRef* %"$tmpForRef"
  call void @ctor328(%String* %1, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isOpChar(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  %2 = icmp eq i8 %1, 126
  br i1 %2, label %cond.true49, label %cond.false50

cond.true:                                        ; preds = %cond.end3
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  %3 = load i8* %c.addr
  %4 = icmp eq i8 %3, 42
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res68 = phi i1 [ true, %cond.true ], [ %4, %cond.false ]
  ret i1 %cond.res68

cond.true1:                                       ; preds = %cond.end6
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  %5 = load i8* %c.addr
  %6 = icmp eq i8 %5, 47
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res67 = phi i1 [ true, %cond.true1 ], [ %6, %cond.false2 ]
  br i1 %cond.res67, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %cond.end9
  br label %cond.end6

cond.false5:                                      ; preds = %cond.end9
  %7 = load i8* %c.addr
  %8 = icmp eq i8 %7, 63
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res66 = phi i1 [ true, %cond.true4 ], [ %8, %cond.false5 ]
  br i1 %cond.res66, label %cond.true1, label %cond.false2

cond.true7:                                       ; preds = %cond.end12
  br label %cond.end9

cond.false8:                                      ; preds = %cond.end12
  %9 = load i8* %c.addr
  %10 = icmp eq i8 %9, 62
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res65 = phi i1 [ true, %cond.true7 ], [ %10, %cond.false8 ]
  br i1 %cond.res65, label %cond.true4, label %cond.false5

cond.true10:                                      ; preds = %cond.end15
  br label %cond.end12

cond.false11:                                     ; preds = %cond.end15
  %11 = load i8* %c.addr
  %12 = icmp eq i8 %11, 60
  br label %cond.end12

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond.res64 = phi i1 [ true, %cond.true10 ], [ %12, %cond.false11 ]
  br i1 %cond.res64, label %cond.true7, label %cond.false8

cond.true13:                                      ; preds = %cond.end18
  br label %cond.end15

cond.false14:                                     ; preds = %cond.end18
  %13 = load i8* %c.addr
  %14 = icmp eq i8 %13, 58
  br label %cond.end15

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond.res63 = phi i1 [ true, %cond.true13 ], [ %14, %cond.false14 ]
  br i1 %cond.res63, label %cond.true10, label %cond.false11

cond.true16:                                      ; preds = %cond.end21
  br label %cond.end18

cond.false17:                                     ; preds = %cond.end21
  %15 = load i8* %c.addr
  %16 = icmp eq i8 %15, 92
  br label %cond.end18

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond.res62 = phi i1 [ true, %cond.true16 ], [ %16, %cond.false17 ]
  br i1 %cond.res62, label %cond.true13, label %cond.false14

cond.true19:                                      ; preds = %cond.end24
  br label %cond.end21

cond.false20:                                     ; preds = %cond.end24
  %17 = load i8* %c.addr
  %18 = icmp eq i8 %17, 124
  br label %cond.end21

cond.end21:                                       ; preds = %cond.false20, %cond.true19
  %cond.res61 = phi i1 [ true, %cond.true19 ], [ %18, %cond.false20 ]
  br i1 %cond.res61, label %cond.true16, label %cond.false17

cond.true22:                                      ; preds = %cond.end27
  br label %cond.end24

cond.false23:                                     ; preds = %cond.end27
  %19 = load i8* %c.addr
  %20 = icmp eq i8 %19, 61
  br label %cond.end24

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond.res60 = phi i1 [ true, %cond.true22 ], [ %20, %cond.false23 ]
  br i1 %cond.res60, label %cond.true19, label %cond.false20

cond.true25:                                      ; preds = %cond.end30
  br label %cond.end27

cond.false26:                                     ; preds = %cond.end30
  %21 = load i8* %c.addr
  %22 = icmp eq i8 %21, 43
  br label %cond.end27

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond.res59 = phi i1 [ true, %cond.true25 ], [ %22, %cond.false26 ]
  br i1 %cond.res59, label %cond.true22, label %cond.false23

cond.true28:                                      ; preds = %cond.end33
  br label %cond.end30

cond.false29:                                     ; preds = %cond.end33
  %23 = load i8* %c.addr
  %24 = icmp eq i8 %23, 45
  br label %cond.end30

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond.res58 = phi i1 [ true, %cond.true28 ], [ %24, %cond.false29 ]
  br i1 %cond.res58, label %cond.true25, label %cond.false26

cond.true31:                                      ; preds = %cond.end36
  br label %cond.end33

cond.false32:                                     ; preds = %cond.end36
  %25 = load i8* %c.addr
  %26 = icmp eq i8 %25, 38
  br label %cond.end33

cond.end33:                                       ; preds = %cond.false32, %cond.true31
  %cond.res57 = phi i1 [ true, %cond.true31 ], [ %26, %cond.false32 ]
  br i1 %cond.res57, label %cond.true28, label %cond.false29

cond.true34:                                      ; preds = %cond.end39
  br label %cond.end36

cond.false35:                                     ; preds = %cond.end39
  %27 = load i8* %c.addr
  %28 = icmp eq i8 %27, 94
  br label %cond.end36

cond.end36:                                       ; preds = %cond.false35, %cond.true34
  %cond.res56 = phi i1 [ true, %cond.true34 ], [ %28, %cond.false35 ]
  br i1 %cond.res56, label %cond.true31, label %cond.false32

cond.true37:                                      ; preds = %cond.end42
  br label %cond.end39

cond.false38:                                     ; preds = %cond.end42
  %29 = load i8* %c.addr
  %30 = icmp eq i8 %29, 37
  br label %cond.end39

cond.end39:                                       ; preds = %cond.false38, %cond.true37
  %cond.res55 = phi i1 [ true, %cond.true37 ], [ %30, %cond.false38 ]
  br i1 %cond.res55, label %cond.true34, label %cond.false35

cond.true40:                                      ; preds = %cond.end45
  br label %cond.end42

cond.false41:                                     ; preds = %cond.end45
  %31 = load i8* %c.addr
  %32 = icmp eq i8 %31, 36
  br label %cond.end42

cond.end42:                                       ; preds = %cond.false41, %cond.true40
  %cond.res54 = phi i1 [ true, %cond.true40 ], [ %32, %cond.false41 ]
  br i1 %cond.res54, label %cond.true37, label %cond.false38

cond.true43:                                      ; preds = %cond.end48
  br label %cond.end45

cond.false44:                                     ; preds = %cond.end48
  %33 = load i8* %c.addr
  %34 = icmp eq i8 %33, 35
  br label %cond.end45

cond.end45:                                       ; preds = %cond.false44, %cond.true43
  %cond.res53 = phi i1 [ true, %cond.true43 ], [ %34, %cond.false44 ]
  br i1 %cond.res53, label %cond.true40, label %cond.false41

cond.true46:                                      ; preds = %cond.end51
  br label %cond.end48

cond.false47:                                     ; preds = %cond.end51
  %35 = load i8* %c.addr
  %36 = icmp eq i8 %35, 64
  br label %cond.end48

cond.end48:                                       ; preds = %cond.false47, %cond.true46
  %cond.res52 = phi i1 [ true, %cond.true46 ], [ %36, %cond.false47 ]
  br i1 %cond.res52, label %cond.true43, label %cond.false44

cond.true49:                                      ; preds = %code
  br label %cond.end51

cond.false50:                                     ; preds = %code
  %37 = load i8* %c.addr
  %38 = icmp eq i8 %37, 33
  br label %cond.end51

cond.end51:                                       ; preds = %cond.false50, %cond.true49
  %cond.res = phi i1 [ true, %cond.true49 ], [ %38, %cond.false50 ]
  br i1 %cond.res, label %cond.true46, label %cond.false47
}

; Function Attrs: inlinehint nounwind
define internal i1 @isOpCharDot(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  %2 = icmp eq i8 %1, 46
  br i1 %2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  br label %cond.end

cond.false:                                       ; preds = %code
  %3 = load i8* %c.addr
  %4 = call i1 @isOpChar(i8 %3)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ true, %cond.true ], [ %4, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal i1 @parseOperator(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #3 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %ch = alloca i8
  %funptr = alloca i1 (i8)*
  %i = alloca i32
  %c = alloca i8
  %tmp.v = alloca i32
  %tmp.v4 = alloca i32
  %hasOtherDot = alloca i1
  %funptr8 = alloca i1 (i8)*
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  store i8 %3, i8* %ch
  br label %if_block

if_block:                                         ; preds = %code
  %4 = load i8* %ch
  %5 = call i1 @isOpChar(i8 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %6 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  store i1 (i8)* @isOpCharDot, i1 (i8)** %funptr
  %7 = bitcast i1 (i8)** %funptr to %"FunctionPtr1[Bool, Char]"*
  %8 = load %"FunctionPtr1[Bool, Char]"* %7
  call void @advanceAndCapture(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %6, %"FunctionPtr1[Bool, Char]" %8)
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %9 = load i8* %ch
  %10 = icmp eq i8 %9, 46
  br i1 %10, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i32 1, i32* %i
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %12 = load i32* %i
  store i32 %12, i32* %tmp.v
  %13 = load i32* %tmp.v
  %14 = call i8 @peekChar343(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11, i32 %13)
  store i8 %14, i8* %c
  br label %while_block

if_end3:                                          ; preds = %if_end7, %if_block1
  ret i1 false

while_block:                                      ; preds = %while_step, %if_then2
  %15 = load i8* %c
  %16 = call i1 @isOpChar(i8 %15)
  br i1 %16, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %17 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %18 = call i32 @"pre_++28"(i32* %i)
  store i32 %18, i32* %tmp.v4
  %19 = load i32* %tmp.v4
  %20 = call i8 @peekChar343(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %17, i32 %19)
  store i8 %20, i8* %c
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %21 = load i8* %c
  %22 = icmp eq i8 %21, 46
  store i1 %22, i1* %hasOtherDot
  br label %if_block5

if_block5:                                        ; preds = %while_end
  %23 = load i1* %hasOtherDot
  br i1 %23, label %if_then6, label %if_end7

if_then6:                                         ; preds = %if_block5
  %24 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  store i1 (i8)* @isOpCharDot, i1 (i8)** %funptr8
  %25 = bitcast i1 (i8)** %funptr8 to %"FunctionPtr1[Bool, Char]"*
  %26 = load %"FunctionPtr1[Bool, Char]"* %25
  call void @advanceAndCapture(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %24, %"FunctionPtr1[Bool, Char]" %26)
  ret i1 true

if_end7:                                          ; preds = %dumy_block9, %if_block5
  br label %if_end3

dumy_block9:                                      ; No predecessors!
  br label %if_end7
}

; Function Attrs: inlinehint nounwind
define internal void @advanceAndCapture(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"FunctionPtr1[Bool, Char]" %pred) #3 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %pred.addr = alloca %"FunctionPtr1[Bool, Char]"
  store %"FunctionPtr1[Bool, Char]" %pred, %"FunctionPtr1[Bool, Char]"* %pred.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = call i1 @"pre_!!304"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  br i1 %3, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, i32 0, i32 2
  %6 = getelementptr inbounds %Token* %5, i32 0, i32 2
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %8 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 0, i32 1
  %9 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8)
  call void @"+=333"(%String* %6, i8 %9)
  br label %while_step

while_step:                                       ; preds = %while_body
  %10 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %11 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %10, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %11)
  br label %while_block

while_end:                                        ; preds = %cond.end
  ret void

cond.true:                                        ; preds = %while_block
  %12 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %12, i32 0, i32 1
  %14 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %13)
  %15 = call i1 @"()342"(%"FunctionPtr1[Bool, Char]"* %pred.addr, i8 %14)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %15, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end
}

; Function Attrs: inlinehint nounwind
define internal i1 @"()342"(%"FunctionPtr1[Bool, Char]"* %this, i8 %p1) #3 {
  %this.addr = alloca %"FunctionPtr1[Bool, Char]"*
  store %"FunctionPtr1[Bool, Char]"* %this, %"FunctionPtr1[Bool, Char]"** %this.addr
  %p1.addr = alloca i8
  store i8 %p1, i8* %p1.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"FunctionPtr1[Bool, Char]"** %this.addr
  %2 = load i8* %p1.addr
  %3 = bitcast %"FunctionPtr1[Bool, Char]"* %1 to i1 (i8)**
  %4 = load i1 (i8)** %3
  %5 = call i1 %4(i8 %2)
  ret i1 %5
}

; Function Attrs: inlinehint nounwind
define internal i8 @peekChar343(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, i32 %n) #3 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %n.addr = alloca i32
  store i32 %n, i32* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2, i32 0, i32 0
  %4 = load i32* %n.addr
  %5 = call i8 @peek(%"RangeWithLookahead[_CharSource]"* %3, i32 %4)
  ret i8 %5
}

; Function Attrs: inlinehint nounwind
define internal i1 @isAlpha(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @isalpha(i32 %2)
  %4 = call i1 @"!=166"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @isalpha(i32)

; Function Attrs: noinline nounwind
define void @parseIdentifer(%TokenType* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %TokenType*
  store %TokenType* %_result, %TokenType** %_result.addr
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %allowSymbolChars = alloca i1
  %firstDot = alloca i1
  %ch = alloca i8
  %data = alloca %StringRef*
  %"$tmpC" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  %tmp.StringRef24 = alloca %StringRef
  %tmp.StringRef30 = alloca %StringRef
  %tmp.StringRef36 = alloca %StringRef
  %tmp.StringRef42 = alloca %StringRef
  %tmp.StringRef48 = alloca %StringRef
  %tmp.StringRef54 = alloca %StringRef
  %tmp.StringRef60 = alloca %StringRef
  %tmp.StringRef66 = alloca %StringRef
  %tmp.StringRef72 = alloca %StringRef
  %tmp.StringRef78 = alloca %StringRef
  %tmp.StringRef84 = alloca %StringRef
  %tmp.StringRef90 = alloca %StringRef
  %tmp.StringRef96 = alloca %StringRef
  %tmp.StringRef102 = alloca %StringRef
  %tmp.StringRef108 = alloca %StringRef
  %tmp.StringRef114 = alloca %StringRef
  %tmp.StringRef120 = alloca %StringRef
  %tmp.StringRef126 = alloca %StringRef
  %tmp.StringRef132 = alloca %StringRef
  %tmp.StringRef138 = alloca %StringRef
  %tmp.StringRef144 = alloca %StringRef
  %tmp.StringRef150 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  store i1 false, i1* %allowSymbolChars
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 2
  %3 = getelementptr inbounds %Token* %2, i32 0, i32 2
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  call void @"+=333"(%String* %3, i8 %6)
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %8 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8)
  store i1 true, i1* %firstDot
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %9 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %10 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %9, i32 0, i32 1
  %11 = call i1 @"pre_!!304"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %10)
  br i1 %11, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %12 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %12, i32 0, i32 1
  %14 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %13)
  store i8 %14, i8* %ch
  br label %if_block

while_step:                                       ; preds = %if_end7
  %15 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %16 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %15, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %16)
  br label %while_block

while_end:                                        ; preds = %if_then, %while_block
  %17 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %18 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %17, i32 0, i32 2
  %19 = getelementptr inbounds %Token* %18, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC", %String* %19)
  store %StringRef* %"$tmpC", %StringRef** %data
  br label %if_block16

if_block:                                         ; preds = %while_body
  %20 = load i8* %ch
  %21 = call i1 @isAlpha(i8 %20)
  %22 = xor i1 true, %21
  br i1 %22, label %cond.true1, label %cond.false2

if_then:                                          ; preds = %cond.end
  br label %while_end

if_end:                                           ; preds = %dumy_block, %cond.end
  %23 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %24 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %23, i32 0, i32 2
  %25 = getelementptr inbounds %Token* %24, i32 0, i32 2
  %26 = load i8* %ch
  call void @"+=333"(%String* %25, i8 %26)
  br label %if_block5

cond.true:                                        ; preds = %cond.end3
  %27 = load i8* %ch
  %28 = call i1 @isDigit(i8 %27)
  %29 = xor i1 true, %28
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res4 = phi i1 [ %29, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res4, label %if_then, label %if_end

cond.true1:                                       ; preds = %if_block
  %30 = load i8* %ch
  %31 = icmp ne i8 %30, 95
  br label %cond.end3

cond.false2:                                      ; preds = %if_block
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ %31, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res, label %cond.true, label %cond.false

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block5:                                        ; preds = %if_end
  %32 = load i8* %ch
  %33 = icmp eq i8 %32, 95
  br i1 %33, label %cond.true8, label %cond.false9

if_then6:                                         ; preds = %cond.end10
  %34 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %35 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %34, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %35)
  br label %if_block12

if_end7:                                          ; preds = %if_end14, %cond.end10
  br label %while_step

cond.true8:                                       ; preds = %if_block5
  %36 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %37 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %36)
  %38 = call i1 @isOpCharDot(i8 %37)
  br label %cond.end10

cond.false9:                                      ; preds = %if_block5
  br label %cond.end10

cond.end10:                                       ; preds = %cond.false9, %cond.true8
  %cond.res11 = phi i1 [ %38, %cond.true8 ], [ false, %cond.false9 ]
  br i1 %cond.res11, label %if_then6, label %if_end7

if_block12:                                       ; preds = %if_then6
  %39 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %40 = call i1 @parseOperator(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %39)
  br i1 %40, label %if_then13, label %if_end14

if_then13:                                        ; preds = %if_block12
  %41 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %41, i32 37)
  ret void

if_end14:                                         ; preds = %dumy_block15, %if_block12
  br label %if_end7

dumy_block15:                                     ; No predecessors!
  br label %if_end14

if_block16:                                       ; preds = %while_end
  %42 = load %StringRef** %data
  %43 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %44 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8]* @str344, i32 0, i32 0), i8** %43
  store i8* getelementptr inbounds ([6 x i8]* @str344, i32 0, i32 5), i8** %44
  %45 = load %StringRef* %tmp.StringRef
  %46 = call i1 @"==95"(%StringRef* %42, %StringRef %45)
  br i1 %46, label %if_then17, label %if_else

if_then17:                                        ; preds = %if_block16
  %47 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %47, i32 11)
  ret void

if_else:                                          ; preds = %if_block16
  br label %if_block20

if_end18:                                         ; preds = %if_end23, %dumy_block19
  ret void

dumy_block19:                                     ; No predecessors!
  br label %if_end18

if_block20:                                       ; preds = %if_else
  %48 = load %StringRef** %data
  %49 = getelementptr inbounds %StringRef* %tmp.StringRef24, i32 0, i32 0
  %50 = getelementptr inbounds %StringRef* %tmp.StringRef24, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8]* @str345, i32 0, i32 0), i8** %49
  store i8* getelementptr inbounds ([6 x i8]* @str345, i32 0, i32 5), i8** %50
  %51 = load %StringRef* %tmp.StringRef24
  %52 = call i1 @"==95"(%StringRef* %48, %StringRef %51)
  br i1 %52, label %if_then21, label %if_else22

if_then21:                                        ; preds = %if_block20
  %53 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %53, i32 12)
  ret void

if_else22:                                        ; preds = %if_block20
  br label %if_block26

if_end23:                                         ; preds = %if_end29, %dumy_block25
  br label %if_end18

dumy_block25:                                     ; No predecessors!
  br label %if_end23

if_block26:                                       ; preds = %if_else22
  %54 = load %StringRef** %data
  %55 = getelementptr inbounds %StringRef* %tmp.StringRef30, i32 0, i32 0
  %56 = getelementptr inbounds %StringRef* %tmp.StringRef30, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8]* @str346, i32 0, i32 0), i8** %55
  store i8* getelementptr inbounds ([6 x i8]* @str346, i32 0, i32 5), i8** %56
  %57 = load %StringRef* %tmp.StringRef30
  %58 = call i1 @"==95"(%StringRef* %54, %StringRef %57)
  br i1 %58, label %if_then27, label %if_else28

if_then27:                                        ; preds = %if_block26
  %59 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %59, i32 4)
  ret void

if_else28:                                        ; preds = %if_block26
  br label %if_block32

if_end29:                                         ; preds = %if_end35, %dumy_block31
  br label %if_end23

dumy_block31:                                     ; No predecessors!
  br label %if_end29

if_block32:                                       ; preds = %if_else28
  %60 = load %StringRef** %data
  %61 = getelementptr inbounds %StringRef* %tmp.StringRef36, i32 0, i32 0
  %62 = getelementptr inbounds %StringRef* %tmp.StringRef36, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8]* @str347, i32 0, i32 0), i8** %61
  store i8* getelementptr inbounds ([8 x i8]* @str347, i32 0, i32 7), i8** %62
  %63 = load %StringRef* %tmp.StringRef36
  %64 = call i1 @"==95"(%StringRef* %60, %StringRef %63)
  br i1 %64, label %if_then33, label %if_else34

if_then33:                                        ; preds = %if_block32
  %65 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %65, i32 5)
  ret void

if_else34:                                        ; preds = %if_block32
  br label %if_block38

if_end35:                                         ; preds = %if_end41, %dumy_block37
  br label %if_end29

dumy_block37:                                     ; No predecessors!
  br label %if_end35

if_block38:                                       ; preds = %if_else34
  %66 = load %StringRef** %data
  %67 = getelementptr inbounds %StringRef* %tmp.StringRef42, i32 0, i32 0
  %68 = getelementptr inbounds %StringRef* %tmp.StringRef42, i32 0, i32 1
  store i8* getelementptr inbounds ([9 x i8]* @str348, i32 0, i32 0), i8** %67
  store i8* getelementptr inbounds ([9 x i8]* @str348, i32 0, i32 8), i8** %68
  %69 = load %StringRef* %tmp.StringRef42
  %70 = call i1 @"==95"(%StringRef* %66, %StringRef %69)
  br i1 %70, label %if_then39, label %if_else40

if_then39:                                        ; preds = %if_block38
  %71 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %71, i32 13)
  ret void

if_else40:                                        ; preds = %if_block38
  br label %if_block44

if_end41:                                         ; preds = %if_end47, %dumy_block43
  br label %if_end35

dumy_block43:                                     ; No predecessors!
  br label %if_end41

if_block44:                                       ; preds = %if_else40
  %72 = load %StringRef** %data
  %73 = getelementptr inbounds %StringRef* %tmp.StringRef48, i32 0, i32 0
  %74 = getelementptr inbounds %StringRef* %tmp.StringRef48, i32 0, i32 1
  store i8* getelementptr inbounds ([9 x i8]* @str349, i32 0, i32 0), i8** %73
  store i8* getelementptr inbounds ([9 x i8]* @str349, i32 0, i32 8), i8** %74
  %75 = load %StringRef* %tmp.StringRef48
  %76 = call i1 @"==95"(%StringRef* %72, %StringRef %75)
  br i1 %76, label %if_then45, label %if_else46

if_then45:                                        ; preds = %if_block44
  %77 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %77, i32 6)
  ret void

if_else46:                                        ; preds = %if_block44
  br label %if_block50

if_end47:                                         ; preds = %if_end53, %dumy_block49
  br label %if_end41

dumy_block49:                                     ; No predecessors!
  br label %if_end47

if_block50:                                       ; preds = %if_else46
  %78 = load %StringRef** %data
  %79 = getelementptr inbounds %StringRef* %tmp.StringRef54, i32 0, i32 0
  %80 = getelementptr inbounds %StringRef* %tmp.StringRef54, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8]* @str350, i32 0, i32 0), i8** %79
  store i8* getelementptr inbounds ([4 x i8]* @str350, i32 0, i32 3), i8** %80
  %81 = load %StringRef* %tmp.StringRef54
  %82 = call i1 @"==95"(%StringRef* %78, %StringRef %81)
  br i1 %82, label %if_then51, label %if_else52

if_then51:                                        ; preds = %if_block50
  %83 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %83, i32 7)
  ret void

if_else52:                                        ; preds = %if_block50
  br label %if_block56

if_end53:                                         ; preds = %if_end59, %dumy_block55
  br label %if_end47

dumy_block55:                                     ; No predecessors!
  br label %if_end53

if_block56:                                       ; preds = %if_else52
  %84 = load %StringRef** %data
  %85 = getelementptr inbounds %StringRef* %tmp.StringRef60, i32 0, i32 0
  %86 = getelementptr inbounds %StringRef* %tmp.StringRef60, i32 0, i32 1
  store i8* getelementptr inbounds ([3 x i8]* @str351, i32 0, i32 0), i8** %85
  store i8* getelementptr inbounds ([3 x i8]* @str351, i32 0, i32 2), i8** %86
  %87 = load %StringRef* %tmp.StringRef60
  %88 = call i1 @"==95"(%StringRef* %84, %StringRef %87)
  br i1 %88, label %if_then57, label %if_else58

if_then57:                                        ; preds = %if_block56
  %89 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %89, i32 16)
  ret void

if_else58:                                        ; preds = %if_block56
  br label %if_block62

if_end59:                                         ; preds = %if_end65, %dumy_block61
  br label %if_end53

dumy_block61:                                     ; No predecessors!
  br label %if_end59

if_block62:                                       ; preds = %if_else58
  %90 = load %StringRef** %data
  %91 = getelementptr inbounds %StringRef* %tmp.StringRef66, i32 0, i32 0
  %92 = getelementptr inbounds %StringRef* %tmp.StringRef66, i32 0, i32 1
  store i8* getelementptr inbounds ([5 x i8]* @str352, i32 0, i32 0), i8** %91
  store i8* getelementptr inbounds ([5 x i8]* @str352, i32 0, i32 4), i8** %92
  %93 = load %StringRef* %tmp.StringRef66
  %94 = call i1 @"==95"(%StringRef* %90, %StringRef %93)
  br i1 %94, label %if_then63, label %if_else64

if_then63:                                        ; preds = %if_block62
  %95 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %95, i32 24)
  ret void

if_else64:                                        ; preds = %if_block62
  br label %if_block68

if_end65:                                         ; preds = %if_end71, %dumy_block67
  br label %if_end59

dumy_block67:                                     ; No predecessors!
  br label %if_end65

if_block68:                                       ; preds = %if_else64
  %96 = load %StringRef** %data
  %97 = getelementptr inbounds %StringRef* %tmp.StringRef72, i32 0, i32 0
  %98 = getelementptr inbounds %StringRef* %tmp.StringRef72, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8]* @str353, i32 0, i32 0), i8** %97
  store i8* getelementptr inbounds ([6 x i8]* @str353, i32 0, i32 5), i8** %98
  %99 = load %StringRef* %tmp.StringRef72
  %100 = call i1 @"==95"(%StringRef* %96, %StringRef %99)
  br i1 %100, label %if_then69, label %if_else70

if_then69:                                        ; preds = %if_block68
  %101 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %101, i32 21)
  ret void

if_else70:                                        ; preds = %if_block68
  br label %if_block74

if_end71:                                         ; preds = %if_end77, %dumy_block73
  br label %if_end65

dumy_block73:                                     ; No predecessors!
  br label %if_end71

if_block74:                                       ; preds = %if_else70
  %102 = load %StringRef** %data
  %103 = getelementptr inbounds %StringRef* %tmp.StringRef78, i32 0, i32 0
  %104 = getelementptr inbounds %StringRef* %tmp.StringRef78, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8]* @str354, i32 0, i32 0), i8** %103
  store i8* getelementptr inbounds ([8 x i8]* @str354, i32 0, i32 7), i8** %104
  %105 = load %StringRef* %tmp.StringRef78
  %106 = call i1 @"==95"(%StringRef* %102, %StringRef %105)
  br i1 %106, label %if_then75, label %if_else76

if_then75:                                        ; preds = %if_block74
  %107 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %107, i32 14)
  ret void

if_else76:                                        ; preds = %if_block74
  br label %if_block80

if_end77:                                         ; preds = %if_end83, %dumy_block79
  br label %if_end71

dumy_block79:                                     ; No predecessors!
  br label %if_end77

if_block80:                                       ; preds = %if_else76
  %108 = load %StringRef** %data
  %109 = getelementptr inbounds %StringRef* %tmp.StringRef84, i32 0, i32 0
  %110 = getelementptr inbounds %StringRef* %tmp.StringRef84, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8]* @str355, i32 0, i32 0), i8** %109
  store i8* getelementptr inbounds ([4 x i8]* @str355, i32 0, i32 3), i8** %110
  %111 = load %StringRef* %tmp.StringRef84
  %112 = call i1 @"==95"(%StringRef* %108, %StringRef %111)
  br i1 %112, label %if_then81, label %if_else82

if_then81:                                        ; preds = %if_block80
  %113 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %113, i32 15)
  ret void

if_else82:                                        ; preds = %if_block80
  br label %if_block86

if_end83:                                         ; preds = %if_end89, %dumy_block85
  br label %if_end77

dumy_block85:                                     ; No predecessors!
  br label %if_end83

if_block86:                                       ; preds = %if_else82
  %114 = load %StringRef** %data
  %115 = getelementptr inbounds %StringRef* %tmp.StringRef90, i32 0, i32 0
  %116 = getelementptr inbounds %StringRef* %tmp.StringRef90, i32 0, i32 1
  store i8* getelementptr inbounds ([7 x i8]* @str356, i32 0, i32 0), i8** %115
  store i8* getelementptr inbounds ([7 x i8]* @str356, i32 0, i32 6), i8** %116
  %117 = load %StringRef* %tmp.StringRef90
  %118 = call i1 @"==95"(%StringRef* %114, %StringRef %117)
  br i1 %118, label %if_then87, label %if_else88

if_then87:                                        ; preds = %if_block86
  %119 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %119, i32 3)
  ret void

if_else88:                                        ; preds = %if_block86
  br label %if_block92

if_end89:                                         ; preds = %if_end95, %dumy_block91
  br label %if_end83

dumy_block91:                                     ; No predecessors!
  br label %if_end89

if_block92:                                       ; preds = %if_else88
  %120 = load %StringRef** %data
  %121 = getelementptr inbounds %StringRef* %tmp.StringRef96, i32 0, i32 0
  %122 = getelementptr inbounds %StringRef* %tmp.StringRef96, i32 0, i32 1
  store i8* getelementptr inbounds ([7 x i8]* @str357, i32 0, i32 0), i8** %121
  store i8* getelementptr inbounds ([7 x i8]* @str357, i32 0, i32 6), i8** %122
  %123 = load %StringRef* %tmp.StringRef96
  %124 = call i1 @"==95"(%StringRef* %120, %StringRef %123)
  br i1 %124, label %if_then93, label %if_else94

if_then93:                                        ; preds = %if_block92
  %125 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %125, i32 2)
  ret void

if_else94:                                        ; preds = %if_block92
  br label %if_block98

if_end95:                                         ; preds = %if_end101, %dumy_block97
  br label %if_end89

dumy_block97:                                     ; No predecessors!
  br label %if_end95

if_block98:                                       ; preds = %if_else94
  %126 = load %StringRef** %data
  %127 = getelementptr inbounds %StringRef* %tmp.StringRef102, i32 0, i32 0
  %128 = getelementptr inbounds %StringRef* %tmp.StringRef102, i32 0, i32 1
  store i8* getelementptr inbounds ([5 x i8]* @str358, i32 0, i32 0), i8** %127
  store i8* getelementptr inbounds ([5 x i8]* @str358, i32 0, i32 4), i8** %128
  %129 = load %StringRef* %tmp.StringRef102
  %130 = call i1 @"==95"(%StringRef* %126, %StringRef %129)
  br i1 %130, label %if_then99, label %if_else100

if_then99:                                        ; preds = %if_block98
  %131 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %131, i32 22)
  ret void

if_else100:                                       ; preds = %if_block98
  br label %if_block104

if_end101:                                        ; preds = %if_end107, %dumy_block103
  br label %if_end95

dumy_block103:                                    ; No predecessors!
  br label %if_end101

if_block104:                                      ; preds = %if_else100
  %132 = load %StringRef** %data
  %133 = getelementptr inbounds %StringRef* %tmp.StringRef108, i32 0, i32 0
  %134 = getelementptr inbounds %StringRef* %tmp.StringRef108, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8]* @str359, i32 0, i32 0), i8** %133
  store i8* getelementptr inbounds ([8 x i8]* @str359, i32 0, i32 7), i8** %134
  %135 = load %StringRef* %tmp.StringRef108
  %136 = call i1 @"==95"(%StringRef* %132, %StringRef %135)
  br i1 %136, label %if_then105, label %if_else106

if_then105:                                       ; preds = %if_block104
  %137 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %137, i32 8)
  ret void

if_else106:                                       ; preds = %if_block104
  br label %if_block110

if_end107:                                        ; preds = %if_end113, %dumy_block109
  br label %if_end101

dumy_block109:                                    ; No predecessors!
  br label %if_end107

if_block110:                                      ; preds = %if_else106
  %138 = load %StringRef** %data
  %139 = getelementptr inbounds %StringRef* %tmp.StringRef114, i32 0, i32 0
  %140 = getelementptr inbounds %StringRef* %tmp.StringRef114, i32 0, i32 1
  store i8* getelementptr inbounds ([7 x i8]* @str360, i32 0, i32 0), i8** %139
  store i8* getelementptr inbounds ([7 x i8]* @str360, i32 0, i32 6), i8** %140
  %141 = load %StringRef* %tmp.StringRef114
  %142 = call i1 @"==95"(%StringRef* %138, %StringRef %141)
  br i1 %142, label %if_then111, label %if_else112

if_then111:                                       ; preds = %if_block110
  %143 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %143, i32 17)
  ret void

if_else112:                                       ; preds = %if_block110
  br label %if_block116

if_end113:                                        ; preds = %if_end119, %dumy_block115
  br label %if_end107

dumy_block115:                                    ; No predecessors!
  br label %if_end113

if_block116:                                      ; preds = %if_else112
  %144 = load %StringRef** %data
  %145 = getelementptr inbounds %StringRef* %tmp.StringRef120, i32 0, i32 0
  %146 = getelementptr inbounds %StringRef* %tmp.StringRef120, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8]* @str361, i32 0, i32 0), i8** %145
  store i8* getelementptr inbounds ([6 x i8]* @str361, i32 0, i32 5), i8** %146
  %147 = load %StringRef* %tmp.StringRef120
  %148 = call i1 @"==95"(%StringRef* %144, %StringRef %147)
  br i1 %148, label %if_then117, label %if_else118

if_then117:                                       ; preds = %if_block116
  %149 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %149, i32 18)
  ret void

if_else118:                                       ; preds = %if_block116
  br label %if_block122

if_end119:                                        ; preds = %if_end125, %dumy_block121
  br label %if_end113

dumy_block121:                                    ; No predecessors!
  br label %if_end119

if_block122:                                      ; preds = %if_else118
  %150 = load %StringRef** %data
  %151 = getelementptr inbounds %StringRef* %tmp.StringRef126, i32 0, i32 0
  %152 = getelementptr inbounds %StringRef* %tmp.StringRef126, i32 0, i32 1
  store i8* getelementptr inbounds ([5 x i8]* @str362, i32 0, i32 0), i8** %151
  store i8* getelementptr inbounds ([5 x i8]* @str362, i32 0, i32 4), i8** %152
  %153 = load %StringRef* %tmp.StringRef126
  %154 = call i1 @"==95"(%StringRef* %150, %StringRef %153)
  br i1 %154, label %if_then123, label %if_else124

if_then123:                                       ; preds = %if_block122
  %155 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %155, i32 23)
  ret void

if_else124:                                       ; preds = %if_block122
  br label %if_block128

if_end125:                                        ; preds = %if_end131, %dumy_block127
  br label %if_end119

dumy_block127:                                    ; No predecessors!
  br label %if_end125

if_block128:                                      ; preds = %if_else124
  %156 = load %StringRef** %data
  %157 = getelementptr inbounds %StringRef* %tmp.StringRef132, i32 0, i32 0
  %158 = getelementptr inbounds %StringRef* %tmp.StringRef132, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8]* @str363, i32 0, i32 0), i8** %157
  store i8* getelementptr inbounds ([4 x i8]* @str363, i32 0, i32 3), i8** %158
  %159 = load %StringRef* %tmp.StringRef132
  %160 = call i1 @"==95"(%StringRef* %156, %StringRef %159)
  br i1 %160, label %if_then129, label %if_else130

if_then129:                                       ; preds = %if_block128
  %161 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %161, i32 19)
  ret void

if_else130:                                       ; preds = %if_block128
  br label %if_block134

if_end131:                                        ; preds = %if_end137, %dumy_block133
  br label %if_end125

dumy_block133:                                    ; No predecessors!
  br label %if_end131

if_block134:                                      ; preds = %if_else130
  %162 = load %StringRef** %data
  %163 = getelementptr inbounds %StringRef* %tmp.StringRef138, i32 0, i32 0
  %164 = getelementptr inbounds %StringRef* %tmp.StringRef138, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8]* @str364, i32 0, i32 0), i8** %163
  store i8* getelementptr inbounds ([6 x i8]* @str364, i32 0, i32 5), i8** %164
  %165 = load %StringRef* %tmp.StringRef138
  %166 = call i1 @"==95"(%StringRef* %162, %StringRef %165)
  br i1 %166, label %if_then135, label %if_else136

if_then135:                                       ; preds = %if_block134
  %167 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %167, i32 9)
  ret void

if_else136:                                       ; preds = %if_block134
  br label %if_block140

if_end137:                                        ; preds = %if_end143, %dumy_block139
  br label %if_end131

dumy_block139:                                    ; No predecessors!
  br label %if_end137

if_block140:                                      ; preds = %if_else136
  %168 = load %StringRef** %data
  %169 = getelementptr inbounds %StringRef* %tmp.StringRef144, i32 0, i32 0
  %170 = getelementptr inbounds %StringRef* %tmp.StringRef144, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8]* @str365, i32 0, i32 0), i8** %169
  store i8* getelementptr inbounds ([4 x i8]* @str365, i32 0, i32 3), i8** %170
  %171 = load %StringRef* %tmp.StringRef144
  %172 = call i1 @"==95"(%StringRef* %168, %StringRef %171)
  br i1 %172, label %if_then141, label %if_else142

if_then141:                                       ; preds = %if_block140
  %173 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %173, i32 10)
  ret void

if_else142:                                       ; preds = %if_block140
  br label %if_block146

if_end143:                                        ; preds = %if_end149, %dumy_block145
  br label %if_end137

dumy_block145:                                    ; No predecessors!
  br label %if_end143

if_block146:                                      ; preds = %if_else142
  %174 = load %StringRef** %data
  %175 = getelementptr inbounds %StringRef* %tmp.StringRef150, i32 0, i32 0
  %176 = getelementptr inbounds %StringRef* %tmp.StringRef150, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8]* @str366, i32 0, i32 0), i8** %175
  store i8* getelementptr inbounds ([6 x i8]* @str366, i32 0, i32 5), i8** %176
  %177 = load %StringRef* %tmp.StringRef150
  %178 = call i1 @"==95"(%StringRef* %174, %StringRef %177)
  br i1 %178, label %if_then147, label %if_else148

if_then147:                                       ; preds = %if_block146
  %179 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %179, i32 20)
  ret void

if_else148:                                       ; preds = %if_block146
  %180 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %180, i32 37)
  ret void

if_end149:                                        ; preds = %dumy_block152, %dumy_block151
  br label %if_end143

dumy_block151:                                    ; No predecessors!
  br label %if_end149

dumy_block152:                                    ; No predecessors!
  br label %if_end149
}

; Function Attrs: noinline nounwind
define void @parseNumeric(%TokenType* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %TokenType*
  store %TokenType* %_result, %TokenType** %_result.addr
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %isLong = alloca i1
  %isUnsigned = alloca i1
  %isFloating = alloca i1
  %type = alloca i32
  %ch = alloca i8
  %ch2 = alloca i8
  %ch3 = alloca i8
  %funptr = alloca i1 (i8)*
  %funptr48 = alloca i1 (i8)*
  %"$tmpForRef" = alloca %String
  %tmp.v = alloca %String
  %tmp.v82 = alloca i8
  %"$tmpC" = alloca %StringRef
  %tmp.v83 = alloca %TokenType
  %tmp.v84 = alloca %TokenType
  %tmp.v96 = alloca %TokenType
  %tmp.v97 = alloca %TokenType
  %tmp.v109 = alloca %TokenType
  %tmp.v110 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  store i1 false, i1* %isLong
  store i1 false, i1* %isUnsigned
  store i1 false, i1* %isFloating
  store i32 0, i32* %type
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  store i8 %3, i8* %ch
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %5 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4)
  %6 = call i8 @toLower(i8 %5)
  store i8 %6, i8* %ch2
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %8 = call i8 @peekChar343(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 2)
  %9 = call i8 @toLower(i8 %8)
  store i8 %9, i8* %ch3
  br label %if_block

if_block:                                         ; preds = %code
  %10 = load i8* %ch
  %11 = icmp eq i8 %10, 48
  br i1 %11, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %12 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %12, i32 0, i32 1
  call void @advance326(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %13, i64 2)
  %14 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %15 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %14, i32 0, i32 1
  %16 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %17 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %16, i32 0, i32 2
  %18 = getelementptr inbounds %Token* %17, i32 0, i32 2
  %19 = call i64 @consumeDigits(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %15, i64 16, %String* %18)
  %20 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %21 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %20, i32 0, i32 2
  %22 = getelementptr inbounds %Token* %21, i32 0, i32 3
  store i64 %19, i64* %22
  br label %if_end

if_else:                                          ; preds = %cond.end
  br label %if_block1

if_end:                                           ; preds = %if_end4, %if_then
  br label %if_block59

cond.true:                                        ; preds = %if_block
  %23 = load i8* %ch2
  %24 = icmp eq i8 %23, 120
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %24, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_else

if_block1:                                        ; preds = %if_else
  %25 = load i8* %ch
  %26 = icmp eq i8 %25, 48
  br i1 %26, label %cond.true5, label %cond.false6

if_then2:                                         ; preds = %cond.end7
  %27 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %28 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %27, i32 0, i32 1
  call void @advance326(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %28, i64 2)
  %29 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %30 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %29, i32 0, i32 1
  %31 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %32 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %31, i32 0, i32 2
  %33 = getelementptr inbounds %Token* %32, i32 0, i32 2
  %34 = call i64 @consumeDigits(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %30, i64 2, %String* %33)
  %35 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %36 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %35, i32 0, i32 2
  %37 = getelementptr inbounds %Token* %36, i32 0, i32 3
  store i64 %34, i64* %37
  br label %if_end4

if_else3:                                         ; preds = %cond.end7
  br label %if_block9

if_end4:                                          ; preds = %if_end12, %if_then2
  br label %if_end

cond.true5:                                       ; preds = %if_block1
  %38 = load i8* %ch2
  %39 = icmp eq i8 %38, 98
  br label %cond.end7

cond.false6:                                      ; preds = %if_block1
  br label %cond.end7

cond.end7:                                        ; preds = %cond.false6, %cond.true5
  %cond.res8 = phi i1 [ %39, %cond.true5 ], [ false, %cond.false6 ]
  br i1 %cond.res8, label %if_then2, label %if_else3

if_block9:                                        ; preds = %if_else3
  %40 = load i8* %ch
  %41 = icmp eq i8 %40, 48
  br i1 %41, label %cond.true13, label %cond.false14

if_then10:                                        ; preds = %cond.end15
  %42 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %43 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %42, i32 0, i32 1
  call void @advance326(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %43, i64 1)
  %44 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %45 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %44, i32 0, i32 1
  %46 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %47 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %46, i32 0, i32 2
  %48 = getelementptr inbounds %Token* %47, i32 0, i32 2
  %49 = call i64 @consumeDigits(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %45, i64 8, %String* %48)
  %50 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %51 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %50, i32 0, i32 2
  %52 = getelementptr inbounds %Token* %51, i32 0, i32 3
  store i64 %49, i64* %52
  br label %if_end12

if_else11:                                        ; preds = %cond.end15
  %53 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %54 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %53, i32 0, i32 1
  %55 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %56 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %55, i32 0, i32 2
  %57 = getelementptr inbounds %Token* %56, i32 0, i32 2
  %58 = call i64 @consumeDigits(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %54, i64 10, %String* %57)
  %59 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %60 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %59, i32 0, i32 2
  %61 = getelementptr inbounds %Token* %60, i32 0, i32 3
  store i64 %58, i64* %61
  br label %if_block17

if_end12:                                         ; preds = %if_end19, %if_then10
  br label %if_end4

cond.true13:                                      ; preds = %if_block9
  %62 = load i8* %ch2
  %63 = icmp eq i8 %62, 111
  br label %cond.end15

cond.false14:                                     ; preds = %if_block9
  br label %cond.end15

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond.res16 = phi i1 [ %63, %cond.true13 ], [ false, %cond.false14 ]
  br i1 %cond.res16, label %if_then10, label %if_else11

if_block17:                                       ; preds = %if_else11
  %64 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %65 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %64, i32 0, i32 1
  %66 = call i1 @"pre_!!304"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %65)
  br i1 %66, label %if_then18, label %if_end19

if_then18:                                        ; preds = %if_block17
  %67 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %68 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %67, i32 0, i32 1
  %69 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %68)
  %70 = call i8 @toLower(i8 %69)
  store i8 %70, i8* %ch
  br label %if_block20

if_end19:                                         ; preds = %if_end22, %if_block17
  br label %if_end12

if_block20:                                       ; preds = %if_then18
  %71 = load i8* %ch
  %72 = icmp eq i8 %71, 46
  br i1 %72, label %cond.true32, label %cond.false33

if_then21:                                        ; preds = %cond.end25
  store i1 true, i1* %isFloating
  br label %if_block39

if_end22:                                         ; preds = %if_end51, %cond.end25
  br label %if_end19

cond.true23:                                      ; preds = %cond.end28
  br label %cond.end25

cond.false24:                                     ; preds = %cond.end28
  %73 = load i8* %ch
  %74 = icmp eq i8 %73, 100
  br label %cond.end25

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond.res38 = phi i1 [ true, %cond.true23 ], [ %74, %cond.false24 ]
  br i1 %cond.res38, label %if_then21, label %if_end22

cond.true26:                                      ; preds = %cond.end31
  br label %cond.end28

cond.false27:                                     ; preds = %cond.end31
  %75 = load i8* %ch
  %76 = icmp eq i8 %75, 102
  br label %cond.end28

cond.end28:                                       ; preds = %cond.false27, %cond.true26
  %cond.res37 = phi i1 [ true, %cond.true26 ], [ %76, %cond.false27 ]
  br i1 %cond.res37, label %cond.true23, label %cond.false24

cond.true29:                                      ; preds = %cond.end34
  br label %cond.end31

cond.false30:                                     ; preds = %cond.end34
  %77 = load i8* %ch
  %78 = icmp eq i8 %77, 101
  br label %cond.end31

cond.end31:                                       ; preds = %cond.false30, %cond.true29
  %cond.res36 = phi i1 [ true, %cond.true29 ], [ %78, %cond.false30 ]
  br i1 %cond.res36, label %cond.true26, label %cond.false27

cond.true32:                                      ; preds = %if_block20
  %79 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %80 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %79)
  %81 = call i1 @isOpCharDot(i8 %80)
  %82 = xor i1 true, %81
  br label %cond.end34

cond.false33:                                     ; preds = %if_block20
  br label %cond.end34

cond.end34:                                       ; preds = %cond.false33, %cond.true32
  %cond.res35 = phi i1 [ %82, %cond.true32 ], [ false, %cond.false33 ]
  br i1 %cond.res35, label %cond.true29, label %cond.false30

if_block39:                                       ; preds = %if_then21
  %83 = load i8* %ch
  %84 = icmp eq i8 %83, 46
  br i1 %84, label %if_then40, label %if_end41

if_then40:                                        ; preds = %if_block39
  %85 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @advanceAndCapture1(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %85)
  %86 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  store i1 (i8)* @isDigit, i1 (i8)** %funptr
  %87 = bitcast i1 (i8)** %funptr to %"FunctionPtr1[Bool/rtct, Char/rtct]"*
  %88 = load %"FunctionPtr1[Bool/rtct, Char/rtct]"* %87
  call void @advanceAndCaptureDigit(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %86, %"FunctionPtr1[Bool/rtct, Char/rtct]" %88)
  br label %if_end41

if_end41:                                         ; preds = %if_then40, %if_block39
  br label %if_block42

if_block42:                                       ; preds = %if_end41
  %89 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %90 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %89, i32 0, i32 1
  %91 = call i1 @"pre_!!304"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %90)
  br i1 %91, label %if_then43, label %if_end44

if_then43:                                        ; preds = %if_block42
  %92 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %93 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %92, i32 0, i32 1
  %94 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %93)
  %95 = call i8 @toLower(i8 %94)
  store i8 %95, i8* %ch
  br label %if_block45

if_end44:                                         ; preds = %if_end47, %if_block42
  br label %if_block49

if_block45:                                       ; preds = %if_then43
  %96 = load i8* %ch
  %97 = icmp eq i8 %96, 101
  br i1 %97, label %if_then46, label %if_end47

if_then46:                                        ; preds = %if_block45
  %98 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @advanceAndCapture1(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %98)
  %99 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  store i1 (i8)* @isDigit, i1 (i8)** %funptr48
  %100 = bitcast i1 (i8)** %funptr48 to %"FunctionPtr1[Bool/rtct, Char/rtct]"*
  %101 = load %"FunctionPtr1[Bool/rtct, Char/rtct]"* %100
  call void @advanceAndCaptureDigit(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %99, %"FunctionPtr1[Bool/rtct, Char/rtct]" %101)
  br label %if_end47

if_end47:                                         ; preds = %if_then46, %if_block45
  br label %if_end44

if_block49:                                       ; preds = %if_end44
  %102 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %103 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %102, i32 0, i32 1
  %104 = call i1 @"pre_!!304"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %103)
  br i1 %104, label %if_then50, label %if_end51

if_then50:                                        ; preds = %if_block49
  store i1 true, i1* %isLong
  %105 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %106 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %105, i32 0, i32 1
  %107 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %106)
  %108 = call i8 @toLower(i8 %107)
  store i8 %108, i8* %ch
  br label %if_block52

if_end51:                                         ; preds = %if_end55, %if_block49
  br label %if_end22

if_block52:                                       ; preds = %if_then50
  %109 = load i8* %ch
  %110 = icmp eq i8 %109, 102
  br i1 %110, label %if_then53, label %if_else54

if_then53:                                        ; preds = %if_block52
  store i1 false, i1* %isLong
  %111 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %112 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %111, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %112)
  br label %if_end55

if_else54:                                        ; preds = %if_block52
  br label %if_block56

if_end55:                                         ; preds = %if_end58, %if_then53
  br label %if_end51

if_block56:                                       ; preds = %if_else54
  %113 = load i8* %ch
  %114 = icmp eq i8 %113, 100
  br i1 %114, label %if_then57, label %if_end58

if_then57:                                        ; preds = %if_block56
  %115 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %116 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %115, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %116)
  br label %if_end58

if_end58:                                         ; preds = %if_then57, %if_block56
  br label %if_end55

if_block59:                                       ; preds = %if_end
  %117 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %118 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %117, i32 0, i32 2
  %119 = getelementptr inbounds %Token* %118, i32 0, i32 2
  %120 = call i1 @isEmpty373(%String* %119)
  br i1 %120, label %if_then60, label %if_end61

if_then60:                                        ; preds = %if_block59
  %121 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @ctorFromCt374(%String* %tmp.v)
  %122 = load %String* %tmp.v
  store %String %122, %String* %"$tmpForRef"
  call void @reportError311(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %121, %String* %"$tmpForRef")
  call void @dtor214(%String* %tmp.v)
  %123 = load %TokenType** %_result.addr
  call void @ctor272(%TokenType* %123, i32 0)
  ret void

if_end61:                                         ; preds = %dumy_block, %if_block59
  br label %if_block62

dumy_block:                                       ; No predecessors!
  br label %if_end61

if_block62:                                       ; preds = %if_end61
  %124 = load i1* %isFloating
  %125 = xor i1 true, %124
  br i1 %125, label %if_then63, label %if_end64

if_then63:                                        ; preds = %if_block62
  br label %if_block65

if_end64:                                         ; preds = %if_end74, %if_block62
  br label %if_block79

if_block65:                                       ; preds = %if_then63
  %126 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %127 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %126, i32 0, i32 1
  %128 = call i1 @"pre_!!304"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %127)
  br i1 %128, label %cond.true68, label %cond.false69

if_then66:                                        ; preds = %cond.end70
  store i1 true, i1* %isUnsigned
  %129 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %130 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %129, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %130)
  br label %if_end67

if_end67:                                         ; preds = %if_then66, %cond.end70
  br label %if_block72

cond.true68:                                      ; preds = %if_block65
  %131 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %132 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %131, i32 0, i32 1
  %133 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %132)
  %134 = call i8 @toLower(i8 %133)
  %135 = icmp eq i8 %134, 117
  br label %cond.end70

cond.false69:                                     ; preds = %if_block65
  br label %cond.end70

cond.end70:                                       ; preds = %cond.false69, %cond.true68
  %cond.res71 = phi i1 [ %135, %cond.true68 ], [ false, %cond.false69 ]
  br i1 %cond.res71, label %if_then66, label %if_end67

if_block72:                                       ; preds = %if_end67
  %136 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %137 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %136, i32 0, i32 1
  %138 = call i1 @"pre_!!304"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %137)
  br i1 %138, label %cond.true75, label %cond.false76

if_then73:                                        ; preds = %cond.end77
  store i1 true, i1* %isLong
  %139 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %140 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %139, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %140)
  br label %if_end74

if_end74:                                         ; preds = %if_then73, %cond.end77
  br label %if_end64

cond.true75:                                      ; preds = %if_block72
  %141 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %142 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %141, i32 0, i32 1
  %143 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %142)
  %144 = call i8 @toLower(i8 %143)
  %145 = icmp eq i8 %144, 108
  br label %cond.end77

cond.false76:                                     ; preds = %if_block72
  br label %cond.end77

cond.end77:                                       ; preds = %cond.false76, %cond.true75
  %cond.res78 = phi i1 [ %145, %cond.true75 ], [ false, %cond.false76 ]
  br i1 %cond.res78, label %if_then73, label %if_end74

if_block79:                                       ; preds = %if_end64
  %146 = load i1* %isFloating
  br i1 %146, label %if_then80, label %if_end81

if_then80:                                        ; preds = %if_block79
  %147 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %148 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %147, i32 0, i32 2
  %149 = getelementptr inbounds %Token* %148, i32 0, i32 2
  store i8 0, i8* %tmp.v82
  %150 = load i8* %tmp.v82
  call void @"+=333"(%String* %149, i8 %150)
  %151 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %152 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %151, i32 0, i32 2
  %153 = getelementptr inbounds %Token* %152, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC", %String* %153)
  %154 = load %StringRef* %"$tmpC"
  %155 = call double @asDouble(%StringRef %154)
  %156 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %157 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %156, i32 0, i32 2
  %158 = getelementptr inbounds %Token* %157, i32 0, i32 4
  store double %155, double* %158
  %159 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %160 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %159, i32 0, i32 2
  %161 = getelementptr inbounds %Token* %160, i32 0, i32 2
  call void @popBack376(%String* %161)
  %162 = load %TokenType** %_result.addr
  %163 = load i1* %isLong
  br i1 %163, label %cond_alt1, label %cond_alt2

if_end81:                                         ; preds = %cond_destruct_end87, %if_block79
  br label %if_block89

cond_alt1:                                        ; preds = %if_then80
  call void @ctor272(%TokenType* %tmp.v83, i32 46)
  br label %cond_end

cond_alt2:                                        ; preds = %if_then80
  call void @ctor272(%TokenType* %tmp.v84, i32 45)
  br label %cond_end

cond_end:                                         ; preds = %cond_alt2, %cond_alt1
  %cond = phi %TokenType* [ %tmp.v83, %cond_alt1 ], [ %tmp.v84, %cond_alt2 ]
  call void @ctor263(%TokenType* %162, %TokenType* %cond)
  br i1 %163, label %cond_destruct_alt1, label %cond_destruct_alt2

cond_destruct_alt1:                               ; preds = %cond_end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %cond_end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  ret void

cond_destruct_alt185:                             ; preds = %dumy_block88
  br label %cond_destruct_end87

cond_destruct_alt286:                             ; preds = %dumy_block88
  br label %cond_destruct_end87

cond_destruct_end87:                              ; preds = %cond_destruct_alt286, %cond_destruct_alt185
  br label %if_end81

dumy_block88:                                     ; No predecessors!
  br i1 %163, label %cond_destruct_alt185, label %cond_destruct_alt286

if_block89:                                       ; preds = %if_end81
  %164 = load i1* %isUnsigned
  br i1 %164, label %if_then90, label %if_else91

if_then90:                                        ; preds = %if_block89
  %165 = load %TokenType** %_result.addr
  %166 = load i1* %isLong
  br i1 %166, label %cond_alt193, label %cond_alt294

if_else91:                                        ; preds = %if_block89
  %167 = load %TokenType** %_result.addr
  %168 = load i1* %isLong
  br i1 %168, label %cond_alt1106, label %cond_alt2107

if_end92:                                         ; preds = %cond_destruct_end117, %cond_destruct_end104
  ret void

cond_alt193:                                      ; preds = %if_then90
  call void @ctor272(%TokenType* %tmp.v96, i32 44)
  br label %cond_end95

cond_alt294:                                      ; preds = %if_then90
  call void @ctor272(%TokenType* %tmp.v97, i32 43)
  br label %cond_end95

cond_end95:                                       ; preds = %cond_alt294, %cond_alt193
  %cond98 = phi %TokenType* [ %tmp.v96, %cond_alt193 ], [ %tmp.v97, %cond_alt294 ]
  call void @ctor263(%TokenType* %165, %TokenType* %cond98)
  br i1 %166, label %cond_destruct_alt199, label %cond_destruct_alt2100

cond_destruct_alt199:                             ; preds = %cond_end95
  br label %cond_destruct_end101

cond_destruct_alt2100:                            ; preds = %cond_end95
  br label %cond_destruct_end101

cond_destruct_end101:                             ; preds = %cond_destruct_alt2100, %cond_destruct_alt199
  ret void

cond_destruct_alt1102:                            ; preds = %dumy_block105
  br label %cond_destruct_end104

cond_destruct_alt2103:                            ; preds = %dumy_block105
  br label %cond_destruct_end104

cond_destruct_end104:                             ; preds = %cond_destruct_alt2103, %cond_destruct_alt1102
  br label %if_end92

dumy_block105:                                    ; No predecessors!
  br i1 %166, label %cond_destruct_alt1102, label %cond_destruct_alt2103

cond_alt1106:                                     ; preds = %if_else91
  call void @ctor272(%TokenType* %tmp.v109, i32 42)
  br label %cond_end108

cond_alt2107:                                     ; preds = %if_else91
  call void @ctor272(%TokenType* %tmp.v110, i32 41)
  br label %cond_end108

cond_end108:                                      ; preds = %cond_alt2107, %cond_alt1106
  %cond111 = phi %TokenType* [ %tmp.v109, %cond_alt1106 ], [ %tmp.v110, %cond_alt2107 ]
  call void @ctor263(%TokenType* %167, %TokenType* %cond111)
  br i1 %168, label %cond_destruct_alt1112, label %cond_destruct_alt2113

cond_destruct_alt1112:                            ; preds = %cond_end108
  br label %cond_destruct_end114

cond_destruct_alt2113:                            ; preds = %cond_end108
  br label %cond_destruct_end114

cond_destruct_end114:                             ; preds = %cond_destruct_alt2113, %cond_destruct_alt1112
  ret void

cond_destruct_alt1115:                            ; preds = %dumy_block118
  br label %cond_destruct_end117

cond_destruct_alt2116:                            ; preds = %dumy_block118
  br label %cond_destruct_end117

cond_destruct_end117:                             ; preds = %cond_destruct_alt2116, %cond_destruct_alt1115
  br label %if_end92

dumy_block118:                                    ; No predecessors!
  br i1 %168, label %cond_destruct_alt1115, label %cond_destruct_alt2116
}

; Function Attrs: inlinehint nounwind
define internal i64 @consumeDigits(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r, i64 %base, %String* %capture) #3 {
  %r.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %base.addr = alloca i64
  store i64 %base, i64* %base.addr
  %capture.addr = alloca %String*
  store %String* %capture, %String** %capture.addr
  %res = alloca i64
  br label %code

code:                                             ; preds = %0
  store i64 0, i64* %res
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load i64* %base.addr
  %2 = call i1 @"==367"(i64 %1, i32 16)
  br i1 %2, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  br label %while_block

if_else:                                          ; preds = %if_block
  br label %while_block8

if_end:                                           ; preds = %while_end11, %while_end
  %3 = load i64* %res
  ret i64 %3

while_block:                                      ; preds = %while_step, %if_then
  %4 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %5 = call i1 @"pre_!!304"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  br i1 %5, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  br label %if_block5

while_step:                                       ; preds = %if_end7
  %6 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %6)
  br label %while_block

while_end:                                        ; preds = %cond.end
  br label %if_end

cond.true:                                        ; preds = %while_block
  %7 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %8 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %7)
  %9 = call i1 @isXdigit(i8 %8)
  br i1 %9, label %cond.true1, label %cond.false2

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.end3
  %cond.res4 = phi i1 [ %cond.res, %cond.end3 ], [ false, %cond.false ]
  br i1 %cond.res4, label %while_body, label %while_end

cond.true1:                                       ; preds = %cond.true
  br label %cond.end3

cond.false2:                                      ; preds = %cond.true
  %10 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %11 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %10)
  %12 = icmp eq i8 %11, 95
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ true, %cond.true1 ], [ %12, %cond.false2 ]
  br label %cond.end

if_block5:                                        ; preds = %while_body
  %13 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %14 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %13)
  %15 = icmp ne i8 %14, 95
  br i1 %15, label %if_then6, label %if_end7

if_then6:                                         ; preds = %if_block5
  %16 = load %String** %capture.addr
  %17 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %18 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %17)
  call void @"+=333"(%String* %16, i8 %18)
  %19 = load i64* %res
  %20 = load i64* %base.addr
  %21 = call i64 @"*370"(i64 %19, i64 %20)
  store i64 %21, i64* %res
  %22 = load i64* %res
  %23 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %24 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %23)
  %25 = call i32 @getXdigitVal(i8 %24)
  %26 = call i64 @"+371"(i64 %22, i32 %25)
  store i64 %26, i64* %res
  br label %if_end7

if_end7:                                          ; preds = %if_then6, %if_block5
  br label %while_step

while_block8:                                     ; preds = %while_step10, %if_else
  %27 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %28 = call i1 @"pre_!!304"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %27)
  br i1 %28, label %cond.true12, label %cond.false13

while_body9:                                      ; preds = %cond.end14
  br label %if_block20

while_step10:                                     ; preds = %if_end22
  %29 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %29)
  br label %while_block8

while_end11:                                      ; preds = %cond.end14
  br label %if_end

cond.true12:                                      ; preds = %while_block8
  %30 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %31 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %30)
  %32 = call i1 @isXdigit(i8 %31)
  br i1 %32, label %cond.true15, label %cond.false16

cond.false13:                                     ; preds = %while_block8
  br label %cond.end14

cond.end14:                                       ; preds = %cond.false13, %cond.end17
  %cond.res19 = phi i1 [ %cond.res18, %cond.end17 ], [ false, %cond.false13 ]
  br i1 %cond.res19, label %while_body9, label %while_end11

cond.true15:                                      ; preds = %cond.true12
  br label %cond.end17

cond.false16:                                     ; preds = %cond.true12
  %33 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %34 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %33)
  %35 = icmp eq i8 %34, 95
  br label %cond.end17

cond.end17:                                       ; preds = %cond.false16, %cond.true15
  %cond.res18 = phi i1 [ true, %cond.true15 ], [ %35, %cond.false16 ]
  br label %cond.end14

if_block20:                                       ; preds = %while_body9
  %36 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %37 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %36)
  %38 = icmp ne i8 %37, 95
  br i1 %38, label %if_then21, label %if_end22

if_then21:                                        ; preds = %if_block20
  %39 = load %String** %capture.addr
  %40 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %41 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %40)
  call void @"+=333"(%String* %39, i8 %41)
  %42 = load i64* %res
  %43 = load i64* %base.addr
  %44 = call i64 @"*370"(i64 %42, i64 %43)
  store i64 %44, i64* %res
  %45 = load i64* %res
  %46 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %47 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %46)
  %48 = call i32 @getDigitVal(i8 %47)
  %49 = call i64 @"+371"(i64 %45, i32 %48)
  store i64 %49, i64* %res
  br label %if_end22

if_end22:                                         ; preds = %if_then21, %if_block20
  br label %while_step10
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==367"(i64 %x, i32 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i32* %y.addr
  %3 = call i64 @cmn368(i64 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn369(i32 %4, i64 %5)
  %7 = icmp eq i64 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @cmn368(i64 %x, i32 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  ret i64 %1
}

; Function Attrs: inlinehint nounwind
define internal i64 @cmn369(i32 %x, i64 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = zext i32 %1 to i64
  store i64 %2, i64* %tmp.v
  %3 = load i64* %tmp.v
  ret i64 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @isXdigit(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @isxdigit(i32 %2)
  %4 = call i1 @"!=166"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @isxdigit(i32)

; Function Attrs: inlinehint nounwind
define internal i64 @"*370"(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn39(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn39(i64 %4, i64 %5)
  %7 = mul i64 %3, %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i64 @"+371"(i64 %x, i32 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i32* %y.addr
  %3 = call i64 @cmn368(i64 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn369(i32 %4, i64 %5)
  %7 = add i64 %3, %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i32 @getDigitVal(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  %tmp.v1 = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  call void @_ass_32_8z(i32* %tmp.v1, i8 48)
  %3 = load i32* %tmp.v1
  %4 = call i32 @-53(i32 %2, i32 %3)
  ret i32 %4
}

; Function Attrs: inlinehint nounwind
define internal void @advanceAndCaptureDigit(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"FunctionPtr1[Bool/rtct, Char/rtct]" %pred) #3 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %pred.addr = alloca %"FunctionPtr1[Bool/rtct, Char/rtct]"
  store %"FunctionPtr1[Bool/rtct, Char/rtct]" %pred, %"FunctionPtr1[Bool/rtct, Char/rtct]"* %pred.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = call i1 @"pre_!!304"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  br i1 %3, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  br label %if_block

while_step:                                       ; preds = %if_end
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, i32 0, i32 1
  call void @popFront284(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  br label %while_block

while_end:                                        ; preds = %cond.end
  ret void

cond.true:                                        ; preds = %while_block
  %6 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %7 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %6, i32 0, i32 1
  %8 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %7)
  %9 = call i1 @"()372"(%"FunctionPtr1[Bool/rtct, Char/rtct]"* %pred.addr, i8 %8)
  br i1 %9, label %cond.true1, label %cond.false2

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.end3
  %cond.res4 = phi i1 [ %cond.res, %cond.end3 ], [ false, %cond.false ]
  br i1 %cond.res4, label %while_body, label %while_end

cond.true1:                                       ; preds = %cond.true
  br label %cond.end3

cond.false2:                                      ; preds = %cond.true
  %10 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %11 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %10, i32 0, i32 1
  %12 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %11)
  %13 = icmp eq i8 %12, 95
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ true, %cond.true1 ], [ %13, %cond.false2 ]
  br label %cond.end

if_block:                                         ; preds = %while_body
  %14 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %15 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %14, i32 0, i32 1
  %16 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %15)
  %17 = icmp ne i8 %16, 95
  br i1 %17, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %18 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %19 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %18, i32 0, i32 2
  %20 = getelementptr inbounds %Token* %19, i32 0, i32 2
  %21 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %22 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %21, i32 0, i32 1
  %23 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %22)
  call void @"+=333"(%String* %20, i8 %23)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  br label %while_step
}

; Function Attrs: inlinehint nounwind
define internal i1 @"()372"(%"FunctionPtr1[Bool/rtct, Char/rtct]"* %this, i8 %p1) #3 {
  %this.addr = alloca %"FunctionPtr1[Bool/rtct, Char/rtct]"*
  store %"FunctionPtr1[Bool/rtct, Char/rtct]"* %this, %"FunctionPtr1[Bool/rtct, Char/rtct]"** %this.addr
  %p1.addr = alloca i8
  store i8 %p1, i8* %p1.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"FunctionPtr1[Bool/rtct, Char/rtct]"** %this.addr
  %2 = load i8* %p1.addr
  %3 = bitcast %"FunctionPtr1[Bool/rtct, Char/rtct]"* %1 to i1 (i8)**
  %4 = load i1 (i8)** %3
  %5 = call i1 %4(i8 %2)
  ret i1 %5
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty373(%String* %this) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = getelementptr inbounds %String* %1, i32 0, i32 0
  %3 = load %String** %this.addr
  %4 = getelementptr inbounds %String* %3, i32 0, i32 1
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i1 @"==207"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  ret i1 %6
}

; Function Attrs: inlinehint nounwind
define internal void @ctorFromCt374(%String* %this) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %3 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([24 x i8]* @str375, i32 0, i32 0), i8** %2
  store i8* getelementptr inbounds ([24 x i8]* @str375, i32 0, i32 23), i8** %3
  %4 = load %StringRef* %tmp.StringRef
  store %StringRef %4, %StringRef* %"$tmpForRef"
  call void @ctor328(%String* %1, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popBack376(%String* %this) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = getelementptr inbounds %String* %1, i32 0, i32 1
  %3 = load %String** %this.addr
  %4 = getelementptr inbounds %String* %3, i32 0, i32 1
  %5 = load %"RawPtr[Char/rtct]"* %4
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %5, i64 -1)
  %6 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=205"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %6)
  %7 = load %String** %this.addr
  %8 = getelementptr inbounds %String* %7, i32 0, i32 1
  %9 = load %"RawPtr[Char/rtct]"* %8
  %10 = call i8* @value(%"RawPtr[Char/rtct]" %9)
  %11 = load i8* %10
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @toString377(%String* sret %_result, %StringRef %a1, i8 %a2, %StringRef %a3, i32 %a4, i8 %a5) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %a1.addr = alloca %StringRef
  store %StringRef %a1, %StringRef* %a1.addr
  %a2.addr = alloca i8
  store i8 %a2, i8* %a2.addr
  %a3.addr = alloca %StringRef
  store %StringRef %a3, %StringRef* %a3.addr
  %a4.addr = alloca i32
  store i32 %a4, i32* %a4.addr
  %a5.addr = alloca i8
  store i8 %a5, i8* %a5.addr
  %s = alloca %StringOutputStream
  br label %code

code:                                             ; preds = %0
  call void @ctor196(%StringOutputStream* %s)
  %1 = call %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %a1.addr)
  %2 = call %StringOutputStream* @"<<378"(%StringOutputStream* %1, i8* %a2.addr)
  %3 = call %StringOutputStream* @"<<"(%StringOutputStream* %2, %StringRef* %a3.addr)
  %4 = call %StringOutputStream* @"<<382"(%StringOutputStream* %3, i32* %a4.addr)
  %5 = call %StringOutputStream* @"<<378"(%StringOutputStream* %4, i8* %a5.addr)
  %6 = load %String** %_result.addr
  %7 = getelementptr inbounds %StringOutputStream* %s, i32 0, i32 0
  call void @ctor209(%String* %6, %String* %7)
  call void @dtor213(%StringOutputStream* %s)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor213(%StringOutputStream* %s)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringOutputStream* @"<<378"(%StringOutputStream* %s, i8* %x) #3 {
  %s.addr = alloca %StringOutputStream*
  store %StringOutputStream* %s, %StringOutputStream** %s.addr
  %x.addr = alloca i8*
  store i8* %x, i8** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %s.addr
  %2 = load i8** %x.addr
  %3 = load i8* %2
  call void @"<<<379"(%StringOutputStream* %1, i8 %3)
  %4 = load %StringOutputStream** %s.addr
  ret %StringOutputStream* %4
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<379"(%StringOutputStream* %this, i8 %x) #2 {
  %this.addr = alloca %StringOutputStream*
  store %StringOutputStream* %this, %StringOutputStream** %this.addr
  %x.addr = alloca i8
  store i8 %x, i8* %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %this.addr
  %2 = getelementptr inbounds %StringOutputStream* %1, i32 0, i32 0
  %3 = load i8* %x.addr
  call void @append380(%String* %2, i8 %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @append380(%String* %this, i8 %value) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %value.addr = alloca i8
  store i8 %value, i8* %value.addr
  %tmp.v = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = load i8* %value.addr
  %3 = load %String** %this.addr
  %4 = getelementptr inbounds %String* %3, i32 0, i32 1
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %5)
  %7 = load %String** %this.addr
  %8 = getelementptr inbounds %String* %7, i32 0, i32 1
  %9 = load %"RawPtr[Char/rtct]"* %8
  %10 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %9)
  call void @ctor88(%StringRef* %tmp.v, i8* %6, i8* %10)
  %11 = load %StringRef* %tmp.v
  call void @insertBefore381(%String* %1, i8 %2, %StringRef %11)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @insertBefore381(%String* %this, i8 %value, %StringRef %pos) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %value.addr = alloca i8
  store i8 %value, i8* %value.addr
  %pos.addr = alloca %StringRef
  store %StringRef %pos, %StringRef* %pos.addr
  %posCount = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %p = alloca %"RawPtr[Char/rtct]"
  %q = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  %"$tmpC1" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC2" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC3" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC4" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef* %pos.addr
  call void @_frontPtr(%"RawPtr[Char/rtct]"* %"$tmpC", %StringRef %1)
  %2 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  %3 = load %String** %this.addr
  %4 = getelementptr inbounds %String* %3, i32 0, i32 0
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i64 @diff(%"RawPtr[Char/rtct]" %2, %"RawPtr[Char/rtct]" %5)
  store i64 %6, i64* %posCount
  %7 = load %String** %this.addr
  %8 = load %String** %this.addr
  %9 = call i64 @size204(%String* %8)
  %10 = call i64 @"+84"(i64 %9, i32 1)
  call void @reserve(%String* %7, i64 %10)
  %11 = load %String** %this.addr
  %12 = getelementptr inbounds %String* %11, i32 0, i32 1
  %13 = load %"RawPtr[Char/rtct]"* %12
  call void @advance(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %13, i64 -1)
  %14 = load %String** %this.addr
  %15 = getelementptr inbounds %String* %14, i32 0, i32 0
  %16 = load %"RawPtr[Char/rtct]"* %15
  %17 = load i64* %posCount
  store i64 1, i64* %tmp.v
  %18 = load i64* %tmp.v
  %19 = call i64 @-63(i64 %17, i64 %18)
  call void @advance(%"RawPtr[Char/rtct]"* %q, %"RawPtr[Char/rtct]" %16, i64 %19)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %20 = load %"RawPtr[Char/rtct]"* %q
  %21 = call i1 @"==207"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %20)
  %22 = xor i1 true, %21
  br i1 %22, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %23 = load %"RawPtr[Char/rtct]"* %p
  %24 = call i8* @value(%"RawPtr[Char/rtct]" %23)
  %25 = load i8* %24
  %26 = load %"RawPtr[Char/rtct]"* %p
  call void @advance208(%"RawPtr[Char/rtct]"* %"$tmpC1", %"RawPtr[Char/rtct]" %26)
  %27 = load %"RawPtr[Char/rtct]"* %"$tmpC1"
  %28 = call i8* @value(%"RawPtr[Char/rtct]" %27)
  store i8 %25, i8* %28
  %29 = load %"RawPtr[Char/rtct]"* %p
  %30 = call i8* @value(%"RawPtr[Char/rtct]" %29)
  %31 = load i8* %30
  br label %while_step

while_step:                                       ; preds = %while_body
  %32 = load %"RawPtr[Char/rtct]"* %p
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC2", %"RawPtr[Char/rtct]" %32, i64 -1)
  %33 = load %"RawPtr[Char/rtct]"* %"$tmpC2"
  call void @"=205"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %33)
  br label %while_block

while_end:                                        ; preds = %while_block
  %34 = load i8* %value.addr
  %35 = load %"RawPtr[Char/rtct]"* %p
  call void @advance208(%"RawPtr[Char/rtct]"* %"$tmpC3", %"RawPtr[Char/rtct]" %35)
  %36 = load %"RawPtr[Char/rtct]"* %"$tmpC3"
  %37 = call i8* @value(%"RawPtr[Char/rtct]" %36)
  store i8 %34, i8* %37
  %38 = load %String** %this.addr
  %39 = getelementptr inbounds %String* %38, i32 0, i32 1
  %40 = load %String** %this.addr
  %41 = getelementptr inbounds %String* %40, i32 0, i32 1
  %42 = load %"RawPtr[Char/rtct]"* %41
  call void @advance208(%"RawPtr[Char/rtct]"* %"$tmpC4", %"RawPtr[Char/rtct]" %42)
  %43 = load %"RawPtr[Char/rtct]"* %"$tmpC4"
  call void @"=205"(%"RawPtr[Char/rtct]"* %39, %"RawPtr[Char/rtct]" %43)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringOutputStream* @"<<382"(%StringOutputStream* %s, i32* %x) #3 {
  %s.addr = alloca %StringOutputStream*
  store %StringOutputStream* %s, %StringOutputStream** %s.addr
  %x.addr = alloca i32*
  store i32* %x, i32** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %s.addr
  %2 = load i32** %x.addr
  %3 = load i32* %2
  call void @"<<<383"(%StringOutputStream* %1, i32 %3)
  %4 = load %StringOutputStream** %s.addr
  ret %StringOutputStream* %4
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<383"(%StringOutputStream* %this, i32 %x) #2 {
  %this.addr = alloca %StringOutputStream*
  store %StringOutputStream* %this, %StringOutputStream** %this.addr
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %"$tmpC" = alloca %StringRef
  %"$tmpC1" = alloca %String
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %this.addr
  %2 = getelementptr inbounds %StringOutputStream* %1, i32 0, i32 0
  %3 = load i32* %x.addr
  call void @intToString(%String* %"$tmpC1", i32 %3)
  call void @all384(%StringRef* %"$tmpC", %String* %"$tmpC1")
  %4 = load %StringRef* %"$tmpC"
  call void @append(%String* %2, %StringRef %4)
  call void @dtor214(%String* %"$tmpC1")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @all384(%StringRef* sret %_result, %String* %this) #3 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %_result.addr
  %2 = load %String** %this.addr
  %3 = getelementptr inbounds %String* %2, i32 0, i32 0
  %4 = load %"RawPtr[Char/rtct]"* %3
  %5 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %4)
  %6 = load %String** %this.addr
  %7 = getelementptr inbounds %String* %6, i32 0, i32 1
  %8 = load %"RawPtr[Char/rtct]"* %7
  %9 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %8)
  call void @ctor88(%StringRef* %1, i8* %5, i8* %9)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @intToString(%String* sret %_result, i32 %x) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %buf = alloca [12 x i8]
  %"$tmpForRef" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = bitcast [12 x i8]* %buf to i8*
  store i8 0, i8* %1
  %2 = load i32* %x.addr
  %3 = bitcast [12 x i8]* %buf to i8*
  call void @_Int_to_CString(i32 %2, i8* %3)
  %4 = load %String** %_result.addr
  %5 = bitcast [12 x i8]* %buf to i8*
  %6 = call %StringRef @_String_fromCString(i8* %5)
  store %StringRef %6, %StringRef* %"$tmpForRef"
  call void @ctor328(%String* %4, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor387(%Token* %dest) #2 {
  %dest.addr = alloca %Token*
  store %Token* %dest, %Token** %dest.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token** %dest.addr
  %2 = getelementptr inbounds %Token* %1, i32 0, i32 2
  call void @dtor214(%String* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"+=388"(%"Vector[UInt/rtct]"* %this, i32* %value) #3 {
  %this.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"** %this.addr
  %value.addr = alloca i32*
  store i32* %value, i32** %value.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %this.addr
  %2 = load i32** %value.addr
  call void @pushBack389(%"Vector[UInt/rtct]"* %1, i32* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @pushBack389(%"Vector[UInt/rtct]"* %this, i32* %value) #3 {
  %this.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"** %this.addr
  %value.addr = alloca i32*
  store i32* %value, i32** %value.addr
  %t = alloca i64
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[UInt/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 1
  %3 = load %"Vector[UInt/rtct]"** %this.addr
  %4 = getelementptr inbounds %"Vector[UInt/rtct]"* %3, i32 0, i32 2
  %5 = load %"RawPtr[UInt/rtct]"* %4
  %6 = call i1 @"==390"(%"RawPtr[UInt/rtct]"* %2, %"RawPtr[UInt/rtct]" %5)
  br i1 %6, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %7 = load %"Vector[UInt/rtct]"** %this.addr
  %8 = call i64 @capacity391(%"Vector[UInt/rtct]"* %7)
  %9 = call i64 @"*230"(i32 2, i64 %8)
  store i64 %9, i64* %t
  br label %if_block1

if_end:                                           ; preds = %if_end3, %if_block
  %10 = load i32** %value.addr
  %11 = load i32* %10
  %12 = load %"Vector[UInt/rtct]"** %this.addr
  %13 = getelementptr inbounds %"Vector[UInt/rtct]"* %12, i32 0, i32 1
  %14 = load %"RawPtr[UInt/rtct]"* %13
  %15 = call i32* @value400(%"RawPtr[UInt/rtct]" %14)
  store i32 %11, i32* %15
  %16 = load %"Vector[UInt/rtct]"** %this.addr
  %17 = getelementptr inbounds %"Vector[UInt/rtct]"* %16, i32 0, i32 1
  %18 = load %"Vector[UInt/rtct]"** %this.addr
  %19 = getelementptr inbounds %"Vector[UInt/rtct]"* %18, i32 0, i32 1
  %20 = load %"RawPtr[UInt/rtct]"* %19
  call void @advance401(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]" %20)
  %21 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  call void @"=397"(%"RawPtr[UInt/rtct]"* %17, %"RawPtr[UInt/rtct]" %21)
  ret void

if_block1:                                        ; preds = %if_then
  %22 = load i64* %t
  %23 = call i1 @"<229"(i64 %22, i32 2)
  br i1 %23, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 2, i64* %t
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %24 = load %"Vector[UInt/rtct]"** %this.addr
  %25 = load i64* %t
  call void @reserve394(%"Vector[UInt/rtct]"* %24, i64 %25)
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==390"(%"RawPtr[UInt/rtct]"* %this, %"RawPtr[UInt/rtct]" %other) #3 {
  %this.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %this, %"RawPtr[UInt/rtct]"** %this.addr
  %other.addr = alloca %"RawPtr[UInt/rtct]"
  store %"RawPtr[UInt/rtct]" %other, %"RawPtr[UInt/rtct]"* %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load i32** %2
  %4 = bitcast i32* %3 to i8*
  %5 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %other.addr, i32 0, i32 0
  %6 = load i32** %5
  %7 = bitcast i32* %6 to i8*
  %8 = call i1 @implOpRefEQ(i8* %4, i8* %7)
  ret i1 %8
}

; Function Attrs: inlinehint nounwind
define internal i64 @capacity391(%"Vector[UInt/rtct]"* %this) #3 {
  %this.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 2
  %3 = load %"RawPtr[UInt/rtct]"* %2
  %4 = load %"Vector[UInt/rtct]"** %this.addr
  %5 = getelementptr inbounds %"Vector[UInt/rtct]"* %4, i32 0, i32 0
  %6 = load %"RawPtr[UInt/rtct]"* %5
  %7 = call i64 @diff392(%"RawPtr[UInt/rtct]" %3, %"RawPtr[UInt/rtct]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal i64 @diff392(%"RawPtr[UInt/rtct]" %this, %"RawPtr[UInt/rtct]" %other) #3 {
  %this.addr = alloca %"RawPtr[UInt/rtct]"
  store %"RawPtr[UInt/rtct]" %this, %"RawPtr[UInt/rtct]"* %this.addr
  %other.addr = alloca %"RawPtr[UInt/rtct]"
  store %"RawPtr[UInt/rtct]" %other, %"RawPtr[UInt/rtct]"* %other.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"* %this.addr
  %2 = call i8* @bytePtr393(%"RawPtr[UInt/rtct]" %1)
  %3 = load %"RawPtr[UInt/rtct]"* %other.addr
  %4 = call i8* @bytePtr393(%"RawPtr[UInt/rtct]" %3)
  %5 = call i64 @ptrDiff(i8* %2, i8* %4)
  store i64 4, i64* %tmp.v1
  %6 = load i64* %tmp.v1
  %7 = call i64 @"/198"(i64 %5, i64 %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal i8* @bytePtr393(%"RawPtr[UInt/rtct]" %this) #3 {
  %this.addr = alloca %"RawPtr[UInt/rtct]"
  store %"RawPtr[UInt/rtct]" %this, %"RawPtr[UInt/rtct]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %this.addr, i32 0, i32 0
  %2 = load i32** %1
  %3 = bitcast i32* %2 to i8*
  ret i8* %3
}

; Function Attrs: inlinehint nounwind
define internal void @reserve394(%"Vector[UInt/rtct]"* %this, i64 %n) #3 {
  %this.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %curCapacity = alloca i64
  %tmp.v = alloca i64
  %curSize = alloca i64
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC7" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %this.addr
  %2 = call i64 @capacity391(%"Vector[UInt/rtct]"* %1)
  store i64 %2, i64* %curCapacity
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64* %n.addr
  %4 = load i64* %curCapacity
  %5 = call i1 @"<="(i64 %3, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64* %n.addr
  %7 = call i1 @"<229"(i64 %6, i32 8)
  br i1 %7, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 8, i64* %n.addr
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  br label %if_block4

if_block4:                                        ; preds = %if_end3
  %8 = load i64* %n.addr
  %9 = load i64* %curCapacity
  %10 = call double @"*203"(double 2.000000e+00, i64 %9)
  %11 = call i1 @"<200"(i64 %8, double %10)
  br i1 %11, label %if_then5, label %if_end6

if_then5:                                         ; preds = %if_block4
  %12 = load i64* %curCapacity
  %13 = call double @"*203"(double 2.000000e+00, i64 %12)
  %14 = fptoui double %13 to i64
  store i64 %14, i64* %tmp.v
  %15 = load i64* %tmp.v
  store i64 %15, i64* %n.addr
  br label %if_end6

if_end6:                                          ; preds = %if_then5, %if_block4
  %16 = load %"Vector[UInt/rtct]"** %this.addr
  %17 = call i64 @size395(%"Vector[UInt/rtct]"* %16)
  store i64 %17, i64* %curSize
  %18 = load %"Vector[UInt/rtct]"** %this.addr
  %19 = getelementptr inbounds %"Vector[UInt/rtct]"* %18, i32 0, i32 0
  %20 = load i64* %n.addr
  call void @reallocPtr396(%"RawPtr[UInt/rtct]"* %19, i64 %20)
  %21 = load %"Vector[UInt/rtct]"** %this.addr
  %22 = getelementptr inbounds %"Vector[UInt/rtct]"* %21, i32 0, i32 1
  %23 = load %"Vector[UInt/rtct]"** %this.addr
  %24 = getelementptr inbounds %"Vector[UInt/rtct]"* %23, i32 0, i32 0
  %25 = load %"RawPtr[UInt/rtct]"* %24
  %26 = load i64* %curSize
  call void @advance398(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]" %25, i64 %26)
  %27 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  call void @"=397"(%"RawPtr[UInt/rtct]"* %22, %"RawPtr[UInt/rtct]" %27)
  %28 = load %"Vector[UInt/rtct]"** %this.addr
  %29 = getelementptr inbounds %"Vector[UInt/rtct]"* %28, i32 0, i32 2
  %30 = load %"Vector[UInt/rtct]"** %this.addr
  %31 = getelementptr inbounds %"Vector[UInt/rtct]"* %30, i32 0, i32 0
  %32 = load %"RawPtr[UInt/rtct]"* %31
  %33 = load i64* %n.addr
  call void @advance398(%"RawPtr[UInt/rtct]"* %"$tmpC7", %"RawPtr[UInt/rtct]" %32, i64 %33)
  %34 = load %"RawPtr[UInt/rtct]"* %"$tmpC7"
  call void @"=397"(%"RawPtr[UInt/rtct]"* %29, %"RawPtr[UInt/rtct]" %34)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i64 @size395(%"Vector[UInt/rtct]"* %this) #3 {
  %this.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 1
  %3 = load %"RawPtr[UInt/rtct]"* %2
  %4 = load %"Vector[UInt/rtct]"** %this.addr
  %5 = getelementptr inbounds %"Vector[UInt/rtct]"* %4, i32 0, i32 0
  %6 = load %"RawPtr[UInt/rtct]"* %5
  %7 = call i64 @diff392(%"RawPtr[UInt/rtct]" %3, %"RawPtr[UInt/rtct]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal void @reallocPtr396(%"RawPtr[UInt/rtct]"* %this, i64 %n) #3 {
  %this.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %this, %"RawPtr[UInt/rtct]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %this.addr
  %2 = load %"RawPtr[UInt/rtct]"* %1
  %3 = call i8* @bytePtr393(%"RawPtr[UInt/rtct]" %2)
  %4 = load i64* %n.addr
  %5 = call i64 @"*"(i64 %4, i64 4)
  %6 = call i8* @realloc(i8* %3, i64 %5)
  %7 = bitcast i8* %6 to i32*
  %8 = load %"RawPtr[UInt/rtct]"** %this.addr
  %9 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %8, i32 0, i32 0
  store i32* %7, i32** %9
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=397"(%"RawPtr[UInt/rtct]"* %this, %"RawPtr[UInt/rtct]" %other) #2 {
  %this.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %this, %"RawPtr[UInt/rtct]"** %this.addr
  %other.addr = alloca %"RawPtr[UInt/rtct]"
  store %"RawPtr[UInt/rtct]" %other, %"RawPtr[UInt/rtct]"* %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %other.addr, i32 0, i32 0
  %2 = load i32** %1
  %3 = load %"RawPtr[UInt/rtct]"** %this.addr
  %4 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %3, i32 0, i32 0
  store i32* %2, i32** %4
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advance398(%"RawPtr[UInt/rtct]"* sret %_result, %"RawPtr[UInt/rtct]" %this, i64 %n) #3 {
  %_result.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %_result, %"RawPtr[UInt/rtct]"** %_result.addr
  %this.addr = alloca %"RawPtr[UInt/rtct]"
  store %"RawPtr[UInt/rtct]" %this, %"RawPtr[UInt/rtct]"* %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %_result.addr
  %2 = load %"RawPtr[UInt/rtct]"* %this.addr
  %3 = call i8* @bytePtr393(%"RawPtr[UInt/rtct]" %2)
  %4 = load i64* %n.addr
  %5 = call i64 @"*"(i64 %4, i64 4)
  %6 = call i8* @ptrAdd(i8* %3, i64 %5)
  call void @ctor399(%"RawPtr[UInt/rtct]"* %1, i8* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor399(%"RawPtr[UInt/rtct]"* %this, i8* %byteRef) #3 {
  %this.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %this, %"RawPtr[UInt/rtct]"** %this.addr
  %byteRef.addr = alloca i8*
  store i8* %byteRef, i8** %byteRef.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %byteRef.addr
  %2 = bitcast i8* %1 to i32*
  %3 = load %"RawPtr[UInt/rtct]"** %this.addr
  %4 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %3, i32 0, i32 0
  store i32* %2, i32** %4
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i32* @value400(%"RawPtr[UInt/rtct]" %this) #3 {
  %this.addr = alloca %"RawPtr[UInt/rtct]"
  store %"RawPtr[UInt/rtct]" %this, %"RawPtr[UInt/rtct]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %this.addr, i32 0, i32 0
  %2 = load i32** %1
  ret i32* %2
}

; Function Attrs: inlinehint nounwind
define internal void @advance401(%"RawPtr[UInt/rtct]"* sret %_result, %"RawPtr[UInt/rtct]" %this) #3 {
  %_result.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %_result, %"RawPtr[UInt/rtct]"** %_result.addr
  %this.addr = alloca %"RawPtr[UInt/rtct]"
  store %"RawPtr[UInt/rtct]" %this, %"RawPtr[UInt/rtct]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %_result.addr
  %2 = load %"RawPtr[UInt/rtct]"* %this.addr
  %3 = call i8* @bytePtr393(%"RawPtr[UInt/rtct]" %2)
  %4 = call i8* @ptrAdd(i8* %3, i64 4)
  call void @ctor399(%"RawPtr[UInt/rtct]"* %1, i8* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty402(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this) #3 {
  %this.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 1
  %3 = call i1 @isEmpty403(%"Vector[Token]"* %2)
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty403(%"Vector[Token]"* %this) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 0
  %3 = load %"Vector[Token]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Token]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[Token]"* %4
  %6 = call i1 @"==261"(%"RawPtr[Token]"* %2, %"RawPtr[Token]" %5)
  ret i1 %6
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==404"(%TokenType* %this, %TokenType* %other) #2 {
  %this.addr = alloca %TokenType*
  store %TokenType* %this, %TokenType** %this.addr
  %other.addr = alloca %TokenType*
  store %TokenType* %other, %TokenType** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %TokenType** %this.addr
  %2 = getelementptr inbounds %TokenType* %1, i32 0, i32 0
  %3 = load i32* %2
  %4 = load %TokenType** %other.addr
  %5 = getelementptr inbounds %TokenType* %4, i32 0, i32 0
  %6 = load i32* %5
  %7 = call i1 @"==405"(i32 %3, i32 %6)
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==405"(i32 %x, i32 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn30(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn30(i32 %4, i32 %5)
  %7 = icmp eq i32 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal void @front406(%Token* sret %_result, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this) #3 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %this.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token** %_result.addr
  %2 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %3 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %2, i32 0, i32 1
  %4 = call %Token* @front407(%"Vector[Token]"* %3)
  call void @ctor262(%Token* %1, %Token* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %Token* @front407(%"Vector[Token]"* %this) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 0
  %3 = load %"RawPtr[Token]"* %2
  %4 = call %Token* @value264(%"RawPtr[Token]" %3)
  ret %Token* %4
}

; Function Attrs: noinline nounwind
define void @popFront408(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %this.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  %oldType = alloca %TokenType
  %"$tmpC" = alloca %Token
  %changeLine = alloca i1
  %"$tmpC1" = alloca %Token
  %tmp.v2 = alloca %TokenType
  %"$tmpC3" = alloca %Token
  %tmp.v4 = alloca %TokenType
  %"$tmpC5" = alloca %Token
  %tmp.v6 = alloca %TokenType
  %tk = alloca %Token
  %outsideParens = alloca i1
  %newCol = alloca i32
  %oldCol = alloca i32
  %tmp.v21 = alloca %TokenType
  %tmp.v34 = alloca %TokenType
  %tmp.v36 = alloca %TokenType
  %tmp.v38 = alloca %TokenType
  %tmp.v40 = alloca %TokenType
  %tmp.v56 = alloca %TokenType
  %tmp.v58 = alloca %TokenType
  %numDedents = alloca i32
  %tmp.v73 = alloca %TokenType
  %"$tmpC77" = alloca %String
  %tmp.StringRef = alloca %StringRef
  %tmp.StringRef78 = alloca %StringRef
  %tmp.v82 = alloca %TokenType
  %"$tmpForRef" = alloca i8
  %tmp.v87 = alloca %TokenType
  %"$tmpForRef88" = alloca i8
  %tmp.v93 = alloca %TokenType
  %"$tmpForRef94" = alloca i8
  %tmp.v102 = alloca %TokenType
  %tmp.v111 = alloca %TokenType
  %tmp.v119 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 5
  %3 = load i32* %2
  %4 = call i1 @">409"(i32 %3, i32 0)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 5
  %7 = call i32 @post_--76(i32* %6)
  %8 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %9 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %8, i32 0, i32 4
  call void @ctor272(%TokenType* %tmp.v, i32 26)
  call void @"=244"(%TokenType* %9, %TokenType* %tmp.v)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %10 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @front410(%Token* %"$tmpC", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %10)
  %11 = getelementptr inbounds %Token* %"$tmpC", i32 0, i32 1
  call void @ctor263(%TokenType* %oldType, %TokenType* %11)
  call void @dtor387(%Token* %"$tmpC")
  %12 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 0
  call void @popFront411(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %13)
  %14 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %15 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %14, i32 0, i32 0
  call void @front406(%Token* %"$tmpC1", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %15)
  %16 = getelementptr inbounds %Token* %"$tmpC1", i32 0, i32 1
  call void @ctor272(%TokenType* %tmp.v2, i32 1)
  %17 = call i1 @"==404"(%TokenType* %16, %TokenType* %tmp.v2)
  br i1 %17, label %cond.true, label %cond.false

dumy_block:                                       ; No predecessors!
  br label %if_end

cond.true:                                        ; preds = %if_end
  br label %cond.end

cond.false:                                       ; preds = %if_end
  %18 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %19 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %18, i32 0, i32 0
  call void @front406(%Token* %"$tmpC3", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %19)
  %20 = getelementptr inbounds %Token* %"$tmpC3", i32 0, i32 1
  call void @ctor272(%TokenType* %tmp.v4, i32 0)
  %21 = call i1 @"==404"(%TokenType* %20, %TokenType* %tmp.v4)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ true, %cond.true ], [ %21, %cond.false ]
  store i1 %cond.res, i1* %changeLine
  br i1 %17, label %cond_destruct_alt1, label %cond_destruct_alt2

cond_destruct_alt1:                               ; preds = %cond.end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %cond.end
  call void @dtor387(%Token* %"$tmpC3")
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  call void @dtor387(%Token* %"$tmpC1")
  br label %while_block

while_block:                                      ; preds = %while_step, %cond_destruct_end
  %22 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %23 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %22, i32 0, i32 0
  call void @front406(%Token* %"$tmpC5", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %23)
  %24 = getelementptr inbounds %Token* %"$tmpC5", i32 0, i32 1
  call void @ctor272(%TokenType* %tmp.v6, i32 1)
  %25 = call i1 @"==404"(%TokenType* %24, %TokenType* %tmp.v6)
  br i1 %25, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %26 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %27 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %26, i32 0, i32 0
  call void @popFront411(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %27)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  call void @dtor387(%Token* %"$tmpC5")
  %28 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %29 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %28, i32 0, i32 0
  call void @front406(%Token* %tk, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %29)
  %30 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %31 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %30, i32 0, i32 3
  %32 = call i1 @isEmpty271(%"Vector[Char/rtct]"* %31)
  br i1 %32, label %cond.true7, label %cond.false8

cond.true7:                                       ; preds = %while_end
  br label %cond.end9

cond.false8:                                      ; preds = %while_end
  %33 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %34 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %33, i32 0, i32 3
  %35 = call i8* @back426(%"Vector[Char/rtct]"* %34)
  %36 = load i8* %35
  %37 = icmp eq i8 %36, 123
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res10 = phi i1 [ true, %cond.true7 ], [ %37, %cond.false8 ]
  store i1 %cond.res10, i1* %outsideParens
  br label %if_block11

if_block11:                                       ; preds = %cond.end9
  %38 = load i1* %changeLine
  br i1 %38, label %cond.true14, label %cond.false15

if_then12:                                        ; preds = %cond.end16
  %39 = getelementptr inbounds %Token* %tk, i32 0, i32 0
  %40 = getelementptr inbounds %Location* %39, i32 0, i32 1
  %41 = getelementptr inbounds %LineCol* %40, i32 0, i32 1
  %42 = load i32* %41
  store i32 %42, i32* %newCol
  %43 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %44 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %43, i32 0, i32 2
  %45 = call i32* @back427(%"Vector[UInt/rtct]"* %44)
  %46 = load i32* %45
  store i32 %46, i32* %oldCol
  br label %if_block18

if_end13:                                         ; preds = %if_end64, %cond.end16
  br label %if_block79

cond.true14:                                      ; preds = %if_block11
  %47 = load i1* %outsideParens
  br label %cond.end16

cond.false15:                                     ; preds = %if_block11
  br label %cond.end16

cond.end16:                                       ; preds = %cond.false15, %cond.true14
  %cond.res17 = phi i1 [ %47, %cond.true14 ], [ false, %cond.false15 ]
  br i1 %cond.res17, label %if_then12, label %if_end13

if_block18:                                       ; preds = %if_then12
  %48 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  call void @ctor272(%TokenType* %tmp.v21, i32 0)
  %49 = call i1 @"==404"(%TokenType* %48, %TokenType* %tmp.v21)
  br i1 %49, label %if_then19, label %if_end20

if_then19:                                        ; preds = %if_block18
  store i32 1, i32* %newCol
  br label %if_end20

if_end20:                                         ; preds = %if_then19, %if_block18
  br label %if_block22

if_block22:                                       ; preds = %if_end20
  %50 = load i32* %newCol
  %51 = load i32* %oldCol
  %52 = call i1 @"==429"(i32 %50, i32 %51)
  br i1 %52, label %cond.true31, label %cond.false32

if_then23:                                        ; preds = %cond.end27
  %53 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %54 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %53, i32 0, i32 4
  call void @ctor272(%TokenType* %tmp.v40, i32 32)
  call void @"=244"(%TokenType* %54, %TokenType* %tmp.v40)
  %55 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %56 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %55, i32 0, i32 5
  store i32 1, i32* %56
  br label %if_end24

if_end24:                                         ; preds = %if_then23, %cond.end27
  br i1 %cond.res37, label %cond_destruct_alt141, label %cond_destruct_alt242

cond.true25:                                      ; preds = %cond.end30
  call void @ctor272(%TokenType* %tmp.v38, i32 26)
  %57 = call i1 @"==404"(%TokenType* %oldType, %TokenType* %tmp.v38)
  %58 = xor i1 true, %57
  br label %cond.end27

cond.false26:                                     ; preds = %cond.end30
  br label %cond.end27

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond.res39 = phi i1 [ %58, %cond.true25 ], [ false, %cond.false26 ]
  br i1 %cond.res39, label %if_then23, label %if_end24

cond.true28:                                      ; preds = %cond.end33
  call void @ctor272(%TokenType* %tmp.v36, i32 32)
  %59 = call i1 @"==404"(%TokenType* %oldType, %TokenType* %tmp.v36)
  %60 = xor i1 true, %59
  br label %cond.end30

cond.false29:                                     ; preds = %cond.end33
  br label %cond.end30

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond.res37 = phi i1 [ %60, %cond.true28 ], [ false, %cond.false29 ]
  br i1 %cond.res37, label %cond.true25, label %cond.false26

cond.true31:                                      ; preds = %if_block22
  %61 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  call void @ctor272(%TokenType* %tmp.v34, i32 25)
  %62 = call i1 @"==404"(%TokenType* %61, %TokenType* %tmp.v34)
  %63 = xor i1 true, %62
  br label %cond.end33

cond.false32:                                     ; preds = %if_block22
  br label %cond.end33

cond.end33:                                       ; preds = %cond.false32, %cond.true31
  %cond.res35 = phi i1 [ %63, %cond.true31 ], [ false, %cond.false32 ]
  br i1 %cond.res35, label %cond.true28, label %cond.false29

cond_destruct_alt141:                             ; preds = %if_end24
  br label %cond_destruct_end43

cond_destruct_alt242:                             ; preds = %if_end24
  br label %cond_destruct_end43

cond_destruct_end43:                              ; preds = %cond_destruct_alt242, %cond_destruct_alt141
  br i1 %cond.res35, label %cond_destruct_alt144, label %cond_destruct_alt245

cond_destruct_alt144:                             ; preds = %cond_destruct_end43
  br label %cond_destruct_end46

cond_destruct_alt245:                             ; preds = %cond_destruct_end43
  br label %cond_destruct_end46

cond_destruct_end46:                              ; preds = %cond_destruct_alt245, %cond_destruct_alt144
  br i1 %52, label %cond_destruct_alt147, label %cond_destruct_alt248

cond_destruct_alt147:                             ; preds = %cond_destruct_end46
  br label %cond_destruct_end49

cond_destruct_alt248:                             ; preds = %cond_destruct_end46
  br label %cond_destruct_end49

cond_destruct_end49:                              ; preds = %cond_destruct_alt248, %cond_destruct_alt147
  br label %if_block50

if_block50:                                       ; preds = %cond_destruct_end49
  %64 = load i32* %newCol
  %65 = load i32* %oldCol
  %66 = call i1 @">430"(i32 %64, i32 %65)
  br i1 %66, label %cond.true53, label %cond.false54

if_then51:                                        ; preds = %cond.end55
  %67 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %68 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %67, i32 0, i32 4
  call void @ctor272(%TokenType* %tmp.v58, i32 25)
  call void @"=244"(%TokenType* %68, %TokenType* %tmp.v58)
  %69 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %70 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %69, i32 0, i32 5
  store i32 1, i32* %70
  %71 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %72 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %71, i32 0, i32 2
  call void @"+=388"(%"Vector[UInt/rtct]"* %72, i32* %newCol)
  br label %if_end52

if_end52:                                         ; preds = %if_then51, %cond.end55
  br i1 %66, label %cond_destruct_alt159, label %cond_destruct_alt260

cond.true53:                                      ; preds = %if_block50
  %73 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  call void @ctor272(%TokenType* %tmp.v56, i32 0)
  %74 = call i1 @"==404"(%TokenType* %73, %TokenType* %tmp.v56)
  %75 = xor i1 true, %74
  br label %cond.end55

cond.false54:                                     ; preds = %if_block50
  br label %cond.end55

cond.end55:                                       ; preds = %cond.false54, %cond.true53
  %cond.res57 = phi i1 [ %75, %cond.true53 ], [ false, %cond.false54 ]
  br i1 %cond.res57, label %if_then51, label %if_end52

cond_destruct_alt159:                             ; preds = %if_end52
  br label %cond_destruct_end61

cond_destruct_alt260:                             ; preds = %if_end52
  br label %cond_destruct_end61

cond_destruct_end61:                              ; preds = %cond_destruct_alt260, %cond_destruct_alt159
  br label %if_block62

if_block62:                                       ; preds = %cond_destruct_end61
  %76 = load i32* %newCol
  %77 = load i32* %oldCol
  %78 = call i1 @"<431"(i32 %76, i32 %77)
  br i1 %78, label %cond.true65, label %cond.false66

if_then63:                                        ; preds = %cond.end67
  store i32 0, i32* %numDedents
  br label %while_block69

if_end64:                                         ; preds = %if_end76, %cond.end67
  br label %if_end13

cond.true65:                                      ; preds = %if_block62
  %79 = load i32* %newCol
  %80 = call i1 @">=432"(i32 %79, i32 1)
  br label %cond.end67

cond.false66:                                     ; preds = %if_block62
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false66, %cond.true65
  %cond.res68 = phi i1 [ %80, %cond.true65 ], [ false, %cond.false66 ]
  br i1 %cond.res68, label %if_then63, label %if_end64

while_block69:                                    ; preds = %while_step71, %if_then63
  %81 = load i32* %newCol
  %82 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %83 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %82, i32 0, i32 2
  %84 = call i32* @back427(%"Vector[UInt/rtct]"* %83)
  %85 = load i32* %84
  %86 = call i1 @"<431"(i32 %81, i32 %85)
  br i1 %86, label %while_body70, label %while_end72

while_body70:                                     ; preds = %while_block69
  %87 = call i32 @"post_++67"(i32* %numDedents)
  %88 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %89 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %88, i32 0, i32 2
  call void @popBack433(%"Vector[UInt/rtct]"* %89)
  br label %while_step71

while_step71:                                     ; preds = %while_body70
  br label %while_block69

while_end72:                                      ; preds = %while_block69
  %90 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %91 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %90, i32 0, i32 4
  call void @ctor272(%TokenType* %tmp.v73, i32 32)
  call void @"=244"(%TokenType* %91, %TokenType* %tmp.v73)
  %92 = load i32* %numDedents
  %93 = call i32 @"+29"(i32 1, i32 %92)
  %94 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %95 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %94, i32 0, i32 5
  store i32 %93, i32* %95
  br label %if_block74

if_block74:                                       ; preds = %while_end72
  %96 = load i32* %newCol
  %97 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %98 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %97, i32 0, i32 2
  %99 = call i32* @back427(%"Vector[UInt/rtct]"* %98)
  %100 = load i32* %99
  %101 = call i1 @"!=434"(i32 %96, i32 %100)
  br i1 %101, label %if_then75, label %if_end76

if_then75:                                        ; preds = %if_block74
  %102 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %103 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %102, i32 0, i32 1
  %104 = getelementptr inbounds %Token* %tk, i32 0, i32 0
  %105 = load %Location* %104
  %106 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %107 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([32 x i8]* @str438, i32 0, i32 0), i8** %106
  store i8* getelementptr inbounds ([32 x i8]* @str438, i32 0, i32 31), i8** %107
  %108 = load %StringRef* %tmp.StringRef
  %109 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %110 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %109, i32 0, i32 2
  %111 = call i32* @back427(%"Vector[UInt/rtct]"* %110)
  %112 = load i32* %111
  %113 = getelementptr inbounds %StringRef* %tmp.StringRef78, i32 0, i32 0
  %114 = getelementptr inbounds %StringRef* %tmp.StringRef78, i32 0, i32 1
  store i8* getelementptr inbounds ([7 x i8]* @str439, i32 0, i32 0), i8** %113
  store i8* getelementptr inbounds ([7 x i8]* @str439, i32 0, i32 6), i8** %114
  %115 = load %StringRef* %tmp.StringRef78
  %116 = load i32* %newCol
  call void @toString435(%String* %"$tmpC77", %StringRef %108, i32 %112, %StringRef %115, i32 %116)
  call void @reportError(%ExternalErrorReporter* %103, %Location %105, %String* %"$tmpC77")
  call void @dtor214(%String* %"$tmpC77")
  br label %if_end76

if_end76:                                         ; preds = %if_then75, %if_block74
  br label %if_end64

if_block79:                                       ; preds = %if_end13
  %117 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  call void @ctor272(%TokenType* %tmp.v82, i32 29)
  %118 = call i1 @"==404"(%TokenType* %117, %TokenType* %tmp.v82)
  br i1 %118, label %if_then80, label %if_else

if_then80:                                        ; preds = %if_block79
  %119 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %120 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %119, i32 0, i32 3
  store i8 40, i8* %"$tmpForRef"
  call void @"+="(%"Vector[Char/rtct]"* %120, i8* %"$tmpForRef")
  br label %if_end81

if_else:                                          ; preds = %if_block79
  br label %if_block83

if_end81:                                         ; preds = %if_end86, %if_then80
  call void @dtor387(%Token* %tk)
  ret void

if_block83:                                       ; preds = %if_else
  %121 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  call void @ctor272(%TokenType* %tmp.v87, i32 27)
  %122 = call i1 @"==404"(%TokenType* %121, %TokenType* %tmp.v87)
  br i1 %122, label %if_then84, label %if_else85

if_then84:                                        ; preds = %if_block83
  %123 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %124 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %123, i32 0, i32 3
  store i8 91, i8* %"$tmpForRef88"
  call void @"+="(%"Vector[Char/rtct]"* %124, i8* %"$tmpForRef88")
  br label %if_end86

if_else85:                                        ; preds = %if_block83
  br label %if_block89

if_end86:                                         ; preds = %if_end92, %if_then84
  br label %if_end81

if_block89:                                       ; preds = %if_else85
  %125 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  call void @ctor272(%TokenType* %tmp.v93, i32 25)
  %126 = call i1 @"==404"(%TokenType* %125, %TokenType* %tmp.v93)
  br i1 %126, label %if_then90, label %if_else91

if_then90:                                        ; preds = %if_block89
  %127 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %128 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %127, i32 0, i32 3
  store i8 123, i8* %"$tmpForRef94"
  call void @"+="(%"Vector[Char/rtct]"* %128, i8* %"$tmpForRef94")
  br label %if_end92

if_else91:                                        ; preds = %if_block89
  br label %if_block95

if_end92:                                         ; preds = %if_end98, %if_then90
  br label %if_end86

if_block95:                                       ; preds = %if_else91
  %129 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  call void @ctor272(%TokenType* %tmp.v102, i32 30)
  %130 = call i1 @"==404"(%TokenType* %129, %TokenType* %tmp.v102)
  br i1 %130, label %cond.true99, label %cond.false100

if_then96:                                        ; preds = %cond.end101
  %131 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %132 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %131, i32 0, i32 3
  call void @popBack440(%"Vector[Char/rtct]"* %132)
  br label %if_end98

if_else97:                                        ; preds = %cond.end101
  br label %if_block104

if_end98:                                         ; preds = %if_end107, %if_then96
  br label %if_end92

cond.true99:                                      ; preds = %if_block95
  %133 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %134 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %133, i32 0, i32 3
  %135 = call i8* @back426(%"Vector[Char/rtct]"* %134)
  %136 = load i8* %135
  %137 = icmp eq i8 %136, 40
  br label %cond.end101

cond.false100:                                    ; preds = %if_block95
  br label %cond.end101

cond.end101:                                      ; preds = %cond.false100, %cond.true99
  %cond.res103 = phi i1 [ %137, %cond.true99 ], [ false, %cond.false100 ]
  br i1 %cond.res103, label %if_then96, label %if_else97

if_block104:                                      ; preds = %if_else97
  %138 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  call void @ctor272(%TokenType* %tmp.v111, i32 28)
  %139 = call i1 @"==404"(%TokenType* %138, %TokenType* %tmp.v111)
  br i1 %139, label %cond.true108, label %cond.false109

if_then105:                                       ; preds = %cond.end110
  %140 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %141 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %140, i32 0, i32 3
  call void @popBack440(%"Vector[Char/rtct]"* %141)
  br label %if_end107

if_else106:                                       ; preds = %cond.end110
  br label %if_block113

if_end107:                                        ; preds = %if_end115, %if_then105
  br label %if_end98

cond.true108:                                     ; preds = %if_block104
  %142 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %143 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %142, i32 0, i32 3
  %144 = call i8* @back426(%"Vector[Char/rtct]"* %143)
  %145 = load i8* %144
  %146 = icmp eq i8 %145, 91
  br label %cond.end110

cond.false109:                                    ; preds = %if_block104
  br label %cond.end110

cond.end110:                                      ; preds = %cond.false109, %cond.true108
  %cond.res112 = phi i1 [ %146, %cond.true108 ], [ false, %cond.false109 ]
  br i1 %cond.res112, label %if_then105, label %if_else106

if_block113:                                      ; preds = %if_else106
  %147 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  call void @ctor272(%TokenType* %tmp.v119, i32 26)
  %148 = call i1 @"==404"(%TokenType* %147, %TokenType* %tmp.v119)
  br i1 %148, label %cond.true116, label %cond.false117

if_then114:                                       ; preds = %cond.end118
  %149 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %150 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %149, i32 0, i32 3
  call void @popBack440(%"Vector[Char/rtct]"* %150)
  br label %if_end115

if_end115:                                        ; preds = %if_then114, %cond.end118
  br label %if_end107

cond.true116:                                     ; preds = %if_block113
  %151 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %152 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %151, i32 0, i32 3
  %153 = call i8* @back426(%"Vector[Char/rtct]"* %152)
  %154 = load i8* %153
  %155 = icmp eq i8 %154, 123
  br label %cond.end118

cond.false117:                                    ; preds = %if_block113
  br label %cond.end118

cond.end118:                                      ; preds = %cond.false117, %cond.true116
  %cond.res120 = phi i1 [ %155, %cond.true116 ], [ false, %cond.false117 ]
  br i1 %cond.res120, label %if_then114, label %if_end115
}

; Function Attrs: inlinehint nounwind
define internal i1 @">409"(i32 %x, i32 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn30(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn30(i32 %4, i32 %5)
  %7 = icmp sgt i32 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal void @front410(%Token* sret %_result, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %this.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tk = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @front406(%Token* %tk, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %2)
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 5
  %5 = load i32* %4
  %6 = call i1 @">409"(i32 %5, i32 0)
  br i1 %6, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %7 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  %8 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %9 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %8, i32 0, i32 4
  call void @"=244"(%TokenType* %7, %TokenType* %9)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  %10 = load %Token** %_result.addr
  call void @ctor262(%Token* %10, %Token* %tk)
  call void @dtor387(%Token* %tk)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor387(%Token* %tk)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popFront411(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this) #3 {
  %this.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 1
  call void @remove412(%"Vector[Token]"* %2, i64 0)
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %3, i32 0, i32 1
  %5 = call i1 @isEmpty403(%"Vector[Token]"* %4)
  br i1 %5, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %6 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %7 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %6, i32 0, i32 1
  %8 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %8, i32 0, i32 0
  call void @"post_++266"(%Token* %"$tmpC", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %9)
  call void @"+=259"(%"Vector[Token]"* %7, %Token* %"$tmpC")
  call void @dtor387(%Token* %"$tmpC")
  br label %if_end

if_end:                                           ; preds = %if_then, %cond.end
  ret void

cond.true:                                        ; preds = %if_block
  %10 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %11 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %10, i32 0, i32 0
  %12 = call i1 @"pre_!!257"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %12, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @remove412(%"Vector[Token]"* %this, i64 %index) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %r = alloca %"ContiguousMemoryRange[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %this.addr
  call void @all413(%"ContiguousMemoryRange[Token]"* %r, %"Vector[Token]"* %1)
  %2 = load i64* %index.addr
  call void @popFront416(%"ContiguousMemoryRange[Token]"* %r, i64 %2)
  %3 = load %"Vector[Token]"** %this.addr
  %4 = call i64 @size252(%"Vector[Token]"* %3)
  %5 = load i64* %index.addr
  %6 = call i64 @-61(i64 %4, i64 %5)
  %7 = call i64 @-292(i64 %6, i32 1)
  call void @popBack418(%"ContiguousMemoryRange[Token]"* %r, i64 %7)
  %8 = load %"Vector[Token]"** %this.addr
  %9 = load %"ContiguousMemoryRange[Token]"* %r
  call void @remove419(%"Vector[Token]"* %8, %"ContiguousMemoryRange[Token]" %9)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @all413(%"ContiguousMemoryRange[Token]"* sret %_result, %"Vector[Token]"* %this) #3 {
  %_result.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %_result, %"ContiguousMemoryRange[Token]"** %_result.addr
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %_result.addr
  %2 = load %"Vector[Token]"** %this.addr
  %3 = getelementptr inbounds %"Vector[Token]"* %2, i32 0, i32 0
  %4 = load %"RawPtr[Token]"* %3
  %5 = load %"Vector[Token]"** %this.addr
  %6 = getelementptr inbounds %"Vector[Token]"* %5, i32 0, i32 1
  %7 = load %"RawPtr[Token]"* %6
  call void @ctor414(%"ContiguousMemoryRange[Token]"* %1, %"RawPtr[Token]" %4, %"RawPtr[Token]" %7)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor414(%"ContiguousMemoryRange[Token]"* %this, %"RawPtr[Token]" %f_begin, %"RawPtr[Token]" %f_end) #2 {
  %this.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"** %this.addr
  %f_begin.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %f_begin, %"RawPtr[Token]"* %f_begin.addr
  %f_end.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %f_end, %"RawPtr[Token]"* %f_end.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  call void @ctor415(%"RawPtr[Token]"* %2, %"RawPtr[Token]"* %f_begin.addr)
  %3 = load %"ContiguousMemoryRange[Token]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 1
  call void @ctor415(%"RawPtr[Token]"* %4, %"RawPtr[Token]"* %f_end.addr)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor415(%"RawPtr[Token]"* %this, %"RawPtr[Token]"* %other) #2 {
  %this.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %this, %"RawPtr[Token]"** %this.addr
  %other.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %other, %"RawPtr[Token]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %other.addr
  %2 = getelementptr inbounds %"RawPtr[Token]"* %1, i32 0, i32 0
  %3 = load %Token** %2
  %4 = load %"RawPtr[Token]"** %this.addr
  %5 = getelementptr inbounds %"RawPtr[Token]"* %4, i32 0, i32 0
  store %Token* %3, %Token** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront416(%"ContiguousMemoryRange[Token]"* %this, i64 %n) #2 {
  %this.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[Token]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Token]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Token]"* %4
  %6 = load i64* %n.addr
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  call void @advance417(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]" %5, i64 %7)
  %8 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=254"(%"RawPtr[Token]"* %2, %"RawPtr[Token]" %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advance417(%"RawPtr[Token]"* sret %_result, %"RawPtr[Token]" %this, i64 %n) #3 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %this.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %this, %"RawPtr[Token]"* %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %_result.addr
  %2 = load %"RawPtr[Token]"* %this.addr
  %3 = call i8* @bytePtr251(%"RawPtr[Token]" %2)
  %4 = load i64* %n.addr
  store i64 72, i64* %tmp.v1
  %5 = load i64* %tmp.v1
  %6 = call i64 @"*206"(i64 %4, i64 %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  %8 = call i8* @ptrAdd(i8* %3, i64 %7)
  call void @ctor256(%"RawPtr[Token]"* %1, i8* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack418(%"ContiguousMemoryRange[Token]"* %this, i64 %n) #2 {
  %this.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[Token]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[Token]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[Token]"* %4
  %6 = load i64* %n.addr
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  %8 = sub i64 0, %7
  call void @advance417(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]" %5, i64 %8)
  %9 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=254"(%"RawPtr[Token]"* %2, %"RawPtr[Token]" %9)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @remove419(%"Vector[Token]"* %this, %"ContiguousMemoryRange[Token]" %range) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %range.addr = alloca %"ContiguousMemoryRange[Token]"
  store %"ContiguousMemoryRange[Token]" %range, %"ContiguousMemoryRange[Token]"* %range.addr
  %rBegin = alloca %"RawPtr[Token]"
  %rEnd = alloca %"RawPtr[Token]"
  %"$rangeVar" = alloca %"ContiguousMemoryRange[Token]"
  %el = alloca %Token*
  %"$tmpC" = alloca %"RawPtr[Token]"
  %"$tmpC5" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"* %range.addr
  call void @frontPtr420(%"RawPtr[Token]"* %rBegin, %"ContiguousMemoryRange[Token]" %1)
  %2 = load %"ContiguousMemoryRange[Token]"* %range.addr
  call void @backPtr421(%"RawPtr[Token]"* %rEnd, %"ContiguousMemoryRange[Token]" %2)
  call void @ctor422(%"ContiguousMemoryRange[Token]"* %"$rangeVar", %"ContiguousMemoryRange[Token]"* %range.addr)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %3 = load %"ContiguousMemoryRange[Token]"* %"$rangeVar"
  %4 = call i1 @isEmpty423(%"ContiguousMemoryRange[Token]" %3)
  %5 = xor i1 true, %4
  br i1 %5, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %6 = load %"ContiguousMemoryRange[Token]"* %"$rangeVar"
  %7 = call %Token* @front424(%"ContiguousMemoryRange[Token]" %6)
  store %Token* %7, %Token** %el
  %8 = load %Token** %el
  call void @dtor387(%Token* %8)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @popFront425(%"ContiguousMemoryRange[Token]"* %"$rangeVar")
  br label %while_block

while_end:                                        ; preds = %while_block
  br label %while_block1

while_block1:                                     ; preds = %while_step3, %while_end
  %9 = load %"Vector[Token]"** %this.addr
  %10 = getelementptr inbounds %"Vector[Token]"* %9, i32 0, i32 1
  %11 = load %"RawPtr[Token]"* %10
  %12 = call i1 @"==261"(%"RawPtr[Token]"* %rEnd, %"RawPtr[Token]" %11)
  %13 = xor i1 true, %12
  br i1 %13, label %while_body2, label %while_end4

while_body2:                                      ; preds = %while_block1
  %14 = load %"RawPtr[Token]"* %rBegin
  %15 = call %Token* @value264(%"RawPtr[Token]" %14)
  %16 = load %"RawPtr[Token]"* %rEnd
  %17 = call %Token* @value264(%"RawPtr[Token]" %16)
  call void @ctor262(%Token* %15, %Token* %17)
  %18 = load %"RawPtr[Token]"* %rEnd
  %19 = call %Token* @value264(%"RawPtr[Token]" %18)
  call void @dtor387(%Token* %19)
  %20 = load %"RawPtr[Token]"* %rBegin
  call void @advance265(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]" %20)
  %21 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=254"(%"RawPtr[Token]"* %rBegin, %"RawPtr[Token]" %21)
  %22 = load %"RawPtr[Token]"* %rEnd
  call void @advance265(%"RawPtr[Token]"* %"$tmpC5", %"RawPtr[Token]" %22)
  %23 = load %"RawPtr[Token]"* %"$tmpC5"
  call void @"=254"(%"RawPtr[Token]"* %rEnd, %"RawPtr[Token]" %23)
  br label %while_step3

while_step3:                                      ; preds = %while_body2
  br label %while_block1

while_end4:                                       ; preds = %while_block1
  %24 = load %"Vector[Token]"** %this.addr
  %25 = getelementptr inbounds %"Vector[Token]"* %24, i32 0, i32 1
  %26 = load %"RawPtr[Token]"* %rBegin
  call void @"=254"(%"RawPtr[Token]"* %25, %"RawPtr[Token]" %26)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @frontPtr420(%"RawPtr[Token]"* sret %_result, %"ContiguousMemoryRange[Token]" %this) #3 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %this.addr = alloca %"ContiguousMemoryRange[Token]"
  store %"ContiguousMemoryRange[Token]" %this, %"ContiguousMemoryRange[Token]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %_result.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %this.addr, i32 0, i32 0
  call void @ctor415(%"RawPtr[Token]"* %1, %"RawPtr[Token]"* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @backPtr421(%"RawPtr[Token]"* sret %_result, %"ContiguousMemoryRange[Token]" %this) #3 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %this.addr = alloca %"ContiguousMemoryRange[Token]"
  store %"ContiguousMemoryRange[Token]" %this, %"ContiguousMemoryRange[Token]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %_result.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %this.addr, i32 0, i32 1
  call void @ctor415(%"RawPtr[Token]"* %1, %"RawPtr[Token]"* %2)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor422(%"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"* %other) #2 {
  %this.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"** %this.addr
  %other.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %other, %"ContiguousMemoryRange[Token]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Token]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 0
  call void @ctor415(%"RawPtr[Token]"* %2, %"RawPtr[Token]"* %4)
  %5 = load %"ContiguousMemoryRange[Token]"** %this.addr
  %6 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %5, i32 0, i32 1
  %7 = load %"ContiguousMemoryRange[Token]"** %other.addr
  %8 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %7, i32 0, i32 1
  call void @ctor415(%"RawPtr[Token]"* %6, %"RawPtr[Token]"* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty423(%"ContiguousMemoryRange[Token]" %this) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Token]"
  store %"ContiguousMemoryRange[Token]" %this, %"ContiguousMemoryRange[Token]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %this.addr, i32 0, i32 1
  %2 = load %"RawPtr[Token]"* %1
  %3 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %this.addr, i32 0, i32 0
  %4 = load %"RawPtr[Token]"* %3
  %5 = call i64 @diff250(%"RawPtr[Token]" %2, %"RawPtr[Token]" %4)
  %6 = call i1 @"<=296"(i64 %5, i32 0)
  ret i1 %6
}

; Function Attrs: inlinehint nounwind
define internal %Token* @front424(%"ContiguousMemoryRange[Token]" %this) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Token]"
  store %"ContiguousMemoryRange[Token]" %this, %"ContiguousMemoryRange[Token]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %this.addr, i32 0, i32 0
  %2 = load %"RawPtr[Token]"* %1
  %3 = call %Token* @value264(%"RawPtr[Token]" %2)
  ret %Token* %3
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront425(%"ContiguousMemoryRange[Token]"* %this) #2 {
  %this.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"** %this.addr
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Token]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Token]"* %4
  call void @advance265(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]" %5)
  %6 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=254"(%"RawPtr[Token]"* %2, %"RawPtr[Token]" %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i8* @back426(%"Vector[Char/rtct]"* %this) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 1
  %3 = load %"RawPtr[Char/rtct]"* %2
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %3, i64 -1)
  %4 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  %5 = call i8* @value(%"RawPtr[Char/rtct]" %4)
  ret i8* %5
}

; Function Attrs: inlinehint nounwind
define internal i32* @back427(%"Vector[UInt/rtct]"* %this) #3 {
  %this.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"** %this.addr
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 1
  %3 = load %"RawPtr[UInt/rtct]"* %2
  call void @advance428(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]" %3, i64 -1)
  %4 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  %5 = call i32* @value400(%"RawPtr[UInt/rtct]" %4)
  ret i32* %5
}

; Function Attrs: inlinehint nounwind
define internal void @advance428(%"RawPtr[UInt/rtct]"* sret %_result, %"RawPtr[UInt/rtct]" %this, i64 %n) #3 {
  %_result.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %_result, %"RawPtr[UInt/rtct]"** %_result.addr
  %this.addr = alloca %"RawPtr[UInt/rtct]"
  store %"RawPtr[UInt/rtct]" %this, %"RawPtr[UInt/rtct]"* %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %_result.addr
  %2 = load %"RawPtr[UInt/rtct]"* %this.addr
  %3 = call i8* @bytePtr393(%"RawPtr[UInt/rtct]" %2)
  %4 = load i64* %n.addr
  store i64 4, i64* %tmp.v1
  %5 = load i64* %tmp.v1
  %6 = call i64 @"*206"(i64 %4, i64 %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  %8 = call i8* @ptrAdd(i8* %3, i64 %7)
  call void @ctor399(%"RawPtr[UInt/rtct]"* %1, i8* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==429"(i32 %x, i32 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn33(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn33(i32 %4, i32 %5)
  %7 = icmp eq i32 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i1 @">430"(i32 %x, i32 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn33(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn33(i32 %4, i32 %5)
  %7 = icmp sgt i32 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i1 @"<431"(i32 %x, i32 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn33(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn33(i32 %4, i32 %5)
  %7 = icmp slt i32 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i1 @">=432"(i32 %x, i32 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn275(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn276(i32 %4, i32 %5)
  %7 = icmp sge i32 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal void @popBack433(%"Vector[UInt/rtct]"* %this) #3 {
  %this.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"** %this.addr
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 1
  %3 = load %"Vector[UInt/rtct]"** %this.addr
  %4 = getelementptr inbounds %"Vector[UInt/rtct]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[UInt/rtct]"* %4
  call void @advance428(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]" %5, i64 -1)
  %6 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  call void @"=397"(%"RawPtr[UInt/rtct]"* %2, %"RawPtr[UInt/rtct]" %6)
  %7 = load %"Vector[UInt/rtct]"** %this.addr
  %8 = getelementptr inbounds %"Vector[UInt/rtct]"* %7, i32 0, i32 1
  %9 = load %"RawPtr[UInt/rtct]"* %8
  %10 = call i32* @value400(%"RawPtr[UInt/rtct]" %9)
  %11 = load i32* %10
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"!=434"(i32 %x, i32 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn33(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn33(i32 %4, i32 %5)
  %7 = icmp ne i32 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal void @toString435(%String* sret %_result, %StringRef %a1, i32 %a2, %StringRef %a3, i32 %a4) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %a1.addr = alloca %StringRef
  store %StringRef %a1, %StringRef* %a1.addr
  %a2.addr = alloca i32
  store i32 %a2, i32* %a2.addr
  %a3.addr = alloca %StringRef
  store %StringRef %a3, %StringRef* %a3.addr
  %a4.addr = alloca i32
  store i32 %a4, i32* %a4.addr
  %s = alloca %StringOutputStream
  br label %code

code:                                             ; preds = %0
  call void @ctor196(%StringOutputStream* %s)
  %1 = call %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %a1.addr)
  %2 = call %StringOutputStream* @"<<436"(%StringOutputStream* %1, i32* %a2.addr)
  %3 = call %StringOutputStream* @"<<"(%StringOutputStream* %2, %StringRef* %a3.addr)
  %4 = call %StringOutputStream* @"<<436"(%StringOutputStream* %3, i32* %a4.addr)
  %5 = load %String** %_result.addr
  %6 = getelementptr inbounds %StringOutputStream* %s, i32 0, i32 0
  call void @ctor209(%String* %5, %String* %6)
  call void @dtor213(%StringOutputStream* %s)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor213(%StringOutputStream* %s)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringOutputStream* @"<<436"(%StringOutputStream* %s, i32* %x) #3 {
  %s.addr = alloca %StringOutputStream*
  store %StringOutputStream* %s, %StringOutputStream** %s.addr
  %x.addr = alloca i32*
  store i32* %x, i32** %x.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %s.addr
  %2 = load i32** %x.addr
  %3 = load i32* %2
  %4 = zext i32 %3 to i64
  store i64 %4, i64* %tmp.v
  %5 = load i64* %tmp.v
  call void @"<<<437"(%StringOutputStream* %1, i64 %5)
  %6 = load %StringOutputStream** %s.addr
  ret %StringOutputStream* %6
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<437"(%StringOutputStream* %this, i64 %x) #2 {
  %this.addr = alloca %StringOutputStream*
  store %StringOutputStream* %this, %StringOutputStream** %this.addr
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %"$tmpC" = alloca %StringRef
  %"$tmpC1" = alloca %String
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %this.addr
  %2 = getelementptr inbounds %StringOutputStream* %1, i32 0, i32 0
  %3 = load i64* %x.addr
  call void @ulongToString(%String* %"$tmpC1", i64 %3)
  call void @all384(%StringRef* %"$tmpC", %String* %"$tmpC1")
  %4 = load %StringRef* %"$tmpC"
  call void @append(%String* %2, %StringRef %4)
  call void @dtor214(%String* %"$tmpC1")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ulongToString(%String* sret %_result, i64 %x) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %buf = alloca [16 x i8]
  %"$tmpForRef" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = bitcast [16 x i8]* %buf to i8*
  store i8 0, i8* %1
  %2 = load i64* %x.addr
  %3 = bitcast [16 x i8]* %buf to i8*
  call void @_ULong_to_CString(i64 %2, i8* %3)
  %4 = load %String** %_result.addr
  %5 = bitcast [16 x i8]* %buf to i8*
  %6 = call %StringRef @_String_fromCString(i8* %5)
  store %StringRef %6, %StringRef* %"$tmpForRef"
  call void @ctor328(%String* %4, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popBack440(%"Vector[Char/rtct]"* %this) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 1
  %3 = load %"Vector[Char/rtct]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Char/rtct]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[Char/rtct]"* %4
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %5, i64 -1)
  %6 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=205"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %6)
  %7 = load %"Vector[Char/rtct]"** %this.addr
  %8 = getelementptr inbounds %"Vector[Char/rtct]"* %7, i32 0, i32 1
  %9 = load %"RawPtr[Char/rtct]"* %8
  %10 = call i8* @value(%"RawPtr[Char/rtct]" %9)
  %11 = load i8* %10
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor441(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" %tokens, %ExternalErrorReporter %errorReporter) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tokens.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" %tokens, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %tokens.addr
  %errorReporter.addr = alloca %ExternalErrorReporter
  store %ExternalErrorReporter %errorReporter, %ExternalErrorReporter* %errorReporter.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 1
  call void @ctor181(%Token* %2)
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %tokens.addr
  call void @ctor442(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %4, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" %5)
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %7 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, i32 0, i32 2
  store i1 false, i1* %7
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor442(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" %src) #3 {
  %this.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %src.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" %src, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %src.addr
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1, i32 0, i32 0
  call void @ctor171(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %3, i32 0, i32 0
  call void @"=443"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %4, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %src.addr)
  %5 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %6 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %5, i32 0, i32 1
  call void @ctor184(%"Vector[Token]"* %6)
  %7 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %7, i32 0, i32 1
  call void @reserve248(%"Vector[Token]"* %8, i64 10)
  br label %if_block

if_block:                                         ; preds = %code
  %9 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %10 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %9, i32 0, i32 0
  %11 = call i1 @"pre_!!462"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %10)
  br i1 %11, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %12 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %13 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %12, i32 0, i32 1
  %14 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %15 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %14, i32 0, i32 0
  call void @"post_++464"(%Token* %"$tmpC", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %15)
  call void @"+=259"(%"Vector[Token]"* %13, %Token* %"$tmpC")
  call void @dtor387(%Token* %"$tmpC")
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=443"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %dest, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %other) #2 {
  %dest.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %dest, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %dest.addr
  %other.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %other, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %dest.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %4 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  call void @"=444"(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %2, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %4)
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %dest.addr
  %6 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 2
  %7 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %8 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 2
  %9 = call %"Vector[UInt/rtct]"* @"=453"(%"Vector[UInt/rtct]"* %6, %"Vector[UInt/rtct]"* %8)
  %10 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %dest.addr
  %11 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %10, i32 0, i32 3
  %12 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %13 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 3
  %14 = call %"Vector[Char/rtct]"* @"=242"(%"Vector[Char/rtct]"* %11, %"Vector[Char/rtct]"* %13)
  %15 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %dest.addr
  %16 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %15, i32 0, i32 4
  %17 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %18 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %17, i32 0, i32 4
  call void @"=244"(%TokenType* %16, %TokenType* %18)
  %19 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %20 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %19, i32 0, i32 5
  %21 = load i32* %20
  %22 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %dest.addr
  %23 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %22, i32 0, i32 5
  store i32 %21, i32* %23
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=444"(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %dest, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %other) #2 {
  %dest.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %dest, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %dest.addr
  %other.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %other, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %dest.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 0
  %3 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %other.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %3, i32 0, i32 0
  call void @"=236"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %2, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4)
  %5 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %dest.addr
  %6 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %5, i32 0, i32 1
  %7 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %other.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %7, i32 0, i32 1
  %9 = call %"Vector[Token]"* @"=445"(%"Vector[Token]"* %6, %"Vector[Token]"* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %"Vector[Token]"* @"=445"(%"Vector[Token]"* %this, %"Vector[Token]"* %other) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %other.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %other, %"Vector[Token]"** %other.addr
  %tmp = alloca %"Vector[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %other.addr
  call void @ctor446(%"Vector[Token]"* %tmp, %"Vector[Token]"* %1)
  %2 = load %"Vector[Token]"** %this.addr
  call void @swap449(%"Vector[Token]"* %tmp, %"Vector[Token]"* %2)
  %3 = load %"Vector[Token]"** %this.addr
  call void @dtor450(%"Vector[Token]"* %tmp)
  ret %"Vector[Token]"* %3

dumy_block:                                       ; No predecessors!
  call void @dtor450(%"Vector[Token]"* %tmp)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @ctor446(%"Vector[Token]"* %this, %"Vector[Token]"* %other) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %other.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %other, %"Vector[Token]"** %other.addr
  %size = alloca i64
  %"$tmpC" = alloca %"RawPtr[Token]"
  %"$tmpC1" = alloca %"RawPtr[Token]"
  %dst = alloca %"RawPtr[Token]"
  %src = alloca %"RawPtr[Token]"
  %"$tmpC2" = alloca %"RawPtr[Token]"
  %"$tmpC3" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 0
  call void @ctor185(%"RawPtr[Token]"* %2)
  %3 = load %"Vector[Token]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Token]"* %3, i32 0, i32 1
  call void @ctor185(%"RawPtr[Token]"* %4)
  %5 = load %"Vector[Token]"** %this.addr
  %6 = getelementptr inbounds %"Vector[Token]"* %5, i32 0, i32 2
  call void @ctor185(%"RawPtr[Token]"* %6)
  %7 = load %"Vector[Token]"** %other.addr
  %8 = call i64 @size252(%"Vector[Token]"* %7)
  store i64 %8, i64* %size
  %9 = load %"Vector[Token]"** %this.addr
  %10 = getelementptr inbounds %"Vector[Token]"* %9, i32 0, i32 0
  %11 = load i64* %size
  call void @allocRawPtr447(%"RawPtr[Token]"* %"$tmpC", i64 %11)
  %12 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=254"(%"RawPtr[Token]"* %10, %"RawPtr[Token]" %12)
  %13 = load %"Vector[Token]"** %this.addr
  %14 = getelementptr inbounds %"Vector[Token]"* %13, i32 0, i32 1
  %15 = load %"Vector[Token]"** %this.addr
  %16 = getelementptr inbounds %"Vector[Token]"* %15, i32 0, i32 0
  %17 = load %"RawPtr[Token]"* %16
  %18 = load i64* %size
  call void @advance255(%"RawPtr[Token]"* %"$tmpC1", %"RawPtr[Token]" %17, i64 %18)
  %19 = load %"RawPtr[Token]"* %"$tmpC1"
  call void @"=254"(%"RawPtr[Token]"* %14, %"RawPtr[Token]" %19)
  %20 = load %"Vector[Token]"** %this.addr
  %21 = getelementptr inbounds %"Vector[Token]"* %20, i32 0, i32 2
  %22 = load %"Vector[Token]"** %this.addr
  %23 = getelementptr inbounds %"Vector[Token]"* %22, i32 0, i32 1
  %24 = load %"RawPtr[Token]"* %23
  call void @"=254"(%"RawPtr[Token]"* %21, %"RawPtr[Token]" %24)
  %25 = load %"Vector[Token]"** %this.addr
  %26 = getelementptr inbounds %"Vector[Token]"* %25, i32 0, i32 0
  call void @ctor415(%"RawPtr[Token]"* %dst, %"RawPtr[Token]"* %26)
  %27 = load %"Vector[Token]"** %other.addr
  %28 = getelementptr inbounds %"Vector[Token]"* %27, i32 0, i32 0
  call void @ctor415(%"RawPtr[Token]"* %src, %"RawPtr[Token]"* %28)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %29 = load %"Vector[Token]"** %this.addr
  %30 = getelementptr inbounds %"Vector[Token]"* %29, i32 0, i32 1
  %31 = load %"RawPtr[Token]"* %30
  %32 = call i1 @"==261"(%"RawPtr[Token]"* %dst, %"RawPtr[Token]" %31)
  %33 = xor i1 true, %32
  br i1 %33, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %34 = load %"RawPtr[Token]"* %dst
  %35 = call %Token* @value264(%"RawPtr[Token]" %34)
  %36 = load %"RawPtr[Token]"* %src
  %37 = call %Token* @value264(%"RawPtr[Token]" %36)
  call void @ctor262(%Token* %35, %Token* %37)
  %38 = load %"RawPtr[Token]"* %dst
  call void @advance265(%"RawPtr[Token]"* %"$tmpC2", %"RawPtr[Token]" %38)
  %39 = load %"RawPtr[Token]"* %"$tmpC2"
  call void @"=254"(%"RawPtr[Token]"* %dst, %"RawPtr[Token]" %39)
  %40 = load %"RawPtr[Token]"* %src
  call void @advance265(%"RawPtr[Token]"* %"$tmpC3", %"RawPtr[Token]" %40)
  %41 = load %"RawPtr[Token]"* %"$tmpC3"
  call void @"=254"(%"RawPtr[Token]"* %src, %"RawPtr[Token]" %41)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @allocRawPtr447(%"RawPtr[Token]"* sret %_result, i64 %num) #3 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %num.addr = alloca i64
  store i64 %num, i64* %num.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %_result.addr
  %2 = load i64* %num.addr
  %3 = call i64 @"*"(i64 %2, i64 72)
  %4 = call i8* @malloc(i64 %3)
  %5 = bitcast i8* %4 to %Token*
  call void @ctor448(%"RawPtr[Token]"* %1, %Token* %5)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor448(%"RawPtr[Token]"* %this, %Token* %ref) #3 {
  %this.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %this, %"RawPtr[Token]"** %this.addr
  %ref.addr = alloca %Token*
  store %Token* %ref, %Token** %ref.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[Token]"* %1, i32 0, i32 0
  store %Token* null, %Token** %2
  %3 = load %Token** %ref.addr
  %4 = load %"RawPtr[Token]"** %this.addr
  %5 = getelementptr inbounds %"RawPtr[Token]"* %4, i32 0, i32 0
  store %Token* %3, %Token** %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @swap449(%"Vector[Token]"* %this, %"Vector[Token]"* %other) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %other.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %other, %"Vector[Token]"** %other.addr
  %tmp = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 0
  call void @ctor415(%"RawPtr[Token]"* %tmp, %"RawPtr[Token]"* %2)
  %3 = load %"Vector[Token]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Token]"* %3, i32 0, i32 0
  %5 = load %"Vector[Token]"** %other.addr
  %6 = getelementptr inbounds %"Vector[Token]"* %5, i32 0, i32 0
  %7 = load %"RawPtr[Token]"* %6
  call void @"=254"(%"RawPtr[Token]"* %4, %"RawPtr[Token]" %7)
  %8 = load %"Vector[Token]"** %other.addr
  %9 = getelementptr inbounds %"Vector[Token]"* %8, i32 0, i32 0
  %10 = load %"RawPtr[Token]"* %tmp
  call void @"=254"(%"RawPtr[Token]"* %9, %"RawPtr[Token]" %10)
  %11 = load %"Vector[Token]"** %this.addr
  %12 = getelementptr inbounds %"Vector[Token]"* %11, i32 0, i32 1
  %13 = load %"RawPtr[Token]"* %12
  call void @"=254"(%"RawPtr[Token]"* %tmp, %"RawPtr[Token]" %13)
  %14 = load %"Vector[Token]"** %this.addr
  %15 = getelementptr inbounds %"Vector[Token]"* %14, i32 0, i32 1
  %16 = load %"Vector[Token]"** %other.addr
  %17 = getelementptr inbounds %"Vector[Token]"* %16, i32 0, i32 1
  %18 = load %"RawPtr[Token]"* %17
  call void @"=254"(%"RawPtr[Token]"* %15, %"RawPtr[Token]" %18)
  %19 = load %"Vector[Token]"** %other.addr
  %20 = getelementptr inbounds %"Vector[Token]"* %19, i32 0, i32 1
  %21 = load %"RawPtr[Token]"* %tmp
  call void @"=254"(%"RawPtr[Token]"* %20, %"RawPtr[Token]" %21)
  %22 = load %"Vector[Token]"** %this.addr
  %23 = getelementptr inbounds %"Vector[Token]"* %22, i32 0, i32 2
  %24 = load %"RawPtr[Token]"* %23
  call void @"=254"(%"RawPtr[Token]"* %tmp, %"RawPtr[Token]" %24)
  %25 = load %"Vector[Token]"** %this.addr
  %26 = getelementptr inbounds %"Vector[Token]"* %25, i32 0, i32 2
  %27 = load %"Vector[Token]"** %other.addr
  %28 = getelementptr inbounds %"Vector[Token]"* %27, i32 0, i32 2
  %29 = load %"RawPtr[Token]"* %28
  call void @"=254"(%"RawPtr[Token]"* %26, %"RawPtr[Token]" %29)
  %30 = load %"Vector[Token]"** %other.addr
  %31 = getelementptr inbounds %"Vector[Token]"* %30, i32 0, i32 2
  %32 = load %"RawPtr[Token]"* %tmp
  call void @"=254"(%"RawPtr[Token]"* %31, %"RawPtr[Token]" %32)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @dtor450(%"Vector[Token]"* %this) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %p = alloca %"RawPtr[Token]"
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 0
  call void @ctor415(%"RawPtr[Token]"* %p, %"RawPtr[Token]"* %2)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %3 = load %"Vector[Token]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Token]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[Token]"* %4
  %6 = call i1 @"==261"(%"RawPtr[Token]"* %p, %"RawPtr[Token]" %5)
  %7 = xor i1 true, %6
  br i1 %7, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %8 = load %"RawPtr[Token]"* %p
  %9 = call %Token* @value264(%"RawPtr[Token]" %8)
  call void @dtor387(%Token* %9)
  br label %while_step

while_step:                                       ; preds = %while_body
  %10 = load %"RawPtr[Token]"* %p
  call void @advance265(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]" %10)
  %11 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=254"(%"RawPtr[Token]"* %p, %"RawPtr[Token]" %11)
  br label %while_block

while_end:                                        ; preds = %while_block
  %12 = load %"Vector[Token]"** %this.addr
  %13 = getelementptr inbounds %"Vector[Token]"* %12, i32 0, i32 0
  %14 = load %"RawPtr[Token]"* %13
  call void @freePtr451(%"RawPtr[Token]" %14)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @freePtr451(%"RawPtr[Token]" %this) #3 {
  %this.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %this, %"RawPtr[Token]"* %this.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"RawPtr[Token]"* %this.addr
  %2 = call i1 @isSet452(%"RawPtr[Token]" %1)
  br i1 %2, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %3 = load %"RawPtr[Token]"* %this.addr
  %4 = call i8* @bytePtr251(%"RawPtr[Token]" %3)
  call void @free(i8* %4)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isSet452(%"RawPtr[Token]" %this) #3 {
  %this.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %this, %"RawPtr[Token]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[Token]"* %this.addr, i32 0, i32 0
  %2 = load %Token** %1
  %3 = bitcast %Token* %2 to i8*
  %4 = call i1 @implOpRefNE(i8* %3, i8* null)
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal %"Vector[UInt/rtct]"* @"=453"(%"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"* %other) #3 {
  %this.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"** %this.addr
  %other.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %other, %"Vector[UInt/rtct]"** %other.addr
  %tmp = alloca %"Vector[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %other.addr
  call void @ctor454(%"Vector[UInt/rtct]"* %tmp, %"Vector[UInt/rtct]"* %1)
  %2 = load %"Vector[UInt/rtct]"** %this.addr
  call void @swap458(%"Vector[UInt/rtct]"* %tmp, %"Vector[UInt/rtct]"* %2)
  %3 = load %"Vector[UInt/rtct]"** %this.addr
  call void @dtor459(%"Vector[UInt/rtct]"* %tmp)
  ret %"Vector[UInt/rtct]"* %3

dumy_block:                                       ; No predecessors!
  call void @dtor459(%"Vector[UInt/rtct]"* %tmp)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @ctor454(%"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"* %other) #3 {
  %this.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"** %this.addr
  %other.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %other, %"Vector[UInt/rtct]"** %other.addr
  %size = alloca i64
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC1" = alloca %"RawPtr[UInt/rtct]"
  %dst = alloca %"RawPtr[UInt/rtct]"
  %src = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC2" = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC3" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 0
  call void @ctor187(%"RawPtr[UInt/rtct]"* %2)
  %3 = load %"Vector[UInt/rtct]"** %this.addr
  %4 = getelementptr inbounds %"Vector[UInt/rtct]"* %3, i32 0, i32 1
  call void @ctor187(%"RawPtr[UInt/rtct]"* %4)
  %5 = load %"Vector[UInt/rtct]"** %this.addr
  %6 = getelementptr inbounds %"Vector[UInt/rtct]"* %5, i32 0, i32 2
  call void @ctor187(%"RawPtr[UInt/rtct]"* %6)
  %7 = load %"Vector[UInt/rtct]"** %other.addr
  %8 = call i64 @size395(%"Vector[UInt/rtct]"* %7)
  store i64 %8, i64* %size
  %9 = load %"Vector[UInt/rtct]"** %this.addr
  %10 = getelementptr inbounds %"Vector[UInt/rtct]"* %9, i32 0, i32 0
  %11 = load i64* %size
  call void @allocRawPtr455(%"RawPtr[UInt/rtct]"* %"$tmpC", i64 %11)
  %12 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  call void @"=397"(%"RawPtr[UInt/rtct]"* %10, %"RawPtr[UInt/rtct]" %12)
  %13 = load %"Vector[UInt/rtct]"** %this.addr
  %14 = getelementptr inbounds %"Vector[UInt/rtct]"* %13, i32 0, i32 1
  %15 = load %"Vector[UInt/rtct]"** %this.addr
  %16 = getelementptr inbounds %"Vector[UInt/rtct]"* %15, i32 0, i32 0
  %17 = load %"RawPtr[UInt/rtct]"* %16
  %18 = load i64* %size
  call void @advance398(%"RawPtr[UInt/rtct]"* %"$tmpC1", %"RawPtr[UInt/rtct]" %17, i64 %18)
  %19 = load %"RawPtr[UInt/rtct]"* %"$tmpC1"
  call void @"=397"(%"RawPtr[UInt/rtct]"* %14, %"RawPtr[UInt/rtct]" %19)
  %20 = load %"Vector[UInt/rtct]"** %this.addr
  %21 = getelementptr inbounds %"Vector[UInt/rtct]"* %20, i32 0, i32 2
  %22 = load %"Vector[UInt/rtct]"** %this.addr
  %23 = getelementptr inbounds %"Vector[UInt/rtct]"* %22, i32 0, i32 1
  %24 = load %"RawPtr[UInt/rtct]"* %23
  call void @"=397"(%"RawPtr[UInt/rtct]"* %21, %"RawPtr[UInt/rtct]" %24)
  %25 = load %"Vector[UInt/rtct]"** %this.addr
  %26 = getelementptr inbounds %"Vector[UInt/rtct]"* %25, i32 0, i32 0
  call void @ctor457(%"RawPtr[UInt/rtct]"* %dst, %"RawPtr[UInt/rtct]"* %26)
  %27 = load %"Vector[UInt/rtct]"** %other.addr
  %28 = getelementptr inbounds %"Vector[UInt/rtct]"* %27, i32 0, i32 0
  call void @ctor457(%"RawPtr[UInt/rtct]"* %src, %"RawPtr[UInt/rtct]"* %28)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %29 = load %"Vector[UInt/rtct]"** %this.addr
  %30 = getelementptr inbounds %"Vector[UInt/rtct]"* %29, i32 0, i32 1
  %31 = load %"RawPtr[UInt/rtct]"* %30
  %32 = call i1 @"==390"(%"RawPtr[UInt/rtct]"* %dst, %"RawPtr[UInt/rtct]" %31)
  %33 = xor i1 true, %32
  br i1 %33, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %34 = load %"RawPtr[UInt/rtct]"* %src
  %35 = call i32* @value400(%"RawPtr[UInt/rtct]" %34)
  %36 = load i32* %35
  %37 = load %"RawPtr[UInt/rtct]"* %dst
  %38 = call i32* @value400(%"RawPtr[UInt/rtct]" %37)
  store i32 %36, i32* %38
  %39 = load %"RawPtr[UInt/rtct]"* %dst
  call void @advance401(%"RawPtr[UInt/rtct]"* %"$tmpC2", %"RawPtr[UInt/rtct]" %39)
  %40 = load %"RawPtr[UInt/rtct]"* %"$tmpC2"
  call void @"=397"(%"RawPtr[UInt/rtct]"* %dst, %"RawPtr[UInt/rtct]" %40)
  %41 = load %"RawPtr[UInt/rtct]"* %src
  call void @advance401(%"RawPtr[UInt/rtct]"* %"$tmpC3", %"RawPtr[UInt/rtct]" %41)
  %42 = load %"RawPtr[UInt/rtct]"* %"$tmpC3"
  call void @"=397"(%"RawPtr[UInt/rtct]"* %src, %"RawPtr[UInt/rtct]" %42)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @allocRawPtr455(%"RawPtr[UInt/rtct]"* sret %_result, i64 %num) #3 {
  %_result.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %_result, %"RawPtr[UInt/rtct]"** %_result.addr
  %num.addr = alloca i64
  store i64 %num, i64* %num.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %_result.addr
  %2 = load i64* %num.addr
  %3 = call i64 @"*"(i64 %2, i64 4)
  %4 = call i8* @malloc(i64 %3)
  %5 = bitcast i8* %4 to i32*
  call void @ctor456(%"RawPtr[UInt/rtct]"* %1, i32* %5)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor456(%"RawPtr[UInt/rtct]"* %this, i32* %ref) #3 {
  %this.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %this, %"RawPtr[UInt/rtct]"** %this.addr
  %ref.addr = alloca i32*
  store i32* %ref, i32** %ref.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %1, i32 0, i32 0
  store i32* null, i32** %2
  %3 = load i32** %ref.addr
  %4 = load %"RawPtr[UInt/rtct]"** %this.addr
  %5 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %4, i32 0, i32 0
  store i32* %3, i32** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor457(%"RawPtr[UInt/rtct]"* %this, %"RawPtr[UInt/rtct]"* %other) #2 {
  %this.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %this, %"RawPtr[UInt/rtct]"** %this.addr
  %other.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %other, %"RawPtr[UInt/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %other.addr
  %2 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load i32** %2
  %4 = load %"RawPtr[UInt/rtct]"** %this.addr
  %5 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %4, i32 0, i32 0
  store i32* %3, i32** %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @swap458(%"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"* %other) #3 {
  %this.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"** %this.addr
  %other.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %other, %"Vector[UInt/rtct]"** %other.addr
  %tmp = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 0
  call void @ctor457(%"RawPtr[UInt/rtct]"* %tmp, %"RawPtr[UInt/rtct]"* %2)
  %3 = load %"Vector[UInt/rtct]"** %this.addr
  %4 = getelementptr inbounds %"Vector[UInt/rtct]"* %3, i32 0, i32 0
  %5 = load %"Vector[UInt/rtct]"** %other.addr
  %6 = getelementptr inbounds %"Vector[UInt/rtct]"* %5, i32 0, i32 0
  %7 = load %"RawPtr[UInt/rtct]"* %6
  call void @"=397"(%"RawPtr[UInt/rtct]"* %4, %"RawPtr[UInt/rtct]" %7)
  %8 = load %"Vector[UInt/rtct]"** %other.addr
  %9 = getelementptr inbounds %"Vector[UInt/rtct]"* %8, i32 0, i32 0
  %10 = load %"RawPtr[UInt/rtct]"* %tmp
  call void @"=397"(%"RawPtr[UInt/rtct]"* %9, %"RawPtr[UInt/rtct]" %10)
  %11 = load %"Vector[UInt/rtct]"** %this.addr
  %12 = getelementptr inbounds %"Vector[UInt/rtct]"* %11, i32 0, i32 1
  %13 = load %"RawPtr[UInt/rtct]"* %12
  call void @"=397"(%"RawPtr[UInt/rtct]"* %tmp, %"RawPtr[UInt/rtct]" %13)
  %14 = load %"Vector[UInt/rtct]"** %this.addr
  %15 = getelementptr inbounds %"Vector[UInt/rtct]"* %14, i32 0, i32 1
  %16 = load %"Vector[UInt/rtct]"** %other.addr
  %17 = getelementptr inbounds %"Vector[UInt/rtct]"* %16, i32 0, i32 1
  %18 = load %"RawPtr[UInt/rtct]"* %17
  call void @"=397"(%"RawPtr[UInt/rtct]"* %15, %"RawPtr[UInt/rtct]" %18)
  %19 = load %"Vector[UInt/rtct]"** %other.addr
  %20 = getelementptr inbounds %"Vector[UInt/rtct]"* %19, i32 0, i32 1
  %21 = load %"RawPtr[UInt/rtct]"* %tmp
  call void @"=397"(%"RawPtr[UInt/rtct]"* %20, %"RawPtr[UInt/rtct]" %21)
  %22 = load %"Vector[UInt/rtct]"** %this.addr
  %23 = getelementptr inbounds %"Vector[UInt/rtct]"* %22, i32 0, i32 2
  %24 = load %"RawPtr[UInt/rtct]"* %23
  call void @"=397"(%"RawPtr[UInt/rtct]"* %tmp, %"RawPtr[UInt/rtct]" %24)
  %25 = load %"Vector[UInt/rtct]"** %this.addr
  %26 = getelementptr inbounds %"Vector[UInt/rtct]"* %25, i32 0, i32 2
  %27 = load %"Vector[UInt/rtct]"** %other.addr
  %28 = getelementptr inbounds %"Vector[UInt/rtct]"* %27, i32 0, i32 2
  %29 = load %"RawPtr[UInt/rtct]"* %28
  call void @"=397"(%"RawPtr[UInt/rtct]"* %26, %"RawPtr[UInt/rtct]" %29)
  %30 = load %"Vector[UInt/rtct]"** %other.addr
  %31 = getelementptr inbounds %"Vector[UInt/rtct]"* %30, i32 0, i32 2
  %32 = load %"RawPtr[UInt/rtct]"* %tmp
  call void @"=397"(%"RawPtr[UInt/rtct]"* %31, %"RawPtr[UInt/rtct]" %32)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @dtor459(%"Vector[UInt/rtct]"* %this) #3 {
  %this.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"** %this.addr
  %p = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 0
  call void @ctor457(%"RawPtr[UInt/rtct]"* %p, %"RawPtr[UInt/rtct]"* %2)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %3 = load %"Vector[UInt/rtct]"** %this.addr
  %4 = getelementptr inbounds %"Vector[UInt/rtct]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[UInt/rtct]"* %4
  %6 = call i1 @"==390"(%"RawPtr[UInt/rtct]"* %p, %"RawPtr[UInt/rtct]" %5)
  %7 = xor i1 true, %6
  br i1 %7, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %8 = load %"RawPtr[UInt/rtct]"* %p
  %9 = call i32* @value400(%"RawPtr[UInt/rtct]" %8)
  %10 = load i32* %9
  br label %while_step

while_step:                                       ; preds = %while_body
  %11 = load %"RawPtr[UInt/rtct]"* %p
  call void @advance401(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]" %11)
  %12 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  call void @"=397"(%"RawPtr[UInt/rtct]"* %p, %"RawPtr[UInt/rtct]" %12)
  br label %while_block

while_end:                                        ; preds = %while_block
  %13 = load %"Vector[UInt/rtct]"** %this.addr
  %14 = getelementptr inbounds %"Vector[UInt/rtct]"* %13, i32 0, i32 0
  %15 = load %"RawPtr[UInt/rtct]"* %14
  call void @freePtr460(%"RawPtr[UInt/rtct]" %15)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @freePtr460(%"RawPtr[UInt/rtct]" %this) #3 {
  %this.addr = alloca %"RawPtr[UInt/rtct]"
  store %"RawPtr[UInt/rtct]" %this, %"RawPtr[UInt/rtct]"* %this.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"RawPtr[UInt/rtct]"* %this.addr
  %2 = call i1 @isSet461(%"RawPtr[UInt/rtct]" %1)
  br i1 %2, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %3 = load %"RawPtr[UInt/rtct]"* %this.addr
  %4 = call i8* @bytePtr393(%"RawPtr[UInt/rtct]" %3)
  call void @free(i8* %4)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isSet461(%"RawPtr[UInt/rtct]" %this) #3 {
  %this.addr = alloca %"RawPtr[UInt/rtct]"
  store %"RawPtr[UInt/rtct]" %this, %"RawPtr[UInt/rtct]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %this.addr, i32 0, i32 0
  %2 = load i32** %1
  %3 = bitcast i32* %2 to i8*
  %4 = call i1 @implOpRefNE(i8* %3, i8* null)
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal i1 @"pre_!!462"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %r) #3 {
  %r.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %r, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %r.addr
  %2 = call i1 @isEmpty463(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %3 = xor i1 true, %2
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty463(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %this.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 5
  %3 = load i32* %2
  %4 = call i1 @"==405"(i32 %3, i32 0)
  br i1 %4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 0
  %7 = call i1 @isEmpty402(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %6)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %7, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal void @"post_++464"(%Token* sret %_result, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %r) #3 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %r.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %r, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %r.addr
  %res = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %r.addr
  call void @front410(%Token* %res, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %r.addr
  call void @popFront408(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %Token** %_result.addr
  call void @ctor262(%Token* %3, %Token* %res)
  call void @dtor387(%Token* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor387(%Token* %res)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor465(%ParserContext* %dest) #2 {
  %dest.addr = alloca %ParserContext*
  store %ParserContext* %dest, %ParserContext** %dest.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %ParserContext** %dest.addr
  %2 = getelementptr inbounds %ParserContext* %1, i32 0, i32 5
  call void @dtor466(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %ParserContext** %dest.addr
  %4 = getelementptr inbounds %ParserContext* %3, i32 0, i32 4
  call void @dtor468(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %4)
  %5 = load %ParserContext** %dest.addr
  %6 = getelementptr inbounds %ParserContext* %5, i32 0, i32 3
  call void @dtor470(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %6)
  %7 = load %ParserContext** %dest.addr
  %8 = getelementptr inbounds %ParserContext* %7, i32 0, i32 0
  call void @dtor472(%File* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor466(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %dest) #2 {
  %dest.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %dest, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %dest.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %dest.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 1
  call void @dtor387(%Token* %2)
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %dest.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  call void @dtor467(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor467(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %dest) #2 {
  %dest.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %dest, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %dest.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %dest.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1, i32 0, i32 1
  call void @dtor450(%"Vector[Token]"* %2)
  %3 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %dest.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %3, i32 0, i32 0
  call void @dtor468(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor468(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %dest) #2 {
  %dest.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %dest, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %dest.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %dest.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 3
  call void @dtor233(%"Vector[Char/rtct]"* %2)
  %3 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %dest.addr
  %4 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 2
  call void @dtor459(%"Vector[UInt/rtct]"* %4)
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %dest.addr
  %6 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 0
  call void @dtor469(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor469(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %dest) #2 {
  %dest.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %dest, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %dest.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %dest.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 1
  call void @dtor450(%"Vector[Token]"* %2)
  %3 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %dest.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %3, i32 0, i32 0
  call void @dtor470(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor470(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %dest) #2 {
  %dest.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %dest, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %dest.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %dest.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 2
  call void @dtor387(%Token* %2)
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %dest.addr
  %4 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 0, i32 1
  call void @dtor471(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor471(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %dest) #2 {
  %dest.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %dest, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %dest.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %dest.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  call void @dtor232(%"RangeWithLookahead[_CharSource]"* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @dtor472(%File* %this) #3 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File** %this.addr
  call void @close(%File* %1)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @close(%File* %this) #3 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %File** %this.addr
  %2 = call i1 @isOpen(%File* %1)
  br i1 %2, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %3 = load %File** %this.addr
  %4 = getelementptr inbounds %File* %3, i32 0, i32 0
  %5 = load i8** %4
  call void @fclose(i8* %5)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  %6 = load %File** %this.addr
  %7 = getelementptr inbounds %File* %6, i32 0, i32 0
  store i8* null, i8** %7
  ret void
}

declare void @fclose(i8*)

; Function Attrs: alwaysinline nounwind
define internal void @"=473"(%ParserContext* %dest, %ParserContext* %other) #2 {
  %dest.addr = alloca %ParserContext*
  store %ParserContext* %dest, %ParserContext** %dest.addr
  %other.addr = alloca %ParserContext*
  store %ParserContext* %other, %ParserContext** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %ParserContext** %dest.addr
  %2 = getelementptr inbounds %ParserContext* %1, i32 0, i32 0
  %3 = load %ParserContext** %other.addr
  %4 = getelementptr inbounds %ParserContext* %3, i32 0, i32 0
  call void @"=474"(%File* %2, %File* %4)
  %5 = load %ParserContext** %dest.addr
  %6 = getelementptr inbounds %ParserContext* %5, i32 0, i32 1
  %7 = load %ParserContext** %other.addr
  %8 = getelementptr inbounds %ParserContext* %7, i32 0, i32 1
  call void @"=475"(%FileRange* %6, %FileRange* %8)
  %9 = load %ParserContext** %dest.addr
  %10 = getelementptr inbounds %ParserContext* %9, i32 0, i32 2
  %11 = load %ParserContext** %other.addr
  %12 = getelementptr inbounds %ParserContext* %11, i32 0, i32 2
  call void @"=158"(%_CharSource* %10, %_CharSource* %12)
  %13 = load %ParserContext** %dest.addr
  %14 = getelementptr inbounds %ParserContext* %13, i32 0, i32 3
  %15 = load %ParserContext** %other.addr
  %16 = getelementptr inbounds %ParserContext* %15, i32 0, i32 3
  call void @"=236"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %14, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %16)
  %17 = load %ParserContext** %dest.addr
  %18 = getelementptr inbounds %ParserContext* %17, i32 0, i32 4
  %19 = load %ParserContext** %other.addr
  %20 = getelementptr inbounds %ParserContext* %19, i32 0, i32 4
  call void @"=443"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %18, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %20)
  %21 = load %ParserContext** %dest.addr
  %22 = getelementptr inbounds %ParserContext* %21, i32 0, i32 5
  %23 = load %ParserContext** %other.addr
  %24 = getelementptr inbounds %ParserContext* %23, i32 0, i32 5
  call void @"=476"(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %22, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %24)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"=474"(%File* %this, %File* %other) #3 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  %other.addr = alloca %File*
  store %File* %other, %File** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File** %other.addr
  %2 = getelementptr inbounds %File* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %File** %this.addr
  %5 = getelementptr inbounds %File* %4, i32 0, i32 0
  store i8* %3, i8** %5
  %6 = load %File** %other.addr
  %7 = getelementptr inbounds %File* %6, i32 0, i32 0
  store i8* null, i8** %7
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=475"(%FileRange* %dest, %FileRange* %other) #2 {
  %dest.addr = alloca %FileRange*
  store %FileRange* %dest, %FileRange** %dest.addr
  %other.addr = alloca %FileRange*
  store %FileRange* %other, %FileRange** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange** %other.addr
  %2 = getelementptr inbounds %FileRange* %1, i32 0, i32 0
  %3 = load %File** %2
  %4 = load %FileRange** %dest.addr
  %5 = getelementptr inbounds %FileRange* %4, i32 0, i32 0
  store %File* %3, %File** %5
  %6 = load %FileRange** %other.addr
  %7 = getelementptr inbounds %FileRange* %6, i32 0, i32 1
  %8 = load i1* %7
  %9 = load %FileRange** %dest.addr
  %10 = getelementptr inbounds %FileRange* %9, i32 0, i32 1
  store i1 %8, i1* %10
  %11 = load %FileRange** %other.addr
  %12 = getelementptr inbounds %FileRange* %11, i32 0, i32 2
  %13 = load i8* %12
  %14 = load %FileRange** %dest.addr
  %15 = getelementptr inbounds %FileRange* %14, i32 0, i32 2
  store i8 %13, i8* %15
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=476"(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %dest, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %other) #2 {
  %dest.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %dest, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %dest.addr
  %other.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %other, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %dest.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  call void @"=477"(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %4)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %dest.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %8 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 1
  call void @"=243"(%Token* %6, %Token* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %10 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i32 0, i32 2
  %11 = load i1* %10
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %dest.addr
  %13 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 2
  store i1 %11, i1* %13
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=477"(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %dest, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %other) #2 {
  %dest.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %dest, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %dest.addr
  %other.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %other, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %dest.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1, i32 0, i32 0
  %3 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %other.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %3, i32 0, i32 0
  call void @"=443"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %2, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %4)
  %5 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %dest.addr
  %6 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %5, i32 0, i32 1
  %7 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %other.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %7, i32 0, i32 1
  %9 = call %"Vector[Token]"* @"=445"(%"Vector[Token]"* %6, %"Vector[Token]"* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==478"(%ParserContext* %this, %ParserContext* %other) #2 {
  %this.addr = alloca %ParserContext*
  store %ParserContext* %this, %ParserContext** %this.addr
  %other.addr = alloca %ParserContext*
  store %ParserContext* %other, %ParserContext** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %ParserContext** %this.addr
  %2 = getelementptr inbounds %ParserContext* %1, i32 0, i32 0
  %3 = load %ParserContext** %other.addr
  %4 = getelementptr inbounds %ParserContext* %3, i32 0, i32 0
  %5 = call i1 @"==479"(%File* %2, %File* %4)
  br i1 %5, label %cond.true10, label %cond.false11

cond.true:                                        ; preds = %cond.end3
  %6 = load %ParserContext** %this.addr
  %7 = getelementptr inbounds %ParserContext* %6, i32 0, i32 5
  %8 = load %ParserContext** %other.addr
  %9 = getelementptr inbounds %ParserContext* %8, i32 0, i32 5
  %10 = call i1 @"==503"(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9)
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res16 = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res16

cond.true1:                                       ; preds = %cond.end6
  %11 = load %ParserContext** %this.addr
  %12 = getelementptr inbounds %ParserContext* %11, i32 0, i32 4
  %13 = load %ParserContext** %other.addr
  %14 = getelementptr inbounds %ParserContext* %13, i32 0, i32 4
  %15 = call i1 @"==497"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %12, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %14)
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res15 = phi i1 [ %15, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res15, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %cond.end9
  %16 = load %ParserContext** %this.addr
  %17 = getelementptr inbounds %ParserContext* %16, i32 0, i32 3
  %18 = load %ParserContext** %other.addr
  %19 = getelementptr inbounds %ParserContext* %18, i32 0, i32 3
  %20 = call i1 @"==481"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %17, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %19)
  br label %cond.end6

cond.false5:                                      ; preds = %cond.end9
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res14 = phi i1 [ %20, %cond.true4 ], [ false, %cond.false5 ]
  br i1 %cond.res14, label %cond.true1, label %cond.false2

cond.true7:                                       ; preds = %cond.end12
  %21 = load %ParserContext** %this.addr
  %22 = getelementptr inbounds %ParserContext* %21, i32 0, i32 2
  %23 = load %ParserContext** %other.addr
  %24 = getelementptr inbounds %ParserContext* %23, i32 0, i32 2
  %25 = call i1 @"==159"(%_CharSource* %22, %_CharSource* %24)
  br label %cond.end9

cond.false8:                                      ; preds = %cond.end12
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res13 = phi i1 [ %25, %cond.true7 ], [ false, %cond.false8 ]
  br i1 %cond.res13, label %cond.true4, label %cond.false5

cond.true10:                                      ; preds = %code
  %26 = load %ParserContext** %this.addr
  %27 = getelementptr inbounds %ParserContext* %26, i32 0, i32 1
  %28 = load %ParserContext** %other.addr
  %29 = getelementptr inbounds %ParserContext* %28, i32 0, i32 1
  %30 = call i1 @"==480"(%FileRange* %27, %FileRange* %29)
  br label %cond.end12

cond.false11:                                     ; preds = %code
  br label %cond.end12

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond.res = phi i1 [ %30, %cond.true10 ], [ false, %cond.false11 ]
  br i1 %cond.res, label %cond.true7, label %cond.false8
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==479"(%File* %this, %File* %other) #2 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  %other.addr = alloca %File*
  store %File* %other, %File** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File** %this.addr
  %2 = getelementptr inbounds %File* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %File** %other.addr
  %5 = getelementptr inbounds %File* %4, i32 0, i32 0
  %6 = load i8** %5
  %7 = call i1 @implOpRefEQ(i8* %3, i8* %6)
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==480"(%FileRange* %this, %FileRange* %other) #2 {
  %this.addr = alloca %FileRange*
  store %FileRange* %this, %FileRange** %this.addr
  %other.addr = alloca %FileRange*
  store %FileRange* %other, %FileRange** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange** %this.addr
  %2 = getelementptr inbounds %FileRange* %1, i32 0, i32 0
  %3 = load %File** %2
  %4 = bitcast %File* %3 to i8*
  %5 = load %FileRange** %other.addr
  %6 = getelementptr inbounds %FileRange* %5, i32 0, i32 0
  %7 = load %File** %6
  %8 = bitcast %File* %7 to i8*
  %9 = call i1 @implOpRefEQ(i8* %4, i8* %8)
  br i1 %9, label %cond.true1, label %cond.false2

cond.true:                                        ; preds = %cond.end3
  %10 = load %FileRange** %this.addr
  %11 = getelementptr inbounds %FileRange* %10, i32 0, i32 2
  %12 = load i8* %11
  %13 = load %FileRange** %other.addr
  %14 = getelementptr inbounds %FileRange* %13, i32 0, i32 2
  %15 = load i8* %14
  %16 = icmp eq i8 %12, %15
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res4 = phi i1 [ %16, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res4

cond.true1:                                       ; preds = %code
  %17 = load %FileRange** %this.addr
  %18 = getelementptr inbounds %FileRange* %17, i32 0, i32 1
  %19 = load i1* %18
  %20 = load %FileRange** %other.addr
  %21 = getelementptr inbounds %FileRange* %20, i32 0, i32 1
  %22 = load i1* %21
  %23 = icmp eq i1 %19, %22
  br label %cond.end3

cond.false2:                                      ; preds = %code
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ %23, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res, label %cond.true, label %cond.false
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==481"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %other) #2 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %other.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %other, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %4 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 0, i32 0
  %5 = call i1 @"==482"(%Location* %2, %Location* %4)
  br i1 %5, label %cond.true7, label %cond.false8

cond.true:                                        ; preds = %cond.end3
  %6 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %7 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %6, i32 0, i32 4
  %8 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %9 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %8, i32 0, i32 4
  %10 = call i1 @"==155"(%ExternalErrorReporter* %7, %ExternalErrorReporter* %9)
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res12 = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res12

cond.true1:                                       ; preds = %cond.end6
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %12 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11, i32 0, i32 3
  %13 = load i1* %12
  %14 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %15 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %14, i32 0, i32 3
  %16 = load i1* %15
  %17 = icmp eq i1 %13, %16
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res11 = phi i1 [ %17, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res11, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %cond.end9
  %18 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %19 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %18, i32 0, i32 2
  %20 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %21 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %20, i32 0, i32 2
  %22 = call i1 @"==490"(%Token* %19, %Token* %21)
  br label %cond.end6

cond.false5:                                      ; preds = %cond.end9
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res10 = phi i1 [ %22, %cond.true4 ], [ false, %cond.false5 ]
  br i1 %cond.res10, label %cond.true1, label %cond.false2

cond.true7:                                       ; preds = %code
  %23 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %24 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %23, i32 0, i32 1
  %25 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %26 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %25, i32 0, i32 1
  %27 = call i1 @"==485"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %24, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %26)
  br label %cond.end9

cond.false8:                                      ; preds = %code
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res = phi i1 [ %27, %cond.true7 ], [ false, %cond.false8 ]
  br i1 %cond.res, label %cond.true4, label %cond.false5
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==482"(%Location* %this, %Location* %other) #2 {
  %this.addr = alloca %Location*
  store %Location* %this, %Location** %this.addr
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %this.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 0
  %3 = load %Location** %other.addr
  %4 = getelementptr inbounds %Location* %3, i32 0, i32 0
  %5 = call i1 @"==483"(%SourceCode* %2, %SourceCode* %4)
  br i1 %5, label %cond.true1, label %cond.false2

cond.true:                                        ; preds = %cond.end3
  %6 = load %Location** %this.addr
  %7 = getelementptr inbounds %Location* %6, i32 0, i32 2
  %8 = load %Location** %other.addr
  %9 = getelementptr inbounds %Location* %8, i32 0, i32 2
  %10 = call i1 @"==484"(%LineCol* %7, %LineCol* %9)
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res4 = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res4

cond.true1:                                       ; preds = %code
  %11 = load %Location** %this.addr
  %12 = getelementptr inbounds %Location* %11, i32 0, i32 1
  %13 = load %Location** %other.addr
  %14 = getelementptr inbounds %Location* %13, i32 0, i32 1
  %15 = call i1 @"==484"(%LineCol* %12, %LineCol* %14)
  br label %cond.end3

cond.false2:                                      ; preds = %code
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ %15, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res, label %cond.true, label %cond.false
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==483"(%SourceCode* %this, %SourceCode* %other) #2 {
  %this.addr = alloca %SourceCode*
  store %SourceCode* %this, %SourceCode** %this.addr
  %other.addr = alloca %SourceCode*
  store %SourceCode* %other, %SourceCode** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %SourceCode** %this.addr
  %2 = getelementptr inbounds %SourceCode* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %SourceCode** %other.addr
  %5 = getelementptr inbounds %SourceCode* %4, i32 0, i32 0
  %6 = load i8** %5
  %7 = call i1 @implOpRefEQ(i8* %3, i8* %6)
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==484"(%LineCol* %this, %LineCol* %other) #2 {
  %this.addr = alloca %LineCol*
  store %LineCol* %this, %LineCol** %this.addr
  %other.addr = alloca %LineCol*
  store %LineCol* %other, %LineCol** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LineCol** %this.addr
  %2 = getelementptr inbounds %LineCol* %1, i32 0, i32 0
  %3 = load i32* %2
  %4 = load %LineCol** %other.addr
  %5 = getelementptr inbounds %LineCol* %4, i32 0, i32 0
  %6 = load i32* %5
  %7 = call i1 @"==429"(i32 %3, i32 %6)
  br i1 %7, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %8 = load %LineCol** %this.addr
  %9 = getelementptr inbounds %LineCol* %8, i32 0, i32 1
  %10 = load i32* %9
  %11 = load %LineCol** %other.addr
  %12 = getelementptr inbounds %LineCol* %11, i32 0, i32 1
  %13 = load i32* %12
  %14 = call i1 @"==429"(i32 %10, i32 %13)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %14, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==485"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %other) #2 {
  %this.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %other.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %other, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  %3 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %other.addr
  %4 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %3, i32 0, i32 0
  %5 = call i1 @"==486"(%"RangeWithLookahead[_CharSource]"* %2, %"RangeWithLookahead[_CharSource]"* %4)
  br i1 %5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %6 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %7 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %6, i32 0, i32 1
  %8 = load %Location** %7
  %9 = bitcast %Location* %8 to i8*
  %10 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %other.addr
  %11 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %10, i32 0, i32 1
  %12 = load %Location** %11
  %13 = bitcast %Location* %12 to i8*
  %14 = call i1 @implOpRefEQ(i8* %9, i8* %13)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %14, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==486"(%"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"* %other) #2 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  %other.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %other, %"RangeWithLookahead[_CharSource]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 0
  %3 = load %"RangeWithLookahead[_CharSource]"** %other.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %3, i32 0, i32 0
  %5 = call i1 @"==159"(%_CharSource* %2, %_CharSource* %4)
  br i1 %5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %6 = load %"RangeWithLookahead[_CharSource]"** %this.addr
  %7 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %6, i32 0, i32 1
  %8 = load %"RangeWithLookahead[_CharSource]"** %other.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %8, i32 0, i32 1
  %10 = call i1 @"==487"(%"Vector[Char/rtct]"* %7, %"Vector[Char/rtct]"* %9)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==487"(%"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"* %other) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  %other.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %other, %"Vector[Char/rtct]"** %other.addr
  %i = alloca i32
  %s = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[Char/rtct]"** %this.addr
  %2 = call i64 @size224(%"Vector[Char/rtct]"* %1)
  %3 = load %"Vector[Char/rtct]"** %other.addr
  %4 = call i64 @size224(%"Vector[Char/rtct]"* %3)
  %5 = call i1 @"!="(i64 %2, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  store i32 0, i32* %i
  %6 = load %"Vector[Char/rtct]"** %this.addr
  %7 = call i64 @size224(%"Vector[Char/rtct]"* %6)
  store i64 %7, i64* %s
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %8 = load i32* %i
  %9 = load i64* %s
  %10 = call i1 @"<488"(i32 %8, i64 %9)
  br i1 %10, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block1

while_step:                                       ; preds = %if_end3
  %11 = call i32 @"post_++67"(i32* %i)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret i1 true

if_block1:                                        ; preds = %while_body
  %12 = load %"Vector[Char/rtct]"** %this.addr
  %13 = load i32* %i
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %tmp.v
  %15 = load i64* %tmp.v
  %16 = call i8* @at489(%"Vector[Char/rtct]"* %12, i64 %15)
  %17 = load i8* %16
  %18 = load %"Vector[Char/rtct]"** %other.addr
  %19 = load i32* %i
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %tmp.v4
  %21 = load i64* %tmp.v4
  %22 = call i8* @at489(%"Vector[Char/rtct]"* %18, i64 %21)
  %23 = load i8* %22
  %24 = icmp eq i8 %17, %23
  %25 = xor i1 true, %24
  br i1 %25, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block5, %if_block1
  br label %while_step

dumy_block5:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: inlinehint nounwind
define internal i1 @"<488"(i32 %x, i64 %y) #3 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn86(i32 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i32* %x.addr
  %6 = call i64 @cmn85(i64 %4, i32 %5)
  %7 = icmp slt i64 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i8* @at489(%"Vector[Char/rtct]"* %this, i64 %index) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 0
  %3 = load %"RawPtr[Char/rtct]"* %2
  %4 = load i64* %index.addr
  call void @advance225(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %3, i64 %4)
  %5 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  %6 = call i8* @value(%"RawPtr[Char/rtct]" %5)
  ret i8* %6
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==490"(%Token* %this, %Token* %other) #2 {
  %this.addr = alloca %Token*
  store %Token* %this, %Token** %this.addr
  %other.addr = alloca %Token*
  store %Token* %other, %Token** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token** %this.addr
  %2 = getelementptr inbounds %Token* %1, i32 0, i32 0
  %3 = load %Token** %other.addr
  %4 = getelementptr inbounds %Token* %3, i32 0, i32 0
  %5 = call i1 @"==482"(%Location* %2, %Location* %4)
  br i1 %5, label %cond.true7, label %cond.false8

cond.true:                                        ; preds = %cond.end3
  %6 = load %Token** %this.addr
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 4
  %8 = load double* %7
  %9 = load %Token** %other.addr
  %10 = getelementptr inbounds %Token* %9, i32 0, i32 4
  %11 = load double* %10
  %12 = call i1 @"==495"(double %8, double %11)
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res12 = phi i1 [ %12, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res12

cond.true1:                                       ; preds = %cond.end6
  %13 = load %Token** %this.addr
  %14 = getelementptr inbounds %Token* %13, i32 0, i32 3
  %15 = load i64* %14
  %16 = load %Token** %other.addr
  %17 = getelementptr inbounds %Token* %16, i32 0, i32 3
  %18 = load i64* %17
  %19 = call i1 @"==494"(i64 %15, i64 %18)
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res11 = phi i1 [ %19, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res11, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %cond.end9
  %20 = load %Token** %this.addr
  %21 = getelementptr inbounds %Token* %20, i32 0, i32 2
  %22 = load %Token** %other.addr
  %23 = getelementptr inbounds %Token* %22, i32 0, i32 2
  %24 = call i1 @"==491"(%String* %21, %String* %23)
  br label %cond.end6

cond.false5:                                      ; preds = %cond.end9
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res10 = phi i1 [ %24, %cond.true4 ], [ false, %cond.false5 ]
  br i1 %cond.res10, label %cond.true1, label %cond.false2

cond.true7:                                       ; preds = %code
  %25 = load %Token** %this.addr
  %26 = getelementptr inbounds %Token* %25, i32 0, i32 1
  %27 = load %Token** %other.addr
  %28 = getelementptr inbounds %Token* %27, i32 0, i32 1
  %29 = call i1 @"==404"(%TokenType* %26, %TokenType* %28)
  br label %cond.end9

cond.false8:                                      ; preds = %code
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res = phi i1 [ %29, %cond.true7 ], [ false, %cond.false8 ]
  br i1 %cond.res, label %cond.true4, label %cond.false5
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==491"(%String* %this, %String* %other) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %other.addr = alloca %String*
  store %String* %other, %String** %other.addr
  %i = alloca i64
  %s = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %String** %this.addr
  %2 = call i64 @size204(%String* %1)
  %3 = load %String** %other.addr
  %4 = call i64 @size204(%String* %3)
  %5 = call i1 @"!="(i64 %2, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  store i64 0, i64* %i
  %6 = load %String** %this.addr
  %7 = call i64 @size204(%String* %6)
  store i64 %7, i64* %s
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %8 = load i64* %i
  %9 = load i64* %s
  %10 = call i1 @"<"(i64 %8, i64 %9)
  br i1 %10, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block1

while_step:                                       ; preds = %if_end3
  %11 = call i64 @"post_++71"(i64* %i)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret i1 true

if_block1:                                        ; preds = %while_body
  %12 = load %String** %this.addr
  %13 = load i64* %i
  %14 = call i8* @"()492"(%String* %12, i64 %13)
  %15 = load i8* %14
  %16 = load %String** %other.addr
  %17 = load i64* %i
  %18 = call i8* @"()492"(%String* %16, i64 %17)
  %19 = load i8* %18
  %20 = icmp ne i8 %15, %19
  br i1 %20, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block4, %if_block1
  br label %while_step

dumy_block4:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: inlinehint nounwind
define internal i8* @"()492"(%String* %this, i64 %index) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = getelementptr inbounds %String* %1, i32 0, i32 0
  %3 = load %"RawPtr[Char/rtct]"* %2
  %4 = load i64* %index.addr
  store i64 %4, i64* %tmp.v
  %5 = load i64* %tmp.v
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %3, i64 %5)
  %6 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  %7 = call i8* @value(%"RawPtr[Char/rtct]" %6)
  ret i8* %7
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor493(%"RawPtr[Char/rtct]"* %dest) #2 {
  %dest.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %dest, %"RawPtr[Char/rtct]"** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==494"(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn39(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn39(i64 %4, i64 %5)
  %7 = icmp eq i64 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==495"(double %x, double %y) #3 {
  %x.addr = alloca double
  store double %x, double* %x.addr
  %y.addr = alloca double
  store double %y, double* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load double* %x.addr
  %2 = load double* %y.addr
  %3 = call double @cmn496(double %1, double %2)
  %4 = load double* %y.addr
  %5 = load double* %x.addr
  %6 = call double @cmn496(double %4, double %5)
  %7 = call i1 @_Double_opEQ(double %3, double %6)
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal double @cmn496(double %x, double %y) #3 {
  %x.addr = alloca double
  store double %x, double* %x.addr
  %y.addr = alloca double
  store double %y, double* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load double* %x.addr
  ret double %1
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==497"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %other) #2 {
  %this.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %other.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %other, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %4 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  %5 = call i1 @"==498"(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %2, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %4)
  br i1 %5, label %cond.true10, label %cond.false11

cond.true:                                        ; preds = %cond.end3
  %6 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %7 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %6, i32 0, i32 5
  %8 = load i32* %7
  %9 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %10 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %9, i32 0, i32 5
  %11 = load i32* %10
  %12 = call i1 @"==405"(i32 %8, i32 %11)
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res16 = phi i1 [ %12, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res16

cond.true1:                                       ; preds = %cond.end6
  %13 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %14 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %13, i32 0, i32 4
  %15 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %16 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %15, i32 0, i32 4
  %17 = call i1 @"==404"(%TokenType* %14, %TokenType* %16)
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res15 = phi i1 [ %17, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res15, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %cond.end9
  %18 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %19 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %18, i32 0, i32 3
  %20 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %21 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %20, i32 0, i32 3
  %22 = call i1 @"==487"(%"Vector[Char/rtct]"* %19, %"Vector[Char/rtct]"* %21)
  br label %cond.end6

cond.false5:                                      ; preds = %cond.end9
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res14 = phi i1 [ %22, %cond.true4 ], [ false, %cond.false5 ]
  br i1 %cond.res14, label %cond.true1, label %cond.false2

cond.true7:                                       ; preds = %cond.end12
  %23 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %24 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %23, i32 0, i32 2
  %25 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %26 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %25, i32 0, i32 2
  %27 = call i1 @"==501"(%"Vector[UInt/rtct]"* %24, %"Vector[UInt/rtct]"* %26)
  br label %cond.end9

cond.false8:                                      ; preds = %cond.end12
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res13 = phi i1 [ %27, %cond.true7 ], [ false, %cond.false8 ]
  br i1 %cond.res13, label %cond.true4, label %cond.false5

cond.true10:                                      ; preds = %code
  %28 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %29 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %28, i32 0, i32 1
  %30 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %31 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %30, i32 0, i32 1
  %32 = call i1 @"==155"(%ExternalErrorReporter* %29, %ExternalErrorReporter* %31)
  br label %cond.end12

cond.false11:                                     ; preds = %code
  br label %cond.end12

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond.res = phi i1 [ %32, %cond.true10 ], [ false, %cond.false11 ]
  br i1 %cond.res, label %cond.true7, label %cond.false8
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==498"(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %other) #2 {
  %this.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %other.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %other, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 0
  %3 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %other.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %3, i32 0, i32 0
  %5 = call i1 @"==481"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %2, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4)
  br i1 %5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %6 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %7 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %6, i32 0, i32 1
  %8 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %other.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %8, i32 0, i32 1
  %10 = call i1 @"==499"(%"Vector[Token]"* %7, %"Vector[Token]"* %9)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==499"(%"Vector[Token]"* %this, %"Vector[Token]"* %other) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %other.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %other, %"Vector[Token]"** %other.addr
  %i = alloca i32
  %s = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[Token]"** %this.addr
  %2 = call i64 @size252(%"Vector[Token]"* %1)
  %3 = load %"Vector[Token]"** %other.addr
  %4 = call i64 @size252(%"Vector[Token]"* %3)
  %5 = call i1 @"!="(i64 %2, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  store i32 0, i32* %i
  %6 = load %"Vector[Token]"** %this.addr
  %7 = call i64 @size252(%"Vector[Token]"* %6)
  store i64 %7, i64* %s
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %8 = load i32* %i
  %9 = load i64* %s
  %10 = call i1 @"<488"(i32 %8, i64 %9)
  br i1 %10, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block1

while_step:                                       ; preds = %if_end3
  %11 = call i32 @"post_++67"(i32* %i)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret i1 true

if_block1:                                        ; preds = %while_body
  %12 = load %"Vector[Token]"** %this.addr
  %13 = load i32* %i
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %tmp.v
  %15 = load i64* %tmp.v
  %16 = call %Token* @at500(%"Vector[Token]"* %12, i64 %15)
  %17 = load %"Vector[Token]"** %other.addr
  %18 = load i32* %i
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %tmp.v4
  %20 = load i64* %tmp.v4
  %21 = call %Token* @at500(%"Vector[Token]"* %17, i64 %20)
  %22 = call i1 @"==490"(%Token* %16, %Token* %21)
  %23 = xor i1 true, %22
  br i1 %23, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block5, %if_block1
  br label %while_step

dumy_block5:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: inlinehint nounwind
define internal %Token* @at500(%"Vector[Token]"* %this, i64 %index) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 0
  %3 = load %"RawPtr[Token]"* %2
  %4 = load i64* %index.addr
  call void @advance255(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]" %3, i64 %4)
  %5 = load %"RawPtr[Token]"* %"$tmpC"
  %6 = call %Token* @value264(%"RawPtr[Token]" %5)
  ret %Token* %6
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==501"(%"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"* %other) #3 {
  %this.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"** %this.addr
  %other.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %other, %"Vector[UInt/rtct]"** %other.addr
  %i = alloca i32
  %s = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[UInt/rtct]"** %this.addr
  %2 = call i64 @size395(%"Vector[UInt/rtct]"* %1)
  %3 = load %"Vector[UInt/rtct]"** %other.addr
  %4 = call i64 @size395(%"Vector[UInt/rtct]"* %3)
  %5 = call i1 @"!="(i64 %2, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  store i32 0, i32* %i
  %6 = load %"Vector[UInt/rtct]"** %this.addr
  %7 = call i64 @size395(%"Vector[UInt/rtct]"* %6)
  store i64 %7, i64* %s
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %8 = load i32* %i
  %9 = load i64* %s
  %10 = call i1 @"<488"(i32 %8, i64 %9)
  br i1 %10, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block1

while_step:                                       ; preds = %if_end3
  %11 = call i32 @"post_++67"(i32* %i)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret i1 true

if_block1:                                        ; preds = %while_body
  %12 = load %"Vector[UInt/rtct]"** %this.addr
  %13 = load i32* %i
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %tmp.v
  %15 = load i64* %tmp.v
  %16 = call i32* @at502(%"Vector[UInt/rtct]"* %12, i64 %15)
  %17 = load i32* %16
  %18 = load %"Vector[UInt/rtct]"** %other.addr
  %19 = load i32* %i
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %tmp.v4
  %21 = load i64* %tmp.v4
  %22 = call i32* @at502(%"Vector[UInt/rtct]"* %18, i64 %21)
  %23 = load i32* %22
  %24 = call i1 @"==429"(i32 %17, i32 %23)
  %25 = xor i1 true, %24
  br i1 %25, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block5, %if_block1
  br label %while_step

dumy_block5:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: inlinehint nounwind
define internal i32* @at502(%"Vector[UInt/rtct]"* %this, i64 %index) #3 {
  %this.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load %"RawPtr[UInt/rtct]"* %2
  %4 = load i64* %index.addr
  call void @advance398(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]" %3, i64 %4)
  %5 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  %6 = call i32* @value400(%"RawPtr[UInt/rtct]" %5)
  ret i32* %6
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==503"(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %other) #2 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %other.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %other, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  %5 = call i1 @"==504"(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %4)
  br i1 %5, label %cond.true4, label %cond.false5

cond.true:                                        ; preds = %cond.end3
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %7 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, i32 0, i32 3
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %9 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, i32 0, i32 3
  %10 = call i1 @"==155"(%ExternalErrorReporter* %7, %ExternalErrorReporter* %9)
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res8 = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res8

cond.true1:                                       ; preds = %cond.end6
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %12 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, i32 0, i32 2
  %13 = load i1* %12
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %15 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i32 0, i32 2
  %16 = load i1* %15
  %17 = icmp eq i1 %13, %16
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res7 = phi i1 [ %17, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res7, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %code
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %19 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18, i32 0, i32 1
  %20 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %21 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %20, i32 0, i32 1
  %22 = call i1 @"==490"(%Token* %19, %Token* %21)
  br label %cond.end6

cond.false5:                                      ; preds = %code
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res = phi i1 [ %22, %cond.true4 ], [ false, %cond.false5 ]
  br i1 %cond.res, label %cond.true1, label %cond.false2
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==504"(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %other) #2 {
  %this.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %other.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %other, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1, i32 0, i32 0
  %3 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %other.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %3, i32 0, i32 0
  %5 = call i1 @"==497"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %2, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %4)
  br i1 %5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %6 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %7 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %6, i32 0, i32 1
  %8 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %other.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %8, i32 0, i32 1
  %10 = call i1 @"==499"(%"Vector[Token]"* %7, %"Vector[Token]"* %9)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal %ParserContext* @createScanner(%StringRef %filename, %StringRef %code, %Location* %loc) #3 {
  %filename.addr = alloca %StringRef
  store %StringRef %filename, %StringRef* %filename.addr
  %code.addr = alloca %StringRef
  store %StringRef %code, %StringRef* %code.addr
  %loc.addr = alloca %Location*
  store %Location* %loc, %Location** %loc.addr
  %"$tmpForRef" = alloca i1
  br label %code1

code1:                                            ; preds = %0
  %1 = load %Location** %loc.addr
  store i1 true, i1* %"$tmpForRef"
  %2 = call %ParserContext* @new(%StringRef* %filename.addr, %StringRef* %code.addr, %Location* %1, i1* %"$tmpForRef")
  ret %ParserContext* %2
}

; Function Attrs: inlinehint nounwind
define internal %ParserContext* @new(%StringRef* %arg1, %StringRef* %arg2, %Location* %arg3, i1* %arg4) #3 {
  %arg1.addr = alloca %StringRef*
  store %StringRef* %arg1, %StringRef** %arg1.addr
  %arg2.addr = alloca %StringRef*
  store %StringRef* %arg2, %StringRef** %arg2.addr
  %arg3.addr = alloca %Location*
  store %Location* %arg3, %Location** %arg3.addr
  %arg4.addr = alloca i1*
  store i1* %arg4, i1** %arg4.addr
  %res = alloca %ParserContext*
  br label %code

code:                                             ; preds = %0
  %1 = call i8* @malloc(i64 792)
  %2 = bitcast i8* %1 to %ParserContext*
  store %ParserContext* %2, %ParserContext** %res
  %3 = load %ParserContext** %res
  %4 = load %StringRef** %arg1.addr
  %5 = load %StringRef* %4
  %6 = load %StringRef** %arg2.addr
  %7 = load %StringRef* %6
  %8 = load %Location** %arg3.addr
  %9 = load %Location* %8
  %10 = load i1** %arg4.addr
  %11 = load i1* %10
  call void @ctor167(%ParserContext* %3, %StringRef %5, %StringRef %7, %Location %9, i1 %11)
  %12 = load %ParserContext** %res
  ret %ParserContext* %12
}

; Function Attrs: noinline nounwind
define %ParserContext* @spr_parserIf_createParser(%StringRef %filename, %StringRef %code, %Location* %loc) #4 {
  %filename.addr = alloca %StringRef
  store %StringRef %filename, %StringRef* %filename.addr
  %code.addr = alloca %StringRef
  store %StringRef %code, %StringRef* %code.addr
  %loc.addr = alloca %Location*
  store %Location* %loc, %Location** %loc.addr
  %res = alloca %ParserContext*
  br label %code1

code1:                                            ; preds = %0
  %1 = load %Location** %loc.addr
  %2 = call %ParserContext* @new505(%StringRef* %filename.addr, %StringRef* %code.addr, %Location* %1)
  store %ParserContext* %2, %ParserContext** %res
  %3 = load %ParserContext** %res
  ret %ParserContext* %3
}

; Function Attrs: inlinehint nounwind
define internal %ParserContext* @new505(%StringRef* %arg1, %StringRef* %arg2, %Location* %arg3) #3 {
  %arg1.addr = alloca %StringRef*
  store %StringRef* %arg1, %StringRef** %arg1.addr
  %arg2.addr = alloca %StringRef*
  store %StringRef* %arg2, %StringRef** %arg2.addr
  %arg3.addr = alloca %Location*
  store %Location* %arg3, %Location** %arg3.addr
  %res = alloca %ParserContext*
  br label %code

code:                                             ; preds = %0
  %1 = call i8* @malloc(i64 792)
  %2 = bitcast i8* %1 to %ParserContext*
  store %ParserContext* %2, %ParserContext** %res
  %3 = load %ParserContext** %res
  %4 = load %StringRef** %arg1.addr
  %5 = load %StringRef* %4
  %6 = load %StringRef** %arg2.addr
  %7 = load %StringRef* %6
  %8 = load %Location** %arg3.addr
  %9 = load %Location* %8
  call void @ctor167(%ParserContext* %3, %StringRef %5, %StringRef %7, %Location %9, i1 false)
  %10 = load %ParserContext** %res
  ret %ParserContext* %10
}

; Function Attrs: noinline nounwind
define void @spr_parserIf_destroyParser(%ParserContext* %ctx) #4 {
  %ctx.addr = alloca %ParserContext*
  store %ParserContext* %ctx, %ParserContext** %ctx.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %ParserContext** %ctx.addr
  call void @delete(%ParserContext* %1)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @delete(%ParserContext* %obj) #3 {
  %obj.addr = alloca %ParserContext*
  store %ParserContext* %obj, %ParserContext** %obj.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %ParserContext** %obj.addr
  %2 = bitcast %ParserContext* %1 to i8*
  %3 = call i1 @implOpRefNE(i8* %2, i8* null)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %ParserContext** %obj.addr
  call void @dtor465(%ParserContext* %4)
  %5 = load %ParserContext** %obj.addr
  %6 = bitcast %ParserContext* %5 to i8*
  call void @free(i8* %6)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: noinline nounwind
define void @spr_parserIf_nextToken(%ParserContext* %ctx, %Token* %outToken) #4 {
  %ctx.addr = alloca %ParserContext*
  store %ParserContext* %ctx, %ParserContext** %ctx.addr
  %outToken.addr = alloca %Token*
  store %Token* %outToken, %Token** %outToken.addr
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %Token** %outToken.addr
  %2 = load %ParserContext** %ctx.addr
  %3 = getelementptr inbounds %ParserContext* %2, i32 0, i32 3
  call void @"post_++266"(%Token* %"$tmpC", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3)
  call void @"=243"(%Token* %1, %Token* %"$tmpC")
  call void @dtor387(%Token* %"$tmpC")
  ret void
}

; Function Attrs: noinline nounwind
define %Node @spr_parserIf_parseModule(%ParserContext* %ctx) #4 {
  %ctx.addr = alloca %ParserContext*
  store %ParserContext* %ctx, %ParserContext** %ctx.addr
  %"$tmpC" = alloca %Node
  br label %code

code:                                             ; preds = %0
  %1 = load %ParserContext** %ctx.addr
  %2 = getelementptr inbounds %ParserContext* %1, i32 0, i32 5
  call void @parseModule(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %Node* %"$tmpC"
  ret %Node %3
}

; Function Attrs: inlinehint nounwind
define internal void @parseModule(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %loc = alloca %Location
  %moduleName = alloca %Node
  %decls = alloca %Node
  %tmp.v = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %Location
  %"$tmpC1" = alloca %Location
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseModuleName(%Node* %moduleName, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  call void @ctor568(%Node* %decls)
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseStmts(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i1 true, %Node* %decls)
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 0)
  %5 = load %TokenType* %tmp.v
  %6 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, %TokenType %5)
  %7 = load %Node** %_result.addr
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC1", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  call void @span(%Location* %"$tmpC", %Location* %loc, %Location* %"$tmpC1")
  %9 = load %Node* %moduleName
  %10 = load %Node* %decls
  %11 = call %Node @comp_parser_mkModule(%Location* %"$tmpC", %Node %9, %Node %10)
  store %Node %11, %Node* %"$tmpForRef"
  call void @ctor564(%Node* %7, %Node* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @curLoc(%Location* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Location*
  store %Location* %_result, %Location** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %_result.addr
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %3 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, i32 0, i32 0
  call void @"pre_*506"(%Token* %"$tmpC", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %3)
  %4 = getelementptr inbounds %Token* %"$tmpC", i32 0, i32 0
  call void @ctor217(%Location* %1, %Location* %4)
  call void @dtor387(%Token* %"$tmpC")
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor387(%Token* %"$tmpC")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"pre_*506"(%Token* sret %_result, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %r) #3 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %r.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %r, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token** %_result.addr
  %2 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %r.addr
  call void @front507(%Token* %1, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @front507(%Token* sret %_result, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this) #3 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %this.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token** %_result.addr
  %2 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %3 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2, i32 0, i32 1
  %4 = call %Token* @front407(%"Vector[Token]"* %3)
  call void @ctor262(%Token* %1, %Token* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseModuleName(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  %qid = alloca %Node
  %tmp.v1 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 2)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseQualifiedName(%Node* %qid, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i1 false)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v1, i32 32)
  %6 = load %TokenType* %tmp.v1
  %7 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %TokenType %6)
  %8 = load %Node** %_result.addr
  call void @ctor564(%Node* %8, %Node* %qid)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %9 = load %Node** %_result.addr
  call void @ctor568(%Node* %9)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %TokenType %t) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %t.addr = alloca %TokenType
  store %TokenType %t, %TokenType* %t.addr
  %"$tmpC" = alloca %Token
  %"$tmpC1" = alloca %Token
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @"pre_*506"(%Token* %"$tmpC", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2)
  %3 = getelementptr inbounds %Token* %"$tmpC", i32 0, i32 1
  %4 = call i1 @"==404"(%TokenType* %3, %TokenType* %t.addr)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %8 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 0
  call void @"post_++508"(%Token* %"$tmpC1", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %8)
  call void @"=243"(%Token* %6, %Token* %"$tmpC1")
  call void @dtor387(%Token* %"$tmpC1")
  call void @dtor387(%Token* %"$tmpC")
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  call void @dtor387(%Token* %"$tmpC")
  ret i1 false

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @"post_++508"(%Token* sret %_result, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %r) #3 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %r.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %r, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %r.addr
  %res = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %r.addr
  call void @front507(%Token* %res, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1)
  %2 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %r.addr
  call void @popFront509(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2)
  %3 = load %Token** %_result.addr
  call void @ctor262(%Token* %3, %Token* %res)
  call void @dtor387(%Token* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor387(%Token* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popFront509(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this) #3 {
  %this.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1, i32 0, i32 1
  call void @remove412(%"Vector[Token]"* %2, i64 0)
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %3, i32 0, i32 1
  %5 = call i1 @isEmpty403(%"Vector[Token]"* %4)
  br i1 %5, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %6 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %7 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %6, i32 0, i32 1
  %8 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %8, i32 0, i32 0
  call void @"post_++464"(%Token* %"$tmpC", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %9)
  call void @"+=259"(%"Vector[Token]"* %7, %Token* %"$tmpC")
  call void @dtor387(%Token* %"$tmpC")
  br label %if_end

if_end:                                           ; preds = %if_then, %cond.end
  ret void

cond.true:                                        ; preds = %if_block
  %10 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %11 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %10, i32 0, i32 0
  %12 = call i1 @"pre_!!462"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %11)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %12, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseQualifiedName(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %allowStar) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %allowStar.addr = alloca i1
  store i1 %allowStar, i1* %allowStar.addr
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %base = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %lastId = alloca %String
  %tmp.v1 = alloca %TokenType
  %tmp.v2 = alloca %TokenType
  %"$tmpForRef3" = alloca %Node
  %"$tmpC4" = alloca %Location
  %"$tmpC5" = alloca %Location
  %"$tmpC6" = alloca %StringRef
  %tmp.v10 = alloca %TokenType
  %"$tmpForRef11" = alloca %Node
  %"$tmpC12" = alloca %Location
  %"$tmpC13" = alloca %Location
  %"$tmpC14" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 37)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC", %String* %7)
  %8 = load %StringRef* %"$tmpC"
  %9 = call %Node @comp_parser_mkIdentifier(%Location* %loc, %StringRef %8)
  store %Node %9, %Node* %"$tmpForRef"
  call void @ctor564(%Node* %base, %Node* %"$tmpForRef")
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %11 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, i32 0, i32 1
  %12 = getelementptr inbounds %Token* %11, i32 0, i32 2
  call void @ctor209(%String* %lastId, %String* %12)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v1, i32 34)
  %14 = load %TokenType* %tmp.v1
  %15 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, %TokenType %14)
  br i1 %15, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block

while_step:                                       ; preds = %cond_destruct_end9
  br label %while_block

while_end:                                        ; preds = %cond_destruct_end, %while_block
  %16 = load %Node** %_result.addr
  call void @ctor564(%Node* %16, %Node* %base)
  call void @dtor214(%String* %lastId)
  ret void

if_block:                                         ; preds = %while_body
  %17 = load i1* %allowStar.addr
  br i1 %17, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC5", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18)
  call void @span(%Location* %"$tmpC4", %Location* %loc, %Location* %"$tmpC5")
  %19 = load %Node* %base
  %20 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %21 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %20, i32 0, i32 1
  %22 = getelementptr inbounds %Token* %21, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC6", %String* %22)
  %23 = load %StringRef* %"$tmpC6"
  %24 = call %Node @comp_parser_mkStarExpr(%Location* %"$tmpC4", %Node %19, %StringRef %23)
  store %Node %24, %Node* %"$tmpForRef3"
  call void @"=566"(%Node* %base, %Node* %"$tmpForRef3")
  br i1 %17, label %cond_destruct_alt1, label %cond_destruct_alt2

if_end:                                           ; preds = %dumy_block, %cond.end
  br i1 %17, label %cond_destruct_alt17, label %cond_destruct_alt28

cond.true:                                        ; preds = %if_block
  %25 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v2, i32 38)
  %26 = load %TokenType* %tmp.v2
  %27 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %25, %TokenType %26)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %27, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end

cond_destruct_alt1:                               ; preds = %if_then
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_then
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  br label %while_end

dumy_block:                                       ; No predecessors!
  br label %if_end

cond_destruct_alt17:                              ; preds = %if_end
  br label %cond_destruct_end9

cond_destruct_alt28:                              ; preds = %if_end
  br label %cond_destruct_end9

cond_destruct_end9:                               ; preds = %cond_destruct_alt28, %cond_destruct_alt17
  %28 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v10, i32 37)
  %29 = load %TokenType* %tmp.v10
  %30 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %28, %TokenType %29)
  %31 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC13", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %31)
  call void @span(%Location* %"$tmpC12", %Location* %loc, %Location* %"$tmpC13")
  %32 = load %Node* %base
  %33 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %34 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %33, i32 0, i32 1
  %35 = getelementptr inbounds %Token* %34, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC14", %String* %35)
  %36 = load %StringRef* %"$tmpC14"
  %37 = call %Node @comp_parser_mkCompoundExpr(%Location* %"$tmpC12", %Node %32, %StringRef %36)
  store %Node %37, %Node* %"$tmpForRef11"
  call void @"=566"(%Node* %base, %Node* %"$tmpForRef11")
  br label %while_step

dumy_block15:                                     ; No predecessors!
  call void @dtor214(%String* %lastId)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %TokenType %t) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %t.addr = alloca %TokenType
  store %TokenType %t, %TokenType* %t.addr
  %"$tmpC" = alloca %String
  %tmp.StringRef = alloca %StringRef
  %"$tmpC5" = alloca %Token
  %tmp.StringRef6 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = load %TokenType* %t.addr
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i32 0, i32 2
  %6 = load i1* %5
  br i1 %6, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block4, %if_block1
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %8 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %9 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([26 x i8]* @str562, i32 0, i32 0), i8** %8
  store i8* getelementptr inbounds ([26 x i8]* @str562, i32 0, i32 25), i8** %9
  %10 = load %StringRef* %tmp.StringRef
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %12 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, i32 0, i32 0
  call void @"pre_*506"(%Token* %"$tmpC5", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %12)
  %13 = getelementptr inbounds %Token* %"$tmpC5", i32 0, i32 1
  %14 = load %TokenType* %13
  %15 = getelementptr inbounds %StringRef* %tmp.StringRef6, i32 0, i32 0
  %16 = getelementptr inbounds %StringRef* %tmp.StringRef6, i32 0, i32 1
  store i8* getelementptr inbounds ([13 x i8]* @str563, i32 0, i32 0), i8** %15
  store i8* getelementptr inbounds ([13 x i8]* @str563, i32 0, i32 12), i8** %16
  %17 = load %StringRef* %tmp.StringRef6
  %18 = load %TokenType* %t.addr
  call void @toString511(%String* %"$tmpC", %StringRef %10, %TokenType %14, %StringRef %17, %TokenType %18)
  call void @reportError510(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, %String* %"$tmpC")
  call void @dtor214(%String* %"$tmpC")
  call void @dtor387(%Token* %"$tmpC5")
  ret i1 false

dumy_block4:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: inlinehint nounwind
define internal void @reportError510(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %String* %msg) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %msg.addr = alloca %String*
  store %String* %msg, %String** %msg.addr
  %"$tmpC" = alloca %Token
  %"$tmpC1" = alloca %Token
  %tmp.v = alloca %TokenType
  %"$tmpC2" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 3
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  call void @"pre_*506"(%Token* %"$tmpC", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %4)
  %5 = getelementptr inbounds %Token* %"$tmpC", i32 0, i32 0
  %6 = load %Location* %5
  %7 = load %String** %msg.addr
  call void @reportError(%ExternalErrorReporter* %2, %Location %6, %String* %7)
  call void @dtor387(%Token* %"$tmpC")
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %9 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, i32 0, i32 0
  call void @"pre_*506"(%Token* %"$tmpC1", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %9)
  %10 = getelementptr inbounds %Token* %"$tmpC1", i32 0, i32 1
  call void @ctor272(%TokenType* %tmp.v, i32 0)
  %11 = call i1 @"==404"(%TokenType* %10, %TokenType* %tmp.v)
  %12 = xor i1 true, %11
  br i1 %12, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %14 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, i32 0, i32 1
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %16 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, i32 0, i32 0
  call void @"post_++508"(%Token* %"$tmpC2", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %16)
  call void @"=243"(%Token* %14, %Token* %"$tmpC2")
  call void @dtor387(%Token* %"$tmpC2")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  call void @dtor387(%Token* %"$tmpC1")
  %17 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %18 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %17, i32 0, i32 2
  store i1 true, i1* %18
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @toString511(%String* sret %_result, %StringRef %a1, %TokenType %a2, %StringRef %a3, %TokenType %a4) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %a1.addr = alloca %StringRef
  store %StringRef %a1, %StringRef* %a1.addr
  %a2.addr = alloca %TokenType
  store %TokenType %a2, %TokenType* %a2.addr
  %a3.addr = alloca %StringRef
  store %StringRef %a3, %StringRef* %a3.addr
  %a4.addr = alloca %TokenType
  store %TokenType %a4, %TokenType* %a4.addr
  %s = alloca %StringOutputStream
  br label %code

code:                                             ; preds = %0
  call void @ctor196(%StringOutputStream* %s)
  %1 = call %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %a1.addr)
  %2 = call %StringOutputStream* @"<<512"(%StringOutputStream* %1, %TokenType* %a2.addr)
  %3 = call %StringOutputStream* @"<<"(%StringOutputStream* %2, %StringRef* %a3.addr)
  %4 = call %StringOutputStream* @"<<512"(%StringOutputStream* %3, %TokenType* %a4.addr)
  %5 = load %String** %_result.addr
  %6 = getelementptr inbounds %StringOutputStream* %s, i32 0, i32 0
  call void @ctor209(%String* %5, %String* %6)
  call void @dtor213(%StringOutputStream* %s)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor213(%StringOutputStream* %s)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringOutputStream* @"<<512"(%StringOutputStream* %s, %TokenType* %x) #3 {
  %s.addr = alloca %StringOutputStream*
  store %StringOutputStream* %s, %StringOutputStream** %s.addr
  %x.addr = alloca %TokenType*
  store %TokenType* %x, %TokenType** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %TokenType** %x.addr
  %2 = load %TokenType* %1
  %3 = load %StringOutputStream** %s.addr
  call void @">>"(%TokenType %2, %StringOutputStream* %3)
  %4 = load %StringOutputStream** %s.addr
  ret %StringOutputStream* %4
}

; Function Attrs: inlinehint nounwind
define internal void @">>"(%TokenType %t, %StringOutputStream* %os) #3 {
  %t.addr = alloca %TokenType
  store %TokenType %t, %TokenType* %t.addr
  %os.addr = alloca %StringOutputStream*
  store %StringOutputStream* %os, %StringOutputStream** %os.addr
  %"$tmpC" = alloca %String
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %os.addr
  %2 = load %TokenType* %t.addr
  call void @_asString(%String* %"$tmpC", %TokenType %2)
  %3 = call %StringOutputStream* @"<<513"(%StringOutputStream* %1, %String* %"$tmpC")
  call void @dtor214(%String* %"$tmpC")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringOutputStream* @"<<513"(%StringOutputStream* %s, %String* %x) #3 {
  %s.addr = alloca %StringOutputStream*
  store %StringOutputStream* %s, %StringOutputStream** %s.addr
  %x.addr = alloca %String*
  store %String* %x, %String** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %x.addr
  %2 = load %StringOutputStream** %s.addr
  call void @">>514"(%String* %1, %StringOutputStream* %2)
  %3 = load %StringOutputStream** %s.addr
  ret %StringOutputStream* %3
}

; Function Attrs: inlinehint nounwind
define internal void @">>514"(%String* %this, %StringOutputStream* %os) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %os.addr = alloca %StringOutputStream*
  store %StringOutputStream* %os, %StringOutputStream** %os.addr
  %"$tmpC" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %os.addr
  %2 = load %String** %this.addr
  call void @asStringRef(%StringRef* %"$tmpC", %String* %2)
  %3 = call %StringOutputStream* @"<<"(%StringOutputStream* %1, %StringRef* %"$tmpC")
  ret void
}

; Function Attrs: noinline nounwind
define void @_asString(%String* sret %_result, %TokenType %t) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %t.addr = alloca %TokenType
  store %TokenType %t, %TokenType* %t.addr
  %tmp.v = alloca %TokenType
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  %tmp.v5 = alloca %TokenType
  %"$tmpForRef6" = alloca %StringRef
  %tmp.StringRef7 = alloca %StringRef
  %tmp.v13 = alloca %TokenType
  %"$tmpForRef14" = alloca %StringRef
  %tmp.StringRef15 = alloca %StringRef
  %tmp.v21 = alloca %TokenType
  %"$tmpForRef22" = alloca %StringRef
  %tmp.StringRef23 = alloca %StringRef
  %tmp.v29 = alloca %TokenType
  %"$tmpForRef30" = alloca %StringRef
  %tmp.StringRef31 = alloca %StringRef
  %tmp.v37 = alloca %TokenType
  %"$tmpForRef38" = alloca %StringRef
  %tmp.StringRef39 = alloca %StringRef
  %tmp.v45 = alloca %TokenType
  %"$tmpForRef46" = alloca %StringRef
  %tmp.StringRef47 = alloca %StringRef
  %tmp.v53 = alloca %TokenType
  %"$tmpForRef54" = alloca %StringRef
  %tmp.StringRef55 = alloca %StringRef
  %tmp.v61 = alloca %TokenType
  %"$tmpForRef62" = alloca %StringRef
  %tmp.StringRef63 = alloca %StringRef
  %tmp.v69 = alloca %TokenType
  %"$tmpForRef70" = alloca %StringRef
  %tmp.StringRef71 = alloca %StringRef
  %tmp.v77 = alloca %TokenType
  %"$tmpForRef78" = alloca %StringRef
  %tmp.StringRef79 = alloca %StringRef
  %tmp.v85 = alloca %TokenType
  %"$tmpForRef86" = alloca %StringRef
  %tmp.StringRef87 = alloca %StringRef
  %tmp.v93 = alloca %TokenType
  %"$tmpForRef94" = alloca %StringRef
  %tmp.StringRef95 = alloca %StringRef
  %tmp.v101 = alloca %TokenType
  %"$tmpForRef102" = alloca %StringRef
  %tmp.StringRef103 = alloca %StringRef
  %tmp.v109 = alloca %TokenType
  %"$tmpForRef110" = alloca %StringRef
  %tmp.StringRef111 = alloca %StringRef
  %tmp.v117 = alloca %TokenType
  %"$tmpForRef118" = alloca %StringRef
  %tmp.StringRef119 = alloca %StringRef
  %tmp.v125 = alloca %TokenType
  %"$tmpForRef126" = alloca %StringRef
  %tmp.StringRef127 = alloca %StringRef
  %tmp.v133 = alloca %TokenType
  %"$tmpForRef134" = alloca %StringRef
  %tmp.StringRef135 = alloca %StringRef
  %tmp.v141 = alloca %TokenType
  %"$tmpForRef142" = alloca %StringRef
  %tmp.StringRef143 = alloca %StringRef
  %tmp.v149 = alloca %TokenType
  %"$tmpForRef150" = alloca %StringRef
  %tmp.StringRef151 = alloca %StringRef
  %tmp.v157 = alloca %TokenType
  %"$tmpForRef158" = alloca %StringRef
  %tmp.StringRef159 = alloca %StringRef
  %tmp.v165 = alloca %TokenType
  %"$tmpForRef166" = alloca %StringRef
  %tmp.StringRef167 = alloca %StringRef
  %tmp.v173 = alloca %TokenType
  %"$tmpForRef174" = alloca %StringRef
  %tmp.StringRef175 = alloca %StringRef
  %tmp.v181 = alloca %TokenType
  %"$tmpForRef182" = alloca %StringRef
  %tmp.StringRef183 = alloca %StringRef
  %tmp.v189 = alloca %TokenType
  %"$tmpForRef190" = alloca %StringRef
  %tmp.StringRef191 = alloca %StringRef
  %tmp.v197 = alloca %TokenType
  %"$tmpForRef198" = alloca %StringRef
  %tmp.StringRef199 = alloca %StringRef
  %tmp.v205 = alloca %TokenType
  %"$tmpForRef206" = alloca %StringRef
  %tmp.StringRef207 = alloca %StringRef
  %tmp.v213 = alloca %TokenType
  %"$tmpForRef214" = alloca %StringRef
  %tmp.StringRef215 = alloca %StringRef
  %tmp.v221 = alloca %TokenType
  %"$tmpForRef222" = alloca %StringRef
  %tmp.StringRef223 = alloca %StringRef
  %tmp.v229 = alloca %TokenType
  %"$tmpForRef230" = alloca %StringRef
  %tmp.StringRef231 = alloca %StringRef
  %tmp.v237 = alloca %TokenType
  %"$tmpForRef238" = alloca %StringRef
  %tmp.StringRef239 = alloca %StringRef
  %tmp.v245 = alloca %TokenType
  %"$tmpForRef246" = alloca %StringRef
  %tmp.StringRef247 = alloca %StringRef
  %tmp.v253 = alloca %TokenType
  %"$tmpForRef254" = alloca %StringRef
  %tmp.StringRef255 = alloca %StringRef
  %tmp.v261 = alloca %TokenType
  %"$tmpForRef262" = alloca %StringRef
  %tmp.StringRef263 = alloca %StringRef
  %tmp.v269 = alloca %TokenType
  %"$tmpForRef270" = alloca %StringRef
  %tmp.StringRef271 = alloca %StringRef
  %tmp.v277 = alloca %TokenType
  %"$tmpForRef278" = alloca %StringRef
  %tmp.StringRef279 = alloca %StringRef
  %tmp.v285 = alloca %TokenType
  %"$tmpForRef286" = alloca %StringRef
  %tmp.StringRef287 = alloca %StringRef
  %tmp.v293 = alloca %TokenType
  %"$tmpForRef294" = alloca %StringRef
  %tmp.StringRef295 = alloca %StringRef
  %tmp.v301 = alloca %TokenType
  %"$tmpForRef302" = alloca %StringRef
  %tmp.StringRef303 = alloca %StringRef
  %tmp.v309 = alloca %TokenType
  %"$tmpForRef310" = alloca %StringRef
  %tmp.StringRef311 = alloca %StringRef
  %tmp.v317 = alloca %TokenType
  %"$tmpForRef318" = alloca %StringRef
  %tmp.StringRef319 = alloca %StringRef
  %tmp.v325 = alloca %TokenType
  %"$tmpForRef326" = alloca %StringRef
  %tmp.StringRef327 = alloca %StringRef
  %tmp.v333 = alloca %TokenType
  %"$tmpForRef334" = alloca %StringRef
  %tmp.StringRef335 = alloca %StringRef
  %tmp.v341 = alloca %TokenType
  %"$tmpForRef342" = alloca %StringRef
  %tmp.StringRef343 = alloca %StringRef
  %tmp.v349 = alloca %TokenType
  %"$tmpForRef350" = alloca %StringRef
  %tmp.StringRef351 = alloca %StringRef
  %tmp.v357 = alloca %TokenType
  %"$tmpForRef358" = alloca %StringRef
  %tmp.StringRef359 = alloca %StringRef
  %tmp.v364 = alloca %TokenType
  %"$tmpForRef365" = alloca %StringRef
  %tmp.StringRef366 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  call void @ctor272(%TokenType* %tmp.v, i32 0)
  %1 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v)
  br i1 %1, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %2 = load %String** %_result.addr
  %3 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %4 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([12 x i8]* @str515, i32 0, i32 0), i8** %3
  store i8* getelementptr inbounds ([12 x i8]* @str515, i32 0, i32 11), i8** %4
  %5 = load %StringRef* %tmp.StringRef
  store %StringRef %5, %StringRef* %"$tmpForRef"
  call void @ctor328(%String* %2, %StringRef* %"$tmpForRef")
  ret void

if_else:                                          ; preds = %if_block
  br label %if_block1

if_end:                                           ; preds = %if_end4, %dumy_block
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_else
  call void @ctor272(%TokenType* %tmp.v5, i32 1)
  %6 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v5)
  br i1 %6, label %if_then2, label %if_else3

if_then2:                                         ; preds = %if_block1
  %7 = load %String** %_result.addr
  %8 = getelementptr inbounds %StringRef* %tmp.StringRef7, i32 0, i32 0
  %9 = getelementptr inbounds %StringRef* %tmp.StringRef7, i32 0, i32 1
  store i8* getelementptr inbounds ([9 x i8]* @str516, i32 0, i32 0), i8** %8
  store i8* getelementptr inbounds ([9 x i8]* @str516, i32 0, i32 8), i8** %9
  %10 = load %StringRef* %tmp.StringRef7
  store %StringRef %10, %StringRef* %"$tmpForRef6"
  call void @ctor328(%String* %7, %StringRef* %"$tmpForRef6")
  ret void

if_else3:                                         ; preds = %if_block1
  br label %if_block9

if_end4:                                          ; preds = %if_end12, %dumy_block8
  br label %if_end

dumy_block8:                                      ; No predecessors!
  br label %if_end4

if_block9:                                        ; preds = %if_else3
  call void @ctor272(%TokenType* %tmp.v13, i32 2)
  %11 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v13)
  br i1 %11, label %if_then10, label %if_else11

if_then10:                                        ; preds = %if_block9
  %12 = load %String** %_result.addr
  %13 = getelementptr inbounds %StringRef* %tmp.StringRef15, i32 0, i32 0
  %14 = getelementptr inbounds %StringRef* %tmp.StringRef15, i32 0, i32 1
  store i8* getelementptr inbounds ([9 x i8]* @str517, i32 0, i32 0), i8** %13
  store i8* getelementptr inbounds ([9 x i8]* @str517, i32 0, i32 8), i8** %14
  %15 = load %StringRef* %tmp.StringRef15
  store %StringRef %15, %StringRef* %"$tmpForRef14"
  call void @ctor328(%String* %12, %StringRef* %"$tmpForRef14")
  ret void

if_else11:                                        ; preds = %if_block9
  br label %if_block17

if_end12:                                         ; preds = %if_end20, %dumy_block16
  br label %if_end4

dumy_block16:                                     ; No predecessors!
  br label %if_end12

if_block17:                                       ; preds = %if_else11
  call void @ctor272(%TokenType* %tmp.v21, i32 3)
  %16 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v21)
  br i1 %16, label %if_then18, label %if_else19

if_then18:                                        ; preds = %if_block17
  %17 = load %String** %_result.addr
  %18 = getelementptr inbounds %StringRef* %tmp.StringRef23, i32 0, i32 0
  %19 = getelementptr inbounds %StringRef* %tmp.StringRef23, i32 0, i32 1
  store i8* getelementptr inbounds ([9 x i8]* @str518, i32 0, i32 0), i8** %18
  store i8* getelementptr inbounds ([9 x i8]* @str518, i32 0, i32 8), i8** %19
  %20 = load %StringRef* %tmp.StringRef23
  store %StringRef %20, %StringRef* %"$tmpForRef22"
  call void @ctor328(%String* %17, %StringRef* %"$tmpForRef22")
  ret void

if_else19:                                        ; preds = %if_block17
  br label %if_block25

if_end20:                                         ; preds = %if_end28, %dumy_block24
  br label %if_end12

dumy_block24:                                     ; No predecessors!
  br label %if_end20

if_block25:                                       ; preds = %if_else19
  call void @ctor272(%TokenType* %tmp.v29, i32 4)
  %21 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v29)
  br i1 %21, label %if_then26, label %if_else27

if_then26:                                        ; preds = %if_block25
  %22 = load %String** %_result.addr
  %23 = getelementptr inbounds %StringRef* %tmp.StringRef31, i32 0, i32 0
  %24 = getelementptr inbounds %StringRef* %tmp.StringRef31, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8]* @str519, i32 0, i32 0), i8** %23
  store i8* getelementptr inbounds ([8 x i8]* @str519, i32 0, i32 7), i8** %24
  %25 = load %StringRef* %tmp.StringRef31
  store %StringRef %25, %StringRef* %"$tmpForRef30"
  call void @ctor328(%String* %22, %StringRef* %"$tmpForRef30")
  ret void

if_else27:                                        ; preds = %if_block25
  br label %if_block33

if_end28:                                         ; preds = %if_end36, %dumy_block32
  br label %if_end20

dumy_block32:                                     ; No predecessors!
  br label %if_end28

if_block33:                                       ; preds = %if_else27
  call void @ctor272(%TokenType* %tmp.v37, i32 5)
  %26 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v37)
  br i1 %26, label %if_then34, label %if_else35

if_then34:                                        ; preds = %if_block33
  %27 = load %String** %_result.addr
  %28 = getelementptr inbounds %StringRef* %tmp.StringRef39, i32 0, i32 0
  %29 = getelementptr inbounds %StringRef* %tmp.StringRef39, i32 0, i32 1
  store i8* getelementptr inbounds ([10 x i8]* @str520, i32 0, i32 0), i8** %28
  store i8* getelementptr inbounds ([10 x i8]* @str520, i32 0, i32 9), i8** %29
  %30 = load %StringRef* %tmp.StringRef39
  store %StringRef %30, %StringRef* %"$tmpForRef38"
  call void @ctor328(%String* %27, %StringRef* %"$tmpForRef38")
  ret void

if_else35:                                        ; preds = %if_block33
  br label %if_block41

if_end36:                                         ; preds = %if_end44, %dumy_block40
  br label %if_end28

dumy_block40:                                     ; No predecessors!
  br label %if_end36

if_block41:                                       ; preds = %if_else35
  call void @ctor272(%TokenType* %tmp.v45, i32 6)
  %31 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v45)
  br i1 %31, label %if_then42, label %if_else43

if_then42:                                        ; preds = %if_block41
  %32 = load %String** %_result.addr
  %33 = getelementptr inbounds %StringRef* %tmp.StringRef47, i32 0, i32 0
  %34 = getelementptr inbounds %StringRef* %tmp.StringRef47, i32 0, i32 1
  store i8* getelementptr inbounds ([11 x i8]* @str521, i32 0, i32 0), i8** %33
  store i8* getelementptr inbounds ([11 x i8]* @str521, i32 0, i32 10), i8** %34
  %35 = load %StringRef* %tmp.StringRef47
  store %StringRef %35, %StringRef* %"$tmpForRef46"
  call void @ctor328(%String* %32, %StringRef* %"$tmpForRef46")
  ret void

if_else43:                                        ; preds = %if_block41
  br label %if_block49

if_end44:                                         ; preds = %if_end52, %dumy_block48
  br label %if_end36

dumy_block48:                                     ; No predecessors!
  br label %if_end44

if_block49:                                       ; preds = %if_else43
  call void @ctor272(%TokenType* %tmp.v53, i32 7)
  %36 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v53)
  br i1 %36, label %if_then50, label %if_else51

if_then50:                                        ; preds = %if_block49
  %37 = load %String** %_result.addr
  %38 = getelementptr inbounds %StringRef* %tmp.StringRef55, i32 0, i32 0
  %39 = getelementptr inbounds %StringRef* %tmp.StringRef55, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8]* @str522, i32 0, i32 0), i8** %38
  store i8* getelementptr inbounds ([6 x i8]* @str522, i32 0, i32 5), i8** %39
  %40 = load %StringRef* %tmp.StringRef55
  store %StringRef %40, %StringRef* %"$tmpForRef54"
  call void @ctor328(%String* %37, %StringRef* %"$tmpForRef54")
  ret void

if_else51:                                        ; preds = %if_block49
  br label %if_block57

if_end52:                                         ; preds = %if_end60, %dumy_block56
  br label %if_end44

dumy_block56:                                     ; No predecessors!
  br label %if_end52

if_block57:                                       ; preds = %if_else51
  call void @ctor272(%TokenType* %tmp.v61, i32 8)
  %41 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v61)
  br i1 %41, label %if_then58, label %if_else59

if_then58:                                        ; preds = %if_block57
  %42 = load %String** %_result.addr
  %43 = getelementptr inbounds %StringRef* %tmp.StringRef63, i32 0, i32 0
  %44 = getelementptr inbounds %StringRef* %tmp.StringRef63, i32 0, i32 1
  store i8* getelementptr inbounds ([10 x i8]* @str523, i32 0, i32 0), i8** %43
  store i8* getelementptr inbounds ([10 x i8]* @str523, i32 0, i32 9), i8** %44
  %45 = load %StringRef* %tmp.StringRef63
  store %StringRef %45, %StringRef* %"$tmpForRef62"
  call void @ctor328(%String* %42, %StringRef* %"$tmpForRef62")
  ret void

if_else59:                                        ; preds = %if_block57
  br label %if_block65

if_end60:                                         ; preds = %if_end68, %dumy_block64
  br label %if_end52

dumy_block64:                                     ; No predecessors!
  br label %if_end60

if_block65:                                       ; preds = %if_else59
  call void @ctor272(%TokenType* %tmp.v69, i32 9)
  %46 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v69)
  br i1 %46, label %if_then66, label %if_else67

if_then66:                                        ; preds = %if_block65
  %47 = load %String** %_result.addr
  %48 = getelementptr inbounds %StringRef* %tmp.StringRef71, i32 0, i32 0
  %49 = getelementptr inbounds %StringRef* %tmp.StringRef71, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8]* @str524, i32 0, i32 0), i8** %48
  store i8* getelementptr inbounds ([8 x i8]* @str524, i32 0, i32 7), i8** %49
  %50 = load %StringRef* %tmp.StringRef71
  store %StringRef %50, %StringRef* %"$tmpForRef70"
  call void @ctor328(%String* %47, %StringRef* %"$tmpForRef70")
  ret void

if_else67:                                        ; preds = %if_block65
  br label %if_block73

if_end68:                                         ; preds = %if_end76, %dumy_block72
  br label %if_end60

dumy_block72:                                     ; No predecessors!
  br label %if_end68

if_block73:                                       ; preds = %if_else67
  call void @ctor272(%TokenType* %tmp.v77, i32 10)
  %51 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v77)
  br i1 %51, label %if_then74, label %if_else75

if_then74:                                        ; preds = %if_block73
  %52 = load %String** %_result.addr
  %53 = getelementptr inbounds %StringRef* %tmp.StringRef79, i32 0, i32 0
  %54 = getelementptr inbounds %StringRef* %tmp.StringRef79, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8]* @str525, i32 0, i32 0), i8** %53
  store i8* getelementptr inbounds ([6 x i8]* @str525, i32 0, i32 5), i8** %54
  %55 = load %StringRef* %tmp.StringRef79
  store %StringRef %55, %StringRef* %"$tmpForRef78"
  call void @ctor328(%String* %52, %StringRef* %"$tmpForRef78")
  ret void

if_else75:                                        ; preds = %if_block73
  br label %if_block81

if_end76:                                         ; preds = %if_end84, %dumy_block80
  br label %if_end68

dumy_block80:                                     ; No predecessors!
  br label %if_end76

if_block81:                                       ; preds = %if_else75
  call void @ctor272(%TokenType* %tmp.v85, i32 11)
  %56 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v85)
  br i1 %56, label %if_then82, label %if_else83

if_then82:                                        ; preds = %if_block81
  %57 = load %String** %_result.addr
  %58 = getelementptr inbounds %StringRef* %tmp.StringRef87, i32 0, i32 0
  %59 = getelementptr inbounds %StringRef* %tmp.StringRef87, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8]* @str526, i32 0, i32 0), i8** %58
  store i8* getelementptr inbounds ([8 x i8]* @str526, i32 0, i32 7), i8** %59
  %60 = load %StringRef* %tmp.StringRef87
  store %StringRef %60, %StringRef* %"$tmpForRef86"
  call void @ctor328(%String* %57, %StringRef* %"$tmpForRef86")
  ret void

if_else83:                                        ; preds = %if_block81
  br label %if_block89

if_end84:                                         ; preds = %if_end92, %dumy_block88
  br label %if_end76

dumy_block88:                                     ; No predecessors!
  br label %if_end84

if_block89:                                       ; preds = %if_else83
  call void @ctor272(%TokenType* %tmp.v93, i32 12)
  %61 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v93)
  br i1 %61, label %if_then90, label %if_else91

if_then90:                                        ; preds = %if_block89
  %62 = load %String** %_result.addr
  %63 = getelementptr inbounds %StringRef* %tmp.StringRef95, i32 0, i32 0
  %64 = getelementptr inbounds %StringRef* %tmp.StringRef95, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8]* @str527, i32 0, i32 0), i8** %63
  store i8* getelementptr inbounds ([8 x i8]* @str527, i32 0, i32 7), i8** %64
  %65 = load %StringRef* %tmp.StringRef95
  store %StringRef %65, %StringRef* %"$tmpForRef94"
  call void @ctor328(%String* %62, %StringRef* %"$tmpForRef94")
  ret void

if_else91:                                        ; preds = %if_block89
  br label %if_block97

if_end92:                                         ; preds = %if_end100, %dumy_block96
  br label %if_end84

dumy_block96:                                     ; No predecessors!
  br label %if_end92

if_block97:                                       ; preds = %if_else91
  call void @ctor272(%TokenType* %tmp.v101, i32 13)
  %66 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v101)
  br i1 %66, label %if_then98, label %if_else99

if_then98:                                        ; preds = %if_block97
  %67 = load %String** %_result.addr
  %68 = getelementptr inbounds %StringRef* %tmp.StringRef103, i32 0, i32 0
  %69 = getelementptr inbounds %StringRef* %tmp.StringRef103, i32 0, i32 1
  store i8* getelementptr inbounds ([11 x i8]* @str528, i32 0, i32 0), i8** %68
  store i8* getelementptr inbounds ([11 x i8]* @str528, i32 0, i32 10), i8** %69
  %70 = load %StringRef* %tmp.StringRef103
  store %StringRef %70, %StringRef* %"$tmpForRef102"
  call void @ctor328(%String* %67, %StringRef* %"$tmpForRef102")
  ret void

if_else99:                                        ; preds = %if_block97
  br label %if_block105

if_end100:                                        ; preds = %if_end108, %dumy_block104
  br label %if_end92

dumy_block104:                                    ; No predecessors!
  br label %if_end100

if_block105:                                      ; preds = %if_else99
  call void @ctor272(%TokenType* %tmp.v109, i32 14)
  %71 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v109)
  br i1 %71, label %if_then106, label %if_else107

if_then106:                                       ; preds = %if_block105
  %72 = load %String** %_result.addr
  %73 = getelementptr inbounds %StringRef* %tmp.StringRef111, i32 0, i32 0
  %74 = getelementptr inbounds %StringRef* %tmp.StringRef111, i32 0, i32 1
  store i8* getelementptr inbounds ([10 x i8]* @str529, i32 0, i32 0), i8** %73
  store i8* getelementptr inbounds ([10 x i8]* @str529, i32 0, i32 9), i8** %74
  %75 = load %StringRef* %tmp.StringRef111
  store %StringRef %75, %StringRef* %"$tmpForRef110"
  call void @ctor328(%String* %72, %StringRef* %"$tmpForRef110")
  ret void

if_else107:                                       ; preds = %if_block105
  br label %if_block113

if_end108:                                        ; preds = %if_end116, %dumy_block112
  br label %if_end100

dumy_block112:                                    ; No predecessors!
  br label %if_end108

if_block113:                                      ; preds = %if_else107
  call void @ctor272(%TokenType* %tmp.v117, i32 15)
  %76 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v117)
  br i1 %76, label %if_then114, label %if_else115

if_then114:                                       ; preds = %if_block113
  %77 = load %String** %_result.addr
  %78 = getelementptr inbounds %StringRef* %tmp.StringRef119, i32 0, i32 0
  %79 = getelementptr inbounds %StringRef* %tmp.StringRef119, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8]* @str530, i32 0, i32 0), i8** %78
  store i8* getelementptr inbounds ([6 x i8]* @str530, i32 0, i32 5), i8** %79
  %80 = load %StringRef* %tmp.StringRef119
  store %StringRef %80, %StringRef* %"$tmpForRef118"
  call void @ctor328(%String* %77, %StringRef* %"$tmpForRef118")
  ret void

if_else115:                                       ; preds = %if_block113
  br label %if_block121

if_end116:                                        ; preds = %if_end124, %dumy_block120
  br label %if_end108

dumy_block120:                                    ; No predecessors!
  br label %if_end116

if_block121:                                      ; preds = %if_else115
  call void @ctor272(%TokenType* %tmp.v125, i32 16)
  %81 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v125)
  br i1 %81, label %if_then122, label %if_else123

if_then122:                                       ; preds = %if_block121
  %82 = load %String** %_result.addr
  %83 = getelementptr inbounds %StringRef* %tmp.StringRef127, i32 0, i32 0
  %84 = getelementptr inbounds %StringRef* %tmp.StringRef127, i32 0, i32 1
  store i8* getelementptr inbounds ([5 x i8]* @str531, i32 0, i32 0), i8** %83
  store i8* getelementptr inbounds ([5 x i8]* @str531, i32 0, i32 4), i8** %84
  %85 = load %StringRef* %tmp.StringRef127
  store %StringRef %85, %StringRef* %"$tmpForRef126"
  call void @ctor328(%String* %82, %StringRef* %"$tmpForRef126")
  ret void

if_else123:                                       ; preds = %if_block121
  br label %if_block129

if_end124:                                        ; preds = %if_end132, %dumy_block128
  br label %if_end116

dumy_block128:                                    ; No predecessors!
  br label %if_end124

if_block129:                                      ; preds = %if_else123
  call void @ctor272(%TokenType* %tmp.v133, i32 17)
  %86 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v133)
  br i1 %86, label %if_then130, label %if_else131

if_then130:                                       ; preds = %if_block129
  %87 = load %String** %_result.addr
  %88 = getelementptr inbounds %StringRef* %tmp.StringRef135, i32 0, i32 0
  %89 = getelementptr inbounds %StringRef* %tmp.StringRef135, i32 0, i32 1
  store i8* getelementptr inbounds ([9 x i8]* @str532, i32 0, i32 0), i8** %88
  store i8* getelementptr inbounds ([9 x i8]* @str532, i32 0, i32 8), i8** %89
  %90 = load %StringRef* %tmp.StringRef135
  store %StringRef %90, %StringRef* %"$tmpForRef134"
  call void @ctor328(%String* %87, %StringRef* %"$tmpForRef134")
  ret void

if_else131:                                       ; preds = %if_block129
  br label %if_block137

if_end132:                                        ; preds = %if_end140, %dumy_block136
  br label %if_end124

dumy_block136:                                    ; No predecessors!
  br label %if_end132

if_block137:                                      ; preds = %if_else131
  call void @ctor272(%TokenType* %tmp.v141, i32 18)
  %91 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v141)
  br i1 %91, label %if_then138, label %if_else139

if_then138:                                       ; preds = %if_block137
  %92 = load %String** %_result.addr
  %93 = getelementptr inbounds %StringRef* %tmp.StringRef143, i32 0, i32 0
  %94 = getelementptr inbounds %StringRef* %tmp.StringRef143, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8]* @str533, i32 0, i32 0), i8** %93
  store i8* getelementptr inbounds ([8 x i8]* @str533, i32 0, i32 7), i8** %94
  %95 = load %StringRef* %tmp.StringRef143
  store %StringRef %95, %StringRef* %"$tmpForRef142"
  call void @ctor328(%String* %92, %StringRef* %"$tmpForRef142")
  ret void

if_else139:                                       ; preds = %if_block137
  br label %if_block145

if_end140:                                        ; preds = %if_end148, %dumy_block144
  br label %if_end132

dumy_block144:                                    ; No predecessors!
  br label %if_end140

if_block145:                                      ; preds = %if_else139
  call void @ctor272(%TokenType* %tmp.v149, i32 19)
  %96 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v149)
  br i1 %96, label %if_then146, label %if_else147

if_then146:                                       ; preds = %if_block145
  %97 = load %String** %_result.addr
  %98 = getelementptr inbounds %StringRef* %tmp.StringRef151, i32 0, i32 0
  %99 = getelementptr inbounds %StringRef* %tmp.StringRef151, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8]* @str534, i32 0, i32 0), i8** %98
  store i8* getelementptr inbounds ([6 x i8]* @str534, i32 0, i32 5), i8** %99
  %100 = load %StringRef* %tmp.StringRef151
  store %StringRef %100, %StringRef* %"$tmpForRef150"
  call void @ctor328(%String* %97, %StringRef* %"$tmpForRef150")
  ret void

if_else147:                                       ; preds = %if_block145
  br label %if_block153

if_end148:                                        ; preds = %if_end156, %dumy_block152
  br label %if_end140

dumy_block152:                                    ; No predecessors!
  br label %if_end148

if_block153:                                      ; preds = %if_else147
  call void @ctor272(%TokenType* %tmp.v157, i32 20)
  %101 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v157)
  br i1 %101, label %if_then154, label %if_else155

if_then154:                                       ; preds = %if_block153
  %102 = load %String** %_result.addr
  %103 = getelementptr inbounds %StringRef* %tmp.StringRef159, i32 0, i32 0
  %104 = getelementptr inbounds %StringRef* %tmp.StringRef159, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8]* @str535, i32 0, i32 0), i8** %103
  store i8* getelementptr inbounds ([8 x i8]* @str535, i32 0, i32 7), i8** %104
  %105 = load %StringRef* %tmp.StringRef159
  store %StringRef %105, %StringRef* %"$tmpForRef158"
  call void @ctor328(%String* %102, %StringRef* %"$tmpForRef158")
  ret void

if_else155:                                       ; preds = %if_block153
  br label %if_block161

if_end156:                                        ; preds = %if_end164, %dumy_block160
  br label %if_end148

dumy_block160:                                    ; No predecessors!
  br label %if_end156

if_block161:                                      ; preds = %if_else155
  call void @ctor272(%TokenType* %tmp.v165, i32 21)
  %106 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v165)
  br i1 %106, label %if_then162, label %if_else163

if_then162:                                       ; preds = %if_block161
  %107 = load %String** %_result.addr
  %108 = getelementptr inbounds %StringRef* %tmp.StringRef167, i32 0, i32 0
  %109 = getelementptr inbounds %StringRef* %tmp.StringRef167, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8]* @str536, i32 0, i32 0), i8** %108
  store i8* getelementptr inbounds ([8 x i8]* @str536, i32 0, i32 7), i8** %109
  %110 = load %StringRef* %tmp.StringRef167
  store %StringRef %110, %StringRef* %"$tmpForRef166"
  call void @ctor328(%String* %107, %StringRef* %"$tmpForRef166")
  ret void

if_else163:                                       ; preds = %if_block161
  br label %if_block169

if_end164:                                        ; preds = %if_end172, %dumy_block168
  br label %if_end156

dumy_block168:                                    ; No predecessors!
  br label %if_end164

if_block169:                                      ; preds = %if_else163
  call void @ctor272(%TokenType* %tmp.v173, i32 22)
  %111 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v173)
  br i1 %111, label %if_then170, label %if_else171

if_then170:                                       ; preds = %if_block169
  %112 = load %String** %_result.addr
  %113 = getelementptr inbounds %StringRef* %tmp.StringRef175, i32 0, i32 0
  %114 = getelementptr inbounds %StringRef* %tmp.StringRef175, i32 0, i32 1
  store i8* getelementptr inbounds ([7 x i8]* @str537, i32 0, i32 0), i8** %113
  store i8* getelementptr inbounds ([7 x i8]* @str537, i32 0, i32 6), i8** %114
  %115 = load %StringRef* %tmp.StringRef175
  store %StringRef %115, %StringRef* %"$tmpForRef174"
  call void @ctor328(%String* %112, %StringRef* %"$tmpForRef174")
  ret void

if_else171:                                       ; preds = %if_block169
  br label %if_block177

if_end172:                                        ; preds = %if_end180, %dumy_block176
  br label %if_end164

dumy_block176:                                    ; No predecessors!
  br label %if_end172

if_block177:                                      ; preds = %if_else171
  call void @ctor272(%TokenType* %tmp.v181, i32 23)
  %116 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v181)
  br i1 %116, label %if_then178, label %if_else179

if_then178:                                       ; preds = %if_block177
  %117 = load %String** %_result.addr
  %118 = getelementptr inbounds %StringRef* %tmp.StringRef183, i32 0, i32 0
  %119 = getelementptr inbounds %StringRef* %tmp.StringRef183, i32 0, i32 1
  store i8* getelementptr inbounds ([7 x i8]* @str538, i32 0, i32 0), i8** %118
  store i8* getelementptr inbounds ([7 x i8]* @str538, i32 0, i32 6), i8** %119
  %120 = load %StringRef* %tmp.StringRef183
  store %StringRef %120, %StringRef* %"$tmpForRef182"
  call void @ctor328(%String* %117, %StringRef* %"$tmpForRef182")
  ret void

if_else179:                                       ; preds = %if_block177
  br label %if_block185

if_end180:                                        ; preds = %if_end188, %dumy_block184
  br label %if_end172

dumy_block184:                                    ; No predecessors!
  br label %if_end180

if_block185:                                      ; preds = %if_else179
  call void @ctor272(%TokenType* %tmp.v189, i32 24)
  %121 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v189)
  br i1 %121, label %if_then186, label %if_else187

if_then186:                                       ; preds = %if_block185
  %122 = load %String** %_result.addr
  %123 = getelementptr inbounds %StringRef* %tmp.StringRef191, i32 0, i32 0
  %124 = getelementptr inbounds %StringRef* %tmp.StringRef191, i32 0, i32 1
  store i8* getelementptr inbounds ([7 x i8]* @str539, i32 0, i32 0), i8** %123
  store i8* getelementptr inbounds ([7 x i8]* @str539, i32 0, i32 6), i8** %124
  %125 = load %StringRef* %tmp.StringRef191
  store %StringRef %125, %StringRef* %"$tmpForRef190"
  call void @ctor328(%String* %122, %StringRef* %"$tmpForRef190")
  ret void

if_else187:                                       ; preds = %if_block185
  br label %if_block193

if_end188:                                        ; preds = %if_end196, %dumy_block192
  br label %if_end180

dumy_block192:                                    ; No predecessors!
  br label %if_end188

if_block193:                                      ; preds = %if_else187
  call void @ctor272(%TokenType* %tmp.v197, i32 25)
  %126 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v197)
  br i1 %126, label %if_then194, label %if_else195

if_then194:                                       ; preds = %if_block193
  %127 = load %String** %_result.addr
  %128 = getelementptr inbounds %StringRef* %tmp.StringRef199, i32 0, i32 0
  %129 = getelementptr inbounds %StringRef* %tmp.StringRef199, i32 0, i32 1
  store i8* getelementptr inbounds ([16 x i8]* @str540, i32 0, i32 0), i8** %128
  store i8* getelementptr inbounds ([16 x i8]* @str540, i32 0, i32 15), i8** %129
  %130 = load %StringRef* %tmp.StringRef199
  store %StringRef %130, %StringRef* %"$tmpForRef198"
  call void @ctor328(%String* %127, %StringRef* %"$tmpForRef198")
  ret void

if_else195:                                       ; preds = %if_block193
  br label %if_block201

if_end196:                                        ; preds = %if_end204, %dumy_block200
  br label %if_end188

dumy_block200:                                    ; No predecessors!
  br label %if_end196

if_block201:                                      ; preds = %if_else195
  call void @ctor272(%TokenType* %tmp.v205, i32 26)
  %131 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v205)
  br i1 %131, label %if_then202, label %if_else203

if_then202:                                       ; preds = %if_block201
  %132 = load %String** %_result.addr
  %133 = getelementptr inbounds %StringRef* %tmp.StringRef207, i32 0, i32 0
  %134 = getelementptr inbounds %StringRef* %tmp.StringRef207, i32 0, i32 1
  store i8* getelementptr inbounds ([16 x i8]* @str541, i32 0, i32 0), i8** %133
  store i8* getelementptr inbounds ([16 x i8]* @str541, i32 0, i32 15), i8** %134
  %135 = load %StringRef* %tmp.StringRef207
  store %StringRef %135, %StringRef* %"$tmpForRef206"
  call void @ctor328(%String* %132, %StringRef* %"$tmpForRef206")
  ret void

if_else203:                                       ; preds = %if_block201
  br label %if_block209

if_end204:                                        ; preds = %if_end212, %dumy_block208
  br label %if_end196

dumy_block208:                                    ; No predecessors!
  br label %if_end204

if_block209:                                      ; preds = %if_else203
  call void @ctor272(%TokenType* %tmp.v213, i32 27)
  %136 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v213)
  br i1 %136, label %if_then210, label %if_else211

if_then210:                                       ; preds = %if_block209
  %137 = load %String** %_result.addr
  %138 = getelementptr inbounds %StringRef* %tmp.StringRef215, i32 0, i32 0
  %139 = getelementptr inbounds %StringRef* %tmp.StringRef215, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8]* @str542, i32 0, i32 0), i8** %138
  store i8* getelementptr inbounds ([4 x i8]* @str542, i32 0, i32 3), i8** %139
  %140 = load %StringRef* %tmp.StringRef215
  store %StringRef %140, %StringRef* %"$tmpForRef214"
  call void @ctor328(%String* %137, %StringRef* %"$tmpForRef214")
  ret void

if_else211:                                       ; preds = %if_block209
  br label %if_block217

if_end212:                                        ; preds = %if_end220, %dumy_block216
  br label %if_end204

dumy_block216:                                    ; No predecessors!
  br label %if_end212

if_block217:                                      ; preds = %if_else211
  call void @ctor272(%TokenType* %tmp.v221, i32 28)
  %141 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v221)
  br i1 %141, label %if_then218, label %if_else219

if_then218:                                       ; preds = %if_block217
  %142 = load %String** %_result.addr
  %143 = getelementptr inbounds %StringRef* %tmp.StringRef223, i32 0, i32 0
  %144 = getelementptr inbounds %StringRef* %tmp.StringRef223, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8]* @str543, i32 0, i32 0), i8** %143
  store i8* getelementptr inbounds ([4 x i8]* @str543, i32 0, i32 3), i8** %144
  %145 = load %StringRef* %tmp.StringRef223
  store %StringRef %145, %StringRef* %"$tmpForRef222"
  call void @ctor328(%String* %142, %StringRef* %"$tmpForRef222")
  ret void

if_else219:                                       ; preds = %if_block217
  br label %if_block225

if_end220:                                        ; preds = %if_end228, %dumy_block224
  br label %if_end212

dumy_block224:                                    ; No predecessors!
  br label %if_end220

if_block225:                                      ; preds = %if_else219
  call void @ctor272(%TokenType* %tmp.v229, i32 29)
  %146 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v229)
  br i1 %146, label %if_then226, label %if_else227

if_then226:                                       ; preds = %if_block225
  %147 = load %String** %_result.addr
  %148 = getelementptr inbounds %StringRef* %tmp.StringRef231, i32 0, i32 0
  %149 = getelementptr inbounds %StringRef* %tmp.StringRef231, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8]* @str544, i32 0, i32 0), i8** %148
  store i8* getelementptr inbounds ([4 x i8]* @str544, i32 0, i32 3), i8** %149
  %150 = load %StringRef* %tmp.StringRef231
  store %StringRef %150, %StringRef* %"$tmpForRef230"
  call void @ctor328(%String* %147, %StringRef* %"$tmpForRef230")
  ret void

if_else227:                                       ; preds = %if_block225
  br label %if_block233

if_end228:                                        ; preds = %if_end236, %dumy_block232
  br label %if_end220

dumy_block232:                                    ; No predecessors!
  br label %if_end228

if_block233:                                      ; preds = %if_else227
  call void @ctor272(%TokenType* %tmp.v237, i32 30)
  %151 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v237)
  br i1 %151, label %if_then234, label %if_else235

if_then234:                                       ; preds = %if_block233
  %152 = load %String** %_result.addr
  %153 = getelementptr inbounds %StringRef* %tmp.StringRef239, i32 0, i32 0
  %154 = getelementptr inbounds %StringRef* %tmp.StringRef239, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8]* @str545, i32 0, i32 0), i8** %153
  store i8* getelementptr inbounds ([4 x i8]* @str545, i32 0, i32 3), i8** %154
  %155 = load %StringRef* %tmp.StringRef239
  store %StringRef %155, %StringRef* %"$tmpForRef238"
  call void @ctor328(%String* %152, %StringRef* %"$tmpForRef238")
  ret void

if_else235:                                       ; preds = %if_block233
  br label %if_block241

if_end236:                                        ; preds = %if_end244, %dumy_block240
  br label %if_end228

dumy_block240:                                    ; No predecessors!
  br label %if_end236

if_block241:                                      ; preds = %if_else235
  call void @ctor272(%TokenType* %tmp.v245, i32 31)
  %156 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v245)
  br i1 %156, label %if_then242, label %if_else243

if_then242:                                       ; preds = %if_block241
  %157 = load %String** %_result.addr
  %158 = getelementptr inbounds %StringRef* %tmp.StringRef247, i32 0, i32 0
  %159 = getelementptr inbounds %StringRef* %tmp.StringRef247, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8]* @str546, i32 0, i32 0), i8** %158
  store i8* getelementptr inbounds ([4 x i8]* @str546, i32 0, i32 3), i8** %159
  %160 = load %StringRef* %tmp.StringRef247
  store %StringRef %160, %StringRef* %"$tmpForRef246"
  call void @ctor328(%String* %157, %StringRef* %"$tmpForRef246")
  ret void

if_else243:                                       ; preds = %if_block241
  br label %if_block249

if_end244:                                        ; preds = %if_end252, %dumy_block248
  br label %if_end236

dumy_block248:                                    ; No predecessors!
  br label %if_end244

if_block249:                                      ; preds = %if_else243
  call void @ctor272(%TokenType* %tmp.v253, i32 32)
  %161 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v253)
  br i1 %161, label %if_then250, label %if_else251

if_then250:                                       ; preds = %if_block249
  %162 = load %String** %_result.addr
  %163 = getelementptr inbounds %StringRef* %tmp.StringRef255, i32 0, i32 0
  %164 = getelementptr inbounds %StringRef* %tmp.StringRef255, i32 0, i32 1
  store i8* getelementptr inbounds ([17 x i8]* @str547, i32 0, i32 0), i8** %163
  store i8* getelementptr inbounds ([17 x i8]* @str547, i32 0, i32 16), i8** %164
  %165 = load %StringRef* %tmp.StringRef255
  store %StringRef %165, %StringRef* %"$tmpForRef254"
  call void @ctor328(%String* %162, %StringRef* %"$tmpForRef254")
  ret void

if_else251:                                       ; preds = %if_block249
  br label %if_block257

if_end252:                                        ; preds = %if_end260, %dumy_block256
  br label %if_end244

dumy_block256:                                    ; No predecessors!
  br label %if_end252

if_block257:                                      ; preds = %if_else251
  call void @ctor272(%TokenType* %tmp.v261, i32 33)
  %166 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v261)
  br i1 %166, label %if_then258, label %if_else259

if_then258:                                       ; preds = %if_block257
  %167 = load %String** %_result.addr
  %168 = getelementptr inbounds %StringRef* %tmp.StringRef263, i32 0, i32 0
  %169 = getelementptr inbounds %StringRef* %tmp.StringRef263, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8]* @str548, i32 0, i32 0), i8** %168
  store i8* getelementptr inbounds ([4 x i8]* @str548, i32 0, i32 3), i8** %169
  %170 = load %StringRef* %tmp.StringRef263
  store %StringRef %170, %StringRef* %"$tmpForRef262"
  call void @ctor328(%String* %167, %StringRef* %"$tmpForRef262")
  ret void

if_else259:                                       ; preds = %if_block257
  br label %if_block265

if_end260:                                        ; preds = %if_end268, %dumy_block264
  br label %if_end252

dumy_block264:                                    ; No predecessors!
  br label %if_end260

if_block265:                                      ; preds = %if_else259
  call void @ctor272(%TokenType* %tmp.v269, i32 34)
  %171 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v269)
  br i1 %171, label %if_then266, label %if_else267

if_then266:                                       ; preds = %if_block265
  %172 = load %String** %_result.addr
  %173 = getelementptr inbounds %StringRef* %tmp.StringRef271, i32 0, i32 0
  %174 = getelementptr inbounds %StringRef* %tmp.StringRef271, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8]* @str549, i32 0, i32 0), i8** %173
  store i8* getelementptr inbounds ([4 x i8]* @str549, i32 0, i32 3), i8** %174
  %175 = load %StringRef* %tmp.StringRef271
  store %StringRef %175, %StringRef* %"$tmpForRef270"
  call void @ctor328(%String* %172, %StringRef* %"$tmpForRef270")
  ret void

if_else267:                                       ; preds = %if_block265
  br label %if_block273

if_end268:                                        ; preds = %if_end276, %dumy_block272
  br label %if_end260

dumy_block272:                                    ; No predecessors!
  br label %if_end268

if_block273:                                      ; preds = %if_else267
  call void @ctor272(%TokenType* %tmp.v277, i32 35)
  %176 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v277)
  br i1 %176, label %if_then274, label %if_else275

if_then274:                                       ; preds = %if_block273
  %177 = load %String** %_result.addr
  %178 = getelementptr inbounds %StringRef* %tmp.StringRef279, i32 0, i32 0
  %179 = getelementptr inbounds %StringRef* %tmp.StringRef279, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8]* @str550, i32 0, i32 0), i8** %178
  store i8* getelementptr inbounds ([4 x i8]* @str550, i32 0, i32 3), i8** %179
  %180 = load %StringRef* %tmp.StringRef279
  store %StringRef %180, %StringRef* %"$tmpForRef278"
  call void @ctor328(%String* %177, %StringRef* %"$tmpForRef278")
  ret void

if_else275:                                       ; preds = %if_block273
  br label %if_block281

if_end276:                                        ; preds = %if_end284, %dumy_block280
  br label %if_end268

dumy_block280:                                    ; No predecessors!
  br label %if_end276

if_block281:                                      ; preds = %if_else275
  call void @ctor272(%TokenType* %tmp.v285, i32 36)
  %181 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v285)
  br i1 %181, label %if_then282, label %if_else283

if_then282:                                       ; preds = %if_block281
  %182 = load %String** %_result.addr
  %183 = getelementptr inbounds %StringRef* %tmp.StringRef287, i32 0, i32 0
  %184 = getelementptr inbounds %StringRef* %tmp.StringRef287, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8]* @str551, i32 0, i32 0), i8** %183
  store i8* getelementptr inbounds ([4 x i8]* @str551, i32 0, i32 3), i8** %184
  %185 = load %StringRef* %tmp.StringRef287
  store %StringRef %185, %StringRef* %"$tmpForRef286"
  call void @ctor328(%String* %182, %StringRef* %"$tmpForRef286")
  ret void

if_else283:                                       ; preds = %if_block281
  br label %if_block289

if_end284:                                        ; preds = %if_end292, %dumy_block288
  br label %if_end276

dumy_block288:                                    ; No predecessors!
  br label %if_end284

if_block289:                                      ; preds = %if_else283
  call void @ctor272(%TokenType* %tmp.v293, i32 37)
  %186 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v293)
  br i1 %186, label %if_then290, label %if_else291

if_then290:                                       ; preds = %if_block289
  %187 = load %String** %_result.addr
  %188 = getelementptr inbounds %StringRef* %tmp.StringRef295, i32 0, i32 0
  %189 = getelementptr inbounds %StringRef* %tmp.StringRef295, i32 0, i32 1
  store i8* getelementptr inbounds ([11 x i8]* @str552, i32 0, i32 0), i8** %188
  store i8* getelementptr inbounds ([11 x i8]* @str552, i32 0, i32 10), i8** %189
  %190 = load %StringRef* %tmp.StringRef295
  store %StringRef %190, %StringRef* %"$tmpForRef294"
  call void @ctor328(%String* %187, %StringRef* %"$tmpForRef294")
  ret void

if_else291:                                       ; preds = %if_block289
  br label %if_block297

if_end292:                                        ; preds = %if_end300, %dumy_block296
  br label %if_end284

dumy_block296:                                    ; No predecessors!
  br label %if_end292

if_block297:                                      ; preds = %if_else291
  call void @ctor272(%TokenType* %tmp.v301, i32 38)
  %191 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v301)
  br i1 %191, label %if_then298, label %if_else299

if_then298:                                       ; preds = %if_block297
  %192 = load %String** %_result.addr
  %193 = getelementptr inbounds %StringRef* %tmp.StringRef303, i32 0, i32 0
  %194 = getelementptr inbounds %StringRef* %tmp.StringRef303, i32 0, i32 1
  store i8* getelementptr inbounds ([9 x i8]* @str553, i32 0, i32 0), i8** %193
  store i8* getelementptr inbounds ([9 x i8]* @str553, i32 0, i32 8), i8** %194
  %195 = load %StringRef* %tmp.StringRef303
  store %StringRef %195, %StringRef* %"$tmpForRef302"
  call void @ctor328(%String* %192, %StringRef* %"$tmpForRef302")
  ret void

if_else299:                                       ; preds = %if_block297
  br label %if_block305

if_end300:                                        ; preds = %if_end308, %dumy_block304
  br label %if_end292

dumy_block304:                                    ; No predecessors!
  br label %if_end300

if_block305:                                      ; preds = %if_else299
  call void @ctor272(%TokenType* %tmp.v309, i32 39)
  %196 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v309)
  br i1 %196, label %if_then306, label %if_else307

if_then306:                                       ; preds = %if_block305
  %197 = load %String** %_result.addr
  %198 = getelementptr inbounds %StringRef* %tmp.StringRef311, i32 0, i32 0
  %199 = getelementptr inbounds %StringRef* %tmp.StringRef311, i32 0, i32 1
  store i8* getelementptr inbounds ([13 x i8]* @str554, i32 0, i32 0), i8** %198
  store i8* getelementptr inbounds ([13 x i8]* @str554, i32 0, i32 12), i8** %199
  %200 = load %StringRef* %tmp.StringRef311
  store %StringRef %200, %StringRef* %"$tmpForRef310"
  call void @ctor328(%String* %197, %StringRef* %"$tmpForRef310")
  ret void

if_else307:                                       ; preds = %if_block305
  br label %if_block313

if_end308:                                        ; preds = %if_end316, %dumy_block312
  br label %if_end300

dumy_block312:                                    ; No predecessors!
  br label %if_end308

if_block313:                                      ; preds = %if_else307
  call void @ctor272(%TokenType* %tmp.v317, i32 40)
  %201 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v317)
  br i1 %201, label %if_then314, label %if_else315

if_then314:                                       ; preds = %if_block313
  %202 = load %String** %_result.addr
  %203 = getelementptr inbounds %StringRef* %tmp.StringRef319, i32 0, i32 0
  %204 = getelementptr inbounds %StringRef* %tmp.StringRef319, i32 0, i32 1
  store i8* getelementptr inbounds ([15 x i8]* @str555, i32 0, i32 0), i8** %203
  store i8* getelementptr inbounds ([15 x i8]* @str555, i32 0, i32 14), i8** %204
  %205 = load %StringRef* %tmp.StringRef319
  store %StringRef %205, %StringRef* %"$tmpForRef318"
  call void @ctor328(%String* %202, %StringRef* %"$tmpForRef318")
  ret void

if_else315:                                       ; preds = %if_block313
  br label %if_block321

if_end316:                                        ; preds = %if_end324, %dumy_block320
  br label %if_end308

dumy_block320:                                    ; No predecessors!
  br label %if_end316

if_block321:                                      ; preds = %if_else315
  call void @ctor272(%TokenType* %tmp.v325, i32 41)
  %206 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v325)
  br i1 %206, label %if_then322, label %if_else323

if_then322:                                       ; preds = %if_block321
  %207 = load %String** %_result.addr
  %208 = getelementptr inbounds %StringRef* %tmp.StringRef327, i32 0, i32 0
  %209 = getelementptr inbounds %StringRef* %tmp.StringRef327, i32 0, i32 1
  store i8* getelementptr inbounds ([12 x i8]* @str556, i32 0, i32 0), i8** %208
  store i8* getelementptr inbounds ([12 x i8]* @str556, i32 0, i32 11), i8** %209
  %210 = load %StringRef* %tmp.StringRef327
  store %StringRef %210, %StringRef* %"$tmpForRef326"
  call void @ctor328(%String* %207, %StringRef* %"$tmpForRef326")
  ret void

if_else323:                                       ; preds = %if_block321
  br label %if_block329

if_end324:                                        ; preds = %if_end332, %dumy_block328
  br label %if_end316

dumy_block328:                                    ; No predecessors!
  br label %if_end324

if_block329:                                      ; preds = %if_else323
  call void @ctor272(%TokenType* %tmp.v333, i32 42)
  %211 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v333)
  br i1 %211, label %if_then330, label %if_else331

if_then330:                                       ; preds = %if_block329
  %212 = load %String** %_result.addr
  %213 = getelementptr inbounds %StringRef* %tmp.StringRef335, i32 0, i32 0
  %214 = getelementptr inbounds %StringRef* %tmp.StringRef335, i32 0, i32 1
  store i8* getelementptr inbounds ([13 x i8]* @str557, i32 0, i32 0), i8** %213
  store i8* getelementptr inbounds ([13 x i8]* @str557, i32 0, i32 12), i8** %214
  %215 = load %StringRef* %tmp.StringRef335
  store %StringRef %215, %StringRef* %"$tmpForRef334"
  call void @ctor328(%String* %212, %StringRef* %"$tmpForRef334")
  ret void

if_else331:                                       ; preds = %if_block329
  br label %if_block337

if_end332:                                        ; preds = %if_end340, %dumy_block336
  br label %if_end324

dumy_block336:                                    ; No predecessors!
  br label %if_end332

if_block337:                                      ; preds = %if_else331
  call void @ctor272(%TokenType* %tmp.v341, i32 43)
  %216 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v341)
  br i1 %216, label %if_then338, label %if_else339

if_then338:                                       ; preds = %if_block337
  %217 = load %String** %_result.addr
  %218 = getelementptr inbounds %StringRef* %tmp.StringRef343, i32 0, i32 0
  %219 = getelementptr inbounds %StringRef* %tmp.StringRef343, i32 0, i32 1
  store i8* getelementptr inbounds ([13 x i8]* @str558, i32 0, i32 0), i8** %218
  store i8* getelementptr inbounds ([13 x i8]* @str558, i32 0, i32 12), i8** %219
  %220 = load %StringRef* %tmp.StringRef343
  store %StringRef %220, %StringRef* %"$tmpForRef342"
  call void @ctor328(%String* %217, %StringRef* %"$tmpForRef342")
  ret void

if_else339:                                       ; preds = %if_block337
  br label %if_block345

if_end340:                                        ; preds = %if_end348, %dumy_block344
  br label %if_end332

dumy_block344:                                    ; No predecessors!
  br label %if_end340

if_block345:                                      ; preds = %if_else339
  call void @ctor272(%TokenType* %tmp.v349, i32 44)
  %221 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v349)
  br i1 %221, label %if_then346, label %if_else347

if_then346:                                       ; preds = %if_block345
  %222 = load %String** %_result.addr
  %223 = getelementptr inbounds %StringRef* %tmp.StringRef351, i32 0, i32 0
  %224 = getelementptr inbounds %StringRef* %tmp.StringRef351, i32 0, i32 1
  store i8* getelementptr inbounds ([14 x i8]* @str559, i32 0, i32 0), i8** %223
  store i8* getelementptr inbounds ([14 x i8]* @str559, i32 0, i32 13), i8** %224
  %225 = load %StringRef* %tmp.StringRef351
  store %StringRef %225, %StringRef* %"$tmpForRef350"
  call void @ctor328(%String* %222, %StringRef* %"$tmpForRef350")
  ret void

if_else347:                                       ; preds = %if_block345
  br label %if_block353

if_end348:                                        ; preds = %if_end356, %dumy_block352
  br label %if_end340

dumy_block352:                                    ; No predecessors!
  br label %if_end348

if_block353:                                      ; preds = %if_else347
  call void @ctor272(%TokenType* %tmp.v357, i32 45)
  %226 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v357)
  br i1 %226, label %if_then354, label %if_else355

if_then354:                                       ; preds = %if_block353
  %227 = load %String** %_result.addr
  %228 = getelementptr inbounds %StringRef* %tmp.StringRef359, i32 0, i32 0
  %229 = getelementptr inbounds %StringRef* %tmp.StringRef359, i32 0, i32 1
  store i8* getelementptr inbounds ([14 x i8]* @str560, i32 0, i32 0), i8** %228
  store i8* getelementptr inbounds ([14 x i8]* @str560, i32 0, i32 13), i8** %229
  %230 = load %StringRef* %tmp.StringRef359
  store %StringRef %230, %StringRef* %"$tmpForRef358"
  call void @ctor328(%String* %227, %StringRef* %"$tmpForRef358")
  ret void

if_else355:                                       ; preds = %if_block353
  br label %if_block361

if_end356:                                        ; preds = %if_end363, %dumy_block360
  br label %if_end348

dumy_block360:                                    ; No predecessors!
  br label %if_end356

if_block361:                                      ; preds = %if_else355
  call void @ctor272(%TokenType* %tmp.v364, i32 46)
  %231 = call i1 @"==404"(%TokenType* %t.addr, %TokenType* %tmp.v364)
  br i1 %231, label %if_then362, label %if_end363

if_then362:                                       ; preds = %if_block361
  %232 = load %String** %_result.addr
  %233 = getelementptr inbounds %StringRef* %tmp.StringRef366, i32 0, i32 0
  %234 = getelementptr inbounds %StringRef* %tmp.StringRef366, i32 0, i32 1
  store i8* getelementptr inbounds ([15 x i8]* @str561, i32 0, i32 0), i8** %233
  store i8* getelementptr inbounds ([15 x i8]* @str561, i32 0, i32 14), i8** %234
  %235 = load %StringRef* %tmp.StringRef366
  store %StringRef %235, %StringRef* %"$tmpForRef365"
  call void @ctor328(%String* %232, %StringRef* %"$tmpForRef365")
  ret void

if_end363:                                        ; preds = %dumy_block367, %if_block361
  br label %if_end356

dumy_block367:                                    ; No predecessors!
  br label %if_end363
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor564(%Node* %this, %Node* %other) #2 {
  %this.addr = alloca %Node*
  store %Node* %this, %Node** %this.addr
  %other.addr = alloca %Node*
  store %Node* %other, %Node** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Node** %this.addr
  %2 = getelementptr inbounds %Node* %1, i32 0, i32 0
  %3 = load %Node** %other.addr
  %4 = getelementptr inbounds %Node* %3, i32 0, i32 0
  call void @ctor565(%UntypedPtr* %2, %UntypedPtr* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor565(%UntypedPtr* %this, %UntypedPtr* %other) #2 {
  %this.addr = alloca %UntypedPtr*
  store %UntypedPtr* %this, %UntypedPtr** %this.addr
  %other.addr = alloca %UntypedPtr*
  store %UntypedPtr* %other, %UntypedPtr** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %UntypedPtr** %other.addr
  %2 = getelementptr inbounds %UntypedPtr* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %UntypedPtr** %this.addr
  %5 = getelementptr inbounds %UntypedPtr* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

declare %Node @comp_parser_mkIdentifier(%Location*, %StringRef)

; Function Attrs: alwaysinline nounwind
define internal void @"=566"(%Node* %dest, %Node* %other) #2 {
  %dest.addr = alloca %Node*
  store %Node* %dest, %Node** %dest.addr
  %other.addr = alloca %Node*
  store %Node* %other, %Node** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Node** %dest.addr
  %2 = getelementptr inbounds %Node* %1, i32 0, i32 0
  %3 = load %Node** %other.addr
  %4 = getelementptr inbounds %Node* %3, i32 0, i32 0
  call void @"=567"(%UntypedPtr* %2, %UntypedPtr* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=567"(%UntypedPtr* %dest, %UntypedPtr* %other) #2 {
  %dest.addr = alloca %UntypedPtr*
  store %UntypedPtr* %dest, %UntypedPtr** %dest.addr
  %other.addr = alloca %UntypedPtr*
  store %UntypedPtr* %other, %UntypedPtr** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %UntypedPtr** %other.addr
  %2 = getelementptr inbounds %UntypedPtr* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %UntypedPtr** %dest.addr
  %5 = getelementptr inbounds %UntypedPtr* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

declare %Node @comp_parser_mkStarExpr(%Location*, %Node, %StringRef)

; Function Attrs: inlinehint nounwind
define internal void @span(%Location* sret %_result, %Location* %start, %Location* %end) #3 {
  %_result.addr = alloca %Location*
  store %Location* %_result, %Location** %_result.addr
  %start.addr = alloca %Location*
  store %Location* %start, %Location** %start.addr
  %end.addr = alloca %Location*
  store %Location* %end, %Location** %end.addr
  %res = alloca %Location
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %start.addr
  call void @ctor217(%Location* %res, %Location* %1)
  %2 = load %Location** %end.addr
  call void @copyEnd(%Location* %res, %Location* %2)
  %3 = load %Location** %_result.addr
  call void @ctor217(%Location* %3, %Location* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @copyEnd(%Location* %l, %Location* %other) #3 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %l.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 2
  %3 = load %Location** %other.addr
  %4 = getelementptr inbounds %Location* %3, i32 0, i32 2
  call void @"=239"(%LineCol* %2, %LineCol* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @lastLoc(%Location* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Location*
  store %Location* %_result, %Location** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %_result.addr
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %3 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, i32 0, i32 1
  %4 = getelementptr inbounds %Token* %3, i32 0, i32 0
  call void @ctor217(%Location* %1, %Location* %4)
  ret void
}

declare %Node @comp_parser_mkCompoundExpr(%Location*, %Node, %StringRef)

; Function Attrs: alwaysinline nounwind
define internal void @ctor568(%Node* %this) #2 {
  %this.addr = alloca %Node*
  store %Node* %this, %Node** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Node** %this.addr
  %2 = getelementptr inbounds %Node* %1, i32 0, i32 0
  call void @ctor569(%UntypedPtr* %2)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor569(%UntypedPtr* %this) #2 {
  %this.addr = alloca %UntypedPtr*
  store %UntypedPtr* %this, %UntypedPtr** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %UntypedPtr** %this.addr
  %2 = getelementptr inbounds %UntypedPtr* %1, i32 0, i32 0
  store i8* null, i8** %2
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseStmts(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %topLevel, %Node* %res) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %topLevel.addr = alloca i1
  store i1 %topLevel, i1* %topLevel.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %child = alloca %Node
  %"$tmpForRef" = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  br i1 true, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = load i1* %topLevel.addr
  call void @parseStmt(%Node* %child, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i1 %2)
  br label %if_block

while_step:                                       ; preds = %dumy_block1, %if_then
  br label %while_block

while_end:                                        ; preds = %if_end, %while_block
  ret void

if_block:                                         ; preds = %while_body
  %3 = load %Node* %child
  %4 = call i1 @isSet607(%Node %3)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %Node** %res.addr
  %6 = load %Node** %res.addr
  %7 = load %Node* %6
  %8 = load %Node* %child
  %9 = call %Node @comp_parser_addToNodeList(%Node %7, %Node %8)
  store %Node %9, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %5, %Node* %"$tmpForRef")
  br label %while_step

if_end:                                           ; preds = %dumy_block, %if_block
  br label %while_end

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block1:                                      ; No predecessors!
  br label %while_step
}

; Function Attrs: noinline nounwind
define void @parseStmt(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %topLevel) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %topLevel.addr = alloca i1
  store i1 %topLevel, i1* %topLevel.addr
  %res = alloca %Node
  %loc = alloca %Location
  %mods = alloca %Node
  %found = alloca i1
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %Location
  %"$tmpC60" = alloca %Location
  %"$tmpC61" = alloca %String
  %tmp.StringRef = alloca %StringRef
  %"$tmpC62" = alloca %Token
  %tmp.StringRef63 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  call void @ctor568(%Node* %res)
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @consumeSemis(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseModifiers(%Node* %mods, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3)
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %5 = call i1 @parseImportLineOpt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, %Node* %res)
  br i1 %5, label %cond.true40, label %cond.false41

cond.true:                                        ; preds = %cond.end3
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %7 = call i1 @parseReturnStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %Node* %res)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res56 = phi i1 [ true, %cond.true ], [ %7, %cond.false ]
  store i1 %cond.res56, i1* %found
  br label %if_block

cond.true1:                                       ; preds = %cond.end6
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %9 = call i1 @parseContinueStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %Node* %res)
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res55 = phi i1 [ true, %cond.true1 ], [ %9, %cond.false2 ]
  br i1 %cond.res55, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %cond.end9
  br label %cond.end6

cond.false5:                                      ; preds = %cond.end9
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %11 = call i1 @parseBreakStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, %Node* %res)
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res54 = phi i1 [ true, %cond.true4 ], [ %11, %cond.false5 ]
  br i1 %cond.res54, label %cond.true1, label %cond.false2

cond.true7:                                       ; preds = %cond.end12
  br label %cond.end9

cond.false8:                                      ; preds = %cond.end12
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %13 = load i1* %topLevel.addr
  %14 = call i1 @parseWhileStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, %Node* %res, i1 %13)
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res53 = phi i1 [ true, %cond.true7 ], [ %14, %cond.false8 ]
  br i1 %cond.res53, label %cond.true4, label %cond.false5

cond.true10:                                      ; preds = %cond.end15
  br label %cond.end12

cond.false11:                                     ; preds = %cond.end15
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %16 = load i1* %topLevel.addr
  %17 = call i1 @parseForStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, %Node* %res, i1 %16)
  br label %cond.end12

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond.res52 = phi i1 [ true, %cond.true10 ], [ %17, %cond.false11 ]
  br i1 %cond.res52, label %cond.true7, label %cond.false8

cond.true13:                                      ; preds = %cond.end18
  br label %cond.end15

cond.false14:                                     ; preds = %cond.end18
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %19 = load i1* %topLevel.addr
  %20 = call i1 @parseIfStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18, %Node* %res, i1 %19)
  br label %cond.end15

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond.res51 = phi i1 [ true, %cond.true13 ], [ %20, %cond.false14 ]
  br i1 %cond.res51, label %cond.true10, label %cond.false11

cond.true16:                                      ; preds = %cond.end21
  br label %cond.end18

cond.false17:                                     ; preds = %cond.end21
  %21 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %22 = load i1* %topLevel.addr
  %23 = call i1 @parseBlockStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %21, %Node* %res, i1 %22)
  br label %cond.end18

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond.res50 = phi i1 [ true, %cond.true16 ], [ %23, %cond.false17 ]
  br i1 %cond.res50, label %cond.true13, label %cond.false14

cond.true19:                                      ; preds = %cond.end24
  br label %cond.end21

cond.false20:                                     ; preds = %cond.end24
  %24 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %25 = call i1 @parseExprStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %24, %Node* %res)
  br label %cond.end21

cond.end21:                                       ; preds = %cond.false20, %cond.true19
  %cond.res49 = phi i1 [ true, %cond.true19 ], [ %25, %cond.false20 ]
  br i1 %cond.res49, label %cond.true16, label %cond.false17

cond.true22:                                      ; preds = %cond.end27
  br label %cond.end24

cond.false23:                                     ; preds = %cond.end27
  %26 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %27 = call i1 @parseFunDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %26, %Node* %res)
  br label %cond.end24

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond.res48 = phi i1 [ true, %cond.true22 ], [ %27, %cond.false23 ]
  br i1 %cond.res48, label %cond.true19, label %cond.false20

cond.true25:                                      ; preds = %cond.end30
  br label %cond.end27

cond.false26:                                     ; preds = %cond.end30
  %28 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %29 = call i1 @parseVarDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %28, %Node* %res)
  br label %cond.end27

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond.res47 = phi i1 [ true, %cond.true25 ], [ %29, %cond.false26 ]
  br i1 %cond.res47, label %cond.true22, label %cond.false23

cond.true28:                                      ; preds = %cond.end33
  br label %cond.end30

cond.false29:                                     ; preds = %cond.end33
  %30 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %31 = call i1 @parseConceptDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %30, %Node* %res)
  br label %cond.end30

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond.res46 = phi i1 [ true, %cond.true28 ], [ %31, %cond.false29 ]
  br i1 %cond.res46, label %cond.true25, label %cond.false26

cond.true31:                                      ; preds = %cond.end36
  br label %cond.end33

cond.false32:                                     ; preds = %cond.end36
  %32 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %33 = call i1 @parseDatatypeDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %32, %Node* %res)
  br label %cond.end33

cond.end33:                                       ; preds = %cond.false32, %cond.true31
  %cond.res45 = phi i1 [ true, %cond.true31 ], [ %33, %cond.false32 ]
  br i1 %cond.res45, label %cond.true28, label %cond.false29

cond.true34:                                      ; preds = %cond.end39
  br label %cond.end36

cond.false35:                                     ; preds = %cond.end39
  %34 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %35 = call i1 @parseClassDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %34, %Node* %res)
  br label %cond.end36

cond.end36:                                       ; preds = %cond.false35, %cond.true34
  %cond.res44 = phi i1 [ true, %cond.true34 ], [ %35, %cond.false35 ]
  br i1 %cond.res44, label %cond.true31, label %cond.false32

cond.true37:                                      ; preds = %cond.end42
  br label %cond.end39

cond.false38:                                     ; preds = %cond.end42
  %36 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %37 = call i1 @parsePackageDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %36, %Node* %res)
  br label %cond.end39

cond.end39:                                       ; preds = %cond.false38, %cond.true37
  %cond.res43 = phi i1 [ true, %cond.true37 ], [ %37, %cond.false38 ]
  br i1 %cond.res43, label %cond.true34, label %cond.false35

cond.true40:                                      ; preds = %code
  br label %cond.end42

cond.false41:                                     ; preds = %code
  %38 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %39 = call i1 @parseUsingDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %38, %Node* %res)
  br label %cond.end42

cond.end42:                                       ; preds = %cond.false41, %cond.true40
  %cond.res = phi i1 [ true, %cond.true40 ], [ %39, %cond.false41 ]
  br i1 %cond.res, label %cond.true37, label %cond.false38

if_block:                                         ; preds = %cond.end
  %40 = load %Node* %mods
  %41 = call i1 @isSet607(%Node %40)
  br i1 %41, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  br label %if_block57

if_end:                                           ; preds = %if_end59, %if_block
  %42 = load %Node** %_result.addr
  call void @ctor564(%Node* %42, %Node* %res)
  ret void

if_block57:                                       ; preds = %if_then
  %43 = load i1* %found
  br i1 %43, label %if_then58, label %if_else

if_then58:                                        ; preds = %if_block57
  %44 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC60", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %44)
  call void @span(%Location* %"$tmpC", %Location* %loc, %Location* %"$tmpC60")
  %45 = load %Node* %res
  %46 = load %Node* %mods
  %47 = call %Node @comp_parser_mkModifiers(%Location* %"$tmpC", %Node %45, %Node %46)
  store %Node %47, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef")
  br label %if_end59

if_else:                                          ; preds = %if_block57
  %48 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %49 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %50 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([26 x i8]* @str621, i32 0, i32 0), i8** %49
  store i8* getelementptr inbounds ([26 x i8]* @str621, i32 0, i32 25), i8** %50
  %51 = load %StringRef* %tmp.StringRef
  %52 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %53 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %52, i32 0, i32 0
  call void @"pre_*506"(%Token* %"$tmpC62", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %53)
  %54 = getelementptr inbounds %Token* %"$tmpC62", i32 0, i32 1
  %55 = load %TokenType* %54
  %56 = getelementptr inbounds %StringRef* %tmp.StringRef63, i32 0, i32 0
  %57 = getelementptr inbounds %StringRef* %tmp.StringRef63, i32 0, i32 1
  store i8* getelementptr inbounds ([22 x i8]* @str622, i32 0, i32 0), i8** %56
  store i8* getelementptr inbounds ([22 x i8]* @str622, i32 0, i32 21), i8** %57
  %58 = load %StringRef* %tmp.StringRef63
  call void @toString608(%String* %"$tmpC61", %StringRef %51, %TokenType %55, %StringRef %58)
  call void @reportError510(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %48, %String* %"$tmpC61")
  call void @dtor214(%String* %"$tmpC61")
  call void @dtor387(%Token* %"$tmpC62")
  br label %if_end59

if_end59:                                         ; preds = %if_else, %if_then58
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @consumeSemis(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 32)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseModifiers(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res = alloca %Node
  %tmp.v = alloca %TokenType
  %e = alloca %Node
  %"$tmpC" = alloca %Node
  %"$tmpForRef" = alloca %Node
  %tmp.v1 = alloca %TokenType
  %"$tmpC2" = alloca %Node
  %"$tmpForRef3" = alloca %Node
  %tmp.v4 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  call void @ctor568(%Node* %res)
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 27)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  call void @ctor568(%Node* %e)
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i1 true)
  call void @"=566"(%Node* %e, %Node* %"$tmpC")
  %5 = load %Node* %res
  %6 = load %Node* %e
  %7 = call %Node @comp_parser_addToNodeList(%Node %5, %Node %6)
  store %Node %7, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef")
  br label %while_block

if_end:                                           ; preds = %while_end, %if_block
  %8 = load %Node** %_result.addr
  call void @ctor564(%Node* %8, %Node* %res)
  ret void

while_block:                                      ; preds = %while_step, %if_then
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v1, i32 33)
  %10 = load %TokenType* %tmp.v1
  %11 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, %TokenType %10)
  br i1 %11, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC2", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i1 true)
  call void @"=566"(%Node* %e, %Node* %"$tmpC2")
  %13 = load %Node* %res
  %14 = load %Node* %e
  %15 = call %Node @comp_parser_addToNodeList(%Node %13, %Node %14)
  store %Node %15, %Node* %"$tmpForRef3"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef3")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %16 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v4, i32 28)
  %17 = load %TokenType* %tmp.v4
  %18 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %16, %TokenType %17)
  %19 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @consumeSemis(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %19)
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseExpr(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %withEqual) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %loc = alloca %Location
  %baseExpr = alloca %Node
  %op = alloca %String
  %"$tmpC" = alloca %String
  %rhs = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC4" = alloca %Location
  %"$tmpC5" = alloca %Location
  %"$tmpC6" = alloca %StringRef
  %"$tmpForRef7" = alloca %Node
  %"$tmpC8" = alloca %Location
  %"$tmpC9" = alloca %Location
  %"$tmpC10" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %3 = load i1* %withEqual.addr
  call void @parsePrefixExpr(%Node* %baseExpr, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, i1 %3)
  call void @ctor183(%String* %op)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  br i1 true, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %5 = load i1* %withEqual.addr
  call void @parseIdOrOperOpt(%String* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i1 %5)
  %6 = call %String* @"=245"(%String* %op, %String* %"$tmpC")
  call void @dtor214(%String* %"$tmpC")
  br label %if_block

while_step:                                       ; preds = %if_end3
  br label %while_block

while_end:                                        ; preds = %if_else, %if_then, %while_block
  %7 = load %Node** %_result.addr
  call void @ctor564(%Node* %7, %Node* %baseExpr)
  call void @dtor214(%String* %op)
  ret void

if_block:                                         ; preds = %while_body
  %8 = call i1 @isEmpty373(%String* %op)
  br i1 %8, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  br label %while_end

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %10 = load i1* %withEqual.addr
  %11 = call i1 @nextIsExpr(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 %10)
  br i1 %11, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %13 = load i1* %withEqual.addr
  call void @parsePrefixExpr(%Node* %rhs, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i1 %13)
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC5", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14)
  call void @span(%Location* %"$tmpC4", %Location* %loc, %Location* %"$tmpC5")
  %15 = load %Node* %baseExpr
  call void @asStringRef(%StringRef* %"$tmpC6", %String* %op)
  %16 = load %StringRef* %"$tmpC6"
  %17 = load %Node* %rhs
  %18 = call %Node @comp_parser_mkInfixOp(%Location* %"$tmpC4", %Node %15, %StringRef %16, %Node %17)
  store %Node %18, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %baseExpr, %Node* %"$tmpForRef")
  br label %if_end3

if_else:                                          ; preds = %if_block1
  %19 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC9", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %19)
  call void @span(%Location* %"$tmpC8", %Location* %loc, %Location* %"$tmpC9")
  %20 = load %Node* %baseExpr
  call void @asStringRef(%StringRef* %"$tmpC10", %String* %op)
  %21 = load %StringRef* %"$tmpC10"
  %22 = call %Node @comp_parser_mkPostfixOp(%Location* %"$tmpC8", %Node %20, %StringRef %21)
  store %Node %22, %Node* %"$tmpForRef7"
  call void @"=566"(%Node* %baseExpr, %Node* %"$tmpForRef7")
  br label %while_end

if_end3:                                          ; preds = %dumy_block11, %if_then2
  br label %while_step

dumy_block11:                                     ; No predecessors!
  br label %if_end3

dumy_block12:                                     ; No predecessors!
  call void @dtor214(%String* %op)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parsePrefixExpr(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %withEqual) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %loc = alloca %Location
  %op = alloca %String
  %tmp.v = alloca %TokenType
  %"$tmpC" = alloca %String
  %tmp.v1 = alloca %TokenType
  %"$tmpC2" = alloca %String
  %baseExpr = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC7" = alloca %Location
  %"$tmpC8" = alloca %Location
  %"$tmpC9" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  call void @ctor183(%String* %op)
  br label %if_block

if_block:                                         ; preds = %code
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 35)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  br i1 %4, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5)
  %6 = call %String* @"=245"(%String* %op, %String* %"$tmpC")
  call void @dtor214(%String* %"$tmpC")
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v1, i32 35)
  %8 = load %TokenType* %tmp.v1
  %9 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, %TokenType %8)
  br label %if_end

if_else:                                          ; preds = %if_block
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseOperOpt(%String* %"$tmpC2", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, i1 true)
  %11 = call %String* @"=245"(%String* %op, %String* %"$tmpC2")
  call void @dtor214(%String* %"$tmpC2")
  br label %if_end

if_end:                                           ; preds = %if_else, %if_then
  br label %if_block3

if_block3:                                        ; preds = %if_end
  %12 = call i1 @isEmpty373(%String* %op)
  br i1 %12, label %if_then4, label %if_else5

if_then4:                                         ; preds = %if_block3
  %13 = load %Node** %_result.addr
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseSimpleExpr(%Node* %13, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 true)
  call void @dtor214(%String* %op)
  ret void

if_else5:                                         ; preds = %if_block3
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parsePrefixExpr(%Node* %baseExpr, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, i1 true)
  %16 = load %Node** %_result.addr
  %17 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC8", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %17)
  call void @span(%Location* %"$tmpC7", %Location* %loc, %Location* %"$tmpC8")
  call void @asStringRef(%StringRef* %"$tmpC9", %String* %op)
  %18 = load %StringRef* %"$tmpC9"
  %19 = load %Node* %baseExpr
  %20 = call %Node @comp_parser_mkPrefixOp(%Location* %"$tmpC7", %StringRef %18, %Node %19)
  store %Node %20, %Node* %"$tmpForRef"
  call void @ctor564(%Node* %16, %Node* %"$tmpForRef")
  call void @dtor214(%String* %op)
  ret void

if_end6:                                          ; preds = %dumy_block10, %dumy_block
  call void @dtor214(%String* %op)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end6

dumy_block10:                                     ; No predecessors!
  br label %if_end6
}

; Function Attrs: inlinehint nounwind
define internal void @parseId(%String* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 37)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = load %String** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 2
  call void @ctor209(%String* %4, %String* %7)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseOperOpt(%String* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %withEqual) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %tmp.v = alloca %TokenType
  %tmp.v5 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 38)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %4 = load %String** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 2
  call void @ctor209(%String* %4, %String* %7)
  ret void

if_else:                                          ; preds = %if_block
  br label %if_block1

if_end:                                           ; preds = %cond_destruct_end13, %dumy_block
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_else
  %8 = load i1* %withEqual.addr
  br i1 %8, label %cond.true, label %cond.false

if_then2:                                         ; preds = %cond.end
  %9 = load %String** %_result.addr
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %11 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, i32 0, i32 1
  %12 = getelementptr inbounds %Token* %11, i32 0, i32 2
  call void @ctor209(%String* %9, %String* %12)
  br i1 %8, label %cond_destruct_alt1, label %cond_destruct_alt2

if_else3:                                         ; preds = %cond.end
  %13 = load %String** %_result.addr
  call void @ctor183(%String* %13)
  br i1 %8, label %cond_destruct_alt17, label %cond_destruct_alt28

if_end4:                                          ; preds = %dumy_block10, %dumy_block6
  br i1 %8, label %cond_destruct_alt111, label %cond_destruct_alt212

cond.true:                                        ; preds = %if_block1
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v5, i32 36)
  %15 = load %TokenType* %tmp.v5
  %16 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, %TokenType %15)
  br label %cond.end

cond.false:                                       ; preds = %if_block1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %16, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then2, label %if_else3

cond_destruct_alt1:                               ; preds = %if_then2
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_then2
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  ret void

dumy_block6:                                      ; No predecessors!
  br label %if_end4

cond_destruct_alt17:                              ; preds = %if_else3
  br label %cond_destruct_end9

cond_destruct_alt28:                              ; preds = %if_else3
  br label %cond_destruct_end9

cond_destruct_end9:                               ; preds = %cond_destruct_alt28, %cond_destruct_alt17
  ret void

dumy_block10:                                     ; No predecessors!
  br label %if_end4

cond_destruct_alt111:                             ; preds = %if_end4
  br label %cond_destruct_end13

cond_destruct_alt212:                             ; preds = %if_end4
  br label %cond_destruct_end13

cond_destruct_end13:                              ; preds = %cond_destruct_alt212, %cond_destruct_alt111
  br label %if_end
}

; Function Attrs: noinline nounwind
define void @parseSimpleExpr(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %withEqual) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %res = alloca %Node
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %tmp.v1 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v6 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC7" = alloca %Node
  %tmp.v8 = alloca %TokenType
  %tmp.v13 = alloca %TokenType
  %"$tmpForRef14" = alloca %Node
  %"$tmpC15" = alloca %StringRef
  %tmp.v20 = alloca %TokenType
  %"$tmpForRef21" = alloca %Node
  %tmp.v26 = alloca %TokenType
  %"$tmpForRef27" = alloca %Node
  %tmp.v32 = alloca %TokenType
  %"$tmpForRef33" = alloca %Node
  %tmp.v38 = alloca %TokenType
  %"$tmpForRef39" = alloca %Node
  %tmp.v40 = alloca i32
  %tmp.v45 = alloca %TokenType
  %"$tmpForRef46" = alloca %Node
  %tmp.v47 = alloca i32
  %tmp.v52 = alloca %TokenType
  %"$tmpForRef53" = alloca %Node
  %tmp.v54 = alloca i64
  %tmp.v59 = alloca %TokenType
  %"$tmpForRef60" = alloca %Node
  %tmp.v61 = alloca i64
  %tmp.v66 = alloca %TokenType
  %"$tmpForRef67" = alloca %Node
  %tmp.v68 = alloca float
  %tmp.v73 = alloca %TokenType
  %"$tmpForRef74" = alloca %Node
  %tmp.v75 = alloca double
  %tmp.v80 = alloca %TokenType
  %"$tmpForRef81" = alloca %Node
  %tmp.v85 = alloca %TokenType
  %"$tmpForRef86" = alloca %Node
  %"$tmpC87" = alloca %StringRef
  %"$tmpC91" = alloca %String
  %tmp.StringRef = alloca %StringRef
  %"$tmpC92" = alloca %Token
  %tmp.StringRef93 = alloca %StringRef
  %tmp.v98 = alloca %TokenType
  %args = alloca %Node
  %tmp.v99 = alloca %TokenType
  %"$tmpForRef100" = alloca %Node
  %"$tmpC101" = alloca %Location
  %"$tmpC102" = alloca %Location
  %tmp.v107 = alloca %TokenType
  %tmp.v112 = alloca %TokenType
  %tmp.v113 = alloca %TokenType
  %"$tmpForRef114" = alloca %Node
  %"$tmpC115" = alloca %Location
  %"$tmpC116" = alloca %Location
  %tmp.StringRef117 = alloca %StringRef
  %id = alloca %String
  %"$tmpForRef118" = alloca %Node
  %"$tmpC119" = alloca %Location
  %"$tmpC120" = alloca %Location
  %"$tmpC121" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  call void @ctor568(%Node* %res)
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  br label %if_block

if_block:                                         ; preds = %code
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 29)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  br i1 %4, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseLambdaExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5)
  call void @"=566"(%Node* %res, %Node* %"$tmpC")
  br label %if_end

if_else:                                          ; preds = %cond.end
  br label %if_block2

if_end:                                           ; preds = %if_end5, %if_then
  br i1 %4, label %cond_destruct_alt1, label %cond_destruct_alt2

cond.true:                                        ; preds = %if_block
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v1, i32 7)
  %7 = load %TokenType* %tmp.v1
  %8 = call i1 @next2Is(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %8, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_else

if_block2:                                        ; preds = %if_else
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v6, i32 29)
  %10 = load %TokenType* %tmp.v6
  %11 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, %TokenType %10)
  br i1 %11, label %if_then3, label %if_else4

if_then3:                                         ; preds = %if_block2
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC7", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i1 true)
  %13 = load %Node* %"$tmpC7"
  %14 = call %Node @comp_parser_mkParenthesisExpr(%Node %13)
  store %Node %14, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef")
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v8, i32 30)
  %16 = load %TokenType* %tmp.v8
  %17 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, %TokenType %16)
  br label %if_end5

if_else4:                                         ; preds = %if_block2
  br label %if_block9

if_end5:                                          ; preds = %if_end12, %if_then3
  br label %if_end

if_block9:                                        ; preds = %if_else4
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v13, i32 37)
  %19 = load %TokenType* %tmp.v13
  %20 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18, %TokenType %19)
  br i1 %20, label %if_then10, label %if_else11

if_then10:                                        ; preds = %if_block9
  %21 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %22 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %21, i32 0, i32 1
  %23 = getelementptr inbounds %Token* %22, i32 0, i32 0
  %24 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %25 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %24, i32 0, i32 1
  %26 = getelementptr inbounds %Token* %25, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC15", %String* %26)
  %27 = load %StringRef* %"$tmpC15"
  %28 = call %Node @comp_parser_mkIdentifier(%Location* %23, %StringRef %27)
  store %Node %28, %Node* %"$tmpForRef14"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef14")
  br label %if_end12

if_else11:                                        ; preds = %if_block9
  br label %if_block16

if_end12:                                         ; preds = %if_end19, %if_then10
  br label %if_end5

if_block16:                                       ; preds = %if_else11
  %29 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v20, i32 22)
  %30 = load %TokenType* %tmp.v20
  %31 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %29, %TokenType %30)
  br i1 %31, label %if_then17, label %if_else18

if_then17:                                        ; preds = %if_block16
  %32 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %33 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %32, i32 0, i32 1
  %34 = getelementptr inbounds %Token* %33, i32 0, i32 0
  %35 = call %Node @comp_parser_mkNullLiteral(%Location* %34)
  store %Node %35, %Node* %"$tmpForRef21"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef21")
  br label %if_end19

if_else18:                                        ; preds = %if_block16
  br label %if_block22

if_end19:                                         ; preds = %if_end25, %if_then17
  br label %if_end12

if_block22:                                       ; preds = %if_else18
  %36 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v26, i32 23)
  %37 = load %TokenType* %tmp.v26
  %38 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %36, %TokenType %37)
  br i1 %38, label %if_then23, label %if_else24

if_then23:                                        ; preds = %if_block22
  %39 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %40 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %39, i32 0, i32 1
  %41 = getelementptr inbounds %Token* %40, i32 0, i32 0
  %42 = call %Node @comp_parser_mkBoolLiteral(%Location* %41, i1 true)
  store %Node %42, %Node* %"$tmpForRef27"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef27")
  br label %if_end25

if_else24:                                        ; preds = %if_block22
  br label %if_block28

if_end25:                                         ; preds = %if_end31, %if_then23
  br label %if_end19

if_block28:                                       ; preds = %if_else24
  %43 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v32, i32 21)
  %44 = load %TokenType* %tmp.v32
  %45 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %43, %TokenType %44)
  br i1 %45, label %if_then29, label %if_else30

if_then29:                                        ; preds = %if_block28
  %46 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %47 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %46, i32 0, i32 1
  %48 = getelementptr inbounds %Token* %47, i32 0, i32 0
  %49 = call %Node @comp_parser_mkBoolLiteral(%Location* %48, i1 false)
  store %Node %49, %Node* %"$tmpForRef33"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef33")
  br label %if_end31

if_else30:                                        ; preds = %if_block28
  br label %if_block34

if_end31:                                         ; preds = %if_end37, %if_then29
  br label %if_end25

if_block34:                                       ; preds = %if_else30
  %50 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v38, i32 41)
  %51 = load %TokenType* %tmp.v38
  %52 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %50, %TokenType %51)
  br i1 %52, label %if_then35, label %if_else36

if_then35:                                        ; preds = %if_block34
  %53 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %54 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %53, i32 0, i32 1
  %55 = getelementptr inbounds %Token* %54, i32 0, i32 0
  %56 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %57 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %56, i32 0, i32 1
  %58 = getelementptr inbounds %Token* %57, i32 0, i32 3
  %59 = load i64* %58
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* %tmp.v40
  %61 = load i32* %tmp.v40
  %62 = call %Node @comp_parser_mkIntLiteral(%Location* %55, i32 %61)
  store %Node %62, %Node* %"$tmpForRef39"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef39")
  br label %if_end37

if_else36:                                        ; preds = %if_block34
  br label %if_block41

if_end37:                                         ; preds = %if_end44, %if_then35
  br label %if_end31

if_block41:                                       ; preds = %if_else36
  %63 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v45, i32 43)
  %64 = load %TokenType* %tmp.v45
  %65 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %63, %TokenType %64)
  br i1 %65, label %if_then42, label %if_else43

if_then42:                                        ; preds = %if_block41
  %66 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %67 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %66, i32 0, i32 1
  %68 = getelementptr inbounds %Token* %67, i32 0, i32 0
  %69 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %70 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %69, i32 0, i32 1
  %71 = getelementptr inbounds %Token* %70, i32 0, i32 3
  %72 = load i64* %71
  %73 = trunc i64 %72 to i32
  store i32 %73, i32* %tmp.v47
  %74 = load i32* %tmp.v47
  %75 = call %Node @comp_parser_mkUIntLiteral(%Location* %68, i32 %74)
  store %Node %75, %Node* %"$tmpForRef46"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef46")
  br label %if_end44

if_else43:                                        ; preds = %if_block41
  br label %if_block48

if_end44:                                         ; preds = %if_end51, %if_then42
  br label %if_end37

if_block48:                                       ; preds = %if_else43
  %76 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v52, i32 42)
  %77 = load %TokenType* %tmp.v52
  %78 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %76, %TokenType %77)
  br i1 %78, label %if_then49, label %if_else50

if_then49:                                        ; preds = %if_block48
  %79 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %80 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %79, i32 0, i32 1
  %81 = getelementptr inbounds %Token* %80, i32 0, i32 0
  %82 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %83 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %82, i32 0, i32 1
  %84 = getelementptr inbounds %Token* %83, i32 0, i32 3
  %85 = load i64* %84
  store i64 %85, i64* %tmp.v54
  %86 = load i64* %tmp.v54
  %87 = call %Node @comp_parser_mkLongLiteral(%Location* %81, i64 %86)
  store %Node %87, %Node* %"$tmpForRef53"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef53")
  br label %if_end51

if_else50:                                        ; preds = %if_block48
  br label %if_block55

if_end51:                                         ; preds = %if_end58, %if_then49
  br label %if_end44

if_block55:                                       ; preds = %if_else50
  %88 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v59, i32 44)
  %89 = load %TokenType* %tmp.v59
  %90 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %88, %TokenType %89)
  br i1 %90, label %if_then56, label %if_else57

if_then56:                                        ; preds = %if_block55
  %91 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %92 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %91, i32 0, i32 1
  %93 = getelementptr inbounds %Token* %92, i32 0, i32 0
  %94 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %95 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %94, i32 0, i32 1
  %96 = getelementptr inbounds %Token* %95, i32 0, i32 3
  %97 = load i64* %96
  store i64 %97, i64* %tmp.v61
  %98 = load i64* %tmp.v61
  %99 = call %Node @comp_parser_mkULongLiteral(%Location* %93, i64 %98)
  store %Node %99, %Node* %"$tmpForRef60"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef60")
  br label %if_end58

if_else57:                                        ; preds = %if_block55
  br label %if_block62

if_end58:                                         ; preds = %if_end65, %if_then56
  br label %if_end51

if_block62:                                       ; preds = %if_else57
  %100 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v66, i32 45)
  %101 = load %TokenType* %tmp.v66
  %102 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %100, %TokenType %101)
  br i1 %102, label %if_then63, label %if_else64

if_then63:                                        ; preds = %if_block62
  %103 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %104 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %103, i32 0, i32 1
  %105 = getelementptr inbounds %Token* %104, i32 0, i32 0
  %106 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %107 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %106, i32 0, i32 1
  %108 = getelementptr inbounds %Token* %107, i32 0, i32 4
  %109 = load double* %108
  %110 = fptrunc double %109 to float
  store float %110, float* %tmp.v68
  %111 = load float* %tmp.v68
  %112 = call %Node @comp_parser_mkFloatLiteral(%Location* %105, float %111)
  store %Node %112, %Node* %"$tmpForRef67"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef67")
  br label %if_end65

if_else64:                                        ; preds = %if_block62
  br label %if_block69

if_end65:                                         ; preds = %if_end72, %if_then63
  br label %if_end58

if_block69:                                       ; preds = %if_else64
  %113 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v73, i32 46)
  %114 = load %TokenType* %tmp.v73
  %115 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %113, %TokenType %114)
  br i1 %115, label %if_then70, label %if_else71

if_then70:                                        ; preds = %if_block69
  %116 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %117 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %116, i32 0, i32 1
  %118 = getelementptr inbounds %Token* %117, i32 0, i32 0
  %119 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %120 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %119, i32 0, i32 1
  %121 = getelementptr inbounds %Token* %120, i32 0, i32 4
  %122 = load double* %121
  store double %122, double* %tmp.v75
  %123 = load double* %tmp.v75
  %124 = call %Node @comp_parser_mkDoubleLiteral(%Location* %118, double %123)
  store %Node %124, %Node* %"$tmpForRef74"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef74")
  br label %if_end72

if_else71:                                        ; preds = %if_block69
  br label %if_block76

if_end72:                                         ; preds = %if_end79, %if_then70
  br label %if_end65

if_block76:                                       ; preds = %if_else71
  %125 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v80, i32 39)
  %126 = load %TokenType* %tmp.v80
  %127 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %125, %TokenType %126)
  br i1 %127, label %if_then77, label %if_else78

if_then77:                                        ; preds = %if_block76
  %128 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %129 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %128, i32 0, i32 1
  %130 = getelementptr inbounds %Token* %129, i32 0, i32 0
  %131 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %132 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %131, i32 0, i32 1
  %133 = getelementptr inbounds %Token* %132, i32 0, i32 2
  %134 = call i8* @"()492"(%String* %133, i64 0)
  %135 = load i8* %134
  %136 = call %Node @comp_parser_mkCharLiteral(%Location* %130, i8 %135)
  store %Node %136, %Node* %"$tmpForRef81"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef81")
  br label %if_end79

if_else78:                                        ; preds = %if_block76
  br label %if_block82

if_end79:                                         ; preds = %if_end84, %if_then77
  br label %if_end72

if_block82:                                       ; preds = %if_else78
  %137 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v85, i32 40)
  %138 = load %TokenType* %tmp.v85
  %139 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %137, %TokenType %138)
  br i1 %139, label %if_then83, label %if_end84

if_then83:                                        ; preds = %if_block82
  %140 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %141 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %140, i32 0, i32 1
  %142 = getelementptr inbounds %Token* %141, i32 0, i32 0
  %143 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %144 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %143, i32 0, i32 1
  %145 = getelementptr inbounds %Token* %144, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC87", %String* %145)
  %146 = load %StringRef* %"$tmpC87"
  %147 = call %Node @comp_parser_mkStringLiteral(%Location* %142, %StringRef %146)
  store %Node %147, %Node* %"$tmpForRef86"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef86")
  br label %if_end84

if_end84:                                         ; preds = %if_then83, %if_block82
  br label %if_end79

cond_destruct_alt1:                               ; preds = %if_end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  br label %if_block88

if_block88:                                       ; preds = %cond_destruct_end
  %148 = load %Node* %res
  %149 = call i1 @isNull(%Node %148)
  br i1 %149, label %if_then89, label %if_end90

if_then89:                                        ; preds = %if_block88
  %150 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %151 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %152 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([26 x i8]* @str611, i32 0, i32 0), i8** %151
  store i8* getelementptr inbounds ([26 x i8]* @str611, i32 0, i32 25), i8** %152
  %153 = load %StringRef* %tmp.StringRef
  %154 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %155 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %154, i32 0, i32 0
  call void @"pre_*506"(%Token* %"$tmpC92", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %155)
  %156 = getelementptr inbounds %Token* %"$tmpC92", i32 0, i32 1
  %157 = load %TokenType* %156
  %158 = getelementptr inbounds %StringRef* %tmp.StringRef93, i32 0, i32 0
  %159 = getelementptr inbounds %StringRef* %tmp.StringRef93, i32 0, i32 1
  store i8* getelementptr inbounds ([23 x i8]* @str612, i32 0, i32 0), i8** %158
  store i8* getelementptr inbounds ([23 x i8]* @str612, i32 0, i32 22), i8** %159
  %160 = load %StringRef* %tmp.StringRef93
  call void @toString608(%String* %"$tmpC91", %StringRef %153, %TokenType %157, %StringRef %160)
  call void @reportError510(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %150, %String* %"$tmpC91")
  call void @dtor214(%String* %"$tmpC91")
  call void @dtor387(%Token* %"$tmpC92")
  %161 = load %Node** %_result.addr
  call void @ctor568(%Node* %161)
  ret void

if_end90:                                         ; preds = %dumy_block, %if_block88
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end90

while_block:                                      ; preds = %while_step, %if_end90
  br i1 true, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block94

while_step:                                       ; preds = %if_end97
  br label %while_block

while_end:                                        ; preds = %if_else105, %while_block
  %162 = load %Node** %_result.addr
  call void @ctor564(%Node* %162, %Node* %res)
  ret void

if_block94:                                       ; preds = %while_body
  %163 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v98, i32 29)
  %164 = load %TokenType* %tmp.v98
  %165 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %163, %TokenType %164)
  br i1 %165, label %if_then95, label %if_else96

if_then95:                                        ; preds = %if_block94
  %166 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExprListOpt(%Node* %args, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %166)
  %167 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v99, i32 30)
  %168 = load %TokenType* %tmp.v99
  %169 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %167, %TokenType %168)
  %170 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC102", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %170)
  call void @span(%Location* %"$tmpC101", %Location* %loc, %Location* %"$tmpC102")
  %171 = load %Node* %res
  %172 = load %Node* %args
  %173 = call %Node @comp_parser_mkFunAppExpr(%Location* %"$tmpC101", %Node %171, %Node %172)
  store %Node %173, %Node* %"$tmpForRef100"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef100")
  br label %if_end97

if_else96:                                        ; preds = %if_block94
  br label %if_block103

if_end97:                                         ; preds = %if_end106, %if_then95
  br label %while_step

if_block103:                                      ; preds = %if_else96
  %174 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v107, i32 34)
  %175 = load %TokenType* %tmp.v107
  %176 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %174, %TokenType %175)
  br i1 %176, label %if_then104, label %if_else105

if_then104:                                       ; preds = %if_block103
  br label %if_block108

if_else105:                                       ; preds = %if_block103
  br label %while_end

if_end106:                                        ; preds = %dumy_block122, %if_end111
  br label %if_end97

if_block108:                                      ; preds = %if_then104
  %177 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v112, i32 29)
  %178 = load %TokenType* %tmp.v112
  %179 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %177, %TokenType %178)
  br i1 %179, label %if_then109, label %if_else110

if_then109:                                       ; preds = %if_block108
  %180 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v113, i32 30)
  %181 = load %TokenType* %tmp.v113
  %182 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %180, %TokenType %181)
  %183 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC116", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %183)
  call void @span(%Location* %"$tmpC115", %Location* %loc, %Location* %"$tmpC116")
  %184 = load %Node* %res
  %185 = getelementptr inbounds %StringRef* %tmp.StringRef117, i32 0, i32 0
  %186 = getelementptr inbounds %StringRef* %tmp.StringRef117, i32 0, i32 1
  store i8* getelementptr inbounds ([3 x i8]* @str613, i32 0, i32 0), i8** %185
  store i8* getelementptr inbounds ([3 x i8]* @str613, i32 0, i32 2), i8** %186
  %187 = load %StringRef* %tmp.StringRef117
  %188 = call %Node @comp_parser_mkDotExpr(%Location* %"$tmpC115", %Node %184, %StringRef %187)
  store %Node %188, %Node* %"$tmpForRef114"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef114")
  br label %if_end111

if_else110:                                       ; preds = %if_block108
  %189 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %190 = load i1* %withEqual.addr
  call void @parseIdOrOper(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %189, i1 %190)
  %191 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC120", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %191)
  call void @span(%Location* %"$tmpC119", %Location* %loc, %Location* %"$tmpC120")
  %192 = load %Node* %res
  call void @asStringRef(%StringRef* %"$tmpC121", %String* %id)
  %193 = load %StringRef* %"$tmpC121"
  %194 = call %Node @comp_parser_mkDotExpr(%Location* %"$tmpC119", %Node %192, %StringRef %193)
  store %Node %194, %Node* %"$tmpForRef118"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef118")
  call void @dtor214(%String* %id)
  br label %if_end111

if_end111:                                        ; preds = %if_else110, %if_then109
  br label %if_end106

dumy_block122:                                    ; No predecessors!
  br label %if_end106
}

; Function Attrs: inlinehint nounwind
define internal i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %TokenType %t) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %t.addr = alloca %TokenType
  store %TokenType %t, %TokenType* %t.addr
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @"pre_*506"(%Token* %"$tmpC", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2)
  %3 = getelementptr inbounds %Token* %"$tmpC", i32 0, i32 1
  %4 = call i1 @"==404"(%TokenType* %3, %TokenType* %t.addr)
  call void @dtor387(%Token* %"$tmpC")
  ret i1 %4

dumy_block:                                       ; No predecessors!
  call void @dtor387(%Token* %"$tmpC")
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal i1 @next2Is(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %TokenType %t) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %t.addr = alloca %TokenType
  store %TokenType %t, %TokenType* %t.addr
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @peek570(%Token* %"$tmpC", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2, i32 1)
  %3 = getelementptr inbounds %Token* %"$tmpC", i32 0, i32 1
  %4 = call i1 @"==404"(%TokenType* %3, %TokenType* %t.addr)
  call void @dtor387(%Token* %"$tmpC")
  ret i1 %4

dumy_block:                                       ; No predecessors!
  call void @dtor387(%Token* %"$tmpC")
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @peek570(%Token* sret %_result, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, i32 %n) #3 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %this.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %n.addr = alloca i32
  store i32 %n, i32* %n.addr
  %"$tmpC" = alloca %Token
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load i32* %n.addr
  %2 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %3 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2, i32 0, i32 1
  %4 = call i64 @size252(%"Vector[Token]"* %3)
  %5 = call i1 @">="(i32 %1, i64 %4)
  br i1 %5, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %6 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %7 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %6, i32 0, i32 1
  %8 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %8, i32 0, i32 0
  call void @"post_++464"(%Token* %"$tmpC", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %9)
  call void @"+=259"(%"Vector[Token]"* %7, %Token* %"$tmpC")
  call void @dtor387(%Token* %"$tmpC")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  br label %if_block

cond.true:                                        ; preds = %while_block
  %10 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %11 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %10, i32 0, i32 0
  %12 = call i1 @"pre_!!462"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %11)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %12, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end

if_block:                                         ; preds = %while_end
  %13 = load i32* %n.addr
  %14 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %15 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %14, i32 0, i32 1
  %16 = call i64 @size252(%"Vector[Token]"* %15)
  %17 = call i1 @"<282"(i32 %13, i64 %16)
  br i1 %17, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %18 = load %Token** %_result.addr
  %19 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %20 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %19, i32 0, i32 1
  %21 = load i32* %n.addr
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %tmp.v
  %23 = load i64* %tmp.v
  %24 = call %Token* @"()571"(%"Vector[Token]"* %20, i64 %23)
  call void @ctor262(%Token* %18, %Token* %24)
  ret void

if_else:                                          ; preds = %if_block
  %25 = load %Token** %_result.addr
  call void @ctor181(%Token* %25)
  ret void

if_end:                                           ; preds = %dumy_block1, %dumy_block
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block1:                                      ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal %Token* @"()571"(%"Vector[Token]"* %this, i64 %index) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 0
  %3 = load %"RawPtr[Token]"* %2
  %4 = load i64* %index.addr
  call void @advance255(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]" %3, i64 %4)
  %5 = load %"RawPtr[Token]"* %"$tmpC"
  %6 = call %Token* @value264(%"RawPtr[Token]" %5)
  ret %Token* %6
}

; Function Attrs: inlinehint nounwind
define internal void @parseLambdaExpr(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %tmp.v1 = alloca %TokenType
  %closureParams = alloca %Node
  %formals = alloca %Node
  %retType = alloca %Node
  %body = alloca %Node
  %bodyExp = alloca %Node
  %tmp.v2 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %"$tmpC3" = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC5" = alloca %Location
  %"$tmpC6" = alloca %Location
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 29)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v1, i32 7)
  %6 = load %TokenType* %tmp.v1
  %7 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %TokenType %6)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseClosureParams(%Node* %closureParams, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseFormalsOpt(%Node* %formals, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 false)
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseTypeNode(%Node* %retType, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10)
  call void @ctor568(%Node* %body)
  call void @ctor568(%Node* %bodyExp)
  br label %if_block

if_block:                                         ; preds = %code
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v2, i32 36)
  %12 = load %TokenType* %tmp.v2
  %13 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, %TokenType %12)
  br i1 %13, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 true)
  call void @"=566"(%Node* %bodyExp, %Node* %"$tmpC")
  br label %if_end

if_else:                                          ; preds = %if_block
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseFunBody(%Node* %"$tmpC3", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15)
  call void @"=566"(%Node* %body, %Node* %"$tmpC3")
  br label %if_end

if_end:                                           ; preds = %if_else, %if_then
  %16 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v4, i32 30)
  %17 = load %TokenType* %tmp.v4
  %18 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %16, %TokenType %17)
  %19 = load %Node** %_result.addr
  %20 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC6", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %20)
  call void @span(%Location* %"$tmpC5", %Location* %loc, %Location* %"$tmpC6")
  %21 = load %Node* %closureParams
  %22 = load %Node* %formals
  %23 = load %Node* %retType
  %24 = load %Node* %body
  %25 = load %Node* %bodyExp
  %26 = call %Node @comp_parser_mkLambdaExpr(%Location* %"$tmpC5", %Node %21, %Node %22, %Node %23, %Node %24, %Node %25)
  store %Node %26, %Node* %"$tmpForRef"
  call void @ctor564(%Node* %19, %Node* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseClosureParams(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res = alloca %Node
  %tmp.v = alloca %TokenType
  %tmp.v1 = alloca %TokenType
  %tmp.v5 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v6 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  call void @ctor568(%Node* %res)
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 34)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v1, i32 25)
  %5 = load %TokenType* %tmp.v1
  %6 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, %TokenType %5)
  br label %if_block2

if_end:                                           ; preds = %if_end4, %if_block
  %7 = load %Node** %_result.addr
  call void @ctor564(%Node* %7, %Node* %res)
  ret void

if_block2:                                        ; preds = %if_then
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v5, i32 37)
  %9 = load %TokenType* %tmp.v5
  %10 = call i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %TokenType %9)
  br i1 %10, label %if_then3, label %if_end4

if_then3:                                         ; preds = %if_block2
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdListNode(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11)
  call void @"=566"(%Node* %res, %Node* %"$tmpC")
  br label %if_end4

if_end4:                                          ; preds = %if_then3, %if_block2
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v6, i32 26)
  %13 = load %TokenType* %tmp.v6
  %14 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, %TokenType %13)
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseIdListNode(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res = alloca %Node
  %id = alloca %String
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %tmp.v = alloca %TokenType
  %"$tmpC1" = alloca %String
  %"$tmpForRef2" = alloca %Node
  %"$tmpC3" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  call void @ctor568(%Node* %res)
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %Node* %res
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %Token* %4, i32 0, i32 0
  call void @asStringRef(%StringRef* %"$tmpC", %String* %id)
  %6 = load %StringRef* %"$tmpC"
  %7 = call %Node @comp_parser_mkIdentifier(%Location* %5, %StringRef %6)
  %8 = call %Node @comp_parser_addToNodeList(%Node %2, %Node %7)
  store %Node %8, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef")
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 33)
  %10 = load %TokenType* %tmp.v
  %11 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, %TokenType %10)
  br i1 %11, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %"$tmpC1", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12)
  %13 = call %String* @"=245"(%String* %id, %String* %"$tmpC1")
  call void @dtor214(%String* %"$tmpC1")
  %14 = load %Node* %res
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %16 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, i32 0, i32 1
  %17 = getelementptr inbounds %Token* %16, i32 0, i32 0
  call void @asStringRef(%StringRef* %"$tmpC3", %String* %id)
  %18 = load %StringRef* %"$tmpC3"
  %19 = call %Node @comp_parser_mkIdentifier(%Location* %17, %StringRef %18)
  %20 = call %Node @comp_parser_addToNodeList(%Node %14, %Node %19)
  store %Node %20, %Node* %"$tmpForRef2"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef2")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %21 = load %Node** %_result.addr
  call void @ctor564(%Node* %21, %Node* %res)
  call void @dtor214(%String* %id)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor214(%String* %id)
  ret void
}

declare %Node @comp_parser_addToNodeList(%Node, %Node)

; Function Attrs: inlinehint nounwind
define internal void @parseFormalsOpt(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %varFormals) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %varFormals.addr = alloca i1
  store i1 %varFormals, i1* %varFormals.addr
  %res = alloca %Node
  %tmp.v = alloca %TokenType
  %tmp.v4 = alloca %TokenType
  %tmp.v5 = alloca %TokenType
  %tmp.v6 = alloca %TokenType
  %tmp.v10 = alloca %TokenType
  %loc = alloca %Location
  %ids = alloca %"Vector[LocString]"
  %"$tmpC" = alloca %Location
  %"$tmpC11" = alloca %Location
  %tmp.StringRef = alloca %StringRef
  %tmp.v12 = alloca %Node
  br label %code

code:                                             ; preds = %0
  call void @ctor568(%Node* %res)
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 29)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  br label %if_block1

if_else:                                          ; preds = %if_block
  br label %if_block7

if_end:                                           ; preds = %if_end9, %while_end
  %4 = load %Node** %_result.addr
  call void @ctor564(%Node* %4, %Node* %res)
  ret void

if_block1:                                        ; preds = %if_then
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v4, i32 30)
  %6 = load %TokenType* %tmp.v4
  %7 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %TokenType %6)
  br i1 %7, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  %8 = load %Node** %_result.addr
  call void @ctor564(%Node* %8, %Node* %res)
  ret void

if_end3:                                          ; preds = %dumy_block, %if_block1
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %10 = load i1* %varFormals.addr
  call void @parseFormal(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 %10, %Node* %res)
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end3

while_block:                                      ; preds = %while_step, %if_end3
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v5, i32 33)
  %12 = load %TokenType* %tmp.v5
  %13 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, %TokenType %12)
  br i1 %13, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %15 = load i1* %varFormals.addr
  call void @parseFormal(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 %15, %Node* %res)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %16 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v6, i32 30)
  %17 = load %TokenType* %tmp.v6
  %18 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %16, %TokenType %17)
  br label %if_end

if_block7:                                        ; preds = %if_else
  %19 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v10, i32 37)
  %20 = load %TokenType* %tmp.v10
  %21 = call i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %19, %TokenType %20)
  br i1 %21, label %if_then8, label %if_end9

if_then8:                                         ; preds = %if_block7
  %22 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %22)
  %23 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdList(%"Vector[LocString]"* %ids, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %23)
  %24 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC11", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %24)
  call void @span(%Location* %"$tmpC", %Location* %loc, %Location* %"$tmpC11")
  %25 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %26 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8]* @str606, i32 0, i32 0), i8** %25
  store i8* getelementptr inbounds ([8 x i8]* @str606, i32 0, i32 7), i8** %26
  %27 = load %StringRef* %tmp.StringRef
  %28 = call %Node @comp_parser_mkIdentifier(%Location* %"$tmpC", %StringRef %27)
  call void @ctor568(%Node* %tmp.v12)
  %29 = load %Node* %tmp.v12
  %30 = load i1* %varFormals.addr
  call void @createFormals(%"Vector[LocString]"* %ids, %Node %28, %Node %29, i1 %30, %Node* %res)
  call void @dtor598(%"Vector[LocString]"* %ids)
  br label %if_end9

if_end9:                                          ; preds = %if_then8, %if_block7
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseFormal(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %varFormals, %Node* %res) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %varFormals.addr = alloca i1
  store i1 %varFormals, i1* %varFormals.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %ids = alloca %"Vector[LocString]"
  %tmp.v = alloca %TokenType
  %typeNode = alloca %Node
  %init = alloca %Node
  %tmp.v1 = alloca %TokenType
  %"$tmpC" = alloca %Node
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdList(%"Vector[LocString]"* %ids, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 31)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %typeNode, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i1 false)
  call void @ctor568(%Node* %init)
  br label %if_block

if_block:                                         ; preds = %code
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v1, i32 36)
  %7 = load %TokenType* %tmp.v1
  %8 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  br i1 %8, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 true)
  call void @"=566"(%Node* %init, %Node* %"$tmpC")
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  %10 = load %Node* %typeNode
  %11 = load %Node* %init
  %12 = load i1* %varFormals.addr
  %13 = load %Node** %res.addr
  call void @createFormals(%"Vector[LocString]"* %ids, %Node %10, %Node %11, i1 %12, %Node* %13)
  call void @dtor598(%"Vector[LocString]"* %ids)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseIdList(%"Vector[LocString]"* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %_result, %"Vector[LocString]"** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res = alloca %"Vector[LocString]"
  %id = alloca %String
  %tmp.v = alloca %LocString
  %"$tmpC" = alloca %"Tuple[Location/rtct, String/rtct]"
  %tmp.v1 = alloca %TokenType
  %"$tmpC2" = alloca %String
  %tmp.v3 = alloca %LocString
  %"$tmpC4" = alloca %"Tuple[Location/rtct, String/rtct]"
  br label %code

code:                                             ; preds = %0
  call void @ctor572(%"Vector[LocString]"* %res)
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %3 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, i32 0, i32 1
  %4 = getelementptr inbounds %Token* %3, i32 0, i32 0
  %5 = load %Location* %4
  %6 = load %String* %id
  call void @"~"(%"Tuple[Location/rtct, String/rtct]"* %"$tmpC", %Location %5, %String %6)
  %7 = load %"Tuple[Location/rtct, String/rtct]"* %"$tmpC"
  call void @ctor590(%LocString* %tmp.v, %"Tuple[Location/rtct, String/rtct]" %7)
  call void @"+=574"(%"Vector[LocString]"* %res, %LocString* %tmp.v)
  call void @dtor592(%LocString* %tmp.v)
  call void @dtor593(%"Tuple[Location/rtct, String/rtct]"* %"$tmpC")
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v1, i32 33)
  %9 = load %TokenType* %tmp.v1
  %10 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %TokenType %9)
  br i1 %10, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %"$tmpC2", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11)
  %12 = call %String* @"=245"(%String* %id, %String* %"$tmpC2")
  call void @dtor214(%String* %"$tmpC2")
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %14 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, i32 0, i32 1
  %15 = getelementptr inbounds %Token* %14, i32 0, i32 0
  %16 = load %Location* %15
  %17 = load %String* %id
  call void @"~"(%"Tuple[Location/rtct, String/rtct]"* %"$tmpC4", %Location %16, %String %17)
  %18 = load %"Tuple[Location/rtct, String/rtct]"* %"$tmpC4"
  call void @ctor590(%LocString* %tmp.v3, %"Tuple[Location/rtct, String/rtct]" %18)
  call void @"+=574"(%"Vector[LocString]"* %res, %LocString* %tmp.v3)
  call void @dtor592(%LocString* %tmp.v3)
  call void @dtor593(%"Tuple[Location/rtct, String/rtct]"* %"$tmpC4")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %19 = load %"Vector[LocString]"** %_result.addr
  call void @ctor594(%"Vector[LocString]"* %19, %"Vector[LocString]"* %res)
  call void @dtor214(%String* %id)
  call void @dtor598(%"Vector[LocString]"* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor214(%String* %id)
  call void @dtor598(%"Vector[LocString]"* %res)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor572(%"Vector[LocString]"* %this) #2 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %this.addr
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 0
  call void @ctor573(%"RawPtr[LocString]"* %2)
  %3 = load %"Vector[LocString]"** %this.addr
  %4 = getelementptr inbounds %"Vector[LocString]"* %3, i32 0, i32 1
  call void @ctor573(%"RawPtr[LocString]"* %4)
  %5 = load %"Vector[LocString]"** %this.addr
  %6 = getelementptr inbounds %"Vector[LocString]"* %5, i32 0, i32 2
  call void @ctor573(%"RawPtr[LocString]"* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor573(%"RawPtr[LocString]"* %this) #3 {
  %this.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %this, %"RawPtr[LocString]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[LocString]"* %1, i32 0, i32 0
  store %LocString* null, %LocString** %2
  %3 = load %"RawPtr[LocString]"** %this.addr
  %4 = getelementptr inbounds %"RawPtr[LocString]"* %3, i32 0, i32 0
  store %LocString* null, %LocString** %4
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"+=574"(%"Vector[LocString]"* %this, %LocString* %value) #3 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %value.addr = alloca %LocString*
  store %LocString* %value, %LocString** %value.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %this.addr
  %2 = load %LocString** %value.addr
  call void @pushBack575(%"Vector[LocString]"* %1, %LocString* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @pushBack575(%"Vector[LocString]"* %this, %LocString* %value) #3 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %value.addr = alloca %LocString*
  store %LocString* %value, %LocString** %value.addr
  %t = alloca i64
  %"$tmpC" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[LocString]"** %this.addr
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 1
  %3 = load %"Vector[LocString]"** %this.addr
  %4 = getelementptr inbounds %"Vector[LocString]"* %3, i32 0, i32 2
  %5 = load %"RawPtr[LocString]"* %4
  %6 = call i1 @"==576"(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]" %5)
  br i1 %6, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %7 = load %"Vector[LocString]"** %this.addr
  %8 = call i64 @capacity577(%"Vector[LocString]"* %7)
  %9 = call i64 @"*230"(i32 2, i64 %8)
  store i64 %9, i64* %t
  br label %if_block1

if_end:                                           ; preds = %if_end3, %if_block
  %10 = load %"Vector[LocString]"** %this.addr
  %11 = getelementptr inbounds %"Vector[LocString]"* %10, i32 0, i32 1
  %12 = load %"RawPtr[LocString]"* %11
  %13 = call %LocString* @value588(%"RawPtr[LocString]" %12)
  %14 = load %LocString** %value.addr
  call void @ctor586(%LocString* %13, %LocString* %14)
  %15 = load %"Vector[LocString]"** %this.addr
  %16 = getelementptr inbounds %"Vector[LocString]"* %15, i32 0, i32 1
  %17 = load %"Vector[LocString]"** %this.addr
  %18 = getelementptr inbounds %"Vector[LocString]"* %17, i32 0, i32 1
  %19 = load %"RawPtr[LocString]"* %18
  call void @advance589(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]" %19)
  %20 = load %"RawPtr[LocString]"* %"$tmpC"
  call void @"=583"(%"RawPtr[LocString]"* %16, %"RawPtr[LocString]" %20)
  ret void

if_block1:                                        ; preds = %if_then
  %21 = load i64* %t
  %22 = call i1 @"<229"(i64 %21, i32 2)
  br i1 %22, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 2, i64* %t
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %23 = load %"Vector[LocString]"** %this.addr
  %24 = load i64* %t
  call void @reserve580(%"Vector[LocString]"* %23, i64 %24)
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==576"(%"RawPtr[LocString]"* %this, %"RawPtr[LocString]" %other) #3 {
  %this.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %this, %"RawPtr[LocString]"** %this.addr
  %other.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %other, %"RawPtr[LocString]"* %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[LocString]"* %1, i32 0, i32 0
  %3 = load %LocString** %2
  %4 = bitcast %LocString* %3 to i8*
  %5 = getelementptr inbounds %"RawPtr[LocString]"* %other.addr, i32 0, i32 0
  %6 = load %LocString** %5
  %7 = bitcast %LocString* %6 to i8*
  %8 = call i1 @implOpRefEQ(i8* %4, i8* %7)
  ret i1 %8
}

; Function Attrs: inlinehint nounwind
define internal i64 @capacity577(%"Vector[LocString]"* %this) #3 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %this.addr
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 2
  %3 = load %"RawPtr[LocString]"* %2
  %4 = load %"Vector[LocString]"** %this.addr
  %5 = getelementptr inbounds %"Vector[LocString]"* %4, i32 0, i32 0
  %6 = load %"RawPtr[LocString]"* %5
  %7 = call i64 @diff578(%"RawPtr[LocString]" %3, %"RawPtr[LocString]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal i64 @diff578(%"RawPtr[LocString]" %this, %"RawPtr[LocString]" %other) #3 {
  %this.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %this, %"RawPtr[LocString]"* %this.addr
  %other.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %other, %"RawPtr[LocString]"* %other.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"* %this.addr
  %2 = call i8* @bytePtr579(%"RawPtr[LocString]" %1)
  %3 = load %"RawPtr[LocString]"* %other.addr
  %4 = call i8* @bytePtr579(%"RawPtr[LocString]" %3)
  %5 = call i64 @ptrDiff(i8* %2, i8* %4)
  store i64 48, i64* %tmp.v1
  %6 = load i64* %tmp.v1
  %7 = call i64 @"/198"(i64 %5, i64 %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal i8* @bytePtr579(%"RawPtr[LocString]" %this) #3 {
  %this.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %this, %"RawPtr[LocString]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[LocString]"* %this.addr, i32 0, i32 0
  %2 = load %LocString** %1
  %3 = bitcast %LocString* %2 to i8*
  ret i8* %3
}

; Function Attrs: inlinehint nounwind
define internal void @reserve580(%"Vector[LocString]"* %this, i64 %n) #3 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %curCapacity = alloca i64
  %tmp.v = alloca i64
  %curSize = alloca i64
  %"$tmpC" = alloca %"RawPtr[LocString]"
  %"$tmpC7" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %this.addr
  %2 = call i64 @capacity577(%"Vector[LocString]"* %1)
  store i64 %2, i64* %curCapacity
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64* %n.addr
  %4 = load i64* %curCapacity
  %5 = call i1 @"<="(i64 %3, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64* %n.addr
  %7 = call i1 @"<229"(i64 %6, i32 8)
  br i1 %7, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 8, i64* %n.addr
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  br label %if_block4

if_block4:                                        ; preds = %if_end3
  %8 = load i64* %n.addr
  %9 = load i64* %curCapacity
  %10 = call double @"*203"(double 2.000000e+00, i64 %9)
  %11 = call i1 @"<200"(i64 %8, double %10)
  br i1 %11, label %if_then5, label %if_end6

if_then5:                                         ; preds = %if_block4
  %12 = load i64* %curCapacity
  %13 = call double @"*203"(double 2.000000e+00, i64 %12)
  %14 = fptoui double %13 to i64
  store i64 %14, i64* %tmp.v
  %15 = load i64* %tmp.v
  store i64 %15, i64* %n.addr
  br label %if_end6

if_end6:                                          ; preds = %if_then5, %if_block4
  %16 = load %"Vector[LocString]"** %this.addr
  %17 = call i64 @size581(%"Vector[LocString]"* %16)
  store i64 %17, i64* %curSize
  %18 = load %"Vector[LocString]"** %this.addr
  %19 = getelementptr inbounds %"Vector[LocString]"* %18, i32 0, i32 0
  %20 = load i64* %n.addr
  call void @reallocPtr582(%"RawPtr[LocString]"* %19, i64 %20)
  %21 = load %"Vector[LocString]"** %this.addr
  %22 = getelementptr inbounds %"Vector[LocString]"* %21, i32 0, i32 1
  %23 = load %"Vector[LocString]"** %this.addr
  %24 = getelementptr inbounds %"Vector[LocString]"* %23, i32 0, i32 0
  %25 = load %"RawPtr[LocString]"* %24
  %26 = load i64* %curSize
  call void @advance584(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]" %25, i64 %26)
  %27 = load %"RawPtr[LocString]"* %"$tmpC"
  call void @"=583"(%"RawPtr[LocString]"* %22, %"RawPtr[LocString]" %27)
  %28 = load %"Vector[LocString]"** %this.addr
  %29 = getelementptr inbounds %"Vector[LocString]"* %28, i32 0, i32 2
  %30 = load %"Vector[LocString]"** %this.addr
  %31 = getelementptr inbounds %"Vector[LocString]"* %30, i32 0, i32 0
  %32 = load %"RawPtr[LocString]"* %31
  %33 = load i64* %n.addr
  call void @advance584(%"RawPtr[LocString]"* %"$tmpC7", %"RawPtr[LocString]" %32, i64 %33)
  %34 = load %"RawPtr[LocString]"* %"$tmpC7"
  call void @"=583"(%"RawPtr[LocString]"* %29, %"RawPtr[LocString]" %34)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i64 @size581(%"Vector[LocString]"* %this) #3 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %this.addr
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 1
  %3 = load %"RawPtr[LocString]"* %2
  %4 = load %"Vector[LocString]"** %this.addr
  %5 = getelementptr inbounds %"Vector[LocString]"* %4, i32 0, i32 0
  %6 = load %"RawPtr[LocString]"* %5
  %7 = call i64 @diff578(%"RawPtr[LocString]" %3, %"RawPtr[LocString]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal void @reallocPtr582(%"RawPtr[LocString]"* %this, i64 %n) #3 {
  %this.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %this, %"RawPtr[LocString]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %this.addr
  %2 = load %"RawPtr[LocString]"* %1
  %3 = call i8* @bytePtr579(%"RawPtr[LocString]" %2)
  %4 = load i64* %n.addr
  %5 = call i64 @"*"(i64 %4, i64 48)
  %6 = call i8* @realloc(i8* %3, i64 %5)
  %7 = bitcast i8* %6 to %LocString*
  %8 = load %"RawPtr[LocString]"** %this.addr
  %9 = getelementptr inbounds %"RawPtr[LocString]"* %8, i32 0, i32 0
  store %LocString* %7, %LocString** %9
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=583"(%"RawPtr[LocString]"* %this, %"RawPtr[LocString]" %other) #2 {
  %this.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %this, %"RawPtr[LocString]"** %this.addr
  %other.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %other, %"RawPtr[LocString]"* %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[LocString]"* %other.addr, i32 0, i32 0
  %2 = load %LocString** %1
  %3 = load %"RawPtr[LocString]"** %this.addr
  %4 = getelementptr inbounds %"RawPtr[LocString]"* %3, i32 0, i32 0
  store %LocString* %2, %LocString** %4
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advance584(%"RawPtr[LocString]"* sret %_result, %"RawPtr[LocString]" %this, i64 %n) #3 {
  %_result.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %_result, %"RawPtr[LocString]"** %_result.addr
  %this.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %this, %"RawPtr[LocString]"* %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %_result.addr
  %2 = load %"RawPtr[LocString]"* %this.addr
  %3 = call i8* @bytePtr579(%"RawPtr[LocString]" %2)
  %4 = load i64* %n.addr
  %5 = call i64 @"*"(i64 %4, i64 48)
  %6 = call i8* @ptrAdd(i8* %3, i64 %5)
  call void @ctor585(%"RawPtr[LocString]"* %1, i8* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor585(%"RawPtr[LocString]"* %this, i8* %byteRef) #3 {
  %this.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %this, %"RawPtr[LocString]"** %this.addr
  %byteRef.addr = alloca i8*
  store i8* %byteRef, i8** %byteRef.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %byteRef.addr
  %2 = bitcast i8* %1 to %LocString*
  %3 = load %"RawPtr[LocString]"** %this.addr
  %4 = getelementptr inbounds %"RawPtr[LocString]"* %3, i32 0, i32 0
  store %LocString* %2, %LocString** %4
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor586(%LocString* %this, %LocString* %other) #2 {
  %this.addr = alloca %LocString*
  store %LocString* %this, %LocString** %this.addr
  %other.addr = alloca %LocString*
  store %LocString* %other, %LocString** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LocString** %this.addr
  %2 = getelementptr inbounds %LocString* %1, i32 0, i32 0
  %3 = load %LocString** %other.addr
  %4 = getelementptr inbounds %LocString* %3, i32 0, i32 0
  call void @ctor587(%"Tuple[Location/rtct, String/rtct]"* %2, %"Tuple[Location/rtct, String/rtct]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor587(%"Tuple[Location/rtct, String/rtct]"* %this, %"Tuple[Location/rtct, String/rtct]"* %other) #2 {
  %this.addr = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %this, %"Tuple[Location/rtct, String/rtct]"** %this.addr
  %other.addr = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %other, %"Tuple[Location/rtct, String/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location/rtct, String/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %1, i32 0, i32 0
  %3 = load %"Tuple[Location/rtct, String/rtct]"** %other.addr
  %4 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %3, i32 0, i32 0
  call void @ctor217(%Location* %2, %Location* %4)
  %5 = load %"Tuple[Location/rtct, String/rtct]"** %this.addr
  %6 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %5, i32 0, i32 1
  %7 = load %"Tuple[Location/rtct, String/rtct]"** %other.addr
  %8 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %7, i32 0, i32 1
  call void @ctor209(%String* %6, %String* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %LocString* @value588(%"RawPtr[LocString]" %this) #3 {
  %this.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %this, %"RawPtr[LocString]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[LocString]"* %this.addr, i32 0, i32 0
  %2 = load %LocString** %1
  ret %LocString* %2
}

; Function Attrs: inlinehint nounwind
define internal void @advance589(%"RawPtr[LocString]"* sret %_result, %"RawPtr[LocString]" %this) #3 {
  %_result.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %_result, %"RawPtr[LocString]"** %_result.addr
  %this.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %this, %"RawPtr[LocString]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %_result.addr
  %2 = load %"RawPtr[LocString]"* %this.addr
  %3 = call i8* @bytePtr579(%"RawPtr[LocString]" %2)
  %4 = call i8* @ptrAdd(i8* %3, i64 48)
  call void @ctor585(%"RawPtr[LocString]"* %1, i8* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor590(%LocString* %this, %"Tuple[Location/rtct, String/rtct]" %fdata) #2 {
  %this.addr = alloca %LocString*
  store %LocString* %this, %LocString** %this.addr
  %fdata.addr = alloca %"Tuple[Location/rtct, String/rtct]"
  store %"Tuple[Location/rtct, String/rtct]" %fdata, %"Tuple[Location/rtct, String/rtct]"* %fdata.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LocString** %this.addr
  %2 = getelementptr inbounds %LocString* %1, i32 0, i32 0
  call void @ctor587(%"Tuple[Location/rtct, String/rtct]"* %2, %"Tuple[Location/rtct, String/rtct]"* %fdata.addr)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"~"(%"Tuple[Location/rtct, String/rtct]"* sret %_result, %Location %v1, %String %v2) #3 {
  %_result.addr = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %_result, %"Tuple[Location/rtct, String/rtct]"** %_result.addr
  %v1.addr = alloca %Location
  store %Location %v1, %Location* %v1.addr
  %v2.addr = alloca %String
  store %String %v2, %String* %v2.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location/rtct, String/rtct]"** %_result.addr
  %2 = load %Location* %v1.addr
  %3 = load %String* %v2.addr
  call void @mkTuple(%"Tuple[Location/rtct, String/rtct]"* %1, %Location %2, %String %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @mkTuple(%"Tuple[Location/rtct, String/rtct]"* sret %_result, %Location %v1, %String %v2) #3 {
  %_result.addr = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %_result, %"Tuple[Location/rtct, String/rtct]"** %_result.addr
  %v1.addr = alloca %Location
  store %Location %v1, %Location* %v1.addr
  %v2.addr = alloca %String
  store %String %v2, %String* %v2.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location/rtct, String/rtct]"** %_result.addr
  %2 = load %Location* %v1.addr
  %3 = load %String* %v2.addr
  call void @ctor591(%"Tuple[Location/rtct, String/rtct]"* %1, %Location %2, %String %3)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor591(%"Tuple[Location/rtct, String/rtct]"* %this, %Location %fv1, %String %fv2) #2 {
  %this.addr = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %this, %"Tuple[Location/rtct, String/rtct]"** %this.addr
  %fv1.addr = alloca %Location
  store %Location %fv1, %Location* %fv1.addr
  %fv2.addr = alloca %String
  store %String %fv2, %String* %fv2.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location/rtct, String/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %1, i32 0, i32 0
  call void @ctor217(%Location* %2, %Location* %fv1.addr)
  %3 = load %"Tuple[Location/rtct, String/rtct]"** %this.addr
  %4 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %3, i32 0, i32 1
  call void @ctor209(%String* %4, %String* %fv2.addr)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor592(%LocString* %dest) #2 {
  %dest.addr = alloca %LocString*
  store %LocString* %dest, %LocString** %dest.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LocString** %dest.addr
  %2 = getelementptr inbounds %LocString* %1, i32 0, i32 0
  call void @dtor593(%"Tuple[Location/rtct, String/rtct]"* %2)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor593(%"Tuple[Location/rtct, String/rtct]"* %dest) #2 {
  %dest.addr = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %dest, %"Tuple[Location/rtct, String/rtct]"** %dest.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location/rtct, String/rtct]"** %dest.addr
  %2 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %1, i32 0, i32 1
  call void @dtor214(%String* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor594(%"Vector[LocString]"* %this, %"Vector[LocString]"* %other) #3 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %other.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %other, %"Vector[LocString]"** %other.addr
  %size = alloca i64
  %"$tmpC" = alloca %"RawPtr[LocString]"
  %"$tmpC1" = alloca %"RawPtr[LocString]"
  %dst = alloca %"RawPtr[LocString]"
  %src = alloca %"RawPtr[LocString]"
  %"$tmpC2" = alloca %"RawPtr[LocString]"
  %"$tmpC3" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %this.addr
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 0
  call void @ctor573(%"RawPtr[LocString]"* %2)
  %3 = load %"Vector[LocString]"** %this.addr
  %4 = getelementptr inbounds %"Vector[LocString]"* %3, i32 0, i32 1
  call void @ctor573(%"RawPtr[LocString]"* %4)
  %5 = load %"Vector[LocString]"** %this.addr
  %6 = getelementptr inbounds %"Vector[LocString]"* %5, i32 0, i32 2
  call void @ctor573(%"RawPtr[LocString]"* %6)
  %7 = load %"Vector[LocString]"** %other.addr
  %8 = call i64 @size581(%"Vector[LocString]"* %7)
  store i64 %8, i64* %size
  %9 = load %"Vector[LocString]"** %this.addr
  %10 = getelementptr inbounds %"Vector[LocString]"* %9, i32 0, i32 0
  %11 = load i64* %size
  call void @allocRawPtr595(%"RawPtr[LocString]"* %"$tmpC", i64 %11)
  %12 = load %"RawPtr[LocString]"* %"$tmpC"
  call void @"=583"(%"RawPtr[LocString]"* %10, %"RawPtr[LocString]" %12)
  %13 = load %"Vector[LocString]"** %this.addr
  %14 = getelementptr inbounds %"Vector[LocString]"* %13, i32 0, i32 1
  %15 = load %"Vector[LocString]"** %this.addr
  %16 = getelementptr inbounds %"Vector[LocString]"* %15, i32 0, i32 0
  %17 = load %"RawPtr[LocString]"* %16
  %18 = load i64* %size
  call void @advance584(%"RawPtr[LocString]"* %"$tmpC1", %"RawPtr[LocString]" %17, i64 %18)
  %19 = load %"RawPtr[LocString]"* %"$tmpC1"
  call void @"=583"(%"RawPtr[LocString]"* %14, %"RawPtr[LocString]" %19)
  %20 = load %"Vector[LocString]"** %this.addr
  %21 = getelementptr inbounds %"Vector[LocString]"* %20, i32 0, i32 2
  %22 = load %"Vector[LocString]"** %this.addr
  %23 = getelementptr inbounds %"Vector[LocString]"* %22, i32 0, i32 1
  %24 = load %"RawPtr[LocString]"* %23
  call void @"=583"(%"RawPtr[LocString]"* %21, %"RawPtr[LocString]" %24)
  %25 = load %"Vector[LocString]"** %this.addr
  %26 = getelementptr inbounds %"Vector[LocString]"* %25, i32 0, i32 0
  call void @ctor597(%"RawPtr[LocString]"* %dst, %"RawPtr[LocString]"* %26)
  %27 = load %"Vector[LocString]"** %other.addr
  %28 = getelementptr inbounds %"Vector[LocString]"* %27, i32 0, i32 0
  call void @ctor597(%"RawPtr[LocString]"* %src, %"RawPtr[LocString]"* %28)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %29 = load %"Vector[LocString]"** %this.addr
  %30 = getelementptr inbounds %"Vector[LocString]"* %29, i32 0, i32 1
  %31 = load %"RawPtr[LocString]"* %30
  %32 = call i1 @"==576"(%"RawPtr[LocString]"* %dst, %"RawPtr[LocString]" %31)
  %33 = xor i1 true, %32
  br i1 %33, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %34 = load %"RawPtr[LocString]"* %dst
  %35 = call %LocString* @value588(%"RawPtr[LocString]" %34)
  %36 = load %"RawPtr[LocString]"* %src
  %37 = call %LocString* @value588(%"RawPtr[LocString]" %36)
  call void @ctor586(%LocString* %35, %LocString* %37)
  %38 = load %"RawPtr[LocString]"* %dst
  call void @advance589(%"RawPtr[LocString]"* %"$tmpC2", %"RawPtr[LocString]" %38)
  %39 = load %"RawPtr[LocString]"* %"$tmpC2"
  call void @"=583"(%"RawPtr[LocString]"* %dst, %"RawPtr[LocString]" %39)
  %40 = load %"RawPtr[LocString]"* %src
  call void @advance589(%"RawPtr[LocString]"* %"$tmpC3", %"RawPtr[LocString]" %40)
  %41 = load %"RawPtr[LocString]"* %"$tmpC3"
  call void @"=583"(%"RawPtr[LocString]"* %src, %"RawPtr[LocString]" %41)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @allocRawPtr595(%"RawPtr[LocString]"* sret %_result, i64 %num) #3 {
  %_result.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %_result, %"RawPtr[LocString]"** %_result.addr
  %num.addr = alloca i64
  store i64 %num, i64* %num.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %_result.addr
  %2 = load i64* %num.addr
  %3 = call i64 @"*"(i64 %2, i64 48)
  %4 = call i8* @malloc(i64 %3)
  %5 = bitcast i8* %4 to %LocString*
  call void @ctor596(%"RawPtr[LocString]"* %1, %LocString* %5)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor596(%"RawPtr[LocString]"* %this, %LocString* %ref) #3 {
  %this.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %this, %"RawPtr[LocString]"** %this.addr
  %ref.addr = alloca %LocString*
  store %LocString* %ref, %LocString** %ref.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[LocString]"* %1, i32 0, i32 0
  store %LocString* null, %LocString** %2
  %3 = load %LocString** %ref.addr
  %4 = load %"RawPtr[LocString]"** %this.addr
  %5 = getelementptr inbounds %"RawPtr[LocString]"* %4, i32 0, i32 0
  store %LocString* %3, %LocString** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor597(%"RawPtr[LocString]"* %this, %"RawPtr[LocString]"* %other) #2 {
  %this.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %this, %"RawPtr[LocString]"** %this.addr
  %other.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %other, %"RawPtr[LocString]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %other.addr
  %2 = getelementptr inbounds %"RawPtr[LocString]"* %1, i32 0, i32 0
  %3 = load %LocString** %2
  %4 = load %"RawPtr[LocString]"** %this.addr
  %5 = getelementptr inbounds %"RawPtr[LocString]"* %4, i32 0, i32 0
  store %LocString* %3, %LocString** %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @dtor598(%"Vector[LocString]"* %this) #3 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %p = alloca %"RawPtr[LocString]"
  %"$tmpC" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %this.addr
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 0
  call void @ctor597(%"RawPtr[LocString]"* %p, %"RawPtr[LocString]"* %2)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %3 = load %"Vector[LocString]"** %this.addr
  %4 = getelementptr inbounds %"Vector[LocString]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[LocString]"* %4
  %6 = call i1 @"==576"(%"RawPtr[LocString]"* %p, %"RawPtr[LocString]" %5)
  %7 = xor i1 true, %6
  br i1 %7, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %8 = load %"RawPtr[LocString]"* %p
  %9 = call %LocString* @value588(%"RawPtr[LocString]" %8)
  call void @dtor592(%LocString* %9)
  br label %while_step

while_step:                                       ; preds = %while_body
  %10 = load %"RawPtr[LocString]"* %p
  call void @advance589(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]" %10)
  %11 = load %"RawPtr[LocString]"* %"$tmpC"
  call void @"=583"(%"RawPtr[LocString]"* %p, %"RawPtr[LocString]" %11)
  br label %while_block

while_end:                                        ; preds = %while_block
  %12 = load %"Vector[LocString]"** %this.addr
  %13 = getelementptr inbounds %"Vector[LocString]"* %12, i32 0, i32 0
  %14 = load %"RawPtr[LocString]"* %13
  call void @freePtr599(%"RawPtr[LocString]" %14)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @freePtr599(%"RawPtr[LocString]" %this) #3 {
  %this.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %this, %"RawPtr[LocString]"* %this.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"RawPtr[LocString]"* %this.addr
  %2 = call i1 @isSet600(%"RawPtr[LocString]" %1)
  br i1 %2, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %3 = load %"RawPtr[LocString]"* %this.addr
  %4 = call i8* @bytePtr579(%"RawPtr[LocString]" %3)
  call void @free(i8* %4)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isSet600(%"RawPtr[LocString]" %this) #3 {
  %this.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %this, %"RawPtr[LocString]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[LocString]"* %this.addr, i32 0, i32 0
  %2 = load %LocString** %1
  %3 = bitcast %LocString* %2 to i8*
  %4 = call i1 @implOpRefNE(i8* %3, i8* null)
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal void @createFormals(%"Vector[LocString]"* %ids, %Node %typeNode, %Node %init, i1 %varFormals, %Node* %res) #3 {
  %ids.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %ids, %"Vector[LocString]"** %ids.addr
  %typeNode.addr = alloca %Node
  store %Node %typeNode, %Node* %typeNode.addr
  %init.addr = alloca %Node
  store %Node %init, %Node* %init.addr
  %varFormals.addr = alloca i1
  store i1 %varFormals, i1* %varFormals.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %"$rangeVar" = alloca %"ContiguousMemoryRange[LocString]"
  %id = alloca %LocString*
  %v = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %"$tmpForRef1" = alloca %Node
  %"$rangeVar2" = alloca %"ContiguousMemoryRange[LocString]"
  %id7 = alloca %LocString*
  %p = alloca %Node
  %"$tmpForRef8" = alloca %Node
  %"$tmpC9" = alloca %StringRef
  %"$tmpForRef10" = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load i1* %varFormals.addr
  br i1 %1, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %2 = load %"Vector[LocString]"** %ids.addr
  call void @all601(%"ContiguousMemoryRange[LocString]"* %"$rangeVar", %"Vector[LocString]"* %2)
  br label %while_block

if_else:                                          ; preds = %if_block
  %3 = load %"Vector[LocString]"** %ids.addr
  call void @all601(%"ContiguousMemoryRange[LocString]"* %"$rangeVar2", %"Vector[LocString]"* %3)
  br label %while_block3

if_end:                                           ; preds = %while_end6, %while_end
  ret void

while_block:                                      ; preds = %while_step, %if_then
  %4 = load %"ContiguousMemoryRange[LocString]"* %"$rangeVar"
  %5 = call i1 @isEmpty603(%"ContiguousMemoryRange[LocString]" %4)
  %6 = xor i1 true, %5
  br i1 %6, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %7 = load %"ContiguousMemoryRange[LocString]"* %"$rangeVar"
  %8 = call %LocString* @front604(%"ContiguousMemoryRange[LocString]" %7)
  store %LocString* %8, %LocString** %id
  %9 = load %LocString** %id
  %10 = getelementptr inbounds %LocString* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %10, i32 0, i32 0
  %12 = load %LocString** %id
  %13 = getelementptr inbounds %LocString* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %13, i32 0, i32 1
  call void @asStringRef(%StringRef* %"$tmpC", %String* %14)
  %15 = load %StringRef* %"$tmpC"
  %16 = load %Node* %typeNode.addr
  %17 = load %Node* %init.addr
  %18 = call %Node @comp_parser_mkVar(%Location* %11, %StringRef %15, %Node %16, %Node %17)
  store %Node %18, %Node* %"$tmpForRef"
  call void @ctor564(%Node* %v, %Node* %"$tmpForRef")
  %19 = load %Node** %res.addr
  %20 = load %Node** %res.addr
  %21 = load %Node* %20
  %22 = load %Node* %v
  %23 = call %Node @comp_parser_addToNodeList(%Node %21, %Node %22)
  store %Node %23, %Node* %"$tmpForRef1"
  call void @"=566"(%Node* %19, %Node* %"$tmpForRef1")
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @popFront605(%"ContiguousMemoryRange[LocString]"* %"$rangeVar")
  br label %while_block

while_end:                                        ; preds = %while_block
  br label %if_end

while_block3:                                     ; preds = %while_step5, %if_else
  %24 = load %"ContiguousMemoryRange[LocString]"* %"$rangeVar2"
  %25 = call i1 @isEmpty603(%"ContiguousMemoryRange[LocString]" %24)
  %26 = xor i1 true, %25
  br i1 %26, label %while_body4, label %while_end6

while_body4:                                      ; preds = %while_block3
  %27 = load %"ContiguousMemoryRange[LocString]"* %"$rangeVar2"
  %28 = call %LocString* @front604(%"ContiguousMemoryRange[LocString]" %27)
  store %LocString* %28, %LocString** %id7
  %29 = load %LocString** %id7
  %30 = getelementptr inbounds %LocString* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %30, i32 0, i32 0
  %32 = load %LocString** %id7
  %33 = getelementptr inbounds %LocString* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %33, i32 0, i32 1
  call void @asStringRef(%StringRef* %"$tmpC9", %String* %34)
  %35 = load %StringRef* %"$tmpC9"
  %36 = load %Node* %typeNode.addr
  %37 = load %Node* %init.addr
  %38 = call %Node @comp_parser_mkParameter(%Location* %31, %StringRef %35, %Node %36, %Node %37)
  store %Node %38, %Node* %"$tmpForRef8"
  call void @ctor564(%Node* %p, %Node* %"$tmpForRef8")
  %39 = load %Node** %res.addr
  %40 = load %Node** %res.addr
  %41 = load %Node* %40
  %42 = load %Node* %p
  %43 = call %Node @comp_parser_addToNodeList(%Node %41, %Node %42)
  store %Node %43, %Node* %"$tmpForRef10"
  call void @"=566"(%Node* %39, %Node* %"$tmpForRef10")
  br label %while_step5

while_step5:                                      ; preds = %while_body4
  call void @popFront605(%"ContiguousMemoryRange[LocString]"* %"$rangeVar2")
  br label %while_block3

while_end6:                                       ; preds = %while_block3
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @all601(%"ContiguousMemoryRange[LocString]"* sret %_result, %"Vector[LocString]"* %this) #3 {
  %_result.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %_result, %"ContiguousMemoryRange[LocString]"** %_result.addr
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %_result.addr
  %2 = load %"Vector[LocString]"** %this.addr
  %3 = getelementptr inbounds %"Vector[LocString]"* %2, i32 0, i32 0
  %4 = load %"RawPtr[LocString]"* %3
  %5 = load %"Vector[LocString]"** %this.addr
  %6 = getelementptr inbounds %"Vector[LocString]"* %5, i32 0, i32 1
  %7 = load %"RawPtr[LocString]"* %6
  call void @ctor602(%"ContiguousMemoryRange[LocString]"* %1, %"RawPtr[LocString]" %4, %"RawPtr[LocString]" %7)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor602(%"ContiguousMemoryRange[LocString]"* %this, %"RawPtr[LocString]" %f_begin, %"RawPtr[LocString]" %f_end) #2 {
  %this.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %this, %"ContiguousMemoryRange[LocString]"** %this.addr
  %f_begin.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %f_begin, %"RawPtr[LocString]"* %f_begin.addr
  %f_end.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %f_end, %"RawPtr[LocString]"* %f_end.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 0
  call void @ctor597(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]"* %f_begin.addr)
  %3 = load %"ContiguousMemoryRange[LocString]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %3, i32 0, i32 1
  call void @ctor597(%"RawPtr[LocString]"* %4, %"RawPtr[LocString]"* %f_end.addr)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty603(%"ContiguousMemoryRange[LocString]" %this) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[LocString]"
  store %"ContiguousMemoryRange[LocString]" %this, %"ContiguousMemoryRange[LocString]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %this.addr, i32 0, i32 1
  %2 = load %"RawPtr[LocString]"* %1
  %3 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %this.addr, i32 0, i32 0
  %4 = load %"RawPtr[LocString]"* %3
  %5 = call i64 @diff578(%"RawPtr[LocString]" %2, %"RawPtr[LocString]" %4)
  %6 = call i1 @"<=296"(i64 %5, i32 0)
  ret i1 %6
}

; Function Attrs: inlinehint nounwind
define internal %LocString* @front604(%"ContiguousMemoryRange[LocString]" %this) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[LocString]"
  store %"ContiguousMemoryRange[LocString]" %this, %"ContiguousMemoryRange[LocString]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %this.addr, i32 0, i32 0
  %2 = load %"RawPtr[LocString]"* %1
  %3 = call %LocString* @value588(%"RawPtr[LocString]" %2)
  ret %LocString* %3
}

declare %Node @comp_parser_mkVar(%Location*, %StringRef, %Node, %Node)

; Function Attrs: alwaysinline nounwind
define internal void @popFront605(%"ContiguousMemoryRange[LocString]"* %this) #2 {
  %this.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %this, %"ContiguousMemoryRange[LocString]"** %this.addr
  %"$tmpC" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[LocString]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[LocString]"* %4
  call void @advance589(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]" %5)
  %6 = load %"RawPtr[LocString]"* %"$tmpC"
  call void @"=583"(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]" %6)
  ret void
}

declare %Node @comp_parser_mkParameter(%Location*, %StringRef, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal void @parseTypeNode(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 31)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %Node** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %4, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i1 false)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %6 = load %Node** %_result.addr
  call void @ctor568(%Node* %6)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseFunBody(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  %res = alloca %Node
  %"$tmpC" = alloca %String
  %tmp.StringRef = alloca %StringRef
  %"$tmpC4" = alloca %Token
  %tmp.StringRef5 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 32)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %Node** %_result.addr
  call void @ctor568(%Node* %4)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  call void @ctor568(%Node* %res)
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = call i1 @parseBlockStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %Node* %res, i1 false)
  %7 = xor i1 true, %6
  br i1 %7, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %9 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %10 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([26 x i8]* @str609, i32 0, i32 0), i8** %9
  store i8* getelementptr inbounds ([26 x i8]* @str609, i32 0, i32 25), i8** %10
  %11 = load %StringRef* %tmp.StringRef
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 0
  call void @"pre_*506"(%Token* %"$tmpC4", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %13)
  %14 = getelementptr inbounds %Token* %"$tmpC4", i32 0, i32 1
  %15 = load %TokenType* %14
  %16 = getelementptr inbounds %StringRef* %tmp.StringRef5, i32 0, i32 0
  %17 = getelementptr inbounds %StringRef* %tmp.StringRef5, i32 0, i32 1
  store i8* getelementptr inbounds ([28 x i8]* @str610, i32 0, i32 0), i8** %16
  store i8* getelementptr inbounds ([28 x i8]* @str610, i32 0, i32 27), i8** %17
  %18 = load %StringRef* %tmp.StringRef5
  call void @toString608(%String* %"$tmpC", %StringRef %11, %TokenType %15, %StringRef %18)
  call void @reportError510(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %String* %"$tmpC")
  call void @dtor214(%String* %"$tmpC")
  call void @dtor387(%Token* %"$tmpC4")
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %19 = load %Node** %_result.addr
  call void @ctor564(%Node* %19, %Node* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @parseBlockStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res, i1 %topLevel) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %topLevel.addr = alloca i1
  store i1 %topLevel, i1* %topLevel.addr
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %tmp.v1 = alloca %Node
  %tmp.v2 = alloca %TokenType
  %s = alloca %Node
  %"$tmpForRef" = alloca %Node
  %tmp.v6 = alloca %TokenType
  %"$tmpForRef10" = alloca %Node
  %"$tmpC" = alloca %Location
  %"$tmpC11" = alloca %Location
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  br label %if_block

if_block:                                         ; preds = %code
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 25)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %Node** %res.addr
  call void @ctor568(%Node* %tmp.v1)
  call void @"=566"(%Node* %5, %Node* %tmp.v1)
  br label %while_block

if_end:                                           ; preds = %dumy_block12, %if_block
  ret i1 false

while_block:                                      ; preds = %while_step, %if_then
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v2, i32 26)
  %7 = load %TokenType* %tmp.v2
  %8 = call i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  %9 = xor i1 true, %8
  br i1 %9, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %11 = load i1* %topLevel.addr
  call void @parseStmt(%Node* %s, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, i1 %11)
  br label %if_block3

while_step:                                       ; preds = %if_end5
  br label %while_block

while_end:                                        ; preds = %if_else, %cond.end
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v6, i32 26)
  %13 = load %TokenType* %tmp.v6
  %14 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, %TokenType %13)
  br label %if_block7

cond.true:                                        ; preds = %while_block
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %16 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, i32 0, i32 2
  %17 = load i1* %16
  %18 = xor i1 true, %17
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %18, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end

if_block3:                                        ; preds = %while_body
  %19 = load %Node* %s
  %20 = call i1 @isSet607(%Node %19)
  br i1 %20, label %if_then4, label %if_else

if_then4:                                         ; preds = %if_block3
  %21 = load %Node** %res.addr
  %22 = load %Node** %res.addr
  %23 = load %Node* %22
  %24 = load %Node* %s
  %25 = call %Node @comp_parser_addToNodeList(%Node %23, %Node %24)
  store %Node %25, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %21, %Node* %"$tmpForRef")
  br label %if_end5

if_else:                                          ; preds = %if_block3
  br label %while_end

if_end5:                                          ; preds = %dumy_block, %if_then4
  br label %while_step

dumy_block:                                       ; No predecessors!
  br label %if_end5

if_block7:                                        ; preds = %while_end
  %26 = load i1* %topLevel.addr
  %27 = xor i1 true, %26
  br i1 %27, label %if_then8, label %if_end9

if_then8:                                         ; preds = %if_block7
  %28 = load %Node** %res.addr
  %29 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC11", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %29)
  call void @span(%Location* %"$tmpC", %Location* %loc, %Location* %"$tmpC11")
  %30 = load %Node** %res.addr
  %31 = load %Node* %30
  %32 = call %Node @comp_parser_mkBlockStmt(%Location* %"$tmpC", %Node %31)
  store %Node %32, %Node* %"$tmpForRef10"
  call void @"=566"(%Node* %28, %Node* %"$tmpForRef10")
  br label %if_end9

if_end9:                                          ; preds = %if_then8, %if_block7
  ret i1 true

dumy_block12:                                     ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i1 @isSet607(%Node %n) #3 {
  %n.addr = alloca %Node
  store %Node %n, %Node* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %Node* %n.addr, i32 0, i32 0
  %2 = getelementptr inbounds %UntypedPtr* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = call i1 @implOpRefNE(i8* %3, i8* null)
  ret i1 %4
}

declare %Node @comp_parser_mkBlockStmt(%Location*, %Node)

; Function Attrs: inlinehint nounwind
define internal void @toString608(%String* sret %_result, %StringRef %a1, %TokenType %a2, %StringRef %a3) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %a1.addr = alloca %StringRef
  store %StringRef %a1, %StringRef* %a1.addr
  %a2.addr = alloca %TokenType
  store %TokenType %a2, %TokenType* %a2.addr
  %a3.addr = alloca %StringRef
  store %StringRef %a3, %StringRef* %a3.addr
  %s = alloca %StringOutputStream
  br label %code

code:                                             ; preds = %0
  call void @ctor196(%StringOutputStream* %s)
  %1 = call %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %a1.addr)
  %2 = call %StringOutputStream* @"<<512"(%StringOutputStream* %1, %TokenType* %a2.addr)
  %3 = call %StringOutputStream* @"<<"(%StringOutputStream* %2, %StringRef* %a3.addr)
  %4 = load %String** %_result.addr
  %5 = getelementptr inbounds %StringOutputStream* %s, i32 0, i32 0
  call void @ctor209(%String* %4, %String* %5)
  call void @dtor213(%StringOutputStream* %s)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor213(%StringOutputStream* %s)
  ret void
}

declare %Node @comp_parser_mkLambdaExpr(%Location*, %Node, %Node, %Node, %Node, %Node)

declare %Node @comp_parser_mkParenthesisExpr(%Node)

declare %Node @comp_parser_mkNullLiteral(%Location*)

declare %Node @comp_parser_mkBoolLiteral(%Location*, i1)

declare %Node @comp_parser_mkIntLiteral(%Location*, i32)

declare %Node @comp_parser_mkUIntLiteral(%Location*, i32)

declare %Node @comp_parser_mkLongLiteral(%Location*, i64)

declare %Node @comp_parser_mkULongLiteral(%Location*, i64)

declare %Node @comp_parser_mkFloatLiteral(%Location*, float)

declare %Node @comp_parser_mkDoubleLiteral(%Location*, double)

declare %Node @comp_parser_mkCharLiteral(%Location*, i8)

declare %Node @comp_parser_mkStringLiteral(%Location*, %StringRef)

; Function Attrs: inlinehint nounwind
define internal i1 @isNull(%Node %n) #3 {
  %n.addr = alloca %Node
  store %Node %n, %Node* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %Node* %n.addr, i32 0, i32 0
  %2 = getelementptr inbounds %UntypedPtr* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = call i1 @implOpRefEQ(i8* %3, i8* null)
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal void @parseExprListOpt(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res = alloca %Node
  %expr = alloca %Node
  %"$tmpForRef" = alloca %Node
  %tmp.v = alloca %TokenType
  %"$tmpC" = alloca %Node
  %"$tmpForRef1" = alloca %Node
  br label %code

code:                                             ; preds = %0
  call void @ctor568(%Node* %res)
  call void @ctor568(%Node* %expr)
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = call i1 @parseExprOpt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %Node* %expr, i1 false)
  %3 = xor i1 true, %2
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %Node** %_result.addr
  call void @ctor564(%Node* %4, %Node* %res)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %Node* %res
  %6 = load %Node* %expr
  %7 = call %Node @comp_parser_addToNodeList(%Node %5, %Node %6)
  store %Node %7, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef")
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 33)
  %9 = load %TokenType* %tmp.v
  %10 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %TokenType %9)
  br i1 %10, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, i1 true)
  call void @"=566"(%Node* %expr, %Node* %"$tmpC")
  %12 = load %Node* %res
  %13 = load %Node* %expr
  %14 = call %Node @comp_parser_addToNodeList(%Node %12, %Node %13)
  store %Node %14, %Node* %"$tmpForRef1"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef1")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %15 = load %Node** %_result.addr
  call void @ctor564(%Node* %15, %Node* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @parseExprOpt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res, i1 %allowSemicolons) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %allowSemicolons.addr = alloca i1
  store i1 %allowSemicolons, i1* %allowSemicolons.addr
  %"$tmpC" = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = call i1 @nextIsExpr(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i1 true)
  br i1 %2, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %3 = load %Node** %res.addr
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i1 true)
  call void @"=566"(%Node* %3, %Node* %"$tmpC")
  br label %if_block1

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

if_block1:                                        ; preds = %if_then
  %5 = load i1* %allowSemicolons.addr
  br i1 %5, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @consumeSemis(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6)
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  ret i1 true

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i1 @nextIsExpr(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %withEqual) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %t = alloca %TokenType
  %"$tmpC" = alloca %Token
  %tmp.v = alloca %TokenType
  %tmp.v40 = alloca %TokenType
  %tmp.v41 = alloca %TokenType
  %tmp.v42 = alloca %TokenType
  %tmp.v44 = alloca %TokenType
  %tmp.v46 = alloca %TokenType
  %tmp.v48 = alloca %TokenType
  %tmp.v50 = alloca %TokenType
  %tmp.v52 = alloca %TokenType
  %tmp.v54 = alloca %TokenType
  %tmp.v56 = alloca %TokenType
  %tmp.v58 = alloca %TokenType
  %tmp.v60 = alloca %TokenType
  %tmp.v62 = alloca %TokenType
  %tmp.v64 = alloca %TokenType
  %tmp.v66 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @"pre_*506"(%Token* %"$tmpC", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2)
  %3 = getelementptr inbounds %Token* %"$tmpC", i32 0, i32 1
  call void @ctor263(%TokenType* %t, %TokenType* %3)
  call void @dtor387(%Token* %"$tmpC")
  br label %if_block

if_block:                                         ; preds = %code
  call void @ctor272(%TokenType* %tmp.v, i32 36)
  %4 = call i1 @"==404"(%TokenType* %t, %TokenType* %tmp.v)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load i1* %withEqual.addr
  ret i1 %5

if_end:                                           ; preds = %dumy_block, %if_block
  call void @ctor272(%TokenType* %tmp.v40, i32 37)
  %6 = call i1 @"==404"(%TokenType* %t, %TokenType* %tmp.v40)
  br i1 %6, label %cond.true37, label %cond.false38

dumy_block:                                       ; No predecessors!
  br label %if_end

cond.true:                                        ; preds = %cond.end3
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  call void @ctor272(%TokenType* %tmp.v66, i32 46)
  %7 = call i1 @"==404"(%TokenType* %t, %TokenType* %tmp.v66)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res67 = phi i1 [ true, %cond.true ], [ %7, %cond.false ]
  br i1 %cond.res65, label %cond_destruct_alt1, label %cond_destruct_alt2

cond.true1:                                       ; preds = %cond.end6
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  call void @ctor272(%TokenType* %tmp.v64, i32 45)
  %8 = call i1 @"==404"(%TokenType* %t, %TokenType* %tmp.v64)
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res65 = phi i1 [ true, %cond.true1 ], [ %8, %cond.false2 ]
  br i1 %cond.res65, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %cond.end9
  br label %cond.end6

cond.false5:                                      ; preds = %cond.end9
  call void @ctor272(%TokenType* %tmp.v62, i32 44)
  %9 = call i1 @"==404"(%TokenType* %t, %TokenType* %tmp.v62)
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res63 = phi i1 [ true, %cond.true4 ], [ %9, %cond.false5 ]
  br i1 %cond.res63, label %cond.true1, label %cond.false2

cond.true7:                                       ; preds = %cond.end12
  br label %cond.end9

cond.false8:                                      ; preds = %cond.end12
  call void @ctor272(%TokenType* %tmp.v60, i32 43)
  %10 = call i1 @"==404"(%TokenType* %t, %TokenType* %tmp.v60)
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res61 = phi i1 [ true, %cond.true7 ], [ %10, %cond.false8 ]
  br i1 %cond.res61, label %cond.true4, label %cond.false5

cond.true10:                                      ; preds = %cond.end15
  br label %cond.end12

cond.false11:                                     ; preds = %cond.end15
  call void @ctor272(%TokenType* %tmp.v58, i32 42)
  %11 = call i1 @"==404"(%TokenType* %t, %TokenType* %tmp.v58)
  br label %cond.end12

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond.res59 = phi i1 [ true, %cond.true10 ], [ %11, %cond.false11 ]
  br i1 %cond.res59, label %cond.true7, label %cond.false8

cond.true13:                                      ; preds = %cond.end18
  br label %cond.end15

cond.false14:                                     ; preds = %cond.end18
  call void @ctor272(%TokenType* %tmp.v56, i32 41)
  %12 = call i1 @"==404"(%TokenType* %t, %TokenType* %tmp.v56)
  br label %cond.end15

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond.res57 = phi i1 [ true, %cond.true13 ], [ %12, %cond.false14 ]
  br i1 %cond.res57, label %cond.true10, label %cond.false11

cond.true16:                                      ; preds = %cond.end21
  br label %cond.end18

cond.false17:                                     ; preds = %cond.end21
  call void @ctor272(%TokenType* %tmp.v54, i32 40)
  %13 = call i1 @"==404"(%TokenType* %t, %TokenType* %tmp.v54)
  br label %cond.end18

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond.res55 = phi i1 [ true, %cond.true16 ], [ %13, %cond.false17 ]
  br i1 %cond.res55, label %cond.true13, label %cond.false14

cond.true19:                                      ; preds = %cond.end24
  br label %cond.end21

cond.false20:                                     ; preds = %cond.end24
  call void @ctor272(%TokenType* %tmp.v52, i32 39)
  %14 = call i1 @"==404"(%TokenType* %t, %TokenType* %tmp.v52)
  br label %cond.end21

cond.end21:                                       ; preds = %cond.false20, %cond.true19
  %cond.res53 = phi i1 [ true, %cond.true19 ], [ %14, %cond.false20 ]
  br i1 %cond.res53, label %cond.true16, label %cond.false17

cond.true22:                                      ; preds = %cond.end27
  br label %cond.end24

cond.false23:                                     ; preds = %cond.end27
  call void @ctor272(%TokenType* %tmp.v50, i32 21)
  %15 = call i1 @"==404"(%TokenType* %t, %TokenType* %tmp.v50)
  br label %cond.end24

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond.res51 = phi i1 [ true, %cond.true22 ], [ %15, %cond.false23 ]
  br i1 %cond.res51, label %cond.true19, label %cond.false20

cond.true25:                                      ; preds = %cond.end30
  br label %cond.end27

cond.false26:                                     ; preds = %cond.end30
  call void @ctor272(%TokenType* %tmp.v48, i32 23)
  %16 = call i1 @"==404"(%TokenType* %t, %TokenType* %tmp.v48)
  br label %cond.end27

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond.res49 = phi i1 [ true, %cond.true25 ], [ %16, %cond.false26 ]
  br i1 %cond.res49, label %cond.true22, label %cond.false23

cond.true28:                                      ; preds = %cond.end33
  br label %cond.end30

cond.false29:                                     ; preds = %cond.end33
  call void @ctor272(%TokenType* %tmp.v46, i32 22)
  %17 = call i1 @"==404"(%TokenType* %t, %TokenType* %tmp.v46)
  br label %cond.end30

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond.res47 = phi i1 [ true, %cond.true28 ], [ %17, %cond.false29 ]
  br i1 %cond.res47, label %cond.true25, label %cond.false26

cond.true31:                                      ; preds = %cond.end36
  br label %cond.end33

cond.false32:                                     ; preds = %cond.end36
  call void @ctor272(%TokenType* %tmp.v44, i32 29)
  %18 = call i1 @"==404"(%TokenType* %t, %TokenType* %tmp.v44)
  br label %cond.end33

cond.end33:                                       ; preds = %cond.false32, %cond.true31
  %cond.res45 = phi i1 [ true, %cond.true31 ], [ %18, %cond.false32 ]
  br i1 %cond.res45, label %cond.true28, label %cond.false29

cond.true34:                                      ; preds = %cond.end39
  br label %cond.end36

cond.false35:                                     ; preds = %cond.end39
  call void @ctor272(%TokenType* %tmp.v42, i32 35)
  %19 = call i1 @"==404"(%TokenType* %t, %TokenType* %tmp.v42)
  br label %cond.end36

cond.end36:                                       ; preds = %cond.false35, %cond.true34
  %cond.res43 = phi i1 [ true, %cond.true34 ], [ %19, %cond.false35 ]
  br i1 %cond.res43, label %cond.true31, label %cond.false32

cond.true37:                                      ; preds = %if_end
  br label %cond.end39

cond.false38:                                     ; preds = %if_end
  call void @ctor272(%TokenType* %tmp.v41, i32 38)
  %20 = call i1 @"==404"(%TokenType* %t, %TokenType* %tmp.v41)
  br label %cond.end39

cond.end39:                                       ; preds = %cond.false38, %cond.true37
  %cond.res = phi i1 [ true, %cond.true37 ], [ %20, %cond.false38 ]
  br i1 %cond.res, label %cond.true34, label %cond.false35

cond_destruct_alt1:                               ; preds = %cond.end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %cond.end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  br i1 %cond.res63, label %cond_destruct_alt168, label %cond_destruct_alt269

cond_destruct_alt168:                             ; preds = %cond_destruct_end
  br label %cond_destruct_end70

cond_destruct_alt269:                             ; preds = %cond_destruct_end
  br label %cond_destruct_end70

cond_destruct_end70:                              ; preds = %cond_destruct_alt269, %cond_destruct_alt168
  br i1 %cond.res61, label %cond_destruct_alt171, label %cond_destruct_alt272

cond_destruct_alt171:                             ; preds = %cond_destruct_end70
  br label %cond_destruct_end73

cond_destruct_alt272:                             ; preds = %cond_destruct_end70
  br label %cond_destruct_end73

cond_destruct_end73:                              ; preds = %cond_destruct_alt272, %cond_destruct_alt171
  br i1 %cond.res59, label %cond_destruct_alt174, label %cond_destruct_alt275

cond_destruct_alt174:                             ; preds = %cond_destruct_end73
  br label %cond_destruct_end76

cond_destruct_alt275:                             ; preds = %cond_destruct_end73
  br label %cond_destruct_end76

cond_destruct_end76:                              ; preds = %cond_destruct_alt275, %cond_destruct_alt174
  br i1 %cond.res57, label %cond_destruct_alt177, label %cond_destruct_alt278

cond_destruct_alt177:                             ; preds = %cond_destruct_end76
  br label %cond_destruct_end79

cond_destruct_alt278:                             ; preds = %cond_destruct_end76
  br label %cond_destruct_end79

cond_destruct_end79:                              ; preds = %cond_destruct_alt278, %cond_destruct_alt177
  br i1 %cond.res55, label %cond_destruct_alt180, label %cond_destruct_alt281

cond_destruct_alt180:                             ; preds = %cond_destruct_end79
  br label %cond_destruct_end82

cond_destruct_alt281:                             ; preds = %cond_destruct_end79
  br label %cond_destruct_end82

cond_destruct_end82:                              ; preds = %cond_destruct_alt281, %cond_destruct_alt180
  br i1 %cond.res53, label %cond_destruct_alt183, label %cond_destruct_alt284

cond_destruct_alt183:                             ; preds = %cond_destruct_end82
  br label %cond_destruct_end85

cond_destruct_alt284:                             ; preds = %cond_destruct_end82
  br label %cond_destruct_end85

cond_destruct_end85:                              ; preds = %cond_destruct_alt284, %cond_destruct_alt183
  br i1 %cond.res51, label %cond_destruct_alt186, label %cond_destruct_alt287

cond_destruct_alt186:                             ; preds = %cond_destruct_end85
  br label %cond_destruct_end88

cond_destruct_alt287:                             ; preds = %cond_destruct_end85
  br label %cond_destruct_end88

cond_destruct_end88:                              ; preds = %cond_destruct_alt287, %cond_destruct_alt186
  br i1 %cond.res49, label %cond_destruct_alt189, label %cond_destruct_alt290

cond_destruct_alt189:                             ; preds = %cond_destruct_end88
  br label %cond_destruct_end91

cond_destruct_alt290:                             ; preds = %cond_destruct_end88
  br label %cond_destruct_end91

cond_destruct_end91:                              ; preds = %cond_destruct_alt290, %cond_destruct_alt189
  br i1 %cond.res47, label %cond_destruct_alt192, label %cond_destruct_alt293

cond_destruct_alt192:                             ; preds = %cond_destruct_end91
  br label %cond_destruct_end94

cond_destruct_alt293:                             ; preds = %cond_destruct_end91
  br label %cond_destruct_end94

cond_destruct_end94:                              ; preds = %cond_destruct_alt293, %cond_destruct_alt192
  br i1 %cond.res45, label %cond_destruct_alt195, label %cond_destruct_alt296

cond_destruct_alt195:                             ; preds = %cond_destruct_end94
  br label %cond_destruct_end97

cond_destruct_alt296:                             ; preds = %cond_destruct_end94
  br label %cond_destruct_end97

cond_destruct_end97:                              ; preds = %cond_destruct_alt296, %cond_destruct_alt195
  br i1 %cond.res43, label %cond_destruct_alt198, label %cond_destruct_alt299

cond_destruct_alt198:                             ; preds = %cond_destruct_end97
  br label %cond_destruct_end100

cond_destruct_alt299:                             ; preds = %cond_destruct_end97
  br label %cond_destruct_end100

cond_destruct_end100:                             ; preds = %cond_destruct_alt299, %cond_destruct_alt198
  br i1 %cond.res, label %cond_destruct_alt1101, label %cond_destruct_alt2102

cond_destruct_alt1101:                            ; preds = %cond_destruct_end100
  br label %cond_destruct_end103

cond_destruct_alt2102:                            ; preds = %cond_destruct_end100
  br label %cond_destruct_end103

cond_destruct_end103:                             ; preds = %cond_destruct_alt2102, %cond_destruct_alt1101
  br i1 %6, label %cond_destruct_alt1104, label %cond_destruct_alt2105

cond_destruct_alt1104:                            ; preds = %cond_destruct_end103
  br label %cond_destruct_end106

cond_destruct_alt2105:                            ; preds = %cond_destruct_end103
  br label %cond_destruct_end106

cond_destruct_end106:                             ; preds = %cond_destruct_alt2105, %cond_destruct_alt1104
  ret i1 %cond.res67

cond_destruct_alt1107:                            ; preds = %dumy_block110
  br label %cond_destruct_end109

cond_destruct_alt2108:                            ; preds = %dumy_block110
  br label %cond_destruct_end109

cond_destruct_end109:                             ; preds = %cond_destruct_alt2108, %cond_destruct_alt1107
  br i1 %cond.res63, label %cond_destruct_alt1111, label %cond_destruct_alt2112

dumy_block110:                                    ; No predecessors!
  br i1 %cond.res65, label %cond_destruct_alt1107, label %cond_destruct_alt2108

cond_destruct_alt1111:                            ; preds = %cond_destruct_end109
  br label %cond_destruct_end113

cond_destruct_alt2112:                            ; preds = %cond_destruct_end109
  br label %cond_destruct_end113

cond_destruct_end113:                             ; preds = %cond_destruct_alt2112, %cond_destruct_alt1111
  br i1 %cond.res61, label %cond_destruct_alt1114, label %cond_destruct_alt2115

cond_destruct_alt1114:                            ; preds = %cond_destruct_end113
  br label %cond_destruct_end116

cond_destruct_alt2115:                            ; preds = %cond_destruct_end113
  br label %cond_destruct_end116

cond_destruct_end116:                             ; preds = %cond_destruct_alt2115, %cond_destruct_alt1114
  br i1 %cond.res59, label %cond_destruct_alt1117, label %cond_destruct_alt2118

cond_destruct_alt1117:                            ; preds = %cond_destruct_end116
  br label %cond_destruct_end119

cond_destruct_alt2118:                            ; preds = %cond_destruct_end116
  br label %cond_destruct_end119

cond_destruct_end119:                             ; preds = %cond_destruct_alt2118, %cond_destruct_alt1117
  br i1 %cond.res57, label %cond_destruct_alt1120, label %cond_destruct_alt2121

cond_destruct_alt1120:                            ; preds = %cond_destruct_end119
  br label %cond_destruct_end122

cond_destruct_alt2121:                            ; preds = %cond_destruct_end119
  br label %cond_destruct_end122

cond_destruct_end122:                             ; preds = %cond_destruct_alt2121, %cond_destruct_alt1120
  br i1 %cond.res55, label %cond_destruct_alt1123, label %cond_destruct_alt2124

cond_destruct_alt1123:                            ; preds = %cond_destruct_end122
  br label %cond_destruct_end125

cond_destruct_alt2124:                            ; preds = %cond_destruct_end122
  br label %cond_destruct_end125

cond_destruct_end125:                             ; preds = %cond_destruct_alt2124, %cond_destruct_alt1123
  br i1 %cond.res53, label %cond_destruct_alt1126, label %cond_destruct_alt2127

cond_destruct_alt1126:                            ; preds = %cond_destruct_end125
  br label %cond_destruct_end128

cond_destruct_alt2127:                            ; preds = %cond_destruct_end125
  br label %cond_destruct_end128

cond_destruct_end128:                             ; preds = %cond_destruct_alt2127, %cond_destruct_alt1126
  br i1 %cond.res51, label %cond_destruct_alt1129, label %cond_destruct_alt2130

cond_destruct_alt1129:                            ; preds = %cond_destruct_end128
  br label %cond_destruct_end131

cond_destruct_alt2130:                            ; preds = %cond_destruct_end128
  br label %cond_destruct_end131

cond_destruct_end131:                             ; preds = %cond_destruct_alt2130, %cond_destruct_alt1129
  br i1 %cond.res49, label %cond_destruct_alt1132, label %cond_destruct_alt2133

cond_destruct_alt1132:                            ; preds = %cond_destruct_end131
  br label %cond_destruct_end134

cond_destruct_alt2133:                            ; preds = %cond_destruct_end131
  br label %cond_destruct_end134

cond_destruct_end134:                             ; preds = %cond_destruct_alt2133, %cond_destruct_alt1132
  br i1 %cond.res47, label %cond_destruct_alt1135, label %cond_destruct_alt2136

cond_destruct_alt1135:                            ; preds = %cond_destruct_end134
  br label %cond_destruct_end137

cond_destruct_alt2136:                            ; preds = %cond_destruct_end134
  br label %cond_destruct_end137

cond_destruct_end137:                             ; preds = %cond_destruct_alt2136, %cond_destruct_alt1135
  br i1 %cond.res45, label %cond_destruct_alt1138, label %cond_destruct_alt2139

cond_destruct_alt1138:                            ; preds = %cond_destruct_end137
  br label %cond_destruct_end140

cond_destruct_alt2139:                            ; preds = %cond_destruct_end137
  br label %cond_destruct_end140

cond_destruct_end140:                             ; preds = %cond_destruct_alt2139, %cond_destruct_alt1138
  br i1 %cond.res43, label %cond_destruct_alt1141, label %cond_destruct_alt2142

cond_destruct_alt1141:                            ; preds = %cond_destruct_end140
  br label %cond_destruct_end143

cond_destruct_alt2142:                            ; preds = %cond_destruct_end140
  br label %cond_destruct_end143

cond_destruct_end143:                             ; preds = %cond_destruct_alt2142, %cond_destruct_alt1141
  br i1 %cond.res, label %cond_destruct_alt1144, label %cond_destruct_alt2145

cond_destruct_alt1144:                            ; preds = %cond_destruct_end143
  br label %cond_destruct_end146

cond_destruct_alt2145:                            ; preds = %cond_destruct_end143
  br label %cond_destruct_end146

cond_destruct_end146:                             ; preds = %cond_destruct_alt2145, %cond_destruct_alt1144
  br i1 %6, label %cond_destruct_alt1147, label %cond_destruct_alt2148

cond_destruct_alt1147:                            ; preds = %cond_destruct_end146
  br label %cond_destruct_end149

cond_destruct_alt2148:                            ; preds = %cond_destruct_end146
  br label %cond_destruct_end149

cond_destruct_end149:                             ; preds = %cond_destruct_alt2148, %cond_destruct_alt1147
  unreachable
}

declare %Node @comp_parser_mkFunAppExpr(%Location*, %Node, %Node)

declare %Node @comp_parser_mkDotExpr(%Location*, %Node, %StringRef)

; Function Attrs: inlinehint nounwind
define internal void @parseIdOrOper(%String* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %withEqual) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %tmp.v = alloca %TokenType
  %tmp.v5 = alloca %TokenType
  %tmp.v10 = alloca %TokenType
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  %"$tmpC" = alloca %String
  %tmp.StringRef15 = alloca %StringRef
  %"$tmpC16" = alloca %Token
  %tmp.StringRef17 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 37)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %4 = load %String** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 2
  call void @ctor209(%String* %4, %String* %7)
  ret void

if_else:                                          ; preds = %if_block
  br label %if_block1

if_end:                                           ; preds = %if_end4, %dumy_block
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %9 = getelementptr inbounds %StringRef* %tmp.StringRef15, i32 0, i32 0
  %10 = getelementptr inbounds %StringRef* %tmp.StringRef15, i32 0, i32 1
  store i8* getelementptr inbounds ([26 x i8]* @str615, i32 0, i32 0), i8** %9
  store i8* getelementptr inbounds ([26 x i8]* @str615, i32 0, i32 25), i8** %10
  %11 = load %StringRef* %tmp.StringRef15
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 0
  call void @"pre_*506"(%Token* %"$tmpC16", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %13)
  %14 = getelementptr inbounds %Token* %"$tmpC16", i32 0, i32 1
  %15 = load %TokenType* %14
  %16 = getelementptr inbounds %StringRef* %tmp.StringRef17, i32 0, i32 0
  %17 = getelementptr inbounds %StringRef* %tmp.StringRef17, i32 0, i32 1
  store i8* getelementptr inbounds ([35 x i8]* @str616, i32 0, i32 0), i8** %16
  store i8* getelementptr inbounds ([35 x i8]* @str616, i32 0, i32 34), i8** %17
  %18 = load %StringRef* %tmp.StringRef17
  call void @toString608(%String* %"$tmpC", %StringRef %11, %TokenType %15, %StringRef %18)
  call void @reportError510(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %String* %"$tmpC")
  call void @dtor214(%String* %"$tmpC")
  call void @dtor387(%Token* %"$tmpC16")
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_else
  %19 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v5, i32 38)
  %20 = load %TokenType* %tmp.v5
  %21 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %19, %TokenType %20)
  br i1 %21, label %if_then2, label %if_else3

if_then2:                                         ; preds = %if_block1
  %22 = load %String** %_result.addr
  %23 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %24 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %23, i32 0, i32 1
  %25 = getelementptr inbounds %Token* %24, i32 0, i32 2
  call void @ctor209(%String* %22, %String* %25)
  ret void

if_else3:                                         ; preds = %if_block1
  br label %if_block7

if_end4:                                          ; preds = %cond_destruct_end14, %dumy_block6
  br label %if_end

dumy_block6:                                      ; No predecessors!
  br label %if_end4

if_block7:                                        ; preds = %if_else3
  %26 = load i1* %withEqual.addr
  br i1 %26, label %cond.true, label %cond.false

if_then8:                                         ; preds = %cond.end
  %27 = load %String** %_result.addr
  %28 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %29 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([2 x i8]* @str614, i32 0, i32 0), i8** %28
  store i8* getelementptr inbounds ([2 x i8]* @str614, i32 0, i32 1), i8** %29
  %30 = load %StringRef* %tmp.StringRef
  store %StringRef %30, %StringRef* %"$tmpForRef"
  call void @ctor328(%String* %27, %StringRef* %"$tmpForRef")
  br i1 %26, label %cond_destruct_alt1, label %cond_destruct_alt2

if_end9:                                          ; preds = %dumy_block11, %cond.end
  br i1 %26, label %cond_destruct_alt112, label %cond_destruct_alt213

cond.true:                                        ; preds = %if_block7
  %31 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v10, i32 36)
  %32 = load %TokenType* %tmp.v10
  %33 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %31, %TokenType %32)
  br label %cond.end

cond.false:                                       ; preds = %if_block7
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %33, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then8, label %if_end9

cond_destruct_alt1:                               ; preds = %if_then8
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_then8
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  ret void

dumy_block11:                                     ; No predecessors!
  br label %if_end9

cond_destruct_alt112:                             ; preds = %if_end9
  br label %cond_destruct_end14

cond_destruct_alt213:                             ; preds = %if_end9
  br label %cond_destruct_end14

cond_destruct_end14:                              ; preds = %cond_destruct_alt213, %cond_destruct_alt112
  br label %if_end4
}

declare %Node @comp_parser_mkPrefixOp(%Location*, %StringRef, %Node)

; Function Attrs: inlinehint nounwind
define internal void @parseIdOrOperOpt(%String* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %withEqual) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %tmp.v = alloca %TokenType
  %tmp.v5 = alloca %TokenType
  %tmp.v11 = alloca %TokenType
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 37)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %4 = load %String** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 2
  call void @ctor209(%String* %4, %String* %7)
  ret void

if_else:                                          ; preds = %if_block
  br label %if_block1

if_end:                                           ; preds = %if_end4, %dumy_block
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_else
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v5, i32 38)
  %9 = load %TokenType* %tmp.v5
  %10 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %TokenType %9)
  br i1 %10, label %if_then2, label %if_else3

if_then2:                                         ; preds = %if_block1
  %11 = load %String** %_result.addr
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 1
  %14 = getelementptr inbounds %Token* %13, i32 0, i32 2
  call void @ctor209(%String* %11, %String* %14)
  ret void

if_else3:                                         ; preds = %if_block1
  br label %if_block7

if_end4:                                          ; preds = %cond_destruct_end19, %dumy_block6
  br label %if_end

dumy_block6:                                      ; No predecessors!
  br label %if_end4

if_block7:                                        ; preds = %if_else3
  %15 = load i1* %withEqual.addr
  br i1 %15, label %cond.true, label %cond.false

if_then8:                                         ; preds = %cond.end
  %16 = load %String** %_result.addr
  %17 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %18 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([2 x i8]* @str617, i32 0, i32 0), i8** %17
  store i8* getelementptr inbounds ([2 x i8]* @str617, i32 0, i32 1), i8** %18
  %19 = load %StringRef* %tmp.StringRef
  store %StringRef %19, %StringRef* %"$tmpForRef"
  call void @ctor328(%String* %16, %StringRef* %"$tmpForRef")
  br i1 %15, label %cond_destruct_alt1, label %cond_destruct_alt2

if_else9:                                         ; preds = %cond.end
  %20 = load %String** %_result.addr
  call void @ctor183(%String* %20)
  br i1 %15, label %cond_destruct_alt113, label %cond_destruct_alt214

if_end10:                                         ; preds = %dumy_block16, %dumy_block12
  br i1 %15, label %cond_destruct_alt117, label %cond_destruct_alt218

cond.true:                                        ; preds = %if_block7
  %21 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v11, i32 36)
  %22 = load %TokenType* %tmp.v11
  %23 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %21, %TokenType %22)
  br label %cond.end

cond.false:                                       ; preds = %if_block7
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %23, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then8, label %if_else9

cond_destruct_alt1:                               ; preds = %if_then8
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_then8
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  ret void

dumy_block12:                                     ; No predecessors!
  br label %if_end10

cond_destruct_alt113:                             ; preds = %if_else9
  br label %cond_destruct_end15

cond_destruct_alt214:                             ; preds = %if_else9
  br label %cond_destruct_end15

cond_destruct_end15:                              ; preds = %cond_destruct_alt214, %cond_destruct_alt113
  ret void

dumy_block16:                                     ; No predecessors!
  br label %if_end10

cond_destruct_alt117:                             ; preds = %if_end10
  br label %cond_destruct_end19

cond_destruct_alt218:                             ; preds = %if_end10
  br label %cond_destruct_end19

cond_destruct_end19:                              ; preds = %cond_destruct_alt218, %cond_destruct_alt117
  br label %if_end4
}

declare %Node @comp_parser_mkInfixOp(%Location*, %Node, %StringRef, %Node)

declare %Node @comp_parser_mkPostfixOp(%Location*, %Node, %StringRef)

; Function Attrs: inlinehint nounwind
define internal i1 @parseImportLineOpt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v1 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 3)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %Node** %res.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseImportNames(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5)
  call void @"=566"(%Node* %4, %Node* %"$tmpC")
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v1, i32 32)
  %7 = load %TokenType* %tmp.v1
  %8 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseImportNames(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %Node
  %tmp.v = alloca %TokenType
  %"$tmpForRef1" = alloca %Node
  %"$tmpC2" = alloca %Node
  br label %code

code:                                             ; preds = %0
  call void @ctor568(%Node* %res)
  %1 = load %Node* %res
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseImportName(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %Node* %"$tmpC"
  %4 = call %Node @comp_parser_addToNodeList(%Node %1, %Node %3)
  store %Node %4, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef")
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 33)
  %6 = load %TokenType* %tmp.v
  %7 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %TokenType %6)
  br i1 %7, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %8 = load %Node* %res
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseImportName(%Node* %"$tmpC2", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9)
  %10 = load %Node* %"$tmpC2"
  %11 = call %Node @comp_parser_addToNodeList(%Node %8, %Node %10)
  store %Node %11, %Node* %"$tmpForRef1"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef1")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %12 = load %Node** %_result.addr
  call void @ctor564(%Node* %12, %Node* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseImportName(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %loc = alloca %Location
  %id = alloca %String
  %toImport = alloca %Node
  %declNames = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %Location
  %"$tmpC1" = alloca %Location
  %"$tmpC2" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdEqualOpt(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseQidOrString(%Node* %toImport, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3)
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseImportDeclNamesOpt(%Node* %declNames, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4)
  %5 = load %Node** %_result.addr
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC1", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6)
  call void @span(%Location* %"$tmpC", %Location* %loc, %Location* %"$tmpC1")
  call void @asStringRef(%StringRef* %"$tmpC2", %String* %id)
  %7 = load %StringRef* %"$tmpC2"
  %8 = load %Node* %toImport
  %9 = load %Node* %declNames
  %10 = call %Node @comp_parser_mkImportName(%Location* %"$tmpC", %StringRef %7, %Node %8, %Node %9)
  store %Node %10, %Node* %"$tmpForRef"
  call void @ctor564(%Node* %5, %Node* %"$tmpForRef")
  call void @dtor214(%String* %id)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor214(%String* %id)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseIdEqualOpt(%String* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %id = alloca %String
  %tmp.v = alloca %TokenType
  %tmp.v1 = alloca %TokenType
  %tmp.v2 = alloca %TokenType
  %tmp.v3 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  call void @ctor183(%String* %id)
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 37)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v2, i32 37)
  %5 = load %TokenType* %tmp.v2
  %6 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, %TokenType %5)
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %8 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 1
  %9 = getelementptr inbounds %Token* %8, i32 0, i32 2
  %10 = call %String* @"=245"(%String* %id, %String* %9)
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v3, i32 36)
  %12 = load %TokenType* %tmp.v3
  %13 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, %TokenType %12)
  br label %if_end

if_end:                                           ; preds = %if_then, %cond.end
  br i1 %3, label %cond_destruct_alt1, label %cond_destruct_alt2

cond.true:                                        ; preds = %if_block
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v1, i32 36)
  %15 = load %TokenType* %tmp.v1
  %16 = call i1 @next2Is(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, %TokenType %15)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %16, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end

cond_destruct_alt1:                               ; preds = %if_end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  %17 = load %String** %_result.addr
  call void @ctor209(%String* %17, %String* %id)
  call void @dtor214(%String* %id)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor214(%String* %id)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseQidOrString(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 40)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %Node** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 0
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %9 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, i32 0, i32 1
  %10 = getelementptr inbounds %Token* %9, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC", %String* %10)
  %11 = load %StringRef* %"$tmpC"
  %12 = call %Node @comp_parser_mkStringLiteral(%Location* %7, %StringRef %11)
  store %Node %12, %Node* %"$tmpForRef"
  call void @ctor564(%Node* %4, %Node* %"$tmpForRef")
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %13 = load %Node** %_result.addr
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseQualifiedName(%Node* %13, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 false)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseImportDeclNamesOpt(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res = alloca %Node
  %tmp.v = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v1 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  call void @ctor568(%Node* %res)
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 29)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdOrOperListNode(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4)
  call void @"=566"(%Node* %res, %Node* %"$tmpC")
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v1, i32 30)
  %6 = load %TokenType* %tmp.v1
  %7 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %TokenType %6)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  %8 = load %Node** %_result.addr
  call void @ctor564(%Node* %8, %Node* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseIdOrOperListNode(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res = alloca %Node
  %id = alloca %String
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %tmp.v = alloca %TokenType
  %"$tmpC1" = alloca %String
  %"$tmpForRef2" = alloca %Node
  %"$tmpC3" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  call void @ctor568(%Node* %res)
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdOrOper(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i1 true)
  %2 = load %Node* %res
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %Token* %4, i32 0, i32 0
  call void @asStringRef(%StringRef* %"$tmpC", %String* %id)
  %6 = load %StringRef* %"$tmpC"
  %7 = call %Node @comp_parser_mkIdentifier(%Location* %5, %StringRef %6)
  %8 = call %Node @comp_parser_addToNodeList(%Node %2, %Node %7)
  store %Node %8, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef")
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 33)
  %10 = load %TokenType* %tmp.v
  %11 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, %TokenType %10)
  br i1 %11, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdOrOper(%String* %"$tmpC1", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i1 true)
  %13 = call %String* @"=245"(%String* %id, %String* %"$tmpC1")
  call void @dtor214(%String* %"$tmpC1")
  %14 = load %Node* %res
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %16 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, i32 0, i32 1
  %17 = getelementptr inbounds %Token* %16, i32 0, i32 0
  call void @asStringRef(%StringRef* %"$tmpC3", %String* %id)
  %18 = load %StringRef* %"$tmpC3"
  %19 = call %Node @comp_parser_mkIdentifier(%Location* %17, %StringRef %18)
  %20 = call %Node @comp_parser_addToNodeList(%Node %14, %Node %19)
  store %Node %20, %Node* %"$tmpForRef2"
  call void @"=566"(%Node* %res, %Node* %"$tmpForRef2")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %21 = load %Node** %_result.addr
  call void @ctor564(%Node* %21, %Node* %res)
  call void @dtor214(%String* %id)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor214(%String* %id)
  ret void
}

declare %Node @comp_parser_mkImportName(%Location*, %StringRef, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseUsingDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %id = alloca %String
  %usingNode = alloca %Node
  %"$tmpC" = alloca %Node
  %"$tmpC4" = alloca %Node
  %tmp.v5 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC6" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 9)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 0
  call void @ctor217(%Location* %loc, %Location* %7)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdEqualOpt(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  call void @ctor568(%Node* %usingNode)
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %9 = call i1 @isEmpty373(%String* %id)
  br i1 %9, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseQualifiedName(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, i1 true)
  call void @"=566"(%Node* %usingNode, %Node* %"$tmpC")
  br label %if_end3

if_else:                                          ; preds = %if_block1
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC4", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, i1 true)
  call void @"=566"(%Node* %usingNode, %Node* %"$tmpC4")
  br label %if_end3

if_end3:                                          ; preds = %if_else, %if_then2
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 1
  %14 = getelementptr inbounds %Token* %13, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %14)
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v5, i32 32)
  %16 = load %TokenType* %tmp.v5
  %17 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, %TokenType %16)
  %18 = load %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC6", %String* %id)
  %19 = load %StringRef* %"$tmpC6"
  %20 = load %Node* %usingNode
  %21 = call %Node @comp_parser_mkUsing(%Location* %loc, %StringRef %19, %Node %20)
  store %Node %21, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %18, %Node* %"$tmpForRef")
  call void @dtor214(%String* %id)
  ret i1 true

dumy_block7:                                      ; No predecessors!
  call void @dtor214(%String* %id)
  unreachable
}

declare %Node @comp_parser_mkUsing(%Location*, %StringRef, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parsePackageDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %id = alloca %String
  %tmp.v1 = alloca %TokenType
  %children = alloca %Node
  %tmp.v2 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 8)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 0
  call void @ctor217(%Location* %loc, %Location* %7)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v1, i32 25)
  %10 = load %TokenType* %tmp.v1
  %11 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, %TokenType %10)
  call void @ctor568(%Node* %children)
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseStmts(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i1 true, %Node* %children)
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v2, i32 26)
  %14 = load %TokenType* %tmp.v2
  %15 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, %TokenType %14)
  %16 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %17 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %16, i32 0, i32 1
  %18 = getelementptr inbounds %Token* %17, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %18)
  %19 = load %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC", %String* %id)
  %20 = load %StringRef* %"$tmpC"
  %21 = load %Node* %children
  %22 = call %Node @comp_parser_mkPackage(%Location* %loc, %StringRef %20, %Node %21)
  store %Node %22, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %19, %Node* %"$tmpForRef")
  call void @dtor214(%String* %id)
  ret i1 true

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block3:                                      ; No predecessors!
  call void @dtor214(%String* %id)
  unreachable
}

declare %Node @comp_parser_mkPackage(%Location*, %StringRef, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseClassDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %id = alloca %String
  %formals = alloca %Node
  %ifClause = alloca %Node
  %tmp.v1 = alloca %TokenType
  %children = alloca %Node
  %tmp.v2 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %tmp.v3 = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 4)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 0
  call void @ctor217(%Location* %loc, %Location* %7)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseFormalsOpt(%Node* %formals, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 false)
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIfClauseOpt(%Node* %ifClause, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10)
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v1, i32 25)
  %12 = load %TokenType* %tmp.v1
  %13 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, %TokenType %12)
  call void @ctor568(%Node* %children)
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseStmts(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 true, %Node* %children)
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v2, i32 26)
  %16 = load %TokenType* %tmp.v2
  %17 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, %TokenType %16)
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %19 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18, i32 0, i32 1
  %20 = getelementptr inbounds %Token* %19, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %20)
  %21 = load %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC", %String* %id)
  %22 = load %StringRef* %"$tmpC"
  %23 = load %Node* %formals
  call void @ctor568(%Node* %tmp.v3)
  %24 = load %Node* %tmp.v3
  %25 = load %Node* %ifClause
  %26 = load %Node* %children
  %27 = call %Node @comp_parser_mkClass(%Location* %loc, %StringRef %22, %Node %23, %Node %24, %Node %25, %Node %26)
  store %Node %27, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %21, %Node* %"$tmpForRef")
  call void @dtor214(%String* %id)
  ret i1 true

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block4:                                      ; No predecessors!
  call void @dtor214(%String* %id)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @parseIfClauseOpt(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 16)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %Node** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %4, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i1 true)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %6 = load %Node** %_result.addr
  call void @ctor568(%Node* %6)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkClass(%Location*, %StringRef, %Node, %Node, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseDatatypeDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %id = alloca %String
  %formals = alloca %Node
  %tmp.v4 = alloca %TokenType
  %underlyingData = alloca %Node
  %ifClause = alloca %Node
  %tmp.v5 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %tmp.v6 = alloca %Node
  %ifClause7 = alloca %Node
  %tmp.v8 = alloca %TokenType
  %children = alloca %Node
  %tmp.v9 = alloca %TokenType
  %tmp.v10 = alloca %TokenType
  %tmp.v14 = alloca %TokenType
  %tmp.v16 = alloca %TokenType
  %"$tmpForRef17" = alloca %Node
  %"$tmpC18" = alloca %StringRef
  %tmp.v19 = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 6)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 0
  call void @ctor217(%Location* %loc, %Location* %7)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseFormalsOpt(%Node* %formals, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 false)
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v4, i32 36)
  %11 = load %TokenType* %tmp.v4
  %12 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, %TokenType %11)
  br i1 %12, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %underlyingData, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, i1 true)
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIfClauseOpt(%Node* %ifClause, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14)
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v5, i32 32)
  %16 = load %TokenType* %tmp.v5
  %17 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, %TokenType %16)
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %19 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18, i32 0, i32 1
  %20 = getelementptr inbounds %Token* %19, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %20)
  %21 = load %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC", %String* %id)
  %22 = load %StringRef* %"$tmpC"
  %23 = load %Node* %formals
  %24 = load %Node* %underlyingData
  %25 = load %Node* %ifClause
  call void @ctor568(%Node* %tmp.v6)
  %26 = load %Node* %tmp.v6
  %27 = call %Node @comp_parser_mkClass(%Location* %loc, %StringRef %22, %Node %23, %Node %24, %Node %25, %Node %26)
  store %Node %27, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %21, %Node* %"$tmpForRef")
  br label %if_end3

if_else:                                          ; preds = %if_block1
  %28 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIfClauseOpt(%Node* %ifClause7, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %28)
  %29 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v8, i32 25)
  %30 = load %TokenType* %tmp.v8
  %31 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %29, %TokenType %30)
  call void @ctor568(%Node* %children)
  %32 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseFormal(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %32, i1 true, %Node* %children)
  br label %while_block

if_end3:                                          ; preds = %cond_destruct_end, %if_then2
  call void @dtor214(%String* %id)
  ret i1 true

while_block:                                      ; preds = %while_step, %if_else
  %33 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v9, i32 33)
  %34 = load %TokenType* %tmp.v9
  %35 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %33, %TokenType %34)
  br i1 %35, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  br label %if_block11

while_step:                                       ; preds = %if_end13
  br label %while_block

while_end:                                        ; preds = %if_then12, %cond.end
  br i1 %35, label %cond_destruct_alt1, label %cond_destruct_alt2

cond.true:                                        ; preds = %while_block
  br label %cond.end

cond.false:                                       ; preds = %while_block
  %36 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v10, i32 32)
  %37 = load %TokenType* %tmp.v10
  %38 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %36, %TokenType %37)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ true, %cond.true ], [ %38, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end

if_block11:                                       ; preds = %while_body
  %39 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v14, i32 26)
  %40 = load %TokenType* %tmp.v14
  %41 = call i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %39, %TokenType %40)
  br i1 %41, label %if_then12, label %if_end13

if_then12:                                        ; preds = %if_block11
  br label %while_end

if_end13:                                         ; preds = %dumy_block15, %if_block11
  %42 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseFormal(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %42, i1 true, %Node* %children)
  br label %while_step

dumy_block15:                                     ; No predecessors!
  br label %if_end13

cond_destruct_alt1:                               ; preds = %while_end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %while_end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  %43 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @consumeSemis(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %43)
  %44 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v16, i32 26)
  %45 = load %TokenType* %tmp.v16
  %46 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %44, %TokenType %45)
  %47 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %48 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %47, i32 0, i32 1
  %49 = getelementptr inbounds %Token* %48, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %49)
  %50 = load %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC18", %String* %id)
  %51 = load %StringRef* %"$tmpC18"
  %52 = load %Node* %formals
  call void @ctor568(%Node* %tmp.v19)
  %53 = load %Node* %tmp.v19
  %54 = load %Node* %ifClause7
  %55 = load %Node* %children
  %56 = call %Node @comp_parser_mkClass(%Location* %loc, %StringRef %51, %Node %52, %Node %53, %Node %54, %Node %55)
  store %Node %56, %Node* %"$tmpForRef17"
  call void @"=566"(%Node* %50, %Node* %"$tmpForRef17")
  br label %if_end3

dumy_block20:                                     ; No predecessors!
  call void @dtor214(%String* %id)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal i1 @parseConceptDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %id = alloca %String
  %tmp.v1 = alloca %TokenType
  %paramName = alloca %String
  %baseConcept = alloca %Node
  %tmp.v2 = alloca %TokenType
  %ifClause = alloca %Node
  %tmp.v3 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %"$tmpC4" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 5)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 0
  call void @ctor217(%Location* %loc, %Location* %7)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v1, i32 29)
  %10 = load %TokenType* %tmp.v1
  %11 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, %TokenType %10)
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %paramName, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12)
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseTypeNode(%Node* %baseConcept, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13)
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v2, i32 30)
  %15 = load %TokenType* %tmp.v2
  %16 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, %TokenType %15)
  %17 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIfClauseOpt(%Node* %ifClause, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %17)
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v3, i32 32)
  %19 = load %TokenType* %tmp.v3
  %20 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18, %TokenType %19)
  %21 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %22 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %21, i32 0, i32 1
  %23 = getelementptr inbounds %Token* %22, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %23)
  %24 = load %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC", %String* %id)
  %25 = load %StringRef* %"$tmpC"
  call void @asStringRef(%StringRef* %"$tmpC4", %String* %paramName)
  %26 = load %StringRef* %"$tmpC4"
  %27 = load %Node* %baseConcept
  %28 = load %Node* %ifClause
  %29 = call %Node @comp_parser_mkConcept(%Location* %loc, %StringRef %25, %StringRef %26, %Node %27, %Node %28)
  store %Node %29, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %24, %Node* %"$tmpForRef")
  call void @dtor214(%String* %paramName)
  call void @dtor214(%String* %id)
  ret i1 true

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block5:                                      ; No predecessors!
  call void @dtor214(%String* %paramName)
  call void @dtor214(%String* %id)
  unreachable
}

declare %Node @comp_parser_mkConcept(%Location*, %StringRef, %StringRef, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseVarDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %ids = alloca %"Vector[LocString]"
  %typeNode = alloca %Node
  %init = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v8 = alloca %TokenType
  %"$tmpC9" = alloca %Node
  %tmp.v10 = alloca %TokenType
  %"$tmpC11" = alloca %Node
  %tmp.v12 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 10)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdList(%"Vector[LocString]"* %ids, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5)
  call void @ctor568(%Node* %typeNode)
  call void @ctor568(%Node* %init)
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v4, i32 31)
  %7 = load %TokenType* %tmp.v4
  %8 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  br i1 %8, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 false)
  call void @"=566"(%Node* %typeNode, %Node* %"$tmpC")
  br label %if_block5

if_else:                                          ; preds = %if_block1
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v10, i32 36)
  %11 = load %TokenType* %tmp.v10
  %12 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, %TokenType %11)
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC11", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, i1 true)
  call void @"=566"(%Node* %init, %Node* %"$tmpC11")
  br label %if_end3

if_end3:                                          ; preds = %if_else, %if_end7
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v12, i32 32)
  %15 = load %TokenType* %tmp.v12
  %16 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, %TokenType %15)
  %17 = load %Node* %typeNode
  %18 = load %Node* %init
  %19 = load %Node** %res.addr
  call void @createFormals(%"Vector[LocString]"* %ids, %Node %17, %Node %18, i1 true, %Node* %19)
  call void @dtor598(%"Vector[LocString]"* %ids)
  ret i1 true

if_block5:                                        ; preds = %if_then2
  %20 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v8, i32 36)
  %21 = load %TokenType* %tmp.v8
  %22 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %20, %TokenType %21)
  br i1 %22, label %if_then6, label %if_end7

if_then6:                                         ; preds = %if_block5
  %23 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC9", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %23, i1 true)
  call void @"=566"(%Node* %init, %Node* %"$tmpC9")
  br label %if_end7

if_end7:                                          ; preds = %if_then6, %if_block5
  br label %if_end3

dumy_block13:                                     ; No predecessors!
  call void @dtor598(%"Vector[LocString]"* %ids)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal i1 @parseFunDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %id = alloca %String
  %formals = alloca %Node
  %retType = alloca %Node
  %body = alloca %Node
  %bodyExp = alloca %Node
  %ifClause = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %"$tmpC5" = alloca %Node
  %tmp.v6 = alloca %TokenType
  %"$tmpC7" = alloca %Node
  %"$tmpC8" = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC9" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 7)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 0
  call void @ctor217(%Location* %loc, %Location* %7)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseFunNameString(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseFormalsOpt(%Node* %formals, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 false)
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseTypeNode(%Node* %retType, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10)
  call void @ctor568(%Node* %body)
  call void @ctor568(%Node* %bodyExp)
  call void @ctor568(%Node* %ifClause)
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v4, i32 36)
  %12 = load %TokenType* %tmp.v4
  %13 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, %TokenType %12)
  br i1 %13, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 true)
  call void @"=566"(%Node* %bodyExp, %Node* %"$tmpC")
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIfClauseOpt(%Node* %"$tmpC5", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15)
  call void @"=566"(%Node* %ifClause, %Node* %"$tmpC5")
  %16 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v6, i32 32)
  %17 = load %TokenType* %tmp.v6
  %18 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %16, %TokenType %17)
  br label %if_end3

if_else:                                          ; preds = %if_block1
  %19 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIfClauseOpt(%Node* %"$tmpC7", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %19)
  call void @"=566"(%Node* %ifClause, %Node* %"$tmpC7")
  %20 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseFunBody(%Node* %"$tmpC8", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %20)
  call void @"=566"(%Node* %body, %Node* %"$tmpC8")
  br label %if_end3

if_end3:                                          ; preds = %if_else, %if_then2
  %21 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %22 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %21, i32 0, i32 1
  %23 = getelementptr inbounds %Token* %22, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %23)
  %24 = load %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC9", %String* %id)
  %25 = load %StringRef* %"$tmpC9"
  %26 = load %Node* %formals
  %27 = load %Node* %retType
  %28 = load %Node* %body
  %29 = load %Node* %bodyExp
  %30 = load %Node* %ifClause
  %31 = call %Node @comp_parser_mkFun(%Location* %loc, %StringRef %25, %Node %26, %Node %27, %Node %28, %Node %29, %Node %30)
  store %Node %31, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %24, %Node* %"$tmpForRef")
  call void @dtor214(%String* %id)
  ret i1 true

dumy_block10:                                     ; No predecessors!
  call void @dtor214(%String* %id)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @parseFunNameString(%String* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  %tmp.v1 = alloca %TokenType
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 29)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v1, i32 30)
  %5 = load %TokenType* %tmp.v1
  %6 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, %TokenType %5)
  %7 = load %String** %_result.addr
  %8 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %9 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([3 x i8]* @str618, i32 0, i32 0), i8** %8
  store i8* getelementptr inbounds ([3 x i8]* @str618, i32 0, i32 2), i8** %9
  %10 = load %StringRef* %tmp.StringRef
  store %StringRef %10, %StringRef* %"$tmpForRef"
  call void @ctor328(%String* %7, %StringRef* %"$tmpForRef")
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %11 = load %String** %_result.addr
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdOrOper(%String* %11, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i1 true)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkFun(%Location*, %StringRef, %Node, %Node, %Node, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseExprStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = load %Node** %res.addr
  %3 = call i1 @parseExprOpt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %Node* %2, i1 true)
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @parseIfStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res, i1 %topLevel) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %topLevel.addr = alloca i1
  store i1 %topLevel, i1* %topLevel.addr
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %expr = alloca %Node
  %thenClause = alloca %Node
  %elseClause = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %"$tmpForRef" = alloca %Node
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  br label %if_block

if_block:                                         ; preds = %code
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 16)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %expr, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i1 true)
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %7 = load i1* %topLevel.addr
  call void @parseStmt(%Node* %thenClause, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, i1 %7)
  call void @ctor568(%Node* %elseClause)
  br label %if_block1

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

if_block1:                                        ; preds = %if_then
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v4, i32 24)
  %9 = load %TokenType* %tmp.v4
  %10 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %TokenType %9)
  br i1 %10, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %12 = load i1* %topLevel.addr
  call void @parseStmt(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, i1 %12)
  call void @"=566"(%Node* %elseClause, %Node* %"$tmpC")
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %14 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, i32 0, i32 1
  %15 = getelementptr inbounds %Token* %14, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %15)
  %16 = load %Node** %res.addr
  %17 = load %Node* %expr
  %18 = load %Node* %thenClause
  %19 = load %Node* %elseClause
  %20 = call %Node @comp_parser_mkIfStmt(%Location* %loc, %Node %17, %Node %18, %Node %19)
  store %Node %20, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %16, %Node* %"$tmpForRef")
  ret i1 true

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkIfStmt(%Location*, %Node, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseForStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res, i1 %topLevel) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %topLevel.addr = alloca i1
  store i1 %topLevel, i1* %topLevel.addr
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %id = alloca %String
  %typeNode = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v5 = alloca %TokenType
  %range = alloca %Node
  %action = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC6" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  br label %if_block

if_block:                                         ; preds = %code
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 15)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5)
  call void @ctor568(%Node* %typeNode)
  br label %if_block1

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

if_block1:                                        ; preds = %if_then
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v4, i32 31)
  %7 = load %TokenType* %tmp.v4
  %8 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  br i1 %8, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 false)
  call void @"=566"(%Node* %typeNode, %Node* %"$tmpC")
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v5, i32 36)
  %11 = load %TokenType* %tmp.v5
  %12 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, %TokenType %11)
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %range, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, i1 true)
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %15 = load i1* %topLevel.addr
  call void @parseStmt(%Node* %action, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 %15)
  %16 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %17 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %16, i32 0, i32 1
  %18 = getelementptr inbounds %Token* %17, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %18)
  %19 = load %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC6", %String* %id)
  %20 = load %StringRef* %"$tmpC6"
  %21 = load %Node* %typeNode
  %22 = load %Node* %range
  %23 = load %Node* %action
  %24 = call %Node @comp_parser_mkForStmt(%Location* %loc, %StringRef %20, %Node %21, %Node %22, %Node %23)
  store %Node %24, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %19, %Node* %"$tmpForRef")
  call void @dtor214(%String* %id)
  ret i1 true

dumy_block:                                       ; No predecessors!
  call void @dtor214(%String* %id)
  br label %if_end
}

declare %Node @comp_parser_mkForStmt(%Location*, %StringRef, %Node, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseWhileStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res, i1 %topLevel) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %topLevel.addr = alloca i1
  store i1 %topLevel, i1* %topLevel.addr
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %expr = alloca %Node
  %stepAction = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpC" = alloca %String
  %tmp.StringRef = alloca %StringRef
  %"$tmpC8" = alloca %Token
  %tmp.StringRef9 = alloca %StringRef
  %body = alloca %Node
  %"$tmpForRef" = alloca %Node
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  br label %if_block

if_block:                                         ; preds = %code
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 20)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %expr, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i1 true)
  call void @ctor568(%Node* %stepAction)
  br label %if_block1

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

if_block1:                                        ; preds = %if_then
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v4, i32 32)
  %7 = load %TokenType* %tmp.v4
  %8 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  br i1 %8, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  br label %if_block5

if_end3:                                          ; preds = %if_end7, %if_block1
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %10 = load i1* %topLevel.addr
  call void @parseStmt(%Node* %body, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 %10)
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %12 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, i32 0, i32 1
  %13 = getelementptr inbounds %Token* %12, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %13)
  %14 = load %Node** %res.addr
  %15 = load %Node* %expr
  %16 = load %Node* %stepAction
  %17 = load %Node* %body
  %18 = call %Node @comp_parser_mkWhileStmt(%Location* %loc, %Node %15, %Node %16, %Node %17)
  store %Node %18, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %14, %Node* %"$tmpForRef")
  ret i1 true

if_block5:                                        ; preds = %if_then2
  %19 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %20 = call i1 @parseExprOpt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %19, %Node* %stepAction, i1 true)
  %21 = xor i1 true, %20
  br i1 %21, label %cond.true, label %cond.false

if_then6:                                         ; preds = %cond.end
  %22 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %23 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %24 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([26 x i8]* @str619, i32 0, i32 0), i8** %23
  store i8* getelementptr inbounds ([26 x i8]* @str619, i32 0, i32 25), i8** %24
  %25 = load %StringRef* %tmp.StringRef
  %26 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %27 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %26, i32 0, i32 0
  call void @"pre_*506"(%Token* %"$tmpC8", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %27)
  %28 = getelementptr inbounds %Token* %"$tmpC8", i32 0, i32 1
  %29 = load %TokenType* %28
  %30 = getelementptr inbounds %StringRef* %tmp.StringRef9, i32 0, i32 0
  %31 = getelementptr inbounds %StringRef* %tmp.StringRef9, i32 0, i32 1
  store i8* getelementptr inbounds ([42 x i8]* @str620, i32 0, i32 0), i8** %30
  store i8* getelementptr inbounds ([42 x i8]* @str620, i32 0, i32 41), i8** %31
  %32 = load %StringRef* %tmp.StringRef9
  call void @toString608(%String* %"$tmpC", %StringRef %25, %TokenType %29, %StringRef %32)
  call void @reportError510(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %22, %String* %"$tmpC")
  call void @dtor214(%String* %"$tmpC")
  call void @dtor387(%Token* %"$tmpC8")
  br label %if_end7

if_end7:                                          ; preds = %if_then6, %cond.end
  br label %if_end3

cond.true:                                        ; preds = %if_block5
  %33 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %34 = load i1* %topLevel.addr
  %35 = call i1 @parseBlockStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %33, %Node* %stepAction, i1 %34)
  %36 = xor i1 true, %35
  br label %cond.end

cond.false:                                       ; preds = %if_block5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %36, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then6, label %if_end7

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkWhileStmt(%Location*, %Node, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseBreakStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %tmp.v1 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 11)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %Token* %5, i32 0, i32 0
  call void @ctor217(%Location* %loc, %Location* %6)
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v1, i32 32)
  %8 = load %TokenType* %tmp.v1
  %9 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, %TokenType %8)
  %10 = load %Node** %res.addr
  %11 = call %Node @comp_parser_mkBreakStmt(%Location* %loc)
  store %Node %11, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %10, %Node* %"$tmpForRef")
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkBreakStmt(%Location*)

; Function Attrs: inlinehint nounwind
define internal i1 @parseContinueStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %tmp.v1 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 13)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %Token* %5, i32 0, i32 0
  call void @ctor217(%Location* %loc, %Location* %6)
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v1, i32 32)
  %8 = load %TokenType* %tmp.v1
  %9 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, %TokenType %8)
  %10 = load %Node** %res.addr
  %11 = call %Node @comp_parser_mkContinueStmt(%Location* %loc)
  store %Node %11, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %10, %Node* %"$tmpForRef")
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkContinueStmt(%Location*)

; Function Attrs: inlinehint nounwind
define internal i1 @parseReturnStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %expr = alloca %Node
  %tmp.v3 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 17)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %Token* %5, i32 0, i32 0
  call void @ctor217(%Location* %loc, %Location* %6)
  call void @ctor568(%Node* %expr)
  br label %if_block1

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

if_block1:                                        ; preds = %if_then
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v3, i32 32)
  %8 = load %TokenType* %tmp.v3
  %9 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, %TokenType %8)
  br i1 %9, label %if_end2, label %if_else

if_else:                                          ; preds = %if_block1
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, i1 true)
  call void @"=566"(%Node* %expr, %Node* %"$tmpC")
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v4, i32 32)
  %12 = load %TokenType* %tmp.v4
  %13 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, %TokenType %12)
  br label %if_end2

if_end2:                                          ; preds = %if_else, %if_block1
  %14 = load %Node** %res.addr
  %15 = load %Node* %expr
  %16 = call %Node @comp_parser_mkReturnStmt(%Location* %loc, %Node %15)
  store %Node %16, %Node* %"$tmpForRef"
  call void @"=566"(%Node* %14, %Node* %"$tmpForRef")
  ret i1 true

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkReturnStmt(%Location*, %Node)

declare %Node @comp_parser_mkModifiers(%Location*, %Node, %Node)

declare %Node @comp_parser_mkModule(%Location*, %Node, %Node)

; Function Attrs: alwaysinline nounwind
define internal void @dtor623(%Node* %dest) #2 {
  %dest.addr = alloca %Node*
  store %Node* %dest, %Node** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: noinline nounwind
define %Node @spr_parserIf_parseExpression(%ParserContext* %ctx) #4 {
  %ctx.addr = alloca %ParserContext*
  store %ParserContext* %ctx, %ParserContext** %ctx.addr
  %"$tmpC" = alloca %Node
  br label %code

code:                                             ; preds = %0
  %1 = load %ParserContext** %ctx.addr
  %2 = getelementptr inbounds %ParserContext* %1, i32 0, i32 5
  call void @parseExpression(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %Node* %"$tmpC"
  ret %Node %3
}

; Function Attrs: inlinehint nounwind
define internal void @parseExpression(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res = alloca %Node
  %tmp.v = alloca %TokenType
  %tmp.v1 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %res, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i1 true)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v, i32 32)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor272(%TokenType* %tmp.v1, i32 0)
  %6 = load %TokenType* %tmp.v1
  %7 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %TokenType %6)
  %8 = load %Node** %_result.addr
  call void @ctor564(%Node* %8, %Node* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isOctalDigit(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  %2 = icmp sle i8 48, %1
  br i1 %2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %3 = load i8* %c.addr
  %4 = icmp sle i8 %3, 55
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %4, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal i1 @isBinDigit(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  %2 = icmp eq i8 %1, 48
  br i1 %2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  br label %cond.end

cond.false:                                       ; preds = %code
  %3 = load i8* %c.addr
  %4 = icmp eq i8 %3, 49
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ true, %cond.true ], [ %4, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: alwaysinline nounwind
define internal void @"=624"(%LocString* %dest, %LocString* %other) #2 {
  %dest.addr = alloca %LocString*
  store %LocString* %dest, %LocString** %dest.addr
  %other.addr = alloca %LocString*
  store %LocString* %other, %LocString** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LocString** %dest.addr
  %2 = getelementptr inbounds %LocString* %1, i32 0, i32 0
  %3 = load %LocString** %other.addr
  %4 = getelementptr inbounds %LocString* %3, i32 0, i32 0
  call void @"=625"(%"Tuple[Location/rtct, String/rtct]"* %2, %"Tuple[Location/rtct, String/rtct]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=625"(%"Tuple[Location/rtct, String/rtct]"* %dest, %"Tuple[Location/rtct, String/rtct]"* %other) #2 {
  %dest.addr = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %dest, %"Tuple[Location/rtct, String/rtct]"** %dest.addr
  %other.addr = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %other, %"Tuple[Location/rtct, String/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location/rtct, String/rtct]"** %dest.addr
  %2 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %1, i32 0, i32 0
  %3 = load %"Tuple[Location/rtct, String/rtct]"** %other.addr
  %4 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %3, i32 0, i32 0
  call void @"=237"(%Location* %2, %Location* %4)
  %5 = load %"Tuple[Location/rtct, String/rtct]"** %dest.addr
  %6 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %5, i32 0, i32 1
  %7 = load %"Tuple[Location/rtct, String/rtct]"** %other.addr
  %8 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %7, i32 0, i32 1
  %9 = call %String* @"=245"(%String* %6, %String* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==626"(%LocString* %this, %LocString* %other) #2 {
  %this.addr = alloca %LocString*
  store %LocString* %this, %LocString** %this.addr
  %other.addr = alloca %LocString*
  store %LocString* %other, %LocString** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LocString** %this.addr
  %2 = getelementptr inbounds %LocString* %1, i32 0, i32 0
  %3 = load %LocString** %other.addr
  %4 = getelementptr inbounds %LocString* %3, i32 0, i32 0
  %5 = call i1 @"==627"(%"Tuple[Location/rtct, String/rtct]"* %2, %"Tuple[Location/rtct, String/rtct]"* %4)
  ret i1 %5
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==627"(%"Tuple[Location/rtct, String/rtct]"* %this, %"Tuple[Location/rtct, String/rtct]"* %other) #2 {
  %this.addr = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %this, %"Tuple[Location/rtct, String/rtct]"** %this.addr
  %other.addr = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %other, %"Tuple[Location/rtct, String/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location/rtct, String/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %1, i32 0, i32 0
  %3 = load %"Tuple[Location/rtct, String/rtct]"** %other.addr
  %4 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %3, i32 0, i32 0
  %5 = call i1 @"==482"(%Location* %2, %Location* %4)
  br i1 %5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %6 = load %"Tuple[Location/rtct, String/rtct]"** %this.addr
  %7 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %6, i32 0, i32 1
  %8 = load %"Tuple[Location/rtct, String/rtct]"** %other.addr
  %9 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %8, i32 0, i32 1
  %10 = call i1 @"==491"(%String* %7, %String* %9)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==628"(%Node* %this, %Node* %other) #2 {
  %this.addr = alloca %Node*
  store %Node* %this, %Node** %this.addr
  %other.addr = alloca %Node*
  store %Node* %other, %Node** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Node** %this.addr
  %2 = getelementptr inbounds %Node* %1, i32 0, i32 0
  %3 = load %Node** %other.addr
  %4 = getelementptr inbounds %Node* %3, i32 0, i32 0
  %5 = call i1 @"==629"(%UntypedPtr* %2, %UntypedPtr* %4)
  ret i1 %5
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==629"(%UntypedPtr* %this, %UntypedPtr* %other) #2 {
  %this.addr = alloca %UntypedPtr*
  store %UntypedPtr* %this, %UntypedPtr** %this.addr
  %other.addr = alloca %UntypedPtr*
  store %UntypedPtr* %other, %UntypedPtr** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %UntypedPtr** %this.addr
  %2 = getelementptr inbounds %UntypedPtr* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %UntypedPtr** %other.addr
  %5 = getelementptr inbounds %UntypedPtr* %4, i32 0, i32 0
  %6 = load i8** %5
  %7 = call i1 @implOpRefEQ(i8* %3, i8* %6)
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor630(%LineCol* %dest) #2 {
  %dest.addr = alloca %LineCol*
  store %LineCol* %dest, %LineCol** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor631(%SourceCode* %dest) #2 {
  %dest.addr = alloca %SourceCode*
  store %SourceCode* %dest, %SourceCode** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor632(%Location* %dest) #2 {
  %dest.addr = alloca %Location*
  store %Location* %dest, %Location** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @mkLineCol(%LineCol* sret %_result, i32 %line, i32 %col) #3 {
  %_result.addr = alloca %LineCol*
  store %LineCol* %_result, %LineCol** %_result.addr
  %line.addr = alloca i32
  store i32 %line, i32* %line.addr
  %col.addr = alloca i32
  store i32 %col, i32* %col.addr
  %res = alloca %LineCol
  br label %code

code:                                             ; preds = %0
  call void @ctor176(%LineCol* %res)
  %1 = load i32* %line.addr
  %2 = getelementptr inbounds %LineCol* %res, i32 0, i32 0
  store i32 %1, i32* %2
  %3 = load i32* %col.addr
  %4 = getelementptr inbounds %LineCol* %res, i32 0, i32 1
  store i32 %3, i32* %4
  %5 = load %LineCol** %_result.addr
  call void @ctor219(%LineCol* %5, %LineCol* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @mkLocation(%Location* sret %_result) #3 {
  %_result.addr = alloca %Location*
  store %Location* %_result, %Location** %_result.addr
  %res = alloca %Location
  br label %code

code:                                             ; preds = %0
  call void @ctor174(%Location* %res)
  call void @setOne(%Location* %res)
  %1 = load %Location** %_result.addr
  call void @ctor217(%Location* %1, %Location* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @setOne(%Location* %l) #3 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %l.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 1
  %3 = getelementptr inbounds %LineCol* %2, i32 0, i32 0
  store i32 1, i32* %3
  %4 = load %Location** %l.addr
  %5 = getelementptr inbounds %Location* %4, i32 0, i32 1
  %6 = getelementptr inbounds %LineCol* %5, i32 0, i32 1
  store i32 1, i32* %6
  %7 = load %Location** %l.addr
  %8 = getelementptr inbounds %Location* %7, i32 0, i32 2
  %9 = getelementptr inbounds %LineCol* %8, i32 0, i32 0
  store i32 1, i32* %9
  %10 = load %Location** %l.addr
  %11 = getelementptr inbounds %Location* %10, i32 0, i32 2
  %12 = getelementptr inbounds %LineCol* %11, i32 0, i32 1
  store i32 1, i32* %12
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @mkLocation633(%Location* sret %_result, %SourceCode %sourceCode) #3 {
  %_result.addr = alloca %Location*
  store %Location* %_result, %Location** %_result.addr
  %sourceCode.addr = alloca %SourceCode
  store %SourceCode %sourceCode, %SourceCode* %sourceCode.addr
  %res = alloca %Location
  br label %code

code:                                             ; preds = %0
  call void @ctor174(%Location* %res)
  %1 = getelementptr inbounds %Location* %res, i32 0, i32 0
  call void @"=238"(%SourceCode* %1, %SourceCode* %sourceCode.addr)
  call void @setOne(%Location* %res)
  %2 = load %Location** %_result.addr
  call void @ctor217(%Location* %2, %Location* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @mkLocation634(%Location* sret %_result, %SourceCode %sourceCode, %LineCol %start, %LineCol %end) #3 {
  %_result.addr = alloca %Location*
  store %Location* %_result, %Location** %_result.addr
  %sourceCode.addr = alloca %SourceCode
  store %SourceCode %sourceCode, %SourceCode* %sourceCode.addr
  %start.addr = alloca %LineCol
  store %LineCol %start, %LineCol* %start.addr
  %end.addr = alloca %LineCol
  store %LineCol %end, %LineCol* %end.addr
  %res = alloca %Location
  br label %code

code:                                             ; preds = %0
  call void @ctor174(%Location* %res)
  %1 = getelementptr inbounds %Location* %res, i32 0, i32 0
  call void @"=238"(%SourceCode* %1, %SourceCode* %sourceCode.addr)
  %2 = getelementptr inbounds %Location* %res, i32 0, i32 1
  call void @"=239"(%LineCol* %2, %LineCol* %start.addr)
  %3 = getelementptr inbounds %Location* %res, i32 0, i32 2
  call void @"=239"(%LineCol* %3, %LineCol* %end.addr)
  %4 = load %Location** %_result.addr
  call void @ctor217(%Location* %4, %Location* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @copyStart(%Location* %l, %Location* %other) #3 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %l.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 1
  %3 = load %Location** %other.addr
  %4 = getelementptr inbounds %Location* %3, i32 0, i32 1
  call void @"=239"(%LineCol* %2, %LineCol* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @setAsStartOf(%Location* %l, %Location* %other) #3 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %l.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 1
  %3 = load %Location** %other.addr
  %4 = getelementptr inbounds %Location* %3, i32 0, i32 1
  call void @"=239"(%LineCol* %2, %LineCol* %4)
  %5 = load %Location** %l.addr
  %6 = getelementptr inbounds %Location* %5, i32 0, i32 2
  %7 = load %Location** %other.addr
  %8 = getelementptr inbounds %Location* %7, i32 0, i32 1
  call void @"=239"(%LineCol* %6, %LineCol* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @setAsEndOf(%Location* %l, %Location* %other) #3 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %l.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 1
  %3 = load %Location** %other.addr
  %4 = getelementptr inbounds %Location* %3, i32 0, i32 2
  call void @"=239"(%LineCol* %2, %LineCol* %4)
  %5 = load %Location** %l.addr
  %6 = getelementptr inbounds %Location* %5, i32 0, i32 2
  %7 = load %Location** %other.addr
  %8 = getelementptr inbounds %Location* %7, i32 0, i32 2
  call void @"=239"(%LineCol* %6, %LineCol* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"<635"(%Location* %lhs, %Location* %rhs) #3 {
  %lhs.addr = alloca %Location*
  store %Location* %lhs, %Location** %lhs.addr
  %rhs.addr = alloca %Location*
  store %Location* %rhs, %Location** %rhs.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %Location** %lhs.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 1
  %3 = getelementptr inbounds %LineCol* %2, i32 0, i32 0
  %4 = load i32* %3
  %5 = load %Location** %rhs.addr
  %6 = getelementptr inbounds %Location* %5, i32 0, i32 1
  %7 = getelementptr inbounds %LineCol* %6, i32 0, i32 0
  %8 = load i32* %7
  %9 = call i1 @"<431"(i32 %4, i32 %8)
  br i1 %9, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %10 = load %Location** %lhs.addr
  %11 = getelementptr inbounds %Location* %10, i32 0, i32 1
  %12 = getelementptr inbounds %LineCol* %11, i32 0, i32 0
  %13 = load i32* %12
  %14 = load %Location** %rhs.addr
  %15 = getelementptr inbounds %Location* %14, i32 0, i32 1
  %16 = getelementptr inbounds %LineCol* %15, i32 0, i32 0
  %17 = load i32* %16
  %18 = call i1 @">430"(i32 %13, i32 %17)
  br i1 %18, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block4, %if_block1
  br label %if_block5

dumy_block4:                                      ; No predecessors!
  br label %if_end3

if_block5:                                        ; preds = %if_end3
  %19 = load %Location** %lhs.addr
  %20 = getelementptr inbounds %Location* %19, i32 0, i32 1
  %21 = getelementptr inbounds %LineCol* %20, i32 0, i32 1
  %22 = load i32* %21
  %23 = load %Location** %rhs.addr
  %24 = getelementptr inbounds %Location* %23, i32 0, i32 1
  %25 = getelementptr inbounds %LineCol* %24, i32 0, i32 1
  %26 = load i32* %25
  %27 = call i1 @"<431"(i32 %22, i32 %26)
  br i1 %27, label %if_then6, label %if_end7

if_then6:                                         ; preds = %if_block5
  ret i1 true

if_end7:                                          ; preds = %dumy_block8, %if_block5
  br label %if_block9

dumy_block8:                                      ; No predecessors!
  br label %if_end7

if_block9:                                        ; preds = %if_end7
  %28 = load %Location** %lhs.addr
  %29 = getelementptr inbounds %Location* %28, i32 0, i32 1
  %30 = getelementptr inbounds %LineCol* %29, i32 0, i32 1
  %31 = load i32* %30
  %32 = load %Location** %rhs.addr
  %33 = getelementptr inbounds %Location* %32, i32 0, i32 1
  %34 = getelementptr inbounds %LineCol* %33, i32 0, i32 1
  %35 = load i32* %34
  %36 = call i1 @">430"(i32 %31, i32 %35)
  br i1 %36, label %if_then10, label %if_end11

if_then10:                                        ; preds = %if_block9
  ret i1 false

if_end11:                                         ; preds = %dumy_block12, %if_block9
  br label %if_block13

dumy_block12:                                     ; No predecessors!
  br label %if_end11

if_block13:                                       ; preds = %if_end11
  %37 = load %Location** %lhs.addr
  %38 = getelementptr inbounds %Location* %37, i32 0, i32 2
  %39 = getelementptr inbounds %LineCol* %38, i32 0, i32 0
  %40 = load i32* %39
  %41 = load %Location** %rhs.addr
  %42 = getelementptr inbounds %Location* %41, i32 0, i32 2
  %43 = getelementptr inbounds %LineCol* %42, i32 0, i32 0
  %44 = load i32* %43
  %45 = call i1 @"<431"(i32 %40, i32 %44)
  br i1 %45, label %if_then14, label %if_end15

if_then14:                                        ; preds = %if_block13
  ret i1 true

if_end15:                                         ; preds = %dumy_block16, %if_block13
  br label %if_block17

dumy_block16:                                     ; No predecessors!
  br label %if_end15

if_block17:                                       ; preds = %if_end15
  %46 = load %Location** %lhs.addr
  %47 = getelementptr inbounds %Location* %46, i32 0, i32 2
  %48 = getelementptr inbounds %LineCol* %47, i32 0, i32 0
  %49 = load i32* %48
  %50 = load %Location** %rhs.addr
  %51 = getelementptr inbounds %Location* %50, i32 0, i32 2
  %52 = getelementptr inbounds %LineCol* %51, i32 0, i32 0
  %53 = load i32* %52
  %54 = call i1 @">430"(i32 %49, i32 %53)
  br i1 %54, label %if_then18, label %if_end19

if_then18:                                        ; preds = %if_block17
  ret i1 false

if_end19:                                         ; preds = %dumy_block20, %if_block17
  %55 = load %Location** %lhs.addr
  %56 = getelementptr inbounds %Location* %55, i32 0, i32 2
  %57 = getelementptr inbounds %LineCol* %56, i32 0, i32 1
  %58 = load i32* %57
  %59 = load %Location** %rhs.addr
  %60 = getelementptr inbounds %Location* %59, i32 0, i32 2
  %61 = getelementptr inbounds %LineCol* %60, i32 0, i32 1
  %62 = load i32* %61
  %63 = call i1 @"<431"(i32 %58, i32 %62)
  ret i1 %63

dumy_block20:                                     ; No predecessors!
  br label %if_end19
}

; Function Attrs: inlinehint nounwind
define internal void @ctor636(%String* %this, i64 %count, i8 %ch) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %count.addr = alloca i64
  store i64 %count, i64* %count.addr
  %ch.addr = alloca i8
  store i8 %ch, i8* %ch.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = load i64* %count.addr
  call void @ctor210(%String* %1, i64 %2)
  %3 = load %String** %this.addr
  %4 = getelementptr inbounds %String* %3, i32 0, i32 0
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %5)
  %7 = load i8* %ch.addr
  %8 = load i64* %count.addr
  call void @_spr_memset(i8* %6, i8 %7, i64 %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor637(%String* %this, %"RawPtr[Char/rtct]" %_begin, %"RawPtr[Char/rtct]" %_end) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %_begin.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %_begin, %"RawPtr[Char/rtct]"* %_begin.addr
  %_end.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %_end, %"RawPtr[Char/rtct]"* %_end.addr
  %size = alloca i64
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"* %_end.addr
  %2 = load %"RawPtr[Char/rtct]"* %_begin.addr
  %3 = call i64 @diff(%"RawPtr[Char/rtct]" %1, %"RawPtr[Char/rtct]" %2)
  store i64 %3, i64* %size
  %4 = load %String** %this.addr
  %5 = load i64* %size
  store i64 %5, i64* %tmp.v
  %6 = load i64* %tmp.v
  call void @ctor210(%String* %4, i64 %6)
  %7 = load %String** %this.addr
  %8 = getelementptr inbounds %String* %7, i32 0, i32 0
  %9 = load %"RawPtr[Char/rtct]"* %8
  %10 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %9)
  %11 = load %"RawPtr[Char/rtct]"* %_begin.addr
  %12 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %11)
  %13 = load i64* %size
  store i64 %13, i64* %tmp.v1
  %14 = load i64* %tmp.v1
  call void @_spr_memcpy(i8* %10, i8* %12, i64 %14)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"!=638"(%String* %this, %String* %other) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %other.addr = alloca %String*
  store %String* %other, %String** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = load %String** %other.addr
  %3 = call i1 @"==491"(%String* %1, %String* %2)
  %4 = xor i1 true, %3
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal i8* @at639(%String* %this, i64 %index) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = getelementptr inbounds %String* %1, i32 0, i32 0
  %3 = load %"RawPtr[Char/rtct]"* %2
  %4 = load i64* %index.addr
  store i64 %4, i64* %tmp.v
  %5 = load i64* %tmp.v
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %3, i64 %5)
  %6 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  %7 = call i8* @value(%"RawPtr[Char/rtct]" %6)
  ret i8* %7
}

; Function Attrs: inlinehint nounwind
define internal i8* @front640(%String* %this) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = getelementptr inbounds %String* %1, i32 0, i32 0
  %3 = load %"RawPtr[Char/rtct]"* %2
  %4 = call i8* @value(%"RawPtr[Char/rtct]" %3)
  ret i8* %4
}

; Function Attrs: inlinehint nounwind
define internal i8* @back641(%String* %this) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = getelementptr inbounds %String* %1, i32 0, i32 1
  %3 = load %"RawPtr[Char/rtct]"* %2
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %3, i64 -1)
  %4 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  %5 = call i8* @value(%"RawPtr[Char/rtct]" %4)
  ret i8* %5
}

; Function Attrs: inlinehint nounwind
define internal void @subrange(%StringRef* sret %_result, %String* %this, i64 %index, i64 %num) #3 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %num.addr = alloca i64
  store i64 %num, i64* %num.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  %"$tmpC1" = alloca %"RawPtr[Char/rtct]"
  %tmp.v2 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %_result.addr
  %2 = load %String** %this.addr
  %3 = getelementptr inbounds %String* %2, i32 0, i32 0
  %4 = load %"RawPtr[Char/rtct]"* %3
  %5 = load i64* %index.addr
  store i64 %5, i64* %tmp.v
  %6 = load i64* %tmp.v
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %4, i64 %6)
  %7 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  %8 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %7)
  %9 = load %String** %this.addr
  %10 = getelementptr inbounds %String* %9, i32 0, i32 0
  %11 = load %"RawPtr[Char/rtct]"* %10
  %12 = load i64* %index.addr
  %13 = load i64* %num.addr
  %14 = call i64 @"+41"(i64 %12, i64 %13)
  store i64 %14, i64* %tmp.v2
  %15 = load i64* %tmp.v2
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC1", %"RawPtr[Char/rtct]" %11, i64 %15)
  %16 = load %"RawPtr[Char/rtct]"* %"$tmpC1"
  %17 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %16)
  call void @ctor88(%StringRef* %1, i8* %8, i8* %17)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @resize(%String* %this, i64 %n) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %oldSize = alloca i64
  %newEnd = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %newEnd4 = alloca %"RawPtr[Char/rtct]"
  %tmp.v5 = alloca i64
  %"$tmpC10" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = call i64 @size204(%String* %1)
  store i64 %2, i64* %oldSize
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64* %n.addr
  %4 = load i64* %oldSize
  %5 = call i1 @"==642"(i64 %3, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64* %n.addr
  %7 = load i64* %oldSize
  %8 = call i1 @"<"(i64 %6, i64 %7)
  br i1 %8, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %9 = load %String** %this.addr
  %10 = getelementptr inbounds %String* %9, i32 0, i32 0
  %11 = load %"RawPtr[Char/rtct]"* %10
  %12 = load i64* %n.addr
  store i64 %12, i64* %tmp.v
  %13 = load i64* %tmp.v
  call void @advance(%"RawPtr[Char/rtct]"* %newEnd, %"RawPtr[Char/rtct]" %11, i64 %13)
  br label %while_block

if_else:                                          ; preds = %if_block1
  %14 = load %String** %this.addr
  %15 = load i64* %n.addr
  call void @reserve(%String* %14, i64 %15)
  %16 = load %String** %this.addr
  %17 = getelementptr inbounds %String* %16, i32 0, i32 0
  %18 = load %"RawPtr[Char/rtct]"* %17
  %19 = load i64* %n.addr
  store i64 %19, i64* %tmp.v5
  %20 = load i64* %tmp.v5
  call void @advance(%"RawPtr[Char/rtct]"* %newEnd4, %"RawPtr[Char/rtct]" %18, i64 %20)
  br label %while_block6

if_end3:                                          ; preds = %while_end9, %while_end
  ret void

while_block:                                      ; preds = %while_step, %if_then2
  %21 = load %String** %this.addr
  %22 = getelementptr inbounds %String* %21, i32 0, i32 1
  %23 = load %"RawPtr[Char/rtct]"* %newEnd
  %24 = call i1 @"==207"(%"RawPtr[Char/rtct]"* %22, %"RawPtr[Char/rtct]" %23)
  %25 = xor i1 true, %24
  br i1 %25, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %26 = load %String** %this.addr
  %27 = getelementptr inbounds %String* %26, i32 0, i32 1
  %28 = load %String** %this.addr
  %29 = getelementptr inbounds %String* %28, i32 0, i32 1
  %30 = load %"RawPtr[Char/rtct]"* %29
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %30, i64 -1)
  %31 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=205"(%"RawPtr[Char/rtct]"* %27, %"RawPtr[Char/rtct]" %31)
  %32 = load %String** %this.addr
  %33 = getelementptr inbounds %String* %32, i32 0, i32 1
  %34 = load %"RawPtr[Char/rtct]"* %33
  %35 = call i8* @value(%"RawPtr[Char/rtct]" %34)
  %36 = load i8* %35
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  br label %if_end3

while_block6:                                     ; preds = %while_step8, %if_else
  %37 = load %String** %this.addr
  %38 = getelementptr inbounds %String* %37, i32 0, i32 1
  %39 = load %"RawPtr[Char/rtct]"* %newEnd4
  %40 = call i1 @"==207"(%"RawPtr[Char/rtct]"* %38, %"RawPtr[Char/rtct]" %39)
  %41 = xor i1 true, %40
  br i1 %41, label %while_body7, label %while_end9

while_body7:                                      ; preds = %while_block6
  %42 = load %String** %this.addr
  %43 = getelementptr inbounds %String* %42, i32 0, i32 1
  %44 = load %"RawPtr[Char/rtct]"* %43
  %45 = call i8* @value(%"RawPtr[Char/rtct]" %44)
  store i8 0, i8* %45
  %46 = load %String** %this.addr
  %47 = getelementptr inbounds %String* %46, i32 0, i32 1
  %48 = load %String** %this.addr
  %49 = getelementptr inbounds %String* %48, i32 0, i32 1
  %50 = load %"RawPtr[Char/rtct]"* %49
  call void @advance208(%"RawPtr[Char/rtct]"* %"$tmpC10", %"RawPtr[Char/rtct]" %50)
  %51 = load %"RawPtr[Char/rtct]"* %"$tmpC10"
  call void @"=205"(%"RawPtr[Char/rtct]"* %47, %"RawPtr[Char/rtct]" %51)
  br label %while_step8

while_step8:                                      ; preds = %while_body7
  br label %while_block6

while_end9:                                       ; preds = %while_block6
  br label %if_end3
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==642"(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn42(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn42(i64 %4, i64 %5)
  %7 = icmp eq i64 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal void @insertAfter(%String* %this, i8 %value, %StringRef %pos) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %value.addr = alloca i8
  store i8 %value, i8* %value.addr
  %pos.addr = alloca %StringRef
  store %StringRef %pos, %StringRef* %pos.addr
  %tmp.v = alloca %StringRef
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  %2 = load i8* %value.addr
  %3 = load %StringRef* %pos.addr
  call void @_backPtr(%"RawPtr[Char/rtct]"* %"$tmpC", %StringRef %3)
  %4 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  %5 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %4)
  %6 = load %String** %this.addr
  %7 = getelementptr inbounds %String* %6, i32 0, i32 1
  %8 = load %"RawPtr[Char/rtct]"* %7
  %9 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %8)
  call void @ctor88(%StringRef* %tmp.v, i8* %5, i8* %9)
  %10 = load %StringRef* %tmp.v
  call void @insertBefore381(%String* %1, i8 %2, %StringRef %10)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @_backPtr(%"RawPtr[Char/rtct]"* sret %_result, %StringRef %s) #3 {
  %_result.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %_result, %"RawPtr[Char/rtct]"** %_result.addr
  %s.addr = alloca %StringRef
  store %StringRef %s, %StringRef* %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %_result.addr
  %2 = getelementptr inbounds %StringRef* %s.addr, i32 0, i32 1
  %3 = load i8** %2
  call void @ctor199(%"RawPtr[Char/rtct]"* %1, i8* %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @remove643(%String* %this, i64 %index) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %r = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %this.addr
  call void @all384(%StringRef* %r, %String* %1)
  %2 = load i64* %index.addr
  call void @popFront93(%StringRef* %r, i64 %2)
  %3 = load %String** %this.addr
  %4 = call i64 @size204(%String* %3)
  %5 = load i64* %index.addr
  %6 = call i64 @-61(i64 %4, i64 %5)
  %7 = call i64 @-292(i64 %6, i32 1)
  call void @popBack94(%StringRef* %r, i64 %7)
  %8 = load %String** %this.addr
  %9 = load %StringRef* %r
  call void @remove(%String* %8, %StringRef %9)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"+644"(%String* sret %_result, %String %x, %String %y) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %x.addr = alloca %String
  store %String %x, %String* %x.addr
  %y.addr = alloca %String
  store %String %y, %String* %y.addr
  %sz1 = alloca i64
  %sz2 = alloca i64
  %res = alloca %String
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = call i64 @size204(%String* %x.addr)
  store i64 %1, i64* %sz1
  %2 = call i64 @size204(%String* %y.addr)
  store i64 %2, i64* %sz2
  %3 = load i64* %sz1
  %4 = load i64* %sz2
  %5 = call i64 @"+41"(i64 %3, i64 %4)
  call void @ctor210(%String* %res, i64 %5)
  %6 = getelementptr inbounds %String* %res, i32 0, i32 0
  %7 = load %"RawPtr[Char/rtct]"* %6
  %8 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %7)
  %9 = getelementptr inbounds %String* %x.addr, i32 0, i32 0
  %10 = load %"RawPtr[Char/rtct]"* %9
  %11 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %10)
  %12 = load i64* %sz1
  call void @_spr_memcpy(i8* %8, i8* %11, i64 %12)
  %13 = getelementptr inbounds %String* %res, i32 0, i32 0
  %14 = load %"RawPtr[Char/rtct]"* %13
  %15 = load i64* %sz1
  call void @advance225(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %14, i64 %15)
  %16 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  %17 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %16)
  %18 = getelementptr inbounds %String* %y.addr, i32 0, i32 0
  %19 = load %"RawPtr[Char/rtct]"* %18
  %20 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %19)
  %21 = load i64* %sz2
  call void @_spr_memcpy(i8* %17, i8* %20, i64 %21)
  %22 = load %String** %_result.addr
  call void @ctor209(%String* %22, %String* %res)
  call void @dtor214(%String* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor214(%String* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"+645"(%String* sret %_result, %String %x, %StringRef %y) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %x.addr = alloca %String
  store %String %x, %String* %x.addr
  %y.addr = alloca %StringRef
  store %StringRef %y, %StringRef* %y.addr
  %sz1 = alloca i64
  %sz2 = alloca i64
  %res = alloca %String
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = call i64 @size204(%String* %x.addr)
  store i64 %1, i64* %sz1
  %2 = call i64 @size(%StringRef* %y.addr)
  store i64 %2, i64* %sz2
  %3 = load i64* %sz1
  %4 = load i64* %sz2
  %5 = call i64 @"+41"(i64 %3, i64 %4)
  call void @ctor210(%String* %res, i64 %5)
  %6 = getelementptr inbounds %String* %res, i32 0, i32 0
  %7 = load %"RawPtr[Char/rtct]"* %6
  %8 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %7)
  %9 = getelementptr inbounds %String* %x.addr, i32 0, i32 0
  %10 = load %"RawPtr[Char/rtct]"* %9
  %11 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %10)
  %12 = load i64* %sz1
  call void @_spr_memcpy(i8* %8, i8* %11, i64 %12)
  %13 = getelementptr inbounds %String* %res, i32 0, i32 0
  %14 = load %"RawPtr[Char/rtct]"* %13
  %15 = load i64* %sz1
  call void @advance225(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %14, i64 %15)
  %16 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  %17 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %16)
  %18 = getelementptr inbounds %StringRef* %y.addr, i32 0, i32 0
  %19 = load i8** %18
  %20 = load i64* %sz2
  call void @_spr_memcpy(i8* %17, i8* %19, i64 %20)
  %21 = load %String** %_result.addr
  call void @ctor209(%String* %21, %String* %res)
  call void @dtor214(%String* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor214(%String* %res)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=646"(%StringOutputStream* %dest, %StringOutputStream* %other) #2 {
  %dest.addr = alloca %StringOutputStream*
  store %StringOutputStream* %dest, %StringOutputStream** %dest.addr
  %other.addr = alloca %StringOutputStream*
  store %StringOutputStream* %other, %StringOutputStream** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %dest.addr
  %2 = getelementptr inbounds %StringOutputStream* %1, i32 0, i32 0
  %3 = load %StringOutputStream** %other.addr
  %4 = getelementptr inbounds %StringOutputStream* %3, i32 0, i32 0
  %5 = call %String* @"=245"(%String* %2, %String* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==647"(%StringOutputStream* %this, %StringOutputStream* %other) #2 {
  %this.addr = alloca %StringOutputStream*
  store %StringOutputStream* %this, %StringOutputStream** %this.addr
  %other.addr = alloca %StringOutputStream*
  store %StringOutputStream* %other, %StringOutputStream** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %this.addr
  %2 = getelementptr inbounds %StringOutputStream* %1, i32 0, i32 0
  %3 = load %StringOutputStream** %other.addr
  %4 = getelementptr inbounds %StringOutputStream* %3, i32 0, i32 0
  %5 = call i1 @"==491"(%String* %2, %String* %4)
  ret i1 %5
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<648"(%StringOutputStream* %this, %String* %s) #2 {
  %this.addr = alloca %StringOutputStream*
  store %StringOutputStream* %this, %StringOutputStream** %this.addr
  %s.addr = alloca %String*
  store %String* %s, %String** %s.addr
  %"$tmpC" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %this.addr
  %2 = getelementptr inbounds %StringOutputStream* %1, i32 0, i32 0
  %3 = load %String** %s.addr
  call void @all384(%StringRef* %"$tmpC", %String* %3)
  %4 = load %StringRef* %"$tmpC"
  call void @append(%String* %2, %StringRef %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<649"(%StringOutputStream* %this, double %x) #2 {
  %this.addr = alloca %StringOutputStream*
  store %StringOutputStream* %this, %StringOutputStream** %this.addr
  %x.addr = alloca double
  store double %x, double* %x.addr
  %"$tmpC" = alloca %StringRef
  %"$tmpC1" = alloca %String
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %this.addr
  %2 = getelementptr inbounds %StringOutputStream* %1, i32 0, i32 0
  %3 = load double* %x.addr
  %4 = fptoui double %3 to i64
  store i64 %4, i64* %tmp.v
  %5 = load i64* %tmp.v
  call void @ulongToString(%String* %"$tmpC1", i64 %5)
  call void @all384(%StringRef* %"$tmpC", %String* %"$tmpC1")
  %6 = load %StringRef* %"$tmpC"
  call void @append(%String* %2, %StringRef %6)
  call void @dtor214(%String* %"$tmpC1")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @testStringOutputStream() #3 {
  %os = alloca %StringOutputStream
  br label %code

code:                                             ; preds = %0
  call void @ctor196(%StringOutputStream* %os)
  call void @"<<<383"(%StringOutputStream* %os, i32 1)
  %1 = getelementptr inbounds %StringOutputStream* %os, i32 0, i32 0
  %2 = call %ConsoleOutputStream* @"<<654"(%ConsoleOutputStream* @cout, %String* %1)
  %3 = call %ConsoleOutputStream* @"<<650"(%ConsoleOutputStream* %2, %EndLineHelperClass* @endl)
  call void @dtor213(%StringOutputStream* %os)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %ConsoleOutputStream* @"<<650"(%ConsoleOutputStream* %s, %EndLineHelperClass* %x) #3 {
  %s.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %s, %ConsoleOutputStream** %s.addr
  %x.addr = alloca %EndLineHelperClass*
  store %EndLineHelperClass* %x, %EndLineHelperClass** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %EndLineHelperClass** %x.addr
  %2 = load %EndLineHelperClass* %1
  %3 = load %ConsoleOutputStream** %s.addr
  call void @">>651"(%EndLineHelperClass %2, %ConsoleOutputStream* %3)
  %4 = load %ConsoleOutputStream** %s.addr
  ret %ConsoleOutputStream* %4
}

; Function Attrs: inlinehint nounwind
define internal void @">>651"(%EndLineHelperClass %this, %ConsoleOutputStream* %os) #3 {
  %this.addr = alloca %EndLineHelperClass
  store %EndLineHelperClass %this, %EndLineHelperClass* %this.addr
  %os.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %os, %ConsoleOutputStream** %os.addr
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %ConsoleOutputStream** %os.addr
  %2 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 0
  %3 = getelementptr inbounds %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([2 x i8]* @str653, i32 0, i32 0), i8** %2
  store i8* getelementptr inbounds ([2 x i8]* @str653, i32 0, i32 1), i8** %3
  %4 = load %StringRef* %tmp.StringRef
  store %StringRef %4, %StringRef* %"$tmpForRef"
  %5 = call %ConsoleOutputStream* @"<<652"(%ConsoleOutputStream* %1, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %ConsoleOutputStream* @"<<652"(%ConsoleOutputStream* %s, %StringRef* %x) #3 {
  %s.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %s, %ConsoleOutputStream** %s.addr
  %x.addr = alloca %StringRef*
  store %StringRef* %x, %StringRef** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %ConsoleOutputStream** %s.addr
  %2 = load %ConsoleOutputStream* %1
  %3 = load %StringRef** %x.addr
  %4 = load %StringRef* %3
  call void @"<<<119"(%ConsoleOutputStream %2, %StringRef %4)
  %5 = load %ConsoleOutputStream** %s.addr
  ret %ConsoleOutputStream* %5
}

; Function Attrs: inlinehint nounwind
define internal %ConsoleOutputStream* @"<<654"(%ConsoleOutputStream* %s, %String* %x) #3 {
  %s.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %s, %ConsoleOutputStream** %s.addr
  %x.addr = alloca %String*
  store %String* %x, %String** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %x.addr
  %2 = load %ConsoleOutputStream** %s.addr
  call void @">>655"(%String* %1, %ConsoleOutputStream* %2)
  %3 = load %ConsoleOutputStream** %s.addr
  ret %ConsoleOutputStream* %3
}

; Function Attrs: inlinehint nounwind
define internal void @">>655"(%String* %this, %ConsoleOutputStream* %os) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %os.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %os, %ConsoleOutputStream** %os.addr
  %"$tmpC" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %ConsoleOutputStream** %os.addr
  %2 = load %String** %this.addr
  call void @asStringRef(%StringRef* %"$tmpC", %String* %2)
  %3 = call %ConsoleOutputStream* @"<<652"(%ConsoleOutputStream* %1, %StringRef* %"$tmpC")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @toString656(%String* sret %_result) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %_result.addr
  call void @ctor183(%String* %1)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor657(%"ContiguousMemoryRange[LocString]"* %dest) #2 {
  %dest.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %dest, %"ContiguousMemoryRange[LocString]"** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=658"(%"ContiguousMemoryRange[LocString]"* %dest, %"ContiguousMemoryRange[LocString]"* %other) #2 {
  %dest.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %dest, %"ContiguousMemoryRange[LocString]"** %dest.addr
  %other.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %other, %"ContiguousMemoryRange[LocString]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %dest.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[LocString]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[LocString]"* %4
  call void @"=583"(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]" %5)
  %6 = load %"ContiguousMemoryRange[LocString]"** %dest.addr
  %7 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %6, i32 0, i32 1
  %8 = load %"ContiguousMemoryRange[LocString]"** %other.addr
  %9 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %8, i32 0, i32 1
  %10 = load %"RawPtr[LocString]"* %9
  call void @"=583"(%"RawPtr[LocString]"* %7, %"RawPtr[LocString]" %10)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==659"(%"ContiguousMemoryRange[LocString]"* %this, %"ContiguousMemoryRange[LocString]"* %other) #2 {
  %this.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %this, %"ContiguousMemoryRange[LocString]"** %this.addr
  %other.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %other, %"ContiguousMemoryRange[LocString]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[LocString]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[LocString]"* %4
  %6 = call i1 @"==576"(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]" %5)
  br i1 %6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %7 = load %"ContiguousMemoryRange[LocString]"** %this.addr
  %8 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %7, i32 0, i32 1
  %9 = load %"ContiguousMemoryRange[LocString]"** %other.addr
  %10 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %9, i32 0, i32 1
  %11 = load %"RawPtr[LocString]"* %10
  %12 = call i1 @"==576"(%"RawPtr[LocString]"* %8, %"RawPtr[LocString]" %11)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %12, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor660(%"ContiguousMemoryRange[Char/rtct]"* %dest) #2 {
  %dest.addr = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %dest, %"ContiguousMemoryRange[Char/rtct]"** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=661"(%"ContiguousMemoryRange[Char/rtct]"* %dest, %"ContiguousMemoryRange[Char/rtct]"* %other) #2 {
  %dest.addr = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %dest, %"ContiguousMemoryRange[Char/rtct]"** %dest.addr
  %other.addr = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %other, %"ContiguousMemoryRange[Char/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %dest.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Char/rtct]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Char/rtct]"* %4
  call void @"=205"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  %6 = load %"ContiguousMemoryRange[Char/rtct]"** %dest.addr
  %7 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %6, i32 0, i32 1
  %8 = load %"ContiguousMemoryRange[Char/rtct]"** %other.addr
  %9 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %8, i32 0, i32 1
  %10 = load %"RawPtr[Char/rtct]"* %9
  call void @"=205"(%"RawPtr[Char/rtct]"* %7, %"RawPtr[Char/rtct]" %10)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==662"(%"ContiguousMemoryRange[Char/rtct]"* %this, %"ContiguousMemoryRange[Char/rtct]"* %other) #2 {
  %this.addr = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %this, %"ContiguousMemoryRange[Char/rtct]"** %this.addr
  %other.addr = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %other, %"ContiguousMemoryRange[Char/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Char/rtct]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i1 @"==207"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  br i1 %6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %7 = load %"ContiguousMemoryRange[Char/rtct]"** %this.addr
  %8 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %7, i32 0, i32 1
  %9 = load %"ContiguousMemoryRange[Char/rtct]"** %other.addr
  %10 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %9, i32 0, i32 1
  %11 = load %"RawPtr[Char/rtct]"* %10
  %12 = call i1 @"==207"(%"RawPtr[Char/rtct]"* %8, %"RawPtr[Char/rtct]" %11)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %12, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor663(%"ContiguousMemoryRange[Token]"* %dest) #2 {
  %dest.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %dest, %"ContiguousMemoryRange[Token]"** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=664"(%"ContiguousMemoryRange[Token]"* %dest, %"ContiguousMemoryRange[Token]"* %other) #2 {
  %dest.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %dest, %"ContiguousMemoryRange[Token]"** %dest.addr
  %other.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %other, %"ContiguousMemoryRange[Token]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %dest.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Token]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Token]"* %4
  call void @"=254"(%"RawPtr[Token]"* %2, %"RawPtr[Token]" %5)
  %6 = load %"ContiguousMemoryRange[Token]"** %dest.addr
  %7 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %6, i32 0, i32 1
  %8 = load %"ContiguousMemoryRange[Token]"** %other.addr
  %9 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %8, i32 0, i32 1
  %10 = load %"RawPtr[Token]"* %9
  call void @"=254"(%"RawPtr[Token]"* %7, %"RawPtr[Token]" %10)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==665"(%"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"* %other) #2 {
  %this.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"** %this.addr
  %other.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %other, %"ContiguousMemoryRange[Token]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Token]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Token]"* %4
  %6 = call i1 @"==261"(%"RawPtr[Token]"* %2, %"RawPtr[Token]" %5)
  br i1 %6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %7 = load %"ContiguousMemoryRange[Token]"** %this.addr
  %8 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %7, i32 0, i32 1
  %9 = load %"ContiguousMemoryRange[Token]"** %other.addr
  %10 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %9, i32 0, i32 1
  %11 = load %"RawPtr[Token]"* %10
  %12 = call i1 @"==261"(%"RawPtr[Token]"* %8, %"RawPtr[Token]" %11)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %12, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor666(%"ContiguousMemoryRange[UInt/rtct]"* %dest) #2 {
  %dest.addr = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %dest, %"ContiguousMemoryRange[UInt/rtct]"** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=667"(%"ContiguousMemoryRange[UInt/rtct]"* %dest, %"ContiguousMemoryRange[UInt/rtct]"* %other) #2 {
  %dest.addr = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %dest, %"ContiguousMemoryRange[UInt/rtct]"** %dest.addr
  %other.addr = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %other, %"ContiguousMemoryRange[UInt/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt/rtct]"** %dest.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[UInt/rtct]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[UInt/rtct]"* %4
  call void @"=397"(%"RawPtr[UInt/rtct]"* %2, %"RawPtr[UInt/rtct]" %5)
  %6 = load %"ContiguousMemoryRange[UInt/rtct]"** %dest.addr
  %7 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %6, i32 0, i32 1
  %8 = load %"ContiguousMemoryRange[UInt/rtct]"** %other.addr
  %9 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %8, i32 0, i32 1
  %10 = load %"RawPtr[UInt/rtct]"* %9
  call void @"=397"(%"RawPtr[UInt/rtct]"* %7, %"RawPtr[UInt/rtct]" %10)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==668"(%"ContiguousMemoryRange[UInt/rtct]"* %this, %"ContiguousMemoryRange[UInt/rtct]"* %other) #2 {
  %this.addr = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %this, %"ContiguousMemoryRange[UInt/rtct]"** %this.addr
  %other.addr = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %other, %"ContiguousMemoryRange[UInt/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt/rtct]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[UInt/rtct]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[UInt/rtct]"* %4
  %6 = call i1 @"==390"(%"RawPtr[UInt/rtct]"* %2, %"RawPtr[UInt/rtct]" %5)
  br i1 %6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %7 = load %"ContiguousMemoryRange[UInt/rtct]"** %this.addr
  %8 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %7, i32 0, i32 1
  %9 = load %"ContiguousMemoryRange[UInt/rtct]"** %other.addr
  %10 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %9, i32 0, i32 1
  %11 = load %"RawPtr[UInt/rtct]"* %10
  %12 = call i1 @"==390"(%"RawPtr[UInt/rtct]"* %8, %"RawPtr[UInt/rtct]" %11)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %12, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal i1 @"<669"(%"RawPtr[Char/rtct]"* %this, %"RawPtr[Char/rtct]" %other) #3 {
  %this.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %this, %"RawPtr[Char/rtct]"** %this.addr
  %other.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %other, %"RawPtr[Char/rtct]"* %other.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %this.addr
  %2 = load %"RawPtr[Char/rtct]"* %1
  %3 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %2)
  %4 = load %"RawPtr[Char/rtct]"* %other.addr
  %5 = call i8* @bytePtr(%"RawPtr[Char/rtct]" %4)
  %6 = call i64 @ptrDiff(i8* %3, i8* %5)
  store i64 0, i64* %tmp.v
  %7 = load i64* %tmp.v
  %8 = call i1 @"<670"(i64 %6, i64 %7)
  ret i1 %8
}

; Function Attrs: inlinehint nounwind
define internal i1 @"<670"(i64 %x, i64 %y) #3 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn45(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn45(i64 %4, i64 %5)
  %7 = icmp slt i64 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i1 @"<671"(%"RawPtr[LocString]"* %this, %"RawPtr[LocString]" %other) #3 {
  %this.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %this, %"RawPtr[LocString]"** %this.addr
  %other.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %other, %"RawPtr[LocString]"* %other.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %this.addr
  %2 = load %"RawPtr[LocString]"* %1
  %3 = call i8* @bytePtr579(%"RawPtr[LocString]" %2)
  %4 = load %"RawPtr[LocString]"* %other.addr
  %5 = call i8* @bytePtr579(%"RawPtr[LocString]" %4)
  %6 = call i64 @ptrDiff(i8* %3, i8* %5)
  store i64 0, i64* %tmp.v
  %7 = load i64* %tmp.v
  %8 = call i1 @"<670"(i64 %6, i64 %7)
  ret i1 %8
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor672(%"RawPtr[LocString]"* %dest) #2 {
  %dest.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %dest, %"RawPtr[LocString]"** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"<673"(%"RawPtr[Token]"* %this, %"RawPtr[Token]" %other) #3 {
  %this.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %this, %"RawPtr[Token]"** %this.addr
  %other.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %other, %"RawPtr[Token]"* %other.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %this.addr
  %2 = load %"RawPtr[Token]"* %1
  %3 = call i8* @bytePtr251(%"RawPtr[Token]" %2)
  %4 = load %"RawPtr[Token]"* %other.addr
  %5 = call i8* @bytePtr251(%"RawPtr[Token]" %4)
  %6 = call i64 @ptrDiff(i8* %3, i8* %5)
  store i64 0, i64* %tmp.v
  %7 = load i64* %tmp.v
  %8 = call i1 @"<670"(i64 %6, i64 %7)
  ret i1 %8
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor674(%"RawPtr[Token]"* %dest) #2 {
  %dest.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %dest, %"RawPtr[Token]"** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"<675"(%"RawPtr[UInt/rtct]"* %this, %"RawPtr[UInt/rtct]" %other) #3 {
  %this.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %this, %"RawPtr[UInt/rtct]"** %this.addr
  %other.addr = alloca %"RawPtr[UInt/rtct]"
  store %"RawPtr[UInt/rtct]" %other, %"RawPtr[UInt/rtct]"* %other.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %this.addr
  %2 = load %"RawPtr[UInt/rtct]"* %1
  %3 = call i8* @bytePtr393(%"RawPtr[UInt/rtct]" %2)
  %4 = load %"RawPtr[UInt/rtct]"* %other.addr
  %5 = call i8* @bytePtr393(%"RawPtr[UInt/rtct]" %4)
  %6 = call i64 @ptrDiff(i8* %3, i8* %5)
  store i64 0, i64* %tmp.v
  %7 = load i64* %tmp.v
  %8 = call i1 @"<670"(i64 %6, i64 %7)
  ret i1 %8
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor676(%"RawPtr[UInt/rtct]"* %dest) #2 {
  %dest.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %dest, %"RawPtr[UInt/rtct]"** %dest.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: nounwind readnone
declare float @llvm.sqrt.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.sin.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.cos.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.powi.f32(float, i32) #5

; Function Attrs: nounwind readnone
declare float @llvm.pow.f32(float, float) #5

; Function Attrs: nounwind readnone
declare float @llvm.exp.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.exp2.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.log.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.log10.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.log2.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.floor.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.ceil.f32(float) #5

declare float @llvm.truc.f32(float)

; Function Attrs: nounwind readnone
declare float @llvm.rint.f32(float) #5

; Function Attrs: nounwind readnone
declare double @llvm.sqrt.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.sin.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.cos.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.powi.f64(double, i32) #5

; Function Attrs: nounwind readnone
declare double @llvm.pow.f64(double, double) #5

; Function Attrs: nounwind readnone
declare double @llvm.exp.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.exp2.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.log.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.log10.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.log2.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.floor.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.ceil.f64(double) #5

declare double @llvm.truc.f64(double)

; Function Attrs: nounwind readnone
declare double @llvm.rint.f64(double) #5

; Function Attrs: inlinehint nounwind
define internal void @ctor677(%"Vector[LocString]"* %this, i64 %size) #3 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %size.addr = alloca i64
  store i64 %size, i64* %size.addr
  %"$tmpC" = alloca %"RawPtr[LocString]"
  %"$tmpC1" = alloca %"RawPtr[LocString]"
  %p = alloca %"RawPtr[LocString]"
  %"$tmpC2" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %this.addr
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 0
  call void @ctor573(%"RawPtr[LocString]"* %2)
  %3 = load %"Vector[LocString]"** %this.addr
  %4 = getelementptr inbounds %"Vector[LocString]"* %3, i32 0, i32 1
  call void @ctor573(%"RawPtr[LocString]"* %4)
  %5 = load %"Vector[LocString]"** %this.addr
  %6 = getelementptr inbounds %"Vector[LocString]"* %5, i32 0, i32 2
  call void @ctor573(%"RawPtr[LocString]"* %6)
  %7 = load %"Vector[LocString]"** %this.addr
  %8 = getelementptr inbounds %"Vector[LocString]"* %7, i32 0, i32 0
  %9 = load i64* %size.addr
  call void @allocRawPtr595(%"RawPtr[LocString]"* %"$tmpC", i64 %9)
  %10 = load %"RawPtr[LocString]"* %"$tmpC"
  call void @"=583"(%"RawPtr[LocString]"* %8, %"RawPtr[LocString]" %10)
  %11 = load %"Vector[LocString]"** %this.addr
  %12 = getelementptr inbounds %"Vector[LocString]"* %11, i32 0, i32 1
  %13 = load %"Vector[LocString]"** %this.addr
  %14 = getelementptr inbounds %"Vector[LocString]"* %13, i32 0, i32 0
  %15 = load %"RawPtr[LocString]"* %14
  %16 = load i64* %size.addr
  call void @advance584(%"RawPtr[LocString]"* %"$tmpC1", %"RawPtr[LocString]" %15, i64 %16)
  %17 = load %"RawPtr[LocString]"* %"$tmpC1"
  call void @"=583"(%"RawPtr[LocString]"* %12, %"RawPtr[LocString]" %17)
  %18 = load %"Vector[LocString]"** %this.addr
  %19 = getelementptr inbounds %"Vector[LocString]"* %18, i32 0, i32 2
  %20 = load %"Vector[LocString]"** %this.addr
  %21 = getelementptr inbounds %"Vector[LocString]"* %20, i32 0, i32 1
  %22 = load %"RawPtr[LocString]"* %21
  call void @"=583"(%"RawPtr[LocString]"* %19, %"RawPtr[LocString]" %22)
  %23 = load %"Vector[LocString]"** %this.addr
  %24 = getelementptr inbounds %"Vector[LocString]"* %23, i32 0, i32 0
  call void @ctor597(%"RawPtr[LocString]"* %p, %"RawPtr[LocString]"* %24)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %25 = load %"Vector[LocString]"** %this.addr
  %26 = getelementptr inbounds %"Vector[LocString]"* %25, i32 0, i32 1
  %27 = load %"RawPtr[LocString]"* %26
  %28 = call i1 @"==576"(%"RawPtr[LocString]"* %p, %"RawPtr[LocString]" %27)
  %29 = xor i1 true, %28
  br i1 %29, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %30 = load %"RawPtr[LocString]"* %p
  %31 = call %LocString* @value588(%"RawPtr[LocString]" %30)
  call void @ctor678(%LocString* %31)
  br label %while_step

while_step:                                       ; preds = %while_body
  %32 = load %"RawPtr[LocString]"* %p
  call void @advance589(%"RawPtr[LocString]"* %"$tmpC2", %"RawPtr[LocString]" %32)
  %33 = load %"RawPtr[LocString]"* %"$tmpC2"
  call void @"=583"(%"RawPtr[LocString]"* %p, %"RawPtr[LocString]" %33)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor678(%LocString* %this) #2 {
  %this.addr = alloca %LocString*
  store %LocString* %this, %LocString** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LocString** %this.addr
  %2 = getelementptr inbounds %LocString* %1, i32 0, i32 0
  call void @ctor679(%"Tuple[Location/rtct, String/rtct]"* %2)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor679(%"Tuple[Location/rtct, String/rtct]"* %this) #2 {
  %this.addr = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %this, %"Tuple[Location/rtct, String/rtct]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location/rtct, String/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %1, i32 0, i32 0
  call void @ctor174(%Location* %2)
  %3 = load %"Tuple[Location/rtct, String/rtct]"** %this.addr
  %4 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %3, i32 0, i32 1
  call void @ctor183(%String* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %"Vector[LocString]"* @"=680"(%"Vector[LocString]"* %this, %"Vector[LocString]"* %other) #3 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %other.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %other, %"Vector[LocString]"** %other.addr
  %tmp = alloca %"Vector[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %other.addr
  call void @ctor594(%"Vector[LocString]"* %tmp, %"Vector[LocString]"* %1)
  %2 = load %"Vector[LocString]"** %this.addr
  call void @swap681(%"Vector[LocString]"* %tmp, %"Vector[LocString]"* %2)
  %3 = load %"Vector[LocString]"** %this.addr
  call void @dtor598(%"Vector[LocString]"* %tmp)
  ret %"Vector[LocString]"* %3

dumy_block:                                       ; No predecessors!
  call void @dtor598(%"Vector[LocString]"* %tmp)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @swap681(%"Vector[LocString]"* %this, %"Vector[LocString]"* %other) #3 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %other.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %other, %"Vector[LocString]"** %other.addr
  %tmp = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %this.addr
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 0
  call void @ctor597(%"RawPtr[LocString]"* %tmp, %"RawPtr[LocString]"* %2)
  %3 = load %"Vector[LocString]"** %this.addr
  %4 = getelementptr inbounds %"Vector[LocString]"* %3, i32 0, i32 0
  %5 = load %"Vector[LocString]"** %other.addr
  %6 = getelementptr inbounds %"Vector[LocString]"* %5, i32 0, i32 0
  %7 = load %"RawPtr[LocString]"* %6
  call void @"=583"(%"RawPtr[LocString]"* %4, %"RawPtr[LocString]" %7)
  %8 = load %"Vector[LocString]"** %other.addr
  %9 = getelementptr inbounds %"Vector[LocString]"* %8, i32 0, i32 0
  %10 = load %"RawPtr[LocString]"* %tmp
  call void @"=583"(%"RawPtr[LocString]"* %9, %"RawPtr[LocString]" %10)
  %11 = load %"Vector[LocString]"** %this.addr
  %12 = getelementptr inbounds %"Vector[LocString]"* %11, i32 0, i32 1
  %13 = load %"RawPtr[LocString]"* %12
  call void @"=583"(%"RawPtr[LocString]"* %tmp, %"RawPtr[LocString]" %13)
  %14 = load %"Vector[LocString]"** %this.addr
  %15 = getelementptr inbounds %"Vector[LocString]"* %14, i32 0, i32 1
  %16 = load %"Vector[LocString]"** %other.addr
  %17 = getelementptr inbounds %"Vector[LocString]"* %16, i32 0, i32 1
  %18 = load %"RawPtr[LocString]"* %17
  call void @"=583"(%"RawPtr[LocString]"* %15, %"RawPtr[LocString]" %18)
  %19 = load %"Vector[LocString]"** %other.addr
  %20 = getelementptr inbounds %"Vector[LocString]"* %19, i32 0, i32 1
  %21 = load %"RawPtr[LocString]"* %tmp
  call void @"=583"(%"RawPtr[LocString]"* %20, %"RawPtr[LocString]" %21)
  %22 = load %"Vector[LocString]"** %this.addr
  %23 = getelementptr inbounds %"Vector[LocString]"* %22, i32 0, i32 2
  %24 = load %"RawPtr[LocString]"* %23
  call void @"=583"(%"RawPtr[LocString]"* %tmp, %"RawPtr[LocString]" %24)
  %25 = load %"Vector[LocString]"** %this.addr
  %26 = getelementptr inbounds %"Vector[LocString]"* %25, i32 0, i32 2
  %27 = load %"Vector[LocString]"** %other.addr
  %28 = getelementptr inbounds %"Vector[LocString]"* %27, i32 0, i32 2
  %29 = load %"RawPtr[LocString]"* %28
  call void @"=583"(%"RawPtr[LocString]"* %26, %"RawPtr[LocString]" %29)
  %30 = load %"Vector[LocString]"** %other.addr
  %31 = getelementptr inbounds %"Vector[LocString]"* %30, i32 0, i32 2
  %32 = load %"RawPtr[LocString]"* %tmp
  call void @"=583"(%"RawPtr[LocString]"* %31, %"RawPtr[LocString]" %32)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==682"(%"Vector[LocString]"* %this, %"Vector[LocString]"* %other) #3 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %other.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %other, %"Vector[LocString]"** %other.addr
  %i = alloca i32
  %s = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[LocString]"** %this.addr
  %2 = call i64 @size581(%"Vector[LocString]"* %1)
  %3 = load %"Vector[LocString]"** %other.addr
  %4 = call i64 @size581(%"Vector[LocString]"* %3)
  %5 = call i1 @"!="(i64 %2, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  store i32 0, i32* %i
  %6 = load %"Vector[LocString]"** %this.addr
  %7 = call i64 @size581(%"Vector[LocString]"* %6)
  store i64 %7, i64* %s
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %8 = load i32* %i
  %9 = load i64* %s
  %10 = call i1 @"<488"(i32 %8, i64 %9)
  br i1 %10, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block1

while_step:                                       ; preds = %if_end3
  %11 = call i32 @"post_++67"(i32* %i)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret i1 true

if_block1:                                        ; preds = %while_body
  %12 = load %"Vector[LocString]"** %this.addr
  %13 = load i32* %i
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %tmp.v
  %15 = load i64* %tmp.v
  %16 = call %LocString* @at683(%"Vector[LocString]"* %12, i64 %15)
  %17 = load %"Vector[LocString]"** %other.addr
  %18 = load i32* %i
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %tmp.v4
  %20 = load i64* %tmp.v4
  %21 = call %LocString* @at683(%"Vector[LocString]"* %17, i64 %20)
  %22 = call i1 @"==626"(%LocString* %16, %LocString* %21)
  %23 = xor i1 true, %22
  br i1 %23, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block5, %if_block1
  br label %while_step

dumy_block5:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: inlinehint nounwind
define internal %LocString* @at683(%"Vector[LocString]"* %this, i64 %index) #3 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %this.addr
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 0
  %3 = load %"RawPtr[LocString]"* %2
  %4 = load i64* %index.addr
  call void @advance584(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]" %3, i64 %4)
  %5 = load %"RawPtr[LocString]"* %"$tmpC"
  %6 = call %LocString* @value588(%"RawPtr[LocString]" %5)
  ret %LocString* %6
}

; Function Attrs: inlinehint nounwind
define internal i1 @"!=684"(%"Vector[LocString]"* %this, %"Vector[LocString]"* %other) #3 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %other.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %other, %"Vector[LocString]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %this.addr
  %2 = load %"Vector[LocString]"** %other.addr
  %3 = call i1 @"==682"(%"Vector[LocString]"* %1, %"Vector[LocString]"* %2)
  %4 = xor i1 true, %3
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal void @ctor685(%"Vector[Char/rtct]"* %this, i64 %size) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  %size.addr = alloca i64
  store i64 %size, i64* %size.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC1" = alloca %"RawPtr[Char/rtct]"
  %p = alloca %"RawPtr[Char/rtct]"
  %"$tmpC2" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 0
  call void @ctor180(%"RawPtr[Char/rtct]"* %2)
  %3 = load %"Vector[Char/rtct]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Char/rtct]"* %3, i32 0, i32 1
  call void @ctor180(%"RawPtr[Char/rtct]"* %4)
  %5 = load %"Vector[Char/rtct]"** %this.addr
  %6 = getelementptr inbounds %"Vector[Char/rtct]"* %5, i32 0, i32 2
  call void @ctor180(%"RawPtr[Char/rtct]"* %6)
  %7 = load %"Vector[Char/rtct]"** %this.addr
  %8 = getelementptr inbounds %"Vector[Char/rtct]"* %7, i32 0, i32 0
  %9 = load i64* %size.addr
  call void @allocRawPtr(%"RawPtr[Char/rtct]"* %"$tmpC", i64 %9)
  %10 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=205"(%"RawPtr[Char/rtct]"* %8, %"RawPtr[Char/rtct]" %10)
  %11 = load %"Vector[Char/rtct]"** %this.addr
  %12 = getelementptr inbounds %"Vector[Char/rtct]"* %11, i32 0, i32 1
  %13 = load %"Vector[Char/rtct]"** %this.addr
  %14 = getelementptr inbounds %"Vector[Char/rtct]"* %13, i32 0, i32 0
  %15 = load %"RawPtr[Char/rtct]"* %14
  %16 = load i64* %size.addr
  call void @advance225(%"RawPtr[Char/rtct]"* %"$tmpC1", %"RawPtr[Char/rtct]" %15, i64 %16)
  %17 = load %"RawPtr[Char/rtct]"* %"$tmpC1"
  call void @"=205"(%"RawPtr[Char/rtct]"* %12, %"RawPtr[Char/rtct]" %17)
  %18 = load %"Vector[Char/rtct]"** %this.addr
  %19 = getelementptr inbounds %"Vector[Char/rtct]"* %18, i32 0, i32 2
  %20 = load %"Vector[Char/rtct]"** %this.addr
  %21 = getelementptr inbounds %"Vector[Char/rtct]"* %20, i32 0, i32 1
  %22 = load %"RawPtr[Char/rtct]"* %21
  call void @"=205"(%"RawPtr[Char/rtct]"* %19, %"RawPtr[Char/rtct]" %22)
  %23 = load %"Vector[Char/rtct]"** %this.addr
  %24 = getelementptr inbounds %"Vector[Char/rtct]"* %23, i32 0, i32 0
  call void @ctor211(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]"* %24)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %25 = load %"Vector[Char/rtct]"** %this.addr
  %26 = getelementptr inbounds %"Vector[Char/rtct]"* %25, i32 0, i32 1
  %27 = load %"RawPtr[Char/rtct]"* %26
  %28 = call i1 @"==207"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %27)
  %29 = xor i1 true, %28
  br i1 %29, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %30 = load %"RawPtr[Char/rtct]"* %p
  %31 = call i8* @value(%"RawPtr[Char/rtct]" %30)
  store i8 0, i8* %31
  br label %while_step

while_step:                                       ; preds = %while_body
  %32 = load %"RawPtr[Char/rtct]"* %p
  call void @advance208(%"RawPtr[Char/rtct]"* %"$tmpC2", %"RawPtr[Char/rtct]" %32)
  %33 = load %"RawPtr[Char/rtct]"* %"$tmpC2"
  call void @"=205"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %33)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"!=686"(%"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"* %other) #3 {
  %this.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %this, %"Vector[Char/rtct]"** %this.addr
  %other.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %other, %"Vector[Char/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %this.addr
  %2 = load %"Vector[Char/rtct]"** %other.addr
  %3 = call i1 @"==487"(%"Vector[Char/rtct]"* %1, %"Vector[Char/rtct]"* %2)
  %4 = xor i1 true, %3
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal void @ctor687(%"Vector[Token]"* %this, i64 %size) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %size.addr = alloca i64
  store i64 %size, i64* %size.addr
  %"$tmpC" = alloca %"RawPtr[Token]"
  %"$tmpC1" = alloca %"RawPtr[Token]"
  %p = alloca %"RawPtr[Token]"
  %"$tmpC2" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 0
  call void @ctor185(%"RawPtr[Token]"* %2)
  %3 = load %"Vector[Token]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Token]"* %3, i32 0, i32 1
  call void @ctor185(%"RawPtr[Token]"* %4)
  %5 = load %"Vector[Token]"** %this.addr
  %6 = getelementptr inbounds %"Vector[Token]"* %5, i32 0, i32 2
  call void @ctor185(%"RawPtr[Token]"* %6)
  %7 = load %"Vector[Token]"** %this.addr
  %8 = getelementptr inbounds %"Vector[Token]"* %7, i32 0, i32 0
  %9 = load i64* %size.addr
  call void @allocRawPtr447(%"RawPtr[Token]"* %"$tmpC", i64 %9)
  %10 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=254"(%"RawPtr[Token]"* %8, %"RawPtr[Token]" %10)
  %11 = load %"Vector[Token]"** %this.addr
  %12 = getelementptr inbounds %"Vector[Token]"* %11, i32 0, i32 1
  %13 = load %"Vector[Token]"** %this.addr
  %14 = getelementptr inbounds %"Vector[Token]"* %13, i32 0, i32 0
  %15 = load %"RawPtr[Token]"* %14
  %16 = load i64* %size.addr
  call void @advance255(%"RawPtr[Token]"* %"$tmpC1", %"RawPtr[Token]" %15, i64 %16)
  %17 = load %"RawPtr[Token]"* %"$tmpC1"
  call void @"=254"(%"RawPtr[Token]"* %12, %"RawPtr[Token]" %17)
  %18 = load %"Vector[Token]"** %this.addr
  %19 = getelementptr inbounds %"Vector[Token]"* %18, i32 0, i32 2
  %20 = load %"Vector[Token]"** %this.addr
  %21 = getelementptr inbounds %"Vector[Token]"* %20, i32 0, i32 1
  %22 = load %"RawPtr[Token]"* %21
  call void @"=254"(%"RawPtr[Token]"* %19, %"RawPtr[Token]" %22)
  %23 = load %"Vector[Token]"** %this.addr
  %24 = getelementptr inbounds %"Vector[Token]"* %23, i32 0, i32 0
  call void @ctor415(%"RawPtr[Token]"* %p, %"RawPtr[Token]"* %24)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %25 = load %"Vector[Token]"** %this.addr
  %26 = getelementptr inbounds %"Vector[Token]"* %25, i32 0, i32 1
  %27 = load %"RawPtr[Token]"* %26
  %28 = call i1 @"==261"(%"RawPtr[Token]"* %p, %"RawPtr[Token]" %27)
  %29 = xor i1 true, %28
  br i1 %29, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %30 = load %"RawPtr[Token]"* %p
  %31 = call %Token* @value264(%"RawPtr[Token]" %30)
  call void @ctor181(%Token* %31)
  br label %while_step

while_step:                                       ; preds = %while_body
  %32 = load %"RawPtr[Token]"* %p
  call void @advance265(%"RawPtr[Token]"* %"$tmpC2", %"RawPtr[Token]" %32)
  %33 = load %"RawPtr[Token]"* %"$tmpC2"
  call void @"=254"(%"RawPtr[Token]"* %p, %"RawPtr[Token]" %33)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"!=688"(%"Vector[Token]"* %this, %"Vector[Token]"* %other) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %other.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %other, %"Vector[Token]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %this.addr
  %2 = load %"Vector[Token]"** %other.addr
  %3 = call i1 @"==499"(%"Vector[Token]"* %1, %"Vector[Token]"* %2)
  %4 = xor i1 true, %3
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal void @ctor689(%"Vector[UInt/rtct]"* %this, i64 %size) #3 {
  %this.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"** %this.addr
  %size.addr = alloca i64
  store i64 %size, i64* %size.addr
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC1" = alloca %"RawPtr[UInt/rtct]"
  %p = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC2" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 0
  call void @ctor187(%"RawPtr[UInt/rtct]"* %2)
  %3 = load %"Vector[UInt/rtct]"** %this.addr
  %4 = getelementptr inbounds %"Vector[UInt/rtct]"* %3, i32 0, i32 1
  call void @ctor187(%"RawPtr[UInt/rtct]"* %4)
  %5 = load %"Vector[UInt/rtct]"** %this.addr
  %6 = getelementptr inbounds %"Vector[UInt/rtct]"* %5, i32 0, i32 2
  call void @ctor187(%"RawPtr[UInt/rtct]"* %6)
  %7 = load %"Vector[UInt/rtct]"** %this.addr
  %8 = getelementptr inbounds %"Vector[UInt/rtct]"* %7, i32 0, i32 0
  %9 = load i64* %size.addr
  call void @allocRawPtr455(%"RawPtr[UInt/rtct]"* %"$tmpC", i64 %9)
  %10 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  call void @"=397"(%"RawPtr[UInt/rtct]"* %8, %"RawPtr[UInt/rtct]" %10)
  %11 = load %"Vector[UInt/rtct]"** %this.addr
  %12 = getelementptr inbounds %"Vector[UInt/rtct]"* %11, i32 0, i32 1
  %13 = load %"Vector[UInt/rtct]"** %this.addr
  %14 = getelementptr inbounds %"Vector[UInt/rtct]"* %13, i32 0, i32 0
  %15 = load %"RawPtr[UInt/rtct]"* %14
  %16 = load i64* %size.addr
  call void @advance398(%"RawPtr[UInt/rtct]"* %"$tmpC1", %"RawPtr[UInt/rtct]" %15, i64 %16)
  %17 = load %"RawPtr[UInt/rtct]"* %"$tmpC1"
  call void @"=397"(%"RawPtr[UInt/rtct]"* %12, %"RawPtr[UInt/rtct]" %17)
  %18 = load %"Vector[UInt/rtct]"** %this.addr
  %19 = getelementptr inbounds %"Vector[UInt/rtct]"* %18, i32 0, i32 2
  %20 = load %"Vector[UInt/rtct]"** %this.addr
  %21 = getelementptr inbounds %"Vector[UInt/rtct]"* %20, i32 0, i32 1
  %22 = load %"RawPtr[UInt/rtct]"* %21
  call void @"=397"(%"RawPtr[UInt/rtct]"* %19, %"RawPtr[UInt/rtct]" %22)
  %23 = load %"Vector[UInt/rtct]"** %this.addr
  %24 = getelementptr inbounds %"Vector[UInt/rtct]"* %23, i32 0, i32 0
  call void @ctor457(%"RawPtr[UInt/rtct]"* %p, %"RawPtr[UInt/rtct]"* %24)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %25 = load %"Vector[UInt/rtct]"** %this.addr
  %26 = getelementptr inbounds %"Vector[UInt/rtct]"* %25, i32 0, i32 1
  %27 = load %"RawPtr[UInt/rtct]"* %26
  %28 = call i1 @"==390"(%"RawPtr[UInt/rtct]"* %p, %"RawPtr[UInt/rtct]" %27)
  %29 = xor i1 true, %28
  br i1 %29, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %30 = load %"RawPtr[UInt/rtct]"* %p
  %31 = call i32* @value400(%"RawPtr[UInt/rtct]" %30)
  store i32 0, i32* %31
  br label %while_step

while_step:                                       ; preds = %while_body
  %32 = load %"RawPtr[UInt/rtct]"* %p
  call void @advance401(%"RawPtr[UInt/rtct]"* %"$tmpC2", %"RawPtr[UInt/rtct]" %32)
  %33 = load %"RawPtr[UInt/rtct]"* %"$tmpC2"
  call void @"=397"(%"RawPtr[UInt/rtct]"* %p, %"RawPtr[UInt/rtct]" %33)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"!=690"(%"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"* %other) #3 {
  %this.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %this, %"Vector[UInt/rtct]"** %this.addr
  %other.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %other, %"Vector[UInt/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %this.addr
  %2 = load %"Vector[UInt/rtct]"** %other.addr
  %3 = call i1 @"==501"(%"Vector[UInt/rtct]"* %1, %"Vector[UInt/rtct]"* %2)
  %4 = xor i1 true, %3
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal i1 @isAlnum(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @isalnum(i32 %2)
  %4 = call i1 @"!=166"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @isalnum(i32)

; Function Attrs: inlinehint nounwind
define internal i1 @isBlank(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @isblank(i32 %2)
  %4 = call i1 @"!=166"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @isblank(i32)

; Function Attrs: inlinehint nounwind
define internal i1 @isCntrl(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @iscntrl(i32 %2)
  %4 = call i1 @"!=166"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @iscntrl(i32)

; Function Attrs: inlinehint nounwind
define internal i1 @isGraph(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @isgraph(i32 %2)
  %4 = call i1 @"!=166"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @isgraph(i32)

; Function Attrs: inlinehint nounwind
define internal i1 @isLower(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @islower(i32 %2)
  %4 = call i1 @"!=166"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @islower(i32)

; Function Attrs: inlinehint nounwind
define internal i1 @isPrint(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @isprint(i32 %2)
  %4 = call i1 @"!=166"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @isprint(i32)

; Function Attrs: inlinehint nounwind
define internal i1 @isPunct(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @ispunct(i32 %2)
  %4 = call i1 @"!=166"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @ispunct(i32)

; Function Attrs: inlinehint nounwind
define internal i1 @isSpace(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @isspace(i32 %2)
  %4 = call i1 @"!=166"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @isspace(i32)

; Function Attrs: inlinehint nounwind
define internal i1 @isUpper(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @isupper(i32 %2)
  %4 = call i1 @"!=166"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @isupper(i32)

declare void @exit(i32)

; Function Attrs: inlinehint nounwind
define internal i32 @systemCall(%StringRef %cmd) #3 {
  %cmd.addr = alloca %StringRef
  store %StringRef %cmd, %StringRef* %cmd.addr
  br label %code

code:                                             ; preds = %0
  %1 = call i8* @cStr(%StringRef* %cmd.addr)
  %2 = call i32 bitcast (void (i8*)* @system to i32 (i8*)*)(i8* %1)
  ret i32 %2
}

; Function Attrs: inlinehint nounwind
define internal void @ctor691(%File* %this, i8* %handle) #3 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  %handle.addr = alloca i8*
  store i8* %handle, i8** %handle.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File** %this.addr
  %2 = getelementptr inbounds %File* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = load i8** %handle.addr
  %4 = load %File** %this.addr
  %5 = getelementptr inbounds %File* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor692(%File* %this, %File* %other) #3 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  %other.addr = alloca %File*
  store %File* %other, %File** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File** %this.addr
  %2 = getelementptr inbounds %File* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = load %File** %other.addr
  %4 = getelementptr inbounds %File* %3, i32 0, i32 0
  %5 = load i8** %4
  %6 = load %File** %this.addr
  %7 = getelementptr inbounds %File* %6, i32 0, i32 0
  store i8* %5, i8** %7
  %8 = load %File** %other.addr
  %9 = getelementptr inbounds %File* %8, i32 0, i32 0
  store i8* null, i8** %9
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @openFile(%File* sret %_result, %StringRef %filename, %StringRef %mode) #3 {
  %_result.addr = alloca %File*
  store %File* %_result, %File** %_result.addr
  %filename.addr = alloca %StringRef
  store %StringRef %filename, %StringRef* %filename.addr
  %mode.addr = alloca %StringRef
  store %StringRef %mode, %StringRef* %mode.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File** %_result.addr
  %2 = call i8* @cStr(%StringRef* %filename.addr)
  %3 = call i8* @cStr(%StringRef* %mode.addr)
  %4 = call i8* @fopen(i8* %2, i8* %3)
  call void @ctor691(%File* %1, i8* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i32 @flush693(%File* %this) #3 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File** %this.addr
  %2 = call i1 @isOpen(%File* %1)
  br i1 %2, label %cond_alt1, label %cond_alt2

cond_alt1:                                        ; preds = %code
  %3 = load %File** %this.addr
  %4 = getelementptr inbounds %File* %3, i32 0, i32 0
  %5 = load i8** %4
  %6 = call i32 bitcast (i32 (%struct._IO_FILE*)* @fflush to i32 (i8*)*)(i8* %5)
  br label %cond_end

cond_alt2:                                        ; preds = %code
  br label %cond_end

cond_end:                                         ; preds = %cond_alt2, %cond_alt1
  %cond = phi i32 [ %6, %cond_alt1 ], [ -1, %cond_alt2 ]
  ret i32 %cond
}

; Function Attrs: inlinehint nounwind
define internal void @readLine(%String* sret %_result, %File* %this) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  %res = alloca %String
  %cstr = alloca i8*
  br label %code

code:                                             ; preds = %0
  call void @ctor210(%String* %res, i64 256)
  %1 = call i8* @"()492"(%String* %res, i64 0)
  %2 = load %File** %this.addr
  %3 = getelementptr inbounds %File* %2, i32 0, i32 0
  %4 = load i8** %3
  %5 = call i8* @fgets(i8* %1, i32 256, i8* %4)
  store i8* %5, i8** %cstr
  br label %if_block

if_block:                                         ; preds = %code
  %6 = load i8** %cstr
  %7 = call i1 @implOpRefEQ(i8* %6, i8* null)
  br i1 %7, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  call void @clear(%String* %res)
  br label %if_end

if_else:                                          ; preds = %if_block
  %8 = load i8** %cstr
  %9 = call i64 @cStringLen(i8* %8)
  call void @resize(%String* %res, i64 %9)
  br label %if_end

if_end:                                           ; preds = %if_else, %if_then
  %10 = load %String** %_result.addr
  call void @ctor209(%String* %10, %String* %res)
  call void @dtor214(%String* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor214(%String* %res)
  ret void
}

declare i8* @fgets(i8*, i32, i8*)

declare i32 @fread(i8*, i32, i32, i8*)

attributes #0 = { alwaysinline }
attributes #1 = { nounwind }
attributes #2 = { alwaysinline nounwind }
attributes #3 = { inlinehint nounwind }
attributes #4 = { noinline nounwind }
attributes #5 = { nounwind readnone }
