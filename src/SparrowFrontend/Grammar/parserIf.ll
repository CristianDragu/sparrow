; ModuleID = 'LLVM backend module Runtime'
target datalayout = "e-i64:64-f80:128-n8:16:32:64"

%EndLineHelperClass = type {}
%FlushHelperClass = type {}
%ConsoleOutputStream = type {}
%MainParameters = type { %CStrPtr, %CStrPtr }
%CStrPtr = type { %CStr* }
%CStr = type { i8* }
%struct._IO_FILE = type opaque
%Uninitialized = type {}
%StringRef = type { i8*, i8* }
%ExternalErrorReporter = type {}
%Location = type { %SourceCode, %LineCol, %LineCol }
%SourceCode = type { i8* }
%LineCol = type { i32, i32 }
%String = type { %"RawPtr[Char/rtct]", %"RawPtr[Char/rtct]", %"RawPtr[Char/rtct]" }
%"RawPtr[Char/rtct]" = type { i8* }
%_CharSource = type { %FileRange*, %StringRef }
%FileRange = type { %File*, i1, i8 }
%File = type { i8* }
%ParserContext = type { %File, %FileRange, %_CharSource, %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]" }
%"SparrowScanner[_CharSource, ExternalErrorReporter]" = type { %Location, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %Token, i1, i1, %ExternalErrorReporter }
%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]" = type { %"RangeWithLookahead[_CharSource]", %Location* }
%"RangeWithLookahead[_CharSource]" = type { %_CharSource, %"Vector[Char/rtct]" }
%"Vector[Char/rtct]" = type { %"RawPtr[Char/rtct]", %"RawPtr[Char/rtct]", %"RawPtr[Char/rtct]" }
%Token = type { %Location, %TokenType, %String, i64, double }
%TokenType = type { i32 }
%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" = type { %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %ExternalErrorReporter, %"Vector[UInt/rtct]", %"Vector[Char/rtct]", %TokenType, i32 }
%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]" = type { %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"Vector[Token]" }
%"Vector[Token]" = type { %"RawPtr[Token]", %"RawPtr[Token]", %"RawPtr[Token]" }
%"RawPtr[Token]" = type { %Token* }
%"Vector[UInt/rtct]" = type { %"RawPtr[UInt/rtct]", %"RawPtr[UInt/rtct]", %"RawPtr[UInt/rtct]" }
%"RawPtr[UInt/rtct]" = type { i32* }
%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]" = type { %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %Token, i1, %ExternalErrorReporter }
%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]" = type { %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"Vector[Token]" }
%StringOutputStream = type { %String }
%"ContiguousMemoryRange[Char/rtct]" = type { %"RawPtr[Char/rtct]", %"RawPtr[Char/rtct]" }
%"$lambdaEnclosure" = type {}
%"$lambdaEnclosure.0" = type {}
%"$lambdaEnclosure.1" = type {}
%"$lambdaEnclosure.2" = type {}
%"FunctionPtr[Bool, Char]" = type { i8* }
%"FunctionPtr[Bool/rtct, Char/rtct]" = type { i8* }
%"ContiguousMemoryRange[Token]" = type { %"RawPtr[Token]", %"RawPtr[Token]" }
%Node = type { %UntypedPtr }
%UntypedPtr = type { i8* }
%"Vector[LocString]" = type { %"RawPtr[LocString]", %"RawPtr[LocString]", %"RawPtr[LocString]" }
%"RawPtr[LocString]" = type { %LocString* }
%LocString = type { %"Tuple[Location/rtct, String/rtct]" }
%"Tuple[Location/rtct, String/rtct]" = type { %Location, %String }
%"ContiguousMemoryRange[LocString]" = type { %"RawPtr[LocString]", %"RawPtr[LocString]" }
%"ContiguousMemoryRange[UInt/rtct]" = type { %"RawPtr[UInt/rtct]", %"RawPtr[UInt/rtct]" }
%StreamRefWrapperHelperClass = type { i8* }

@.fmtInt = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.fmtUInt = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.fmtLong = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@.fmtULong = private unnamed_addr constant [5 x i8] c"%llu\00", align 1
@.fmtChar = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.fmtDouble = private unnamed_addr constant [3 x i8] c"%g\00", align 1
@.fmtPointer = private unnamed_addr constant [3 x i8] c"%p\00", align 1
@endl = global %EndLineHelperClass zeroinitializer
@flush = global %FlushHelperClass zeroinitializer
@cout = global %ConsoleOutputStream zeroinitializer
@programArgs = global %MainParameters zeroinitializer
@llvm.global_ctors = appending global [4 x { i32, void ()* }] [{ i32, void ()* } { i32 0, void ()* @__global_ctor }, { i32, void ()* } { i32 1, void ()* @__global_ctor74 }, { i32, void ()* } { i32 2, void ()* @__global_ctor78 }, { i32, void ()* } { i32 3, void ()* @__global_ctor96 }]
@llvm.global_dtors = appending global [4 x { i32, void ()* }] [{ i32, void ()* } { i32 0, void ()* @__global_dtor98 }, { i32, void ()* } { i32 1, void ()* @__global_dtor80 }, { i32, void ()* } { i32 2, void ()* @__global_dtor76 }, { i32, void ()* } { i32 3, void ()* @__global_dtor }]

; Function Attrs: alwaysinline
define void @_zero_init_1(i1* %"$this") #0 {
  store i1 false, i1* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_zero_init_8(i8* %"$this") #0 {
  store i8 0, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_zero_init_16(i16* %"$this") #0 {
  store i16 0, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_zero_init_32(i32* %"$this") #0 {
  store i32 0, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_zero_init_64(i64* %"$this") #0 {
  store i64 0, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_zero_init_f(float* %"$this") #0 {
  store float 0.000000e+00, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_zero_init_d(double* %"$this") #0 {
  store double 0.000000e+00, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_1_1(i1* %"$this", i1 %src) #0 {
  store i1 %src, i1* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_8_8(i8* %"$this", i8 %src) #0 {
  store i8 %src, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_16_16(i16* %"$this", i16 %src) #0 {
  store i16 %src, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_32_32(i32* %"$this", i32 %src) #0 {
  store i32 %src, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_64(i64* %"$this", i64 %src) #0 {
  store i64 %src, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_f(float* %"$this", float %src) #0 {
  store float %src, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_d(double* %"$this", double %src) #0 {
  store double %src, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_8_16(i8* %"$this", i16 %src) #0 {
  %1 = trunc i16 %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_8_32(i8* %"$this", i32 %src) #0 {
  %1 = trunc i32 %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_8_64(i8* %"$this", i64 %src) #0 {
  %1 = trunc i64 %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_16_32(i16* %"$this", i32 %src) #0 {
  %1 = trunc i32 %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_16_64(i16* %"$this", i64 %src) #0 {
  %1 = trunc i64 %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_32_64(i32* %"$this", i64 %src) #0 {
  %1 = trunc i64 %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_16_8s(i16* %"$this", i8 %src) #0 {
  %1 = sext i8 %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_16_8z(i16* %"$this", i8 %src) #0 {
  %1 = zext i8 %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_32_8s(i32* %"$this", i8 %src) #0 {
  %1 = sext i8 %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_32_8z(i32* %"$this", i8 %src) #0 {
  %1 = zext i8 %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_32_16s(i32* %"$this", i16 %src) #0 {
  %1 = sext i16 %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_32_16z(i32* %"$this", i16 %src) #0 {
  %1 = zext i16 %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_8s(i64* %"$this", i8 %src) #0 {
  %1 = sext i8 %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_8z(i64* %"$this", i8 %src) #0 {
  %1 = zext i8 %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_16s(i64* %"$this", i16 %src) #0 {
  %1 = sext i16 %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_16z(i64* %"$this", i16 %src) #0 {
  %1 = zext i16 %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_32s(i64* %"$this", i32 %src) #0 {
  %1 = sext i32 %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_32z(i64* %"$this", i32 %src) #0 {
  %1 = zext i32 %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i8_f(i8* %"$this", float %src) #0 {
  %1 = fptosi float %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i8_d(i8* %"$this", double %src) #0 {
  %1 = fptosi double %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u8_f(i8* %"$this", float %src) #0 {
  %1 = fptoui float %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u8_d(i8* %"$this", double %src) #0 {
  %1 = fptoui double %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i16_f(i16* %"$this", float %src) #0 {
  %1 = fptosi float %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i16_d(i16* %"$this", double %src) #0 {
  %1 = fptosi double %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u16_f(i16* %"$this", float %src) #0 {
  %1 = fptoui float %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u16_d(i16* %"$this", double %src) #0 {
  %1 = fptoui double %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i32_f(i32* %"$this", float %src) #0 {
  %1 = fptosi float %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i32_d(i32* %"$this", double %src) #0 {
  %1 = fptosi double %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u32_f(i32* %"$this", float %src) #0 {
  %1 = fptoui float %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u32_d(i32* %"$this", double %src) #0 {
  %1 = fptoui double %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i64_f(i64* %"$this", float %src) #0 {
  %1 = fptosi float %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i64_d(i64* %"$this", double %src) #0 {
  %1 = fptosi double %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u64_f(i64* %"$this", float %src) #0 {
  %1 = fptoui float %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u64_d(i64* %"$this", double %src) #0 {
  %1 = fptoui double %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_i8(float* %"$this", i8 %src) #0 {
  %1 = sitofp i8 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_u8(float* %"$this", i8 %src) #0 {
  %1 = uitofp i8 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_i16(float* %"$this", i16 %src) #0 {
  %1 = sitofp i16 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_u16(float* %"$this", i16 %src) #0 {
  %1 = uitofp i16 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_i32(float* %"$this", i32 %src) #0 {
  %1 = sitofp i32 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_u32(float* %"$this", i32 %src) #0 {
  %1 = uitofp i32 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_i64(float* %"$this", i64 %src) #0 {
  %1 = sitofp i64 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_u64(float* %"$this", i64 %src) #0 {
  %1 = uitofp i64 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_d(float* %"$this", double %src) #0 {
  %1 = fptrunc double %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_i8(double* %"$this", i8 %src) #0 {
  %1 = sitofp i8 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_u8(double* %"$this", i8 %src) #0 {
  %1 = uitofp i8 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_i16(double* %"$this", i16 %src) #0 {
  %1 = sitofp i16 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_u16(double* %"$this", i16 %src) #0 {
  %1 = uitofp i16 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_i32(double* %"$this", i32 %src) #0 {
  %1 = sitofp i32 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_u32(double* %"$this", i32 %src) #0 {
  %1 = uitofp i32 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_i64(double* %"$this", i64 %src) #0 {
  %1 = sitofp i64 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_u64(double* %"$this", i64 %src) #0 {
  %1 = uitofp i64 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_f(double* %"$this", float %src) #0 {
  %1 = fpext float %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define i1 @_Bool_opAssign(i1* %x, i1 %y) #0 {
  store i1 %y, i1* %x
  ret i1 %y
}

; Function Attrs: alwaysinline
define i1 @_Bool_opOr(i1 %x, i1 %y) #0 {
  %1 = or i1 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Bool_opXor(i1 %x, i1 %y) #0 {
  %1 = xor i1 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Bool_opAnd(i1 %x, i1 %y) #0 {
  %1 = and i1 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Bool_opEQ(i1 %x, i1 %y) #0 {
  %1 = icmp eq i1 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Bool_opNE(i1 %x, i1 %y) #0 {
  %1 = icmp ne i1 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Bool_opNeg(i1 %x) #0 {
  %1 = xor i1 %x, true
  ret i1 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opAssign(i8* %x, i8 %y) #0 {
  store i8 %y, i8* %x
  ret i8 %y
}

; Function Attrs: alwaysinline
define i1 @_Byte_opEQ(i8 %x, i8 %y) #0 {
  %1 = icmp eq i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Byte_opNE(i8 %x, i8 %y) #0 {
  %1 = icmp ne i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Byte_opLT(i8 %x, i8 %y) #0 {
  %1 = icmp slt i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Byte_opGT(i8 %x, i8 %y) #0 {
  %1 = icmp sgt i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Byte_opLE(i8 %x, i8 %y) #0 {
  %1 = icmp sle i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Byte_opGE(i8 %x, i8 %y) #0 {
  %1 = icmp sge i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opPlus(i8 %x, i8 %y) #0 {
  %1 = add i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opMinus(i8 %x, i8 %y) #0 {
  %1 = sub i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opMul(i8 %x, i8 %y) #0 {
  %1 = mul i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opDiv(i8 %x, i8 %y) #0 {
  %1 = sdiv i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opMod(i8 %x, i8 %y) #0 {
  %1 = srem i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opPlus1(i8 %x) #0 {
  ret i8 %x
}

; Function Attrs: alwaysinline
define i8 @_Byte_opMinus1(i8 %x) #0 {
  %1 = sub i8 0, %x
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opAssign(i8* %x, i8 %y) #0 {
  store i8 %y, i8* %x
  ret i8 %y
}

; Function Attrs: alwaysinline
define i1 @_UByte_opEQ(i8 %x, i8 %y) #0 {
  %1 = icmp eq i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UByte_opNE(i8 %x, i8 %y) #0 {
  %1 = icmp ne i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UByte_opLT(i8 %x, i8 %y) #0 {
  %1 = icmp ult i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UByte_opGT(i8 %x, i8 %y) #0 {
  %1 = icmp ugt i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UByte_opLE(i8 %x, i8 %y) #0 {
  %1 = icmp ule i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UByte_opGE(i8 %x, i8 %y) #0 {
  %1 = icmp uge i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opPlus(i8 %x, i8 %y) #0 {
  %1 = add i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opMinus(i8 %x, i8 %y) #0 {
  %1 = sub i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opMul(i8 %x, i8 %y) #0 {
  %1 = mul i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opDiv(i8 %x, i8 %y) #0 {
  %1 = udiv i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opMod(i8 %x, i8 %y) #0 {
  %1 = urem i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opPlus1(i8 %x) #0 {
  ret i8 %x
}

; Function Attrs: alwaysinline
define i16 @_Short_opAssign(i16* %x, i16 %y) #0 {
  store i16 %y, i16* %x
  ret i16 %y
}

; Function Attrs: alwaysinline
define i1 @_Short_opEQ(i16 %x, i16 %y) #0 {
  %1 = icmp eq i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Short_opNE(i16 %x, i16 %y) #0 {
  %1 = icmp ne i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Short_opLT(i16 %x, i16 %y) #0 {
  %1 = icmp slt i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Short_opGT(i16 %x, i16 %y) #0 {
  %1 = icmp sgt i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Short_opLE(i16 %x, i16 %y) #0 {
  %1 = icmp sle i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Short_opGE(i16 %x, i16 %y) #0 {
  %1 = icmp sge i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i16 @_Short_opPlus(i16 %x, i16 %y) #0 {
  %1 = add i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_Short_opMinus(i16 %x, i16 %y) #0 {
  %1 = sub i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_Short_opMul(i16 %x, i16 %y) #0 {
  %1 = mul i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_Short_opDiv(i16 %x, i16 %y) #0 {
  %1 = sdiv i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_Short_opMod(i16 %x, i16 %y) #0 {
  %1 = srem i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_Short_opPlus1(i16 %x) #0 {
  ret i16 %x
}

; Function Attrs: alwaysinline
define i16 @_Short_opMinus1(i16 %x) #0 {
  %1 = sub i16 0, %x
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opAssign(i16* %x, i16 %y) #0 {
  store i16 %y, i16* %x
  ret i16 %y
}

; Function Attrs: alwaysinline
define i1 @_UShort_opEQ(i16 %x, i16 %y) #0 {
  %1 = icmp eq i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UShort_opNE(i16 %x, i16 %y) #0 {
  %1 = icmp ne i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UShort_opLT(i16 %x, i16 %y) #0 {
  %1 = icmp ult i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UShort_opGT(i16 %x, i16 %y) #0 {
  %1 = icmp ugt i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UShort_opLE(i16 %x, i16 %y) #0 {
  %1 = icmp ule i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UShort_opGE(i16 %x, i16 %y) #0 {
  %1 = icmp uge i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opPlus(i16 %x, i16 %y) #0 {
  %1 = add i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opMinus(i16 %x, i16 %y) #0 {
  %1 = sub i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opMul(i16 %x, i16 %y) #0 {
  %1 = mul i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opDiv(i16 %x, i16 %y) #0 {
  %1 = udiv i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opMod(i16 %x, i16 %y) #0 {
  %1 = urem i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opPlus1(i16 %x) #0 {
  ret i16 %x
}

; Function Attrs: alwaysinline
define i32 @_Int_opAssign(i32* %x, i32 %y) #0 {
  store i32 %y, i32* %x
  ret i32 %y
}

; Function Attrs: alwaysinline
define i1 @_Int_opEQ(i32 %x, i32 %y) #0 {
  %1 = icmp eq i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Int_opNE(i32 %x, i32 %y) #0 {
  %1 = icmp ne i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Int_opLT(i32 %x, i32 %y) #0 {
  %1 = icmp slt i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Int_opGT(i32 %x, i32 %y) #0 {
  %1 = icmp sgt i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Int_opLE(i32 %x, i32 %y) #0 {
  %1 = icmp sle i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Int_opGE(i32 %x, i32 %y) #0 {
  %1 = icmp sge i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i32 @_Int_opPlus(i32 %x, i32 %y) #0 {
  %1 = add i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_Int_opMinus(i32 %x, i32 %y) #0 {
  %1 = sub i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_Int_opMul(i32 %x, i32 %y) #0 {
  %1 = mul i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_Int_opDiv(i32 %x, i32 %y) #0 {
  %1 = sdiv i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_Int_opMod(i32 %x, i32 %y) #0 {
  %1 = srem i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_Int_opPlus1(i32 %x) #0 {
  ret i32 %x
}

; Function Attrs: alwaysinline
define i32 @_Int_opMinus1(i32 %x) #0 {
  %1 = sub i32 0, %x
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opAssign(i32* %x, i32 %y) #0 {
  store i32 %y, i32* %x
  ret i32 %y
}

; Function Attrs: alwaysinline
define i1 @_UInt_opEQ(i32 %x, i32 %y) #0 {
  %1 = icmp eq i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UInt_opNE(i32 %x, i32 %y) #0 {
  %1 = icmp ne i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UInt_opLT(i32 %x, i32 %y) #0 {
  %1 = icmp ult i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UInt_opGT(i32 %x, i32 %y) #0 {
  %1 = icmp ugt i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UInt_opLE(i32 %x, i32 %y) #0 {
  %1 = icmp ule i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UInt_opGE(i32 %x, i32 %y) #0 {
  %1 = icmp uge i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opPlus(i32 %x, i32 %y) #0 {
  %1 = add i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opMinus(i32 %x, i32 %y) #0 {
  %1 = sub i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opMul(i32 %x, i32 %y) #0 {
  %1 = mul i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opDiv(i32 %x, i32 %y) #0 {
  %1 = udiv i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opMod(i32 %x, i32 %y) #0 {
  %1 = urem i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opPlus1(i32 %x) #0 {
  ret i32 %x
}

; Function Attrs: alwaysinline
define i64 @_Long_opAssign(i64* %x, i64 %y) #0 {
  store i64 %y, i64* %x
  ret i64 %y
}

; Function Attrs: alwaysinline
define i1 @_Long_opEQ(i64 %x, i64 %y) #0 {
  %1 = icmp eq i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Long_opNE(i64 %x, i64 %y) #0 {
  %1 = icmp ne i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Long_opLT(i64 %x, i64 %y) #0 {
  %1 = icmp slt i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Long_opGT(i64 %x, i64 %y) #0 {
  %1 = icmp sgt i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Long_opLE(i64 %x, i64 %y) #0 {
  %1 = icmp sle i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Long_opGE(i64 %x, i64 %y) #0 {
  %1 = icmp sge i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i64 @_Long_opPlus(i64 %x, i64 %y) #0 {
  %1 = add i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_Long_opMinus(i64 %x, i64 %y) #0 {
  %1 = sub i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_Long_opMul(i64 %x, i64 %y) #0 {
  %1 = mul i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_Long_opDiv(i64 %x, i64 %y) #0 {
  %1 = sdiv i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_Long_opMod(i64 %x, i64 %y) #0 {
  %1 = srem i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_Long_opPlus1(i64 %x) #0 {
  ret i64 %x
}

; Function Attrs: alwaysinline
define i64 @_Long_opMinus1(i64 %x) #0 {
  %1 = sub i64 0, %x
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opAssign(i64* %x, i64 %y) #0 {
  store i64 %y, i64* %x
  ret i64 %y
}

; Function Attrs: alwaysinline
define i1 @_ULong_opEQ(i64 %x, i64 %y) #0 {
  %1 = icmp eq i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_ULong_opNE(i64 %x, i64 %y) #0 {
  %1 = icmp ne i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_ULong_opLT(i64 %x, i64 %y) #0 {
  %1 = icmp ult i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_ULong_opGT(i64 %x, i64 %y) #0 {
  %1 = icmp ugt i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_ULong_opLE(i64 %x, i64 %y) #0 {
  %1 = icmp ule i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_ULong_opGE(i64 %x, i64 %y) #0 {
  %1 = icmp uge i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opPlus(i64 %x, i64 %y) #0 {
  %1 = add i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opMinus(i64 %x, i64 %y) #0 {
  %1 = sub i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opMul(i64 %x, i64 %y) #0 {
  %1 = mul i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opDiv(i64 %x, i64 %y) #0 {
  %1 = udiv i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opMod(i64 %x, i64 %y) #0 {
  %1 = urem i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opPlus1(i64 %x) #0 {
  ret i64 %x
}

; Function Attrs: alwaysinline
define float @_Float_opAssign(float* %x, float %y) #0 {
  store float %y, float* %x
  ret float %y
}

; Function Attrs: alwaysinline
define i1 @_Float_opEQ(float %x, float %y) #0 {
  %1 = fcmp ueq float %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Float_opNE(float %x, float %y) #0 {
  %1 = fcmp une float %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Float_opLT(float %x, float %y) #0 {
  %1 = fcmp ult float %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Float_opGT(float %x, float %y) #0 {
  %1 = fcmp ugt float %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Float_opLE(float %x, float %y) #0 {
  %1 = fcmp ule float %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Float_opGE(float %x, float %y) #0 {
  %1 = fcmp uge float %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define float @_Float_opPlus(float %x, float %y) #0 {
  %1 = fadd float %x, %y
  ret float %1
}

; Function Attrs: alwaysinline
define float @_Float_opMinus(float %x, float %y) #0 {
  %1 = fsub float %x, %y
  ret float %1
}

; Function Attrs: alwaysinline
define float @_Float_opMul(float %x, float %y) #0 {
  %1 = fmul float %x, %y
  ret float %1
}

; Function Attrs: alwaysinline
define float @_Float_opDiv(float %x, float %y) #0 {
  %1 = fdiv float %x, %y
  ret float %1
}

; Function Attrs: alwaysinline
define float @_Float_opPlus1(float %x) #0 {
  ret float %x
}

; Function Attrs: alwaysinline
define float @_Float_opMinus1(float %x) #0 {
  %1 = fsub float 0.000000e+00, %x
  ret float %1
}

; Function Attrs: alwaysinline
define double @_Double_opAssign(double* %x, double %y) #0 {
  store double %y, double* %x
  ret double %y
}

; Function Attrs: alwaysinline
define i1 @_Double_opEQ(double %x, double %y) #0 {
  %1 = fcmp ueq double %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Double_opNE(double %x, double %y) #0 {
  %1 = fcmp une double %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Double_opLT(double %x, double %y) #0 {
  %1 = fcmp ult double %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Double_opGT(double %x, double %y) #0 {
  %1 = fcmp ugt double %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Double_opLE(double %x, double %y) #0 {
  %1 = fcmp ule double %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Double_opGE(double %x, double %y) #0 {
  %1 = fcmp uge double %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define double @_Double_opPlus(double %x, double %y) #0 {
  %1 = fadd double %x, %y
  ret double %1
}

; Function Attrs: alwaysinline
define double @_Double_opMinus(double %x, double %y) #0 {
  %1 = fsub double %x, %y
  ret double %1
}

; Function Attrs: alwaysinline
define double @_Double_opMul(double %x, double %y) #0 {
  %1 = fmul double %x, %y
  ret double %1
}

; Function Attrs: alwaysinline
define double @_Double_opDiv(double %x, double %y) #0 {
  %1 = fdiv double %x, %y
  ret double %1
}

; Function Attrs: alwaysinline
define double @_Double_opPlus1(double %x) #0 {
  ret double %x
}

; Function Attrs: alwaysinline
define double @_Double_opMinus1(double %x) #0 {
  %1 = fsub double 0.000000e+00, %x
  ret double %1
}

; Function Attrs: alwaysinline
define i8 @_Char_opAssign(i8* %x, i8 %y) #0 {
  store i8 %y, i8* %x
  ret i8 %y
}

; Function Attrs: alwaysinline
define i1 @_Char_opEQ(i8 %x, i8 %y) #0 {
  %1 = icmp eq i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Char_opNE(i8 %x, i8 %y) #0 {
  %1 = icmp ne i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Char_opLT(i8 %x, i8 %y) #0 {
  %1 = icmp slt i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Char_opGT(i8 %x, i8 %y) #0 {
  %1 = icmp sgt i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Char_opLE(i8 %x, i8 %y) #0 {
  %1 = icmp sle i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Char_opGE(i8 %x, i8 %y) #0 {
  %1 = icmp sge i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opAssign(i64* %x, i64 %y) #0 {
  store i64 %y, i64* %x
  ret i64 %y
}

; Function Attrs: alwaysinline
define i1 @_SizeType_opEQ(i64 %x, i64 %y) #0 {
  %1 = icmp eq i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_SizeType_opNE(i64 %x, i64 %y) #0 {
  %1 = icmp ne i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_SizeType_opLT(i64 %x, i64 %y) #0 {
  %1 = icmp ult i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_SizeType_opGT(i64 %x, i64 %y) #0 {
  %1 = icmp ugt i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_SizeType_opLE(i64 %x, i64 %y) #0 {
  %1 = icmp ule i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_SizeType_opGE(i64 %x, i64 %y) #0 {
  %1 = icmp uge i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opPlus(i64 %x, i64 %y) #0 {
  %1 = add i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opPlusInt(i64 %x, i32 %y) #0 {
  %1 = sext i32 %y to i64
  %2 = add i64 %x, %1
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opPlusInt1(i32 %x, i64 %y) #0 {
  %1 = sext i32 %x to i64
  %2 = add i64 %1, %y
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opMinus(i64 %x, i64 %y) #0 {
  %1 = sub i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opMinusInt(i64 %x, i32 %y) #0 {
  %1 = sext i32 %y to i64
  %2 = sub i64 %x, %1
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opMinusInt1(i32 %x, i64 %y) #0 {
  %1 = sext i32 %x to i64
  %2 = sub i64 %1, %y
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opMul(i64 %x, i64 %y) #0 {
  %1 = mul i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opDiv(i64 %x, i64 %y) #0 {
  %1 = udiv i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opMod(i64 %x, i64 %y) #0 {
  %1 = urem i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opPlus1(i64 %x) #0 {
  ret i64 %x
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opAssign(i64* %x, i64 %y) #0 {
  store i64 %y, i64* %x
  ret i64 %y
}

; Function Attrs: alwaysinline
define i1 @_DiffType_opEQ(i64 %x, i64 %y) #0 {
  %1 = icmp eq i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_DiffType_opNE(i64 %x, i64 %y) #0 {
  %1 = icmp ne i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_DiffType_opLT(i64 %x, i64 %y) #0 {
  %1 = icmp slt i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_DiffType_opGT(i64 %x, i64 %y) #0 {
  %1 = icmp sgt i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_DiffType_opLE(i64 %x, i64 %y) #0 {
  %1 = icmp sle i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_DiffType_opGE(i64 %x, i64 %y) #0 {
  %1 = icmp sge i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opPlus(i64 %x, i64 %y) #0 {
  %1 = add i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opPlusInt(i64 %x, i32 %y) #0 {
  %1 = sext i32 %y to i64
  %2 = add i64 %x, %1
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opPlusInt1(i32 %x, i64 %y) #0 {
  %1 = sext i32 %x to i64
  %2 = add i64 %1, %y
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opMinus(i64 %x, i64 %y) #0 {
  %1 = sub i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opMinusInt(i64 %x, i32 %y) #0 {
  %1 = sext i32 %y to i64
  %2 = sub i64 %x, %1
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opMinusInt1(i32 %x, i64 %y) #0 {
  %1 = sext i32 %x to i64
  %2 = sub i64 %1, %y
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opMul(i64 %x, i64 %y) #0 {
  %1 = mul i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opDiv(i64 %x, i64 %y) #0 {
  %1 = sdiv i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opMod(i64 %x, i64 %y) #0 {
  %1 = srem i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opPlus1(i64 %x) #0 {
  ret i64 %x
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opMinus1(i64 %x) #0 {
  %1 = sub i64 0, %x
  ret i64 %1
}

declare i32 @printf(i8*, ...)

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #1

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #1

; Function Attrs: nounwind
declare i32 @fflush(%struct._IO_FILE*) #1

; Function Attrs: alwaysinline
define i1 @isNullRef(i8* %x) #0 {
  %1 = icmp eq i8* %x, null
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @implOpRefEQ(i8* %x, i8* %y) #0 {
  %1 = icmp eq i8* %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @implOpRefNE(i8* %x, i8* %y) #0 {
  %1 = icmp ne i8* %x, %y
  ret i1 %1
}

define void @_Type_ctor(i8** %"$this") {
  store i8* null, i8** %"$this"
  ret void
}

define void @_Type_copy_ctor(i8** %"$this", i8* %other) {
  store i8* %other, i8** %"$this"
  ret void
}

; Function Attrs: alwaysinline
define i8* @ptrAdd(i8* %p, i64 %n) #0 {
  %1 = getelementptr i8* %p, i64 %n
  ret i8* %1
}

; Function Attrs: alwaysinline
define i8* @ptrSub(i8* %p, i64 %n) #0 {
  %1 = sub i64 0, %n
  %2 = getelementptr i8* %p, i64 %1
  ret i8* %2
}

; Function Attrs: alwaysinline
define i64 @ptrDiff(i8* %p1, i8* %p2) #0 {
  %1 = ptrtoint i8* %p1 to i64
  %2 = ptrtoint i8* %p2 to i64
  %3 = sub i64 %1, %2
  ret i64 %3
}

; Function Attrs: alwaysinline
define void @_spr_memcpy(i8* %dest, i8* %src, i64 %size) #0 {
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %dest, i8* %src, i64 %size, i32 1, i1 false)
  ret void
}

; Function Attrs: alwaysinline
define void @_spr_memmove(i8* %dest, i8* %src, i64 %size) #0 {
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %dest, i8* %src, i64 %size, i32 1, i1 false)
  ret void
}

; Function Attrs: alwaysinline
define void @_spr_memset(i8* %dest, i8 %value, i64 %size) #0 {
  call void @llvm.memset.p0i8.i64(i8* %dest, i8 %value, i64 %size, i32 1, i1 false)
  ret void
}

; Function Attrs: alwaysinline
define void @flushOutput() #0 {
  %1 = call i32 @fflush(%struct._IO_FILE* null)
  ret void
}

; Function Attrs: alwaysinline
define void @writeByte(i8 %val) #0 {
  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.fmtInt, i32 0, i32 0), i8 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeShort(i16 %val) #0 {
  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.fmtInt, i32 0, i32 0), i16 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeInt(i32 %val) #0 {
  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.fmtInt, i32 0, i32 0), i32 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeUInt(i32 %val) #0 {
  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.fmtUInt, i32 0, i32 0), i32 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeLong(i64 %val) #0 {
  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.fmtLong, i32 0, i32 0), i64 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeULong(i64 %val) #0 {
  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.fmtULong, i32 0, i32 0), i64 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeDouble(double %val) #0 {
  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.fmtDouble, i32 0, i32 0), double %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeChar(i8 %val) #0 {
  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.fmtChar, i32 0, i32 0), i8 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writePointer(i8* %val) #0 {
  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.fmtPointer, i32 0, i32 0), i8* %val)
  ret void
}

; Function Attrs: alwaysinline
define void @_Int_to_CString(i32 %val, i8* %buffer) #0 {
  %1 = call i32 (i8*, i8*, ...)* @sprintf(i8* %buffer, i8* getelementptr inbounds ([3 x i8]* @.fmtInt, i32 0, i32 0), i32 %val) #1
  ret void
}

; Function Attrs: alwaysinline
define void @_ULong_to_CString(i64 %val, i8* %buffer) #0 {
  %1 = call i32 (i8*, i8*, ...)* @sprintf(i8* %buffer, i8* getelementptr inbounds ([5 x i8]* @.fmtULong, i32 0, i32 0), i64 %val) #1
  ret void
}

; Function Attrs: alwaysinline
define i8 @_bit_neg_8(i8 %n) #0 {
  %1 = xor i8 %n, 0
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_bit_shl_8(i8 %n, i8 %k) #0 {
  %1 = shl i8 %n, %k
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_bit_lshr_8(i8 %n, i8 %k) #0 {
  %1 = lshr i8 %n, %k
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_bit_ashr_8(i8 %n, i8 %k) #0 {
  %1 = ashr i8 %n, %k
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_bit_xor_8(i8 %n1, i8 %n2) #0 {
  %1 = xor i8 %n1, %n2
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_bit_or_8(i8 %n1, i8 %n2) #0 {
  %1 = or i8 %n1, %n2
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_bit_and_8(i8 %n1, i8 %n2) #0 {
  %1 = and i8 %n1, %n2
  ret i8 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_neg_16(i16 %n) #0 {
  %1 = xor i16 %n, 0
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_shl_16(i16 %n, i16 %k) #0 {
  %1 = shl i16 %n, %k
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_lshr_16(i16 %n, i16 %k) #0 {
  %1 = lshr i16 %n, %k
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_ashr_16(i16 %n, i16 %k) #0 {
  %1 = ashr i16 %n, %k
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_xor_16(i16 %n1, i16 %n2) #0 {
  %1 = xor i16 %n1, %n2
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_or_16(i16 %n1, i16 %n2) #0 {
  %1 = or i16 %n1, %n2
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_and_16(i16 %n1, i16 %n2) #0 {
  %1 = and i16 %n1, %n2
  ret i16 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_neg_32(i32 %n) #0 {
  %1 = xor i32 %n, 0
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_shl_32(i32 %n, i32 %k) #0 {
  %1 = shl i32 %n, %k
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_lshr_32(i32 %n, i32 %k) #0 {
  %1 = lshr i32 %n, %k
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_ashr_32(i32 %n, i32 %k) #0 {
  %1 = ashr i32 %n, %k
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_xor_32(i32 %n1, i32 %n2) #0 {
  %1 = xor i32 %n1, %n2
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_or_32(i32 %n1, i32 %n2) #0 {
  %1 = or i32 %n1, %n2
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_and_32(i32 %n1, i32 %n2) #0 {
  %1 = and i32 %n1, %n2
  ret i32 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_neg_64(i64 %n) #0 {
  %1 = xor i64 %n, 0
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_shl_64(i64 %n, i64 %k) #0 {
  %1 = shl i64 %n, %k
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_lshr_64(i64 %n, i64 %k) #0 {
  %1 = lshr i64 %n, %k
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_ashr_64(i64 %n, i64 %k) #0 {
  %1 = ashr i64 %n, %k
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_xor_64(i64 %n1, i64 %n2) #0 {
  %1 = xor i64 %n1, %n2
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_or_64(i64 %n1, i64 %n2) #0 {
  %1 = or i64 %n1, %n2
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_and_64(i64 %n1, i64 %n2) #0 {
  %1 = and i64 %n1, %n2
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor(%Uninitialized* %"$this") #2 {
  %"$this.addr" = alloca %Uninitialized*
  store %Uninitialized* %"$this", %Uninitialized** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor1(%Uninitialized* %"$this", %Uninitialized %other) #2 {
  %"$this.addr" = alloca %Uninitialized*
  store %Uninitialized* %"$this", %Uninitialized** %"$this.addr"
  %other.addr = alloca %Uninitialized
  store %Uninitialized %other, %Uninitialized* %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor(%Uninitialized* %"$this") #2 {
  %"$this.addr" = alloca %Uninitialized*
  store %Uninitialized* %"$this", %Uninitialized** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

declare i1 @"$logicalOr"(i1, i1)

declare i1 @"$logicalAnd"(i1, i1)

; Function Attrs: alwaysinline nounwind
define internal i8 @"pre_++"(i8* %n) #2 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %n.addr
  %2 = load i8* %1
  store i8 1, i8* %tmp.v
  %3 = load i8* %tmp.v
  %4 = call i8 @"+"(i8 %2, i8 %3)
  %5 = load i8** %n.addr
  store i8 %4, i8* %5
  %6 = load i8** %n.addr
  %7 = load i8* %6
  ret i8 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8 @"+"(i8 %x, i8 %y) #2 {
  %x.addr = alloca i8
  store i8 %x, i8* %x.addr
  %y.addr = alloca i8
  store i8 %y, i8* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %x.addr
  %2 = load i8* %y.addr
  %3 = call i8 @cmn(i8 %1, i8 %2)
  %4 = load i8* %y.addr
  %5 = load i8* %x.addr
  %6 = call i8 @cmn(i8 %4, i8 %5)
  %7 = add i8 %3, %6
  ret i8 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8 @cmn(i8 %x, i8 %y) #2 {
  %x.addr = alloca i8
  store i8 %x, i8* %x.addr
  %y.addr = alloca i8
  store i8 %y, i8* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %x.addr
  ret i8 %1
}

; Function Attrs: alwaysinline nounwind
define internal i8 @"pre_++2"(i8* %n) #2 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %n.addr
  %2 = load i8* %1
  store i8 1, i8* %tmp.v
  %3 = load i8* %tmp.v
  %4 = call i8 @"+3"(i8 %2, i8 %3)
  %5 = load i8** %n.addr
  store i8 %4, i8* %5
  %6 = load i8** %n.addr
  %7 = load i8* %6
  ret i8 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8 @"+3"(i8 %x, i8 %y) #2 {
  %x.addr = alloca i8
  store i8 %x, i8* %x.addr
  %y.addr = alloca i8
  store i8 %y, i8* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %x.addr
  %2 = load i8* %y.addr
  %3 = call i8 @cmn4(i8 %1, i8 %2)
  %4 = load i8* %y.addr
  %5 = load i8* %x.addr
  %6 = call i8 @cmn4(i8 %4, i8 %5)
  %7 = add i8 %3, %6
  ret i8 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8 @cmn4(i8 %x, i8 %y) #2 {
  %x.addr = alloca i8
  store i8 %x, i8* %x.addr
  %y.addr = alloca i8
  store i8 %y, i8* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %x.addr
  ret i8 %1
}

; Function Attrs: alwaysinline nounwind
define internal i16 @"pre_++5"(i16* %n) #2 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16** %n.addr
  %2 = load i16* %1
  store i16 1, i16* %tmp.v
  %3 = load i16* %tmp.v
  %4 = call i16 @"+6"(i16 %2, i16 %3)
  %5 = load i16** %n.addr
  store i16 %4, i16* %5
  %6 = load i16** %n.addr
  %7 = load i16* %6
  ret i16 %7
}

; Function Attrs: alwaysinline nounwind
define internal i16 @"+6"(i16 %x, i16 %y) #2 {
  %x.addr = alloca i16
  store i16 %x, i16* %x.addr
  %y.addr = alloca i16
  store i16 %y, i16* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i16* %x.addr
  %2 = load i16* %y.addr
  %3 = call i16 @cmn7(i16 %1, i16 %2)
  %4 = load i16* %y.addr
  %5 = load i16* %x.addr
  %6 = call i16 @cmn7(i16 %4, i16 %5)
  %7 = add i16 %3, %6
  ret i16 %7
}

; Function Attrs: alwaysinline nounwind
define internal i16 @cmn7(i16 %x, i16 %y) #2 {
  %x.addr = alloca i16
  store i16 %x, i16* %x.addr
  %y.addr = alloca i16
  store i16 %y, i16* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i16* %x.addr
  ret i16 %1
}

; Function Attrs: alwaysinline nounwind
define internal i16 @"pre_++8"(i16* %n) #2 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16** %n.addr
  %2 = load i16* %1
  store i16 1, i16* %tmp.v
  %3 = load i16* %tmp.v
  %4 = call i16 @"+9"(i16 %2, i16 %3)
  %5 = load i16** %n.addr
  store i16 %4, i16* %5
  %6 = load i16** %n.addr
  %7 = load i16* %6
  ret i16 %7
}

; Function Attrs: alwaysinline nounwind
define internal i16 @"+9"(i16 %x, i16 %y) #2 {
  %x.addr = alloca i16
  store i16 %x, i16* %x.addr
  %y.addr = alloca i16
  store i16 %y, i16* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i16* %x.addr
  %2 = load i16* %y.addr
  %3 = call i16 @cmn10(i16 %1, i16 %2)
  %4 = load i16* %y.addr
  %5 = load i16* %x.addr
  %6 = call i16 @cmn10(i16 %4, i16 %5)
  %7 = add i16 %3, %6
  ret i16 %7
}

; Function Attrs: alwaysinline nounwind
define internal i16 @cmn10(i16 %x, i16 %y) #2 {
  %x.addr = alloca i16
  store i16 %x, i16* %x.addr
  %y.addr = alloca i16
  store i16 %y, i16* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i16* %x.addr
  ret i16 %1
}

; Function Attrs: alwaysinline nounwind
define internal i32 @"pre_++11"(i32* %n) #2 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32** %n.addr
  %2 = load i32* %1
  %3 = call i32 @"+12"(i32 %2, i32 1)
  %4 = load i32** %n.addr
  store i32 %3, i32* %4
  %5 = load i32** %n.addr
  %6 = load i32* %5
  ret i32 %6
}

; Function Attrs: alwaysinline nounwind
define internal i32 @"+12"(i32 %x, i32 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn13(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn13(i32 %4, i32 %5)
  %7 = add i32 %3, %6
  ret i32 %7
}

; Function Attrs: alwaysinline nounwind
define internal i32 @cmn13(i32 %x, i32 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  ret i32 %1
}

; Function Attrs: alwaysinline nounwind
define internal i32 @"pre_++14"(i32* %n) #2 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32** %n.addr
  %2 = load i32* %1
  store i32 1, i32* %tmp.v
  %3 = load i32* %tmp.v
  %4 = call i32 @"+15"(i32 %2, i32 %3)
  %5 = load i32** %n.addr
  store i32 %4, i32* %5
  %6 = load i32** %n.addr
  %7 = load i32* %6
  ret i32 %7
}

; Function Attrs: alwaysinline nounwind
define internal i32 @"+15"(i32 %x, i32 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn16(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn16(i32 %4, i32 %5)
  %7 = add i32 %3, %6
  ret i32 %7
}

; Function Attrs: alwaysinline nounwind
define internal i32 @cmn16(i32 %x, i32 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  ret i32 %1
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"pre_++17"(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64* %tmp.v
  %4 = call i64 @"+18"(i64 %2, i64 %3)
  %5 = load i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64** %n.addr
  %7 = load i64* %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"+18"(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn19(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn19(i64 %4, i64 %5)
  %7 = add i64 %3, %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @cmn19(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"pre_++20"(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64* %tmp.v
  %4 = call i64 @"+21"(i64 %2, i64 %3)
  %5 = load i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64** %n.addr
  %7 = load i64* %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"+21"(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn22(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn22(i64 %4, i64 %5)
  %7 = add i64 %3, %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @cmn22(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"pre_++23"(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64* %tmp.v
  %4 = call i64 @"+24"(i64 %2, i64 %3)
  %5 = load i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64** %n.addr
  %7 = load i64* %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"+24"(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn25(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn25(i64 %4, i64 %5)
  %7 = add i64 %3, %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @cmn25(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"pre_++26"(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64* %tmp.v
  %4 = call i64 @"+27"(i64 %2, i64 %3)
  %5 = load i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64** %n.addr
  %7 = load i64* %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"+27"(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn28(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn28(i64 %4, i64 %5)
  %7 = add i64 %3, %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @cmn28(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind
define internal i8 @pre_--(i8* %n) #2 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %n.addr
  %2 = load i8* %1
  store i8 1, i8* %tmp.v
  %3 = load i8* %tmp.v
  %4 = call i8 @-(i8 %2, i8 %3)
  %5 = load i8** %n.addr
  store i8 %4, i8* %5
  %6 = load i8** %n.addr
  %7 = load i8* %6
  ret i8 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8 @-(i8 %x, i8 %y) #2 {
  %x.addr = alloca i8
  store i8 %x, i8* %x.addr
  %y.addr = alloca i8
  store i8 %y, i8* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %x.addr
  %2 = load i8* %y.addr
  %3 = call i8 @cmn(i8 %1, i8 %2)
  %4 = load i8* %y.addr
  %5 = load i8* %x.addr
  %6 = call i8 @cmn(i8 %4, i8 %5)
  %7 = sub i8 %3, %6
  ret i8 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8 @pre_--29(i8* %n) #2 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %n.addr
  %2 = load i8* %1
  store i8 1, i8* %tmp.v
  %3 = load i8* %tmp.v
  %4 = call i8 @-30(i8 %2, i8 %3)
  %5 = load i8** %n.addr
  store i8 %4, i8* %5
  %6 = load i8** %n.addr
  %7 = load i8* %6
  ret i8 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8 @-30(i8 %x, i8 %y) #2 {
  %x.addr = alloca i8
  store i8 %x, i8* %x.addr
  %y.addr = alloca i8
  store i8 %y, i8* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %x.addr
  %2 = load i8* %y.addr
  %3 = call i8 @cmn4(i8 %1, i8 %2)
  %4 = load i8* %y.addr
  %5 = load i8* %x.addr
  %6 = call i8 @cmn4(i8 %4, i8 %5)
  %7 = sub i8 %3, %6
  ret i8 %7
}

; Function Attrs: alwaysinline nounwind
define internal i16 @pre_--31(i16* %n) #2 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16** %n.addr
  %2 = load i16* %1
  store i16 1, i16* %tmp.v
  %3 = load i16* %tmp.v
  %4 = call i16 @-32(i16 %2, i16 %3)
  %5 = load i16** %n.addr
  store i16 %4, i16* %5
  %6 = load i16** %n.addr
  %7 = load i16* %6
  ret i16 %7
}

; Function Attrs: alwaysinline nounwind
define internal i16 @-32(i16 %x, i16 %y) #2 {
  %x.addr = alloca i16
  store i16 %x, i16* %x.addr
  %y.addr = alloca i16
  store i16 %y, i16* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i16* %x.addr
  %2 = load i16* %y.addr
  %3 = call i16 @cmn7(i16 %1, i16 %2)
  %4 = load i16* %y.addr
  %5 = load i16* %x.addr
  %6 = call i16 @cmn7(i16 %4, i16 %5)
  %7 = sub i16 %3, %6
  ret i16 %7
}

; Function Attrs: alwaysinline nounwind
define internal i16 @pre_--33(i16* %n) #2 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16** %n.addr
  %2 = load i16* %1
  store i16 1, i16* %tmp.v
  %3 = load i16* %tmp.v
  %4 = call i16 @-34(i16 %2, i16 %3)
  %5 = load i16** %n.addr
  store i16 %4, i16* %5
  %6 = load i16** %n.addr
  %7 = load i16* %6
  ret i16 %7
}

; Function Attrs: alwaysinline nounwind
define internal i16 @-34(i16 %x, i16 %y) #2 {
  %x.addr = alloca i16
  store i16 %x, i16* %x.addr
  %y.addr = alloca i16
  store i16 %y, i16* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i16* %x.addr
  %2 = load i16* %y.addr
  %3 = call i16 @cmn10(i16 %1, i16 %2)
  %4 = load i16* %y.addr
  %5 = load i16* %x.addr
  %6 = call i16 @cmn10(i16 %4, i16 %5)
  %7 = sub i16 %3, %6
  ret i16 %7
}

; Function Attrs: alwaysinline nounwind
define internal i32 @pre_--35(i32* %n) #2 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32** %n.addr
  %2 = load i32* %1
  %3 = call i32 @-36(i32 %2, i32 1)
  %4 = load i32** %n.addr
  store i32 %3, i32* %4
  %5 = load i32** %n.addr
  %6 = load i32* %5
  ret i32 %6
}

; Function Attrs: alwaysinline nounwind
define internal i32 @-36(i32 %x, i32 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn13(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn13(i32 %4, i32 %5)
  %7 = sub i32 %3, %6
  ret i32 %7
}

; Function Attrs: alwaysinline nounwind
define internal i32 @pre_--37(i32* %n) #2 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32** %n.addr
  %2 = load i32* %1
  store i32 1, i32* %tmp.v
  %3 = load i32* %tmp.v
  %4 = call i32 @-38(i32 %2, i32 %3)
  %5 = load i32** %n.addr
  store i32 %4, i32* %5
  %6 = load i32** %n.addr
  %7 = load i32* %6
  ret i32 %7
}

; Function Attrs: alwaysinline nounwind
define internal i32 @-38(i32 %x, i32 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn16(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn16(i32 %4, i32 %5)
  %7 = sub i32 %3, %6
  ret i32 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @pre_--39(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64* %tmp.v
  %4 = call i64 @-40(i64 %2, i64 %3)
  %5 = load i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64** %n.addr
  %7 = load i64* %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @-40(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn19(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn19(i64 %4, i64 %5)
  %7 = sub i64 %3, %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @pre_--41(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64* %tmp.v
  %4 = call i64 @-42(i64 %2, i64 %3)
  %5 = load i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64** %n.addr
  %7 = load i64* %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @-42(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn22(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn22(i64 %4, i64 %5)
  %7 = sub i64 %3, %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @pre_--43(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64* %tmp.v
  %4 = call i64 @-44(i64 %2, i64 %3)
  %5 = load i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64** %n.addr
  %7 = load i64* %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @-44(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn25(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn25(i64 %4, i64 %5)
  %7 = call i64 @_SizeType_opMinus(i64 %3, i64 %6)
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @pre_--45(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64* %tmp.v
  %4 = call i64 @-46(i64 %2, i64 %3)
  %5 = load i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64** %n.addr
  %7 = load i64* %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @-46(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn28(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn28(i64 %4, i64 %5)
  %7 = call i64 @_DiffType_opMinus(i64 %3, i64 %6)
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8 @"post_++"(i8* %n) #2 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %old = alloca i8
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %n.addr
  %2 = load i8* %1
  store i8 %2, i8* %old
  %3 = load i8** %n.addr
  %4 = load i8* %3
  store i8 1, i8* %tmp.v
  %5 = load i8* %tmp.v
  %6 = call i8 @"+"(i8 %4, i8 %5)
  %7 = load i8** %n.addr
  store i8 %6, i8* %7
  %8 = load i8* %old
  ret i8 %8
}

; Function Attrs: alwaysinline nounwind
define internal i8 @"post_++47"(i8* %n) #2 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %old = alloca i8
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %n.addr
  %2 = load i8* %1
  store i8 %2, i8* %old
  %3 = load i8** %n.addr
  %4 = load i8* %3
  store i8 1, i8* %tmp.v
  %5 = load i8* %tmp.v
  %6 = call i8 @"+3"(i8 %4, i8 %5)
  %7 = load i8** %n.addr
  store i8 %6, i8* %7
  %8 = load i8* %old
  ret i8 %8
}

; Function Attrs: alwaysinline nounwind
define internal i16 @"post_++48"(i16* %n) #2 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %old = alloca i16
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16** %n.addr
  %2 = load i16* %1
  store i16 %2, i16* %old
  %3 = load i16** %n.addr
  %4 = load i16* %3
  store i16 1, i16* %tmp.v
  %5 = load i16* %tmp.v
  %6 = call i16 @"+6"(i16 %4, i16 %5)
  %7 = load i16** %n.addr
  store i16 %6, i16* %7
  %8 = load i16* %old
  ret i16 %8
}

; Function Attrs: alwaysinline nounwind
define internal i16 @"post_++49"(i16* %n) #2 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %old = alloca i16
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16** %n.addr
  %2 = load i16* %1
  store i16 %2, i16* %old
  %3 = load i16** %n.addr
  %4 = load i16* %3
  store i16 1, i16* %tmp.v
  %5 = load i16* %tmp.v
  %6 = call i16 @"+9"(i16 %4, i16 %5)
  %7 = load i16** %n.addr
  store i16 %6, i16* %7
  %8 = load i16* %old
  ret i16 %8
}

; Function Attrs: alwaysinline nounwind
define internal i32 @"post_++50"(i32* %n) #2 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  %old = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32** %n.addr
  %2 = load i32* %1
  store i32 %2, i32* %old
  %3 = load i32** %n.addr
  %4 = load i32* %3
  %5 = call i32 @"+12"(i32 %4, i32 1)
  %6 = load i32** %n.addr
  store i32 %5, i32* %6
  %7 = load i32* %old
  ret i32 %7
}

; Function Attrs: alwaysinline nounwind
define internal i32 @"post_++51"(i32* %n) #2 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  %old = alloca i32
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32** %n.addr
  %2 = load i32* %1
  store i32 %2, i32* %old
  %3 = load i32** %n.addr
  %4 = load i32* %3
  store i32 1, i32* %tmp.v
  %5 = load i32* %tmp.v
  %6 = call i32 @"+15"(i32 %4, i32 %5)
  %7 = load i32** %n.addr
  store i32 %6, i32* %7
  %8 = load i32* %old
  ret i32 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"post_++52"(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 %2, i64* %old
  %3 = load i64** %n.addr
  %4 = load i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i64 @"+18"(i64 %4, i64 %5)
  %7 = load i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"post_++53"(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 %2, i64* %old
  %3 = load i64** %n.addr
  %4 = load i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i64 @"+21"(i64 %4, i64 %5)
  %7 = load i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"post_++54"(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 %2, i64* %old
  %3 = load i64** %n.addr
  %4 = load i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i64 @"+24"(i64 %4, i64 %5)
  %7 = load i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"post_++55"(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 %2, i64* %old
  %3 = load i64** %n.addr
  %4 = load i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i64 @"+27"(i64 %4, i64 %5)
  %7 = load i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i8 @post_--(i8* %n) #2 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %old = alloca i8
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %n.addr
  %2 = load i8* %1
  store i8 %2, i8* %old
  %3 = load i8** %n.addr
  %4 = load i8* %3
  store i8 1, i8* %tmp.v
  %5 = load i8* %tmp.v
  %6 = call i8 @-(i8 %4, i8 %5)
  %7 = load i8** %n.addr
  store i8 %6, i8* %7
  %8 = load i8* %old
  ret i8 %8
}

; Function Attrs: alwaysinline nounwind
define internal i8 @post_--56(i8* %n) #2 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %old = alloca i8
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %n.addr
  %2 = load i8* %1
  store i8 %2, i8* %old
  %3 = load i8** %n.addr
  %4 = load i8* %3
  store i8 1, i8* %tmp.v
  %5 = load i8* %tmp.v
  %6 = call i8 @-30(i8 %4, i8 %5)
  %7 = load i8** %n.addr
  store i8 %6, i8* %7
  %8 = load i8* %old
  ret i8 %8
}

; Function Attrs: alwaysinline nounwind
define internal i16 @post_--57(i16* %n) #2 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %old = alloca i16
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16** %n.addr
  %2 = load i16* %1
  store i16 %2, i16* %old
  %3 = load i16** %n.addr
  %4 = load i16* %3
  store i16 1, i16* %tmp.v
  %5 = load i16* %tmp.v
  %6 = call i16 @-32(i16 %4, i16 %5)
  %7 = load i16** %n.addr
  store i16 %6, i16* %7
  %8 = load i16* %old
  ret i16 %8
}

; Function Attrs: alwaysinline nounwind
define internal i16 @post_--58(i16* %n) #2 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %old = alloca i16
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16** %n.addr
  %2 = load i16* %1
  store i16 %2, i16* %old
  %3 = load i16** %n.addr
  %4 = load i16* %3
  store i16 1, i16* %tmp.v
  %5 = load i16* %tmp.v
  %6 = call i16 @-34(i16 %4, i16 %5)
  %7 = load i16** %n.addr
  store i16 %6, i16* %7
  %8 = load i16* %old
  ret i16 %8
}

; Function Attrs: alwaysinline nounwind
define internal i32 @post_--59(i32* %n) #2 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  %old = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32** %n.addr
  %2 = load i32* %1
  store i32 %2, i32* %old
  %3 = load i32** %n.addr
  %4 = load i32* %3
  %5 = call i32 @-36(i32 %4, i32 1)
  %6 = load i32** %n.addr
  store i32 %5, i32* %6
  %7 = load i32* %old
  ret i32 %7
}

; Function Attrs: alwaysinline nounwind
define internal i32 @post_--60(i32* %n) #2 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  %old = alloca i32
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32** %n.addr
  %2 = load i32* %1
  store i32 %2, i32* %old
  %3 = load i32** %n.addr
  %4 = load i32* %3
  store i32 1, i32* %tmp.v
  %5 = load i32* %tmp.v
  %6 = call i32 @-38(i32 %4, i32 %5)
  %7 = load i32** %n.addr
  store i32 %6, i32* %7
  %8 = load i32* %old
  ret i32 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @post_--61(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 %2, i64* %old
  %3 = load i64** %n.addr
  %4 = load i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i64 @-40(i64 %4, i64 %5)
  %7 = load i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @post_--62(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 %2, i64* %old
  %3 = load i64** %n.addr
  %4 = load i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i64 @-42(i64 %4, i64 %5)
  %7 = load i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @post_--63(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 %2, i64* %old
  %3 = load i64** %n.addr
  %4 = load i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i64 @-44(i64 %4, i64 %5)
  %7 = load i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @post_--64(i64* %n) #2 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64** %n.addr
  %2 = load i64* %1
  store i64 %2, i64* %old
  %3 = load i64** %n.addr
  %4 = load i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i64 @-46(i64 %4, i64 %5)
  %7 = load i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64* %old
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal void @"+65"(%StringRef* sret %_result, %StringRef %x, %StringRef %y) #3 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %x.addr = alloca %StringRef
  store %StringRef %x, %StringRef* %x.addr
  %y.addr = alloca %StringRef
  store %StringRef %y, %StringRef* %y.addr
  %sz1 = alloca i64
  %sz2 = alloca i64
  %res = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = call i64 @size(%StringRef* %x.addr)
  store i64 %1, i64* %sz1
  %2 = call i64 @size(%StringRef* %y.addr)
  store i64 %2, i64* %sz2
  %3 = load i64* %sz1
  %4 = load i64* %sz2
  %5 = call i64 @"+24"(i64 %3, i64 %4)
  call void @ctor66(%StringRef* %res, i64 %5)
  %6 = getelementptr inbounds %StringRef* %res, i32 0, i32 0
  %7 = load i8** %6
  %8 = getelementptr inbounds %StringRef* %x.addr, i32 0, i32 0
  %9 = load i8** %8
  %10 = load i64* %sz1
  call void @_spr_memcpy(i8* %7, i8* %9, i64 %10)
  %11 = getelementptr inbounds %StringRef* %res, i32 0, i32 0
  %12 = load i8** %11
  %13 = load i64* %sz1
  %14 = call i8* @ptrAdd(i8* %12, i64 %13)
  %15 = getelementptr inbounds %StringRef* %y.addr, i32 0, i32 0
  %16 = load i8** %15
  %17 = load i64* %sz2
  call void @_spr_memcpy(i8* %14, i8* %16, i64 %17)
  %18 = load %StringRef** %_result.addr
  %19 = load %StringRef* %res
  call void @ctor70(%StringRef* %18, %StringRef %19)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i64 @size(%StringRef* %"$this") #2 {
  %"$this.addr" = alloca %StringRef*
  store %StringRef* %"$this", %StringRef** %"$this.addr"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %"$this.addr"
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 1
  %3 = load i8** %2
  %4 = load %StringRef** %"$this.addr"
  %5 = getelementptr inbounds %StringRef* %4, i32 0, i32 0
  %6 = load i8** %5
  %7 = call i64 @ptrDiff(i8* %3, i8* %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal void @ctor66(%StringRef* %"$this", i64 %size) #3 {
  %"$this.addr" = alloca %StringRef*
  store %StringRef* %"$this", %StringRef** %"$this.addr"
  %size.addr = alloca i64
  store i64 %size, i64* %size.addr
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %"$this.addr"
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = load %StringRef** %"$this.addr"
  %4 = getelementptr inbounds %StringRef* %3, i32 0, i32 1
  store i8* null, i8** %4
  %5 = load i64* %size.addr
  %6 = call i64 @"+67"(i64 %5, i32 1)
  %7 = call i8* @malloc(i64 %6)
  %8 = load %StringRef** %"$this.addr"
  %9 = getelementptr inbounds %StringRef* %8, i32 0, i32 0
  store i8* %7, i8** %9
  %10 = load %StringRef** %"$this.addr"
  %11 = getelementptr inbounds %StringRef* %10, i32 0, i32 0
  %12 = load i8** %11
  %13 = load i64* %size.addr
  %14 = call i8* @ptrAdd(i8* %12, i64 %13)
  %15 = load %StringRef** %"$this.addr"
  %16 = getelementptr inbounds %StringRef* %15, i32 0, i32 1
  store i8* %14, i8** %16
  store i8 0, i8* %tmp.v
  %17 = load i8* %tmp.v
  %18 = load %StringRef** %"$this.addr"
  %19 = getelementptr inbounds %StringRef* %18, i32 0, i32 1
  %20 = load i8** %19
  store i8 %17, i8* %20
  ret void
}

declare i8* @malloc(i64)

; Function Attrs: alwaysinline nounwind
define internal i64 @"+67"(i64 %x, i32 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i32* %y.addr
  %3 = call i64 @cmn68(i64 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn69(i32 %4, i64 %5)
  %7 = add i64 %3, %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @cmn68(i64 %x, i32 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind
define internal i64 @cmn69(i32 %x, i64 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = zext i32 %1 to i64
  store i64 %2, i64* %tmp.v
  %3 = load i64* %tmp.v
  ret i64 %3
}

; Function Attrs: inlinehint nounwind
define internal void @ctor70(%StringRef* %"$this", %StringRef %other) #3 {
  %"$this.addr" = alloca %StringRef*
  store %StringRef* %"$this", %StringRef** %"$this.addr"
  %other.addr = alloca %StringRef
  store %StringRef %other, %StringRef* %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %"$this.addr"
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = load %StringRef** %"$this.addr"
  %4 = getelementptr inbounds %StringRef* %3, i32 0, i32 1
  store i8* null, i8** %4
  %5 = getelementptr inbounds %StringRef* %other.addr, i32 0, i32 0
  %6 = load i8** %5
  %7 = load %StringRef** %"$this.addr"
  %8 = getelementptr inbounds %StringRef* %7, i32 0, i32 0
  store i8* %6, i8** %8
  %9 = getelementptr inbounds %StringRef* %other.addr, i32 0, i32 1
  %10 = load i8** %9
  %11 = load %StringRef** %"$this.addr"
  %12 = getelementptr inbounds %StringRef* %11, i32 0, i32 1
  store i8* %10, i8** %12
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"+71"(%StringRef* sret %_result, %StringRef %x, i8 %y) #3 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %x.addr = alloca %StringRef
  store %StringRef %x, %StringRef* %x.addr
  %y.addr = alloca i8
  store i8 %y, i8* %y.addr
  %sz1 = alloca i64
  %sz2 = alloca i32
  %res = alloca %StringRef
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = call i64 @size(%StringRef* %x.addr)
  store i64 %1, i64* %sz1
  store i32 1, i32* %sz2
  %2 = load i64* %sz1
  %3 = load i32* %sz2
  %4 = call i64 @"+67"(i64 %2, i32 %3)
  call void @ctor66(%StringRef* %res, i64 %4)
  %5 = getelementptr inbounds %StringRef* %res, i32 0, i32 0
  %6 = load i8** %5
  %7 = getelementptr inbounds %StringRef* %x.addr, i32 0, i32 0
  %8 = load i8** %7
  %9 = load i64* %sz1
  call void @_spr_memcpy(i8* %6, i8* %8, i64 %9)
  %10 = getelementptr inbounds %StringRef* %res, i32 0, i32 0
  %11 = load i8** %10
  %12 = load i64* %sz1
  %13 = call i8* @ptrAdd(i8* %11, i64 %12)
  %14 = load i32* %sz2
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %tmp.v
  %16 = load i64* %tmp.v
  call void @_spr_memcpy(i8* %13, i8* %y.addr, i64 %16)
  %17 = load %StringRef** %_result.addr
  %18 = load %StringRef* %res
  call void @ctor70(%StringRef* %17, %StringRef %18)
  ret void
}

; Function Attrs: nounwind
declare void @cast() #1

; Function Attrs: nounwind
declare void @reinterpretCast() #1

; Function Attrs: nounwind
declare void @construct() #1

declare i8* @calloc(i64, i64)

declare i8* @realloc(i8*, i64)

declare void @free(i8*)

declare i32 @strcmp(i8*, i8*)

declare void @system(i8*)

declare void @sleep(i32)

define private void @__global_ctor() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor72(%EndLineHelperClass* %"$this") #2 {
  %"$this.addr" = alloca %EndLineHelperClass*
  store %EndLineHelperClass* %"$this", %EndLineHelperClass** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

define private void @__global_dtor() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor73(%EndLineHelperClass* %"$this") #2 {
  %"$this.addr" = alloca %EndLineHelperClass*
  store %EndLineHelperClass* %"$this", %EndLineHelperClass** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

define private void @__global_ctor74() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor75(%FlushHelperClass* %"$this") #2 {
  %"$this.addr" = alloca %FlushHelperClass*
  store %FlushHelperClass* %"$this", %FlushHelperClass** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

define private void @__global_dtor76() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor77(%FlushHelperClass* %"$this") #2 {
  %"$this.addr" = alloca %FlushHelperClass*
  store %FlushHelperClass* %"$this", %FlushHelperClass** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

define private void @__global_ctor78() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor79(%ConsoleOutputStream* %"$this") #2 {
  %"$this.addr" = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %"$this", %ConsoleOutputStream** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

define private void @__global_dtor80() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor81(%ConsoleOutputStream* %"$this") #2 {
  %"$this.addr" = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %"$this", %ConsoleOutputStream** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isEmpty(%MainParameters* %"$this") #2 {
  %"$this.addr" = alloca %MainParameters*
  store %MainParameters* %"$this", %MainParameters** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters** %"$this.addr"
  %2 = call i64 @size82(%MainParameters* %1)
  %3 = call i1 @"=="(i64 %2, i32 0)
  ret i1 %3
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"=="(i64 %x, i32 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i32* %y.addr
  %3 = call i64 @cmn68(i64 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn69(i32 %4, i64 %5)
  %7 = icmp eq i64 %3, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @size82(%MainParameters* %"$this") #2 {
  %"$this.addr" = alloca %MainParameters*
  store %MainParameters* %"$this", %MainParameters** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters** %"$this.addr"
  %2 = getelementptr inbounds %MainParameters* %1, i32 0, i32 1
  %3 = load %CStrPtr* %2
  %4 = load %MainParameters** %"$this.addr"
  %5 = getelementptr inbounds %MainParameters* %4, i32 0, i32 0
  %6 = load %CStrPtr* %5
  %7 = call i64 @-83(%CStrPtr %3, %CStrPtr %6)
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @-83(%CStrPtr %p, %CStrPtr %q) #2 {
  %p.addr = alloca %CStrPtr
  store %CStrPtr %p, %CStrPtr* %p.addr
  %q.addr = alloca %CStrPtr
  store %CStrPtr %q, %CStrPtr* %q.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr* %p.addr
  %2 = call i8* @toBytePtr(%CStrPtr %1)
  %3 = load %CStrPtr* %q.addr
  %4 = call i8* @toBytePtr(%CStrPtr %3)
  %5 = call i64 @ptrDiff(i8* %2, i8* %4)
  %6 = call i64 @"/"(i64 %5, i64 8)
  ret i64 %6
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"/"(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn84(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn85(i64 %4, i64 %5)
  %7 = call i64 @_SizeType_opDiv(i64 %3, i64 %6)
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @cmn84(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  store i64 %1, i64* %tmp.v
  %2 = load i64* %tmp.v
  ret i64 %2
}

; Function Attrs: alwaysinline nounwind
define internal i64 @cmn85(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind
define internal i8* @toBytePtr(%CStrPtr %p) #2 {
  %p.addr = alloca %CStrPtr
  store %CStrPtr %p, %CStrPtr* %p.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %CStrPtr* %p.addr, i32 0, i32 0
  %2 = load %CStr** %1
  %3 = bitcast %CStr* %2 to i8*
  ret i8* %3
}

; Function Attrs: alwaysinline nounwind
define internal void @front(%StringRef* sret %_result, %MainParameters* %"$this") #2 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %"$this.addr" = alloca %MainParameters*
  store %MainParameters* %"$this", %MainParameters** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %_result.addr
  %2 = load %MainParameters** %"$this.addr"
  %3 = getelementptr inbounds %MainParameters* %2, i32 0, i32 0
  %4 = load %CStrPtr* %3
  call void @toStringRef(%StringRef* %1, %CStrPtr %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @toStringRef(%StringRef* sret %_result, %CStrPtr %p) #2 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %p.addr = alloca %CStrPtr
  store %CStrPtr %p, %CStrPtr* %p.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %_result.addr
  %2 = getelementptr inbounds %CStrPtr* %p.addr, i32 0, i32 0
  %3 = load %CStr** %2
  %4 = getelementptr inbounds %CStr* %3, i32 0, i32 0
  %5 = load i8** %4
  %6 = call %StringRef @_String_fromCString(i8* %5)
  call void @ctor70(%StringRef* %1, %StringRef %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringRef @_String_fromCString(i8* %s) #3 {
  %s.addr = alloca i8*
  store i8* %s, i8** %s.addr
  %len = alloca i64
  %res = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %s.addr
  %2 = call i64 @cStringLen(i8* %1)
  store i64 %2, i64* %len
  call void @ctor86(%StringRef* %res)
  %3 = load i8** %s.addr
  %4 = getelementptr inbounds %StringRef* %res, i32 0, i32 0
  store i8* %3, i8** %4
  %5 = getelementptr inbounds %StringRef* %res, i32 0, i32 0
  %6 = load i8** %5
  %7 = load i64* %len
  %8 = call i8* @ptrAdd(i8* %6, i64 %7)
  %9 = getelementptr inbounds %StringRef* %res, i32 0, i32 1
  store i8* %8, i8** %9
  %10 = load %StringRef* %res
  ret %StringRef %10
}

; Function Attrs: inlinehint nounwind
define internal i64 @cStringLen(i8* %s) #3 {
  %s.addr = alloca i8*
  store i8* %s, i8** %s.addr
  %p = alloca i8*
  %len = alloca i64
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8** %s.addr
  store i8* %1, i8** %p
  store i64 0, i64* %len
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %2 = load i8** %p
  %3 = load i8* %2
  store i8 0, i8* %tmp.v
  %4 = load i8* %tmp.v
  %5 = call i1 @"!="(i8 %3, i8 %4)
  br i1 %5, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %6 = load i64* %len
  %7 = call i64 @"+67"(i64 %6, i32 1)
  store i64 %7, i64* %len
  br label %while_step

while_step:                                       ; preds = %while_body
  %8 = load i8** %p
  %9 = call i8* @ptrAdd(i8* %8, i64 1)
  store i8* %9, i8** %p
  br label %while_block

while_end:                                        ; preds = %while_block
  %10 = load i64* %len
  ret i64 %10
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"!="(i8 %x, i8 %y) #2 {
  %x.addr = alloca i8
  store i8 %x, i8* %x.addr
  %y.addr = alloca i8
  store i8 %y, i8* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %x.addr
  %2 = load i8* %y.addr
  %3 = call i8 @cmn(i8 %1, i8 %2)
  %4 = load i8* %y.addr
  %5 = load i8* %x.addr
  %6 = call i8 @cmn(i8 %4, i8 %5)
  %7 = icmp ne i8 %3, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor86(%StringRef* %"$this") #2 {
  %"$this.addr" = alloca %StringRef*
  store %StringRef* %"$this", %StringRef** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %"$this.addr"
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = load %StringRef** %"$this.addr"
  %4 = getelementptr inbounds %StringRef* %3, i32 0, i32 1
  store i8* null, i8** %4
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @back(%StringRef* sret %_result, %MainParameters* %"$this") #2 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %"$this.addr" = alloca %MainParameters*
  store %MainParameters* %"$this", %MainParameters** %"$this.addr"
  %"$tmpC" = alloca %CStrPtr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %_result.addr
  %2 = load %MainParameters** %"$this.addr"
  %3 = getelementptr inbounds %MainParameters* %2, i32 0, i32 1
  %4 = load %CStrPtr* %3
  call void @-87(%CStrPtr* %"$tmpC", %CStrPtr %4, i64 1)
  %5 = load %CStrPtr* %"$tmpC"
  call void @toStringRef(%StringRef* %1, %CStrPtr %5)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @-87(%CStrPtr* sret %_result, %CStrPtr %p, i64 %n) #2 {
  %_result.addr = alloca %CStrPtr*
  store %CStrPtr* %_result, %CStrPtr** %_result.addr
  %p.addr = alloca %CStrPtr
  store %CStrPtr %p, %CStrPtr* %p.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr** %_result.addr
  %2 = load %CStrPtr* %p.addr
  %3 = call i8* @toBytePtr(%CStrPtr %2)
  %4 = load i64* %n.addr
  %5 = call i64 @"*"(i64 %4, i64 8)
  %6 = call i8* @ptrSub(i8* %3, i64 %5)
  call void @fromBytePtr(%CStrPtr* %1, i8* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @fromBytePtr(%CStrPtr* sret %_result, i8* %p) #2 {
  %_result.addr = alloca %CStrPtr*
  store %CStrPtr* %_result, %CStrPtr** %_result.addr
  %p.addr = alloca i8*
  store i8* %p, i8** %p.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr** %_result.addr
  %2 = load i8** %p.addr
  %3 = bitcast i8* %2 to %CStr*
  call void @ctor88(%CStrPtr* %1, %CStr* %3)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor88(%CStrPtr* %"$this", %CStr* %fptr) #2 {
  %"$this.addr" = alloca %CStrPtr*
  store %CStrPtr* %"$this", %CStrPtr** %"$this.addr"
  %fptr.addr = alloca %CStr*
  store %CStr* %fptr, %CStr** %fptr.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStr** %fptr.addr
  %2 = load %CStrPtr** %"$this.addr"
  %3 = getelementptr inbounds %CStrPtr* %2, i32 0, i32 0
  store %CStr* %1, %CStr** %3
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"*"(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn25(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn25(i64 %4, i64 %5)
  %7 = mul i64 %3, %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor89(%CStrPtr* %"$this") #2 {
  %"$this.addr" = alloca %CStrPtr*
  store %CStrPtr* %"$this", %CStrPtr** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"()"(%StringRef* sret %_result, %MainParameters* %"$this") #2 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %"$this.addr" = alloca %MainParameters*
  store %MainParameters* %"$this", %MainParameters** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %_result.addr
  %2 = load %MainParameters** %"$this.addr"
  %3 = getelementptr inbounds %MainParameters* %2, i32 0, i32 0
  %4 = load %CStrPtr* %3
  call void @toStringRef(%StringRef* %1, %CStrPtr %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"()90"(%StringRef* sret %_result, %MainParameters* %"$this", i64 %n) #2 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %"$this.addr" = alloca %MainParameters*
  store %MainParameters* %"$this", %MainParameters** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %CStrPtr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %_result.addr
  %2 = load %MainParameters** %"$this.addr"
  %3 = getelementptr inbounds %MainParameters* %2, i32 0, i32 0
  %4 = load %CStrPtr* %3
  %5 = load i64* %n.addr
  call void @"+91"(%CStrPtr* %"$tmpC", %CStrPtr %4, i64 %5)
  %6 = load %CStrPtr* %"$tmpC"
  call void @toStringRef(%StringRef* %1, %CStrPtr %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"+91"(%CStrPtr* sret %_result, %CStrPtr %p, i64 %n) #2 {
  %_result.addr = alloca %CStrPtr*
  store %CStrPtr* %_result, %CStrPtr** %_result.addr
  %p.addr = alloca %CStrPtr
  store %CStrPtr %p, %CStrPtr* %p.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr** %_result.addr
  %2 = load %CStrPtr* %p.addr
  %3 = call i8* @toBytePtr(%CStrPtr %2)
  %4 = load i64* %n.addr
  %5 = call i64 @"*"(i64 %4, i64 8)
  %6 = call i8* @ptrAdd(i8* %3, i64 %5)
  call void @fromBytePtr(%CStrPtr* %1, i8* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront(%MainParameters* %"$this") #2 {
  %"$this.addr" = alloca %MainParameters*
  store %MainParameters* %"$this", %MainParameters** %"$this.addr"
  %"$tmpC" = alloca %CStrPtr
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters** %"$this.addr"
  %2 = getelementptr inbounds %MainParameters* %1, i32 0, i32 0
  %3 = load %MainParameters** %"$this.addr"
  %4 = getelementptr inbounds %MainParameters* %3, i32 0, i32 0
  %5 = load %CStrPtr* %4
  call void @"+91"(%CStrPtr* %"$tmpC", %CStrPtr %5, i64 1)
  call void @"="(%CStrPtr* %2, %CStrPtr* %"$tmpC")
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"="(%CStrPtr* %"$this", %CStrPtr* %other) #2 {
  %"$this.addr" = alloca %CStrPtr*
  store %CStrPtr* %"$this", %CStrPtr** %"$this.addr"
  %other.addr = alloca %CStrPtr*
  store %CStrPtr* %other, %CStrPtr** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr** %other.addr
  %2 = getelementptr inbounds %CStrPtr* %1, i32 0, i32 0
  %3 = load %CStr** %2
  %4 = load %CStrPtr** %"$this.addr"
  %5 = getelementptr inbounds %CStrPtr* %4, i32 0, i32 0
  store %CStr* %3, %CStr** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack(%MainParameters* %"$this") #2 {
  %"$this.addr" = alloca %MainParameters*
  store %MainParameters* %"$this", %MainParameters** %"$this.addr"
  %"$tmpC" = alloca %CStrPtr
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters** %"$this.addr"
  %2 = getelementptr inbounds %MainParameters* %1, i32 0, i32 1
  %3 = load %MainParameters** %"$this.addr"
  %4 = getelementptr inbounds %MainParameters* %3, i32 0, i32 1
  %5 = load %CStrPtr* %4
  call void @-87(%CStrPtr* %"$tmpC", %CStrPtr %5, i64 1)
  call void @"="(%CStrPtr* %2, %CStrPtr* %"$tmpC")
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront92(%MainParameters* %"$this", i64 %n) #2 {
  %"$this.addr" = alloca %MainParameters*
  store %MainParameters* %"$this", %MainParameters** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %CStrPtr
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters** %"$this.addr"
  %2 = getelementptr inbounds %MainParameters* %1, i32 0, i32 0
  %3 = load %MainParameters** %"$this.addr"
  %4 = getelementptr inbounds %MainParameters* %3, i32 0, i32 0
  %5 = load %CStrPtr* %4
  %6 = load i64* %n.addr
  call void @"+91"(%CStrPtr* %"$tmpC", %CStrPtr %5, i64 %6)
  call void @"="(%CStrPtr* %2, %CStrPtr* %"$tmpC")
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack93(%MainParameters* %"$this", i64 %n) #2 {
  %"$this.addr" = alloca %MainParameters*
  store %MainParameters* %"$this", %MainParameters** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %CStrPtr
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters** %"$this.addr"
  %2 = getelementptr inbounds %MainParameters* %1, i32 0, i32 1
  %3 = load %MainParameters** %"$this.addr"
  %4 = getelementptr inbounds %MainParameters* %3, i32 0, i32 1
  %5 = load %CStrPtr* %4
  %6 = load i64* %n.addr
  call void @-87(%CStrPtr* %"$tmpC", %CStrPtr %5, i64 %6)
  call void @"="(%CStrPtr* %2, %CStrPtr* %"$tmpC")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor94(%MainParameters* %"$this", i32 %argc, i8** %argv) #3 {
  %"$this.addr" = alloca %MainParameters*
  store %MainParameters* %"$this", %MainParameters** %"$this.addr"
  %argc.addr = alloca i32
  store i32 %argc, i32* %argc.addr
  %argv.addr = alloca i8**
  store i8** %argv, i8*** %argv.addr
  %"$tmpC" = alloca %CStrPtr
  %"$tmpC1" = alloca %CStrPtr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters** %"$this.addr"
  %2 = getelementptr inbounds %MainParameters* %1, i32 0, i32 0
  call void @ctor95(%CStrPtr* %2)
  %3 = load %MainParameters** %"$this.addr"
  %4 = getelementptr inbounds %MainParameters* %3, i32 0, i32 1
  call void @ctor95(%CStrPtr* %4)
  %5 = load %MainParameters** %"$this.addr"
  %6 = getelementptr inbounds %MainParameters* %5, i32 0, i32 0
  %7 = load i8*** %argv.addr
  call void @fromArgvPtr(%CStrPtr* %"$tmpC", i8** %7)
  call void @"="(%CStrPtr* %6, %CStrPtr* %"$tmpC")
  %8 = load %MainParameters** %"$this.addr"
  %9 = getelementptr inbounds %MainParameters* %8, i32 0, i32 1
  %10 = load %MainParameters** %"$this.addr"
  %11 = getelementptr inbounds %MainParameters* %10, i32 0, i32 0
  %12 = load %CStrPtr* %11
  %13 = load i32* %argc.addr
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %tmp.v
  %15 = load i64* %tmp.v
  call void @"+91"(%CStrPtr* %"$tmpC1", %CStrPtr %12, i64 %15)
  call void @"="(%CStrPtr* %9, %CStrPtr* %"$tmpC1")
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor95(%CStrPtr* %"$this") #2 {
  %"$this.addr" = alloca %CStrPtr*
  store %CStrPtr* %"$this", %CStrPtr** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr** %"$this.addr"
  %2 = getelementptr inbounds %CStrPtr* %1, i32 0, i32 0
  store %CStr* null, %CStr** %2
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @fromArgvPtr(%CStrPtr* sret %_result, i8** %argv) #2 {
  %_result.addr = alloca %CStrPtr*
  store %CStrPtr* %_result, %CStrPtr** %_result.addr
  %argv.addr = alloca i8**
  store i8** %argv, i8*** %argv.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr** %_result.addr
  %2 = load i8*** %argv.addr
  %3 = bitcast i8** %2 to %CStr*
  call void @ctor88(%CStrPtr* %1, %CStr* %3)
  ret void
}

define private void @__global_ctor96() {
  br label %code

code:                                             ; preds = %0
  call void @ctor97(%MainParameters* @programArgs)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor97(%MainParameters* %"$this") #2 {
  %"$this.addr" = alloca %MainParameters*
  store %MainParameters* %"$this", %MainParameters** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters** %"$this.addr"
  %2 = getelementptr inbounds %MainParameters* %1, i32 0, i32 0
  call void @ctor95(%CStrPtr* %2)
  %3 = load %MainParameters** %"$this.addr"
  %4 = getelementptr inbounds %MainParameters* %3, i32 0, i32 1
  call void @ctor95(%CStrPtr* %4)
  ret void
}

define private void @__global_dtor98() {
  br label %code

code:                                             ; preds = %0
  call void @dtor99(%MainParameters* @programArgs)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor99(%MainParameters* %"$this") #2 {
  %"$this.addr" = alloca %MainParameters*
  store %MainParameters* %"$this", %MainParameters** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters** %"$this.addr"
  %2 = getelementptr inbounds %MainParameters* %1, i32 0, i32 1
  %3 = load %MainParameters** %"$this.addr"
  %4 = getelementptr inbounds %MainParameters* %3, i32 0, i32 0
  ret void
}

; Function Attrs: nounwind
declare void @sprMain() #1

; Function Attrs: alwaysinline nounwind
define internal i32 @asInt(%StringRef %src) #2 {
  %src.addr = alloca %StringRef
  store %StringRef %src, %StringRef* %src.addr
  br label %code

code:                                             ; preds = %0
  %1 = call i8* @cStr(%StringRef* %src.addr)
  %2 = call i32 @atoi(i8* %1)
  ret i32 %2
}

declare i32 @atoi(i8*)

; Function Attrs: alwaysinline nounwind
define internal i8* @cStr(%StringRef* %"$this") #2 {
  %"$this.addr" = alloca %StringRef*
  store %StringRef* %"$this", %StringRef** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %"$this.addr"
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 0
  %3 = load i8** %2
  ret i8* %3
}

; Function Attrs: alwaysinline nounwind
define internal i64 @asLong(%StringRef %src) #2 {
  %src.addr = alloca %StringRef
  store %StringRef %src, %StringRef* %src.addr
  br label %code

code:                                             ; preds = %0
  %1 = call i8* @cStr(%StringRef* %src.addr)
  %2 = call i64 @atoll(i8* %1)
  ret i64 %2
}

declare i64 @atoll(i8*)

; Function Attrs: alwaysinline nounwind
define internal double @asDouble(%StringRef %src) #2 {
  %src.addr = alloca %StringRef
  store %StringRef %src, %StringRef* %src.addr
  br label %code

code:                                             ; preds = %0
  %1 = call i8* @cStr(%StringRef* %src.addr)
  %2 = call double @atof(i8* %1)
  ret double %2
}

declare double @atof(i8*)

; Function Attrs: inlinehint nounwind
define internal void @reportError(%ExternalErrorReporter* %"$this", %Location %loc, %String* %msg) #3 {
  %"$this.addr" = alloca %ExternalErrorReporter*
  store %ExternalErrorReporter* %"$this", %ExternalErrorReporter** %"$this.addr"
  %loc.addr = alloca %Location
  store %Location %loc, %Location* %loc.addr
  %msg.addr = alloca %String*
  store %String* %msg, %String** %msg.addr
  %"$tmpC" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %msg.addr
  call void @asStringRef(%StringRef* %"$tmpC", %String* %1)
  %2 = load %StringRef* %"$tmpC"
  call void @comp_parser_reportError(%Location* %loc.addr, %StringRef %2)
  ret void
}

declare void @comp_parser_reportError(%Location*, %StringRef)

; Function Attrs: alwaysinline nounwind
define internal void @asStringRef(%StringRef* sret %_result, %String* %"$this") #2 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %_result.addr
  %2 = load %String** %"$this.addr"
  %3 = getelementptr inbounds %String* %2, i32 0, i32 0
  %4 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %3)
  %5 = load %String** %"$this.addr"
  %6 = getelementptr inbounds %String* %5, i32 0, i32 1
  %7 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %6)
  call void @ctor100(%StringRef* %1, i8* %4, i8* %7)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor100(%StringRef* %"$this", i8* %begin, i8* %end) #3 {
  %"$this.addr" = alloca %StringRef*
  store %StringRef* %"$this", %StringRef** %"$this.addr"
  %begin.addr = alloca i8*
  store i8* %begin, i8** %begin.addr
  %end.addr = alloca i8*
  store i8* %end, i8** %end.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %"$this.addr"
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = load %StringRef** %"$this.addr"
  %4 = getelementptr inbounds %StringRef* %3, i32 0, i32 1
  store i8* null, i8** %4
  %5 = load i8** %begin.addr
  %6 = load %StringRef** %"$this.addr"
  %7 = getelementptr inbounds %StringRef* %6, i32 0, i32 0
  store i8* %5, i8** %7
  %8 = load i8** %end.addr
  %9 = load %StringRef** %"$this.addr"
  %10 = getelementptr inbounds %StringRef* %9, i32 0, i32 1
  store i8* %8, i8** %10
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i8* @bytePtr(%"RawPtr[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[Char/rtct]"* %1, i32 0, i32 0
  %3 = load i8** %2
  ret i8* %3
}

; Function Attrs: inlinehint nounwind
define internal void @ctor101(%_CharSource* %"$this", %FileRange* %fileRange, %StringRef %code) #3 {
  %"$this.addr" = alloca %_CharSource*
  store %_CharSource* %"$this", %_CharSource** %"$this.addr"
  %fileRange.addr = alloca %FileRange*
  store %FileRange* %fileRange, %FileRange** %fileRange.addr
  %code.addr = alloca %StringRef
  store %StringRef %code, %StringRef* %code.addr
  br label %code1

code1:                                            ; preds = %0
  %1 = load %_CharSource** %"$this.addr"
  %2 = getelementptr inbounds %_CharSource* %1, i32 0, i32 0
  store %FileRange* null, %FileRange** %2
  %3 = load %FileRange** %fileRange.addr
  %4 = load %_CharSource** %"$this.addr"
  %5 = getelementptr inbounds %_CharSource* %4, i32 0, i32 0
  store %FileRange* %3, %FileRange** %5
  %6 = load %_CharSource** %"$this.addr"
  %7 = getelementptr inbounds %_CharSource* %6, i32 0, i32 1
  %8 = load %StringRef* %code.addr
  call void @ctor70(%StringRef* %7, %StringRef %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty102(%_CharSource* %s) #3 {
  %s.addr = alloca %_CharSource*
  store %_CharSource* %s, %_CharSource** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource** %s.addr
  %2 = getelementptr inbounds %_CharSource* %1, i32 0, i32 0
  %3 = load %FileRange** %2
  %4 = bitcast %FileRange* %3 to i8*
  %5 = call i1 @implOpRefNE(i8* %4, i8* null)
  br i1 %5, label %cond_alt1, label %cond_alt2

cond_alt1:                                        ; preds = %code
  %6 = load %_CharSource** %s.addr
  %7 = getelementptr inbounds %_CharSource* %6, i32 0, i32 0
  %8 = load %FileRange** %7
  %9 = call i1 @isEmpty103(%FileRange* %8)
  br label %cond_end

cond_alt2:                                        ; preds = %code
  %10 = load %_CharSource** %s.addr
  %11 = getelementptr inbounds %_CharSource* %10, i32 0, i32 1
  %12 = call i1 @isEmpty104(%StringRef* %11)
  br label %cond_end

cond_end:                                         ; preds = %cond_alt2, %cond_alt1
  %cond = phi i1 [ %9, %cond_alt1 ], [ %12, %cond_alt2 ]
  ret i1 %cond
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isEmpty103(%FileRange* %s) #2 {
  %s.addr = alloca %FileRange*
  store %FileRange* %s, %FileRange** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange** %s.addr
  %2 = getelementptr inbounds %FileRange* %1, i32 0, i32 1
  %3 = load i1* %2
  ret i1 %3
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isEmpty104(%StringRef* %"$this") #2 {
  %"$this.addr" = alloca %StringRef*
  store %StringRef* %"$this", %StringRef** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %"$this.addr"
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 1
  %3 = load i8** %2
  %4 = load %StringRef** %"$this.addr"
  %5 = getelementptr inbounds %StringRef* %4, i32 0, i32 0
  %6 = load i8** %5
  %7 = call i64 @ptrDiff(i8* %3, i8* %6)
  %8 = call i1 @"==105"(i64 %7, i32 0)
  ret i1 %8
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==105"(i64 %x, i32 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i32* %y.addr
  %3 = call i64 @cmn106(i64 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn107(i32 %4, i64 %5)
  %7 = icmp eq i64 %3, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @cmn106(i64 %x, i32 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind
define internal i64 @cmn107(i32 %x, i64 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = sext i32 %1 to i64
  store i64 %2, i64* %tmp.v
  %3 = load i64* %tmp.v
  ret i64 %3
}

; Function Attrs: inlinehint nounwind
define internal i8 @front108(%_CharSource* %s) #3 {
  %s.addr = alloca %_CharSource*
  store %_CharSource* %s, %_CharSource** %s.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %_CharSource** %s.addr
  %2 = getelementptr inbounds %_CharSource* %1, i32 0, i32 0
  %3 = load %FileRange** %2
  %4 = bitcast %FileRange* %3 to i8*
  %5 = call i1 @implOpRefNE(i8* %4, i8* null)
  br i1 %5, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %6 = load %_CharSource** %s.addr
  %7 = getelementptr inbounds %_CharSource* %6, i32 0, i32 0
  %8 = load %FileRange** %7
  %9 = call i8 @front109(%FileRange* %8)
  ret i8 %9

if_else:                                          ; preds = %if_block
  %10 = load %_CharSource** %s.addr
  %11 = getelementptr inbounds %_CharSource* %10, i32 0, i32 1
  %12 = call i8* @front110(%StringRef* %11)
  %13 = load i8* %12
  ret i8 %13

if_end:                                           ; preds = %dumy_block1, %dumy_block
  unreachable

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block1:                                      ; No predecessors!
  br label %if_end
}

; Function Attrs: alwaysinline nounwind
define internal i8 @front109(%FileRange* %s) #2 {
  %s.addr = alloca %FileRange*
  store %FileRange* %s, %FileRange** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange** %s.addr
  %2 = getelementptr inbounds %FileRange* %1, i32 0, i32 2
  %3 = load i8* %2
  ret i8 %3
}

; Function Attrs: alwaysinline nounwind
define internal i8* @front110(%StringRef* %"$this") #2 {
  %"$this.addr" = alloca %StringRef*
  store %StringRef* %"$this", %StringRef** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %"$this.addr"
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 0
  %3 = load i8** %2
  ret i8* %3
}

; Function Attrs: inlinehint nounwind
define internal void @popFront111(%_CharSource* %s) #3 {
  %s.addr = alloca %_CharSource*
  store %_CharSource* %s, %_CharSource** %s.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %_CharSource** %s.addr
  %2 = getelementptr inbounds %_CharSource* %1, i32 0, i32 0
  %3 = load %FileRange** %2
  %4 = bitcast %FileRange* %3 to i8*
  %5 = call i1 @implOpRefNE(i8* %4, i8* null)
  br i1 %5, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %6 = load %_CharSource** %s.addr
  %7 = getelementptr inbounds %_CharSource* %6, i32 0, i32 0
  %8 = load %FileRange** %7
  call void @popFront112(%FileRange* %8)
  br label %if_end

if_else:                                          ; preds = %if_block
  %9 = load %_CharSource** %s.addr
  %10 = getelementptr inbounds %_CharSource* %9, i32 0, i32 1
  call void @popFront114(%StringRef* %10)
  br label %if_end

if_end:                                           ; preds = %if_else, %if_then
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popFront112(%FileRange* %s) #3 {
  %s.addr = alloca %FileRange*
  store %FileRange* %s, %FileRange** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange** %s.addr
  %2 = getelementptr inbounds %FileRange* %1, i32 0, i32 0
  %3 = load %File** %2
  %4 = call i8 @readChar(%File* %3)
  %5 = load %FileRange** %s.addr
  %6 = getelementptr inbounds %FileRange* %5, i32 0, i32 2
  store i8 %4, i8* %6
  br label %if_block

if_block:                                         ; preds = %code
  %7 = load %FileRange** %s.addr
  %8 = getelementptr inbounds %FileRange* %7, i32 0, i32 0
  %9 = load %File** %8
  %10 = call i1 @isEof(%File* %9)
  br i1 %10, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %11 = load %FileRange** %s.addr
  %12 = getelementptr inbounds %FileRange* %11, i32 0, i32 1
  store i1 true, i1* %12
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i8 @readChar(%File* %"$this") #2 {
  %"$this.addr" = alloca %File*
  store %File* %"$this", %File** %"$this.addr"
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %File** %"$this.addr"
  %2 = getelementptr inbounds %File* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = call i32 @fgetc(i8* %3)
  %5 = trunc i32 %4 to i8
  store i8 %5, i8* %tmp.v
  %6 = load i8* %tmp.v
  ret i8 %6
}

declare i32 @fgetc(i8*)

; Function Attrs: alwaysinline nounwind
define internal i1 @isEof(%File* %"$this") #2 {
  %"$this.addr" = alloca %File*
  store %File* %"$this", %File** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %File** %"$this.addr"
  %2 = getelementptr inbounds %File* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = call i32 @feof(i8* %3)
  %5 = call i1 @"!=113"(i32 0, i32 %4)
  ret i1 %5
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"!=113"(i32 %x, i32 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn13(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn13(i32 %4, i32 %5)
  %7 = icmp ne i32 %3, %6
  ret i1 %7
}

declare i32 @feof(i8*)

; Function Attrs: alwaysinline nounwind
define internal void @popFront114(%StringRef* %"$this") #2 {
  %"$this.addr" = alloca %StringRef*
  store %StringRef* %"$this", %StringRef** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %"$this.addr"
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = call i8* @ptrAdd(i8* %3, i64 1)
  %5 = load %StringRef** %"$this.addr"
  %6 = getelementptr inbounds %StringRef* %5, i32 0, i32 0
  store i8* %4, i8** %6
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor115(%ParserContext* %"$this", %StringRef %filename, %StringRef %code, %Location %loc, i1 %scannerOnly) #3 {
  %"$this.addr" = alloca %ParserContext*
  store %ParserContext* %"$this", %ParserContext** %"$this.addr"
  %filename.addr = alloca %StringRef
  store %StringRef %filename, %StringRef* %filename.addr
  %code.addr = alloca %StringRef
  store %StringRef %code, %StringRef* %code.addr
  %loc.addr = alloca %Location
  store %Location %loc, %Location* %loc.addr
  %scannerOnly.addr = alloca i1
  store i1 %scannerOnly, i1* %scannerOnly.addr
  %reporter = alloca %ExternalErrorReporter
  %const.bytes = alloca [2 x i8]
  %const.struct = alloca %StringRef
  %"$tmpC" = alloca %FileRange
  %const.bytes2 = alloca [1 x i8]
  %const.struct3 = alloca %StringRef
  %"$tmpC7" = alloca %String
  %const.bytes8 = alloca [19 x i8]
  %const.struct9 = alloca %StringRef
  br label %code1

code1:                                            ; preds = %0
  %1 = load %ParserContext** %"$this.addr"
  %2 = getelementptr inbounds %ParserContext* %1, i32 0, i32 0
  call void @ctor116(%File* %2)
  %3 = load %ParserContext** %"$this.addr"
  %4 = getelementptr inbounds %ParserContext* %3, i32 0, i32 1
  call void @ctor117(%FileRange* %4)
  %5 = load %ParserContext** %"$this.addr"
  %6 = getelementptr inbounds %ParserContext* %5, i32 0, i32 2
  call void @ctor118(%_CharSource* %6)
  %7 = load %ParserContext** %"$this.addr"
  %8 = getelementptr inbounds %ParserContext* %7, i32 0, i32 4
  call void @ctor119(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %ParserContext** %"$this.addr"
  %10 = getelementptr inbounds %ParserContext* %9, i32 0, i32 5
  call void @ctor136(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10)
  br label %if_block

if_block:                                         ; preds = %code1
  %11 = call i1 @isEmpty104(%StringRef* %code.addr)
  br i1 %11, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %12 = load %ParserContext** %"$this.addr"
  %13 = getelementptr inbounds %ParserContext* %12, i32 0, i32 0
  %14 = load %StringRef* %filename.addr
  store [2 x i8] c"r\00", [2 x i8]* %const.bytes
  %15 = getelementptr inbounds [2 x i8]* %const.bytes, i32 0, i32 0
  %16 = getelementptr inbounds [2 x i8]* %const.bytes, i32 0, i32 1
  %17 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %18 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %15, i8** %17
  store i8* %16, i8** %18
  %19 = load %StringRef* %const.struct
  call void @ctor138(%File* %13, %StringRef %14, %StringRef %19)
  %20 = load %ParserContext** %"$this.addr"
  %21 = getelementptr inbounds %ParserContext* %20, i32 0, i32 1
  %22 = load %ParserContext** %"$this.addr"
  %23 = getelementptr inbounds %ParserContext* %22, i32 0, i32 0
  call void @all(%FileRange* %"$tmpC", %File* %23)
  call void @ctor139(%FileRange* %21, %FileRange* %"$tmpC")
  %24 = load %ParserContext** %"$this.addr"
  %25 = getelementptr inbounds %ParserContext* %24, i32 0, i32 2
  %26 = load %ParserContext** %"$this.addr"
  %27 = getelementptr inbounds %ParserContext* %26, i32 0, i32 1
  store [1 x i8] zeroinitializer, [1 x i8]* %const.bytes2
  %28 = getelementptr inbounds [1 x i8]* %const.bytes2, i32 0, i32 0
  %29 = getelementptr inbounds [1 x i8]* %const.bytes2, i32 0, i32 0
  %30 = getelementptr inbounds %StringRef* %const.struct3, i32 0, i32 0
  %31 = getelementptr inbounds %StringRef* %const.struct3, i32 0, i32 1
  store i8* %28, i8** %30
  store i8* %29, i8** %31
  %32 = load %StringRef* %const.struct3
  call void @ctor101(%_CharSource* %25, %FileRange* %27, %StringRef %32)
  br label %if_block4

if_else:                                          ; preds = %if_block
  %33 = load %ParserContext** %"$this.addr"
  %34 = getelementptr inbounds %ParserContext* %33, i32 0, i32 0
  call void @ctor116(%File* %34)
  %35 = load %ParserContext** %"$this.addr"
  %36 = getelementptr inbounds %ParserContext* %35, i32 0, i32 1
  call void @ctor117(%FileRange* %36)
  %37 = load %ParserContext** %"$this.addr"
  %38 = getelementptr inbounds %ParserContext* %37, i32 0, i32 2
  %39 = load %StringRef* %code.addr
  call void @ctor101(%_CharSource* %38, %FileRange* null, %StringRef %39)
  br label %if_end

if_end:                                           ; preds = %if_else, %if_end6
  %40 = load %ParserContext** %"$this.addr"
  %41 = getelementptr inbounds %ParserContext* %40, i32 0, i32 3
  %42 = load %ParserContext** %"$this.addr"
  %43 = getelementptr inbounds %ParserContext* %42, i32 0, i32 2
  %44 = load %_CharSource* %43
  %45 = load %ExternalErrorReporter* %reporter
  call void @ctor167(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %41, %_CharSource %44, %ExternalErrorReporter %45, %Location* %loc.addr)
  br label %if_block10

if_block4:                                        ; preds = %if_then
  %46 = load %ParserContext** %"$this.addr"
  %47 = getelementptr inbounds %ParserContext* %46, i32 0, i32 0
  %48 = call i1 @isOpen(%File* %47)
  %49 = xor i1 true, %48
  br i1 %49, label %if_then5, label %if_end6

if_then5:                                         ; preds = %if_block4
  %50 = load %Location* %loc.addr
  store [19 x i8] c"Cannot open file: \00", [19 x i8]* %const.bytes8
  %51 = getelementptr inbounds [19 x i8]* %const.bytes8, i32 0, i32 0
  %52 = getelementptr inbounds [19 x i8]* %const.bytes8, i32 0, i32 18
  %53 = getelementptr inbounds %StringRef* %const.struct9, i32 0, i32 0
  %54 = getelementptr inbounds %StringRef* %const.struct9, i32 0, i32 1
  store i8* %51, i8** %53
  store i8* %52, i8** %54
  %55 = load %StringRef* %const.struct9
  %56 = load %StringRef* %filename.addr
  call void @toString(%String* %"$tmpC7", %StringRef %55, %StringRef %56)
  call void @reportError(%ExternalErrorReporter* %reporter, %Location %50, %String* %"$tmpC7")
  call void @dtor166(%String* %"$tmpC7")
  br label %if_end6

if_end6:                                          ; preds = %if_then5, %if_block4
  br label %if_end

if_block10:                                       ; preds = %if_end
  %57 = load i1* %scannerOnly.addr
  %58 = xor i1 true, %57
  br i1 %58, label %if_then11, label %if_end12

if_then11:                                        ; preds = %if_block10
  %59 = load %ParserContext** %"$this.addr"
  %60 = getelementptr inbounds %ParserContext* %59, i32 0, i32 4
  %61 = load %ParserContext** %"$this.addr"
  %62 = getelementptr inbounds %ParserContext* %61, i32 0, i32 3
  %63 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %62
  %64 = load %ExternalErrorReporter* %reporter
  call void @ctor187(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %60, %"SparrowScanner[_CharSource, ExternalErrorReporter]" %63, %ExternalErrorReporter %64)
  %65 = load %ParserContext** %"$this.addr"
  %66 = getelementptr inbounds %ParserContext* %65, i32 0, i32 5
  %67 = load %ParserContext** %"$this.addr"
  %68 = getelementptr inbounds %ParserContext* %67, i32 0, i32 4
  %69 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %68
  %70 = load %ExternalErrorReporter* %reporter
  call void @ctor351(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %66, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" %69, %ExternalErrorReporter %70)
  br label %if_end12

if_end12:                                         ; preds = %if_then11, %if_block10
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor116(%File* %"$this") #3 {
  %"$this.addr" = alloca %File*
  store %File* %"$this", %File** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %File** %"$this.addr"
  %2 = getelementptr inbounds %File* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = load %File** %"$this.addr"
  %4 = getelementptr inbounds %File* %3, i32 0, i32 0
  store i8* null, i8** %4
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor117(%FileRange* %"$this") #2 {
  %"$this.addr" = alloca %FileRange*
  store %FileRange* %"$this", %FileRange** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange** %"$this.addr"
  %2 = getelementptr inbounds %FileRange* %1, i32 0, i32 0
  store %File* null, %File** %2
  %3 = load %FileRange** %"$this.addr"
  %4 = getelementptr inbounds %FileRange* %3, i32 0, i32 1
  store i1 false, i1* %4
  %5 = load %FileRange** %"$this.addr"
  %6 = getelementptr inbounds %FileRange* %5, i32 0, i32 2
  store i8 0, i8* %6
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor118(%_CharSource* %"$this") #2 {
  %"$this.addr" = alloca %_CharSource*
  store %_CharSource* %"$this", %_CharSource** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource** %"$this.addr"
  %2 = getelementptr inbounds %_CharSource* %1, i32 0, i32 0
  store %FileRange* null, %FileRange** %2
  %3 = load %_CharSource** %"$this.addr"
  %4 = getelementptr inbounds %_CharSource* %3, i32 0, i32 1
  call void @ctor86(%StringRef* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor119(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %"$this") #2 {
  %"$this.addr" = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %"$this", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @ctor120(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %2)
  %3 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %4 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 2
  call void @ctor134(%"Vector[UInt/rtct]"* %4)
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %6 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 3
  call void @ctor127(%"Vector[Char/rtct]"* %6)
  %7 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %8 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 4
  call void @ctor130(%TokenType* %8)
  %9 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %10 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %9, i32 0, i32 5
  store i32 0, i32* %10
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor120(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %"$this") #2 {
  %"$this.addr" = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %"$this", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %"$this.addr"
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 0
  call void @ctor121(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %2)
  %3 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %"$this.addr"
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %3, i32 0, i32 1
  call void @ctor132(%"Vector[Token]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor121(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %"$this") #2 {
  %"$this.addr" = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %"$this", %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @ctor122(%Location* %2)
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %4 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 0, i32 1
  call void @ctor125(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  %5 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %6 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %5, i32 0, i32 2
  call void @ctor129(%Token* %6)
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %8 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 0, i32 3
  store i1 false, i1* %8
  %9 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %10 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %9, i32 0, i32 4
  store i1 false, i1* %10
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor122(%Location* %"$this") #2 {
  %"$this.addr" = alloca %Location*
  store %Location* %"$this", %Location** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %"$this.addr"
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 0
  call void @ctor123(%SourceCode* %2)
  %3 = load %Location** %"$this.addr"
  %4 = getelementptr inbounds %Location* %3, i32 0, i32 1
  call void @ctor124(%LineCol* %4)
  %5 = load %Location** %"$this.addr"
  %6 = getelementptr inbounds %Location* %5, i32 0, i32 2
  call void @ctor124(%LineCol* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor123(%SourceCode* %"$this") #2 {
  %"$this.addr" = alloca %SourceCode*
  store %SourceCode* %"$this", %SourceCode** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %SourceCode** %"$this.addr"
  %2 = getelementptr inbounds %SourceCode* %1, i32 0, i32 0
  store i8* null, i8** %2
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor124(%LineCol* %"$this") #2 {
  %"$this.addr" = alloca %LineCol*
  store %LineCol* %"$this", %LineCol** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %LineCol** %"$this.addr"
  %2 = getelementptr inbounds %LineCol* %1, i32 0, i32 0
  store i32 0, i32* %2
  %3 = load %LineCol** %"$this.addr"
  %4 = getelementptr inbounds %LineCol* %3, i32 0, i32 1
  store i32 0, i32* %4
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor125(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %"$this") #2 {
  %"$this.addr" = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %"$this", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %"$this.addr"
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  call void @ctor126(%"RangeWithLookahead[_CharSource]"* %2)
  %3 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %"$this.addr"
  %4 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %3, i32 0, i32 1
  store %Location* null, %Location** %4
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor126(%"RangeWithLookahead[_CharSource]"* %"$this") #2 {
  %"$this.addr" = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %"$this", %"RangeWithLookahead[_CharSource]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"** %"$this.addr"
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 0
  call void @ctor118(%_CharSource* %2)
  %3 = load %"RangeWithLookahead[_CharSource]"** %"$this.addr"
  %4 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %3, i32 0, i32 1
  call void @ctor127(%"Vector[Char/rtct]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor127(%"Vector[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 0
  call void @ctor128(%"RawPtr[Char/rtct]"* %2)
  %3 = load %"Vector[Char/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Char/rtct]"* %3, i32 0, i32 1
  call void @ctor128(%"RawPtr[Char/rtct]"* %4)
  %5 = load %"Vector[Char/rtct]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[Char/rtct]"* %5, i32 0, i32 2
  call void @ctor128(%"RawPtr[Char/rtct]"* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor128(%"RawPtr[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[Char/rtct]"* %1, i32 0, i32 0
  store i8* null, i8** %2
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor129(%Token* %"$this") #2 {
  %"$this.addr" = alloca %Token*
  store %Token* %"$this", %Token** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %Token** %"$this.addr"
  %2 = getelementptr inbounds %Token* %1, i32 0, i32 0
  call void @ctor122(%Location* %2)
  %3 = load %Token** %"$this.addr"
  %4 = getelementptr inbounds %Token* %3, i32 0, i32 1
  call void @ctor130(%TokenType* %4)
  %5 = load %Token** %"$this.addr"
  %6 = getelementptr inbounds %Token* %5, i32 0, i32 2
  call void @ctor131(%String* %6)
  %7 = load %Token** %"$this.addr"
  %8 = getelementptr inbounds %Token* %7, i32 0, i32 3
  store i64 0, i64* %8
  %9 = load %Token** %"$this.addr"
  %10 = getelementptr inbounds %Token* %9, i32 0, i32 4
  store double 0.000000e+00, double* %10
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor130(%TokenType* %"$this") #2 {
  %"$this.addr" = alloca %TokenType*
  store %TokenType* %"$this", %TokenType** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %TokenType** %"$this.addr"
  %2 = getelementptr inbounds %TokenType* %1, i32 0, i32 0
  store i32 0, i32* %2
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor131(%String* %"$this") #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  %2 = getelementptr inbounds %String* %1, i32 0, i32 0
  call void @ctor128(%"RawPtr[Char/rtct]"* %2)
  %3 = load %String** %"$this.addr"
  %4 = getelementptr inbounds %String* %3, i32 0, i32 1
  call void @ctor128(%"RawPtr[Char/rtct]"* %4)
  %5 = load %String** %"$this.addr"
  %6 = getelementptr inbounds %String* %5, i32 0, i32 2
  call void @ctor128(%"RawPtr[Char/rtct]"* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor132(%"Vector[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 0
  call void @ctor133(%"RawPtr[Token]"* %2)
  %3 = load %"Vector[Token]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Token]"* %3, i32 0, i32 1
  call void @ctor133(%"RawPtr[Token]"* %4)
  %5 = load %"Vector[Token]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[Token]"* %5, i32 0, i32 2
  call void @ctor133(%"RawPtr[Token]"* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor133(%"RawPtr[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %"$this", %"RawPtr[Token]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[Token]"* %1, i32 0, i32 0
  store %Token* null, %Token** %2
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor134(%"Vector[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 0
  call void @ctor135(%"RawPtr[UInt/rtct]"* %2)
  %3 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[UInt/rtct]"* %3, i32 0, i32 1
  call void @ctor135(%"RawPtr[UInt/rtct]"* %4)
  %5 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[UInt/rtct]"* %5, i32 0, i32 2
  call void @ctor135(%"RawPtr[UInt/rtct]"* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor135(%"RawPtr[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %1, i32 0, i32 0
  store i32* null, i32** %2
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor136(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %"$this") #2 {
  %"$this.addr" = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %"$this", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @ctor137(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2)
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 1
  call void @ctor129(%Token* %4)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 2
  store i1 false, i1* %6
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor137(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %"$this") #2 {
  %"$this.addr" = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %"$this", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %"$this.addr"
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1, i32 0, i32 0
  call void @ctor119(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %"$this.addr"
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %3, i32 0, i32 1
  call void @ctor132(%"Vector[Token]"* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor138(%File* %"$this", %StringRef %filename, %StringRef %mode) #3 {
  %"$this.addr" = alloca %File*
  store %File* %"$this", %File** %"$this.addr"
  %filename.addr = alloca %StringRef
  store %StringRef %filename, %StringRef* %filename.addr
  %mode.addr = alloca %StringRef
  store %StringRef %mode, %StringRef* %mode.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File** %"$this.addr"
  %2 = getelementptr inbounds %File* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = call i8* @cStr(%StringRef* %filename.addr)
  %4 = call i8* @cStr(%StringRef* %mode.addr)
  %5 = call i8* @fopen(i8* %3, i8* %4)
  %6 = load %File** %"$this.addr"
  %7 = getelementptr inbounds %File* %6, i32 0, i32 0
  store i8* %5, i8** %7
  ret void
}

declare i8* @fopen(i8*, i8*)

; Function Attrs: alwaysinline nounwind
define internal void @ctor139(%FileRange* %"$this", %FileRange* %other) #2 {
  %"$this.addr" = alloca %FileRange*
  store %FileRange* %"$this", %FileRange** %"$this.addr"
  %other.addr = alloca %FileRange*
  store %FileRange* %other, %FileRange** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange** %other.addr
  %2 = getelementptr inbounds %FileRange* %1, i32 0, i32 0
  %3 = load %File** %2
  %4 = load %FileRange** %"$this.addr"
  %5 = getelementptr inbounds %FileRange* %4, i32 0, i32 0
  store %File* %3, %File** %5
  %6 = load %FileRange** %other.addr
  %7 = getelementptr inbounds %FileRange* %6, i32 0, i32 1
  %8 = load i1* %7
  %9 = load %FileRange** %"$this.addr"
  %10 = getelementptr inbounds %FileRange* %9, i32 0, i32 1
  store i1 %8, i1* %10
  %11 = load %FileRange** %other.addr
  %12 = getelementptr inbounds %FileRange* %11, i32 0, i32 2
  %13 = load i8* %12
  %14 = load %FileRange** %"$this.addr"
  %15 = getelementptr inbounds %FileRange* %14, i32 0, i32 2
  store i8 %13, i8* %15
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @all(%FileRange* sret %_result, %File* %"$this") #2 {
  %_result.addr = alloca %FileRange*
  store %FileRange* %_result, %FileRange** %_result.addr
  %"$this.addr" = alloca %File*
  store %File* %"$this", %File** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange** %_result.addr
  %2 = load %File** %"$this.addr"
  call void @ctor140(%FileRange* %1, %File* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor140(%FileRange* %"$this", %File* %file) #3 {
  %"$this.addr" = alloca %FileRange*
  store %FileRange* %"$this", %FileRange** %"$this.addr"
  %file.addr = alloca %File*
  store %File* %file, %File** %file.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange** %"$this.addr"
  %2 = getelementptr inbounds %FileRange* %1, i32 0, i32 0
  store %File* null, %File** %2
  %3 = load %FileRange** %"$this.addr"
  %4 = getelementptr inbounds %FileRange* %3, i32 0, i32 1
  store i1 false, i1* %4
  %5 = load %File** %file.addr
  %6 = load %FileRange** %"$this.addr"
  %7 = getelementptr inbounds %FileRange* %6, i32 0, i32 0
  store %File* %5, %File** %7
  %8 = load %FileRange** %"$this.addr"
  %9 = getelementptr inbounds %FileRange* %8, i32 0, i32 1
  store i1 true, i1* %9
  %10 = load %FileRange** %"$this.addr"
  %11 = getelementptr inbounds %FileRange* %10, i32 0, i32 2
  store i8 0, i8* %11
  br label %if_block

if_block:                                         ; preds = %code
  %12 = load %FileRange** %"$this.addr"
  %13 = getelementptr inbounds %FileRange* %12, i32 0, i32 0
  %14 = load %File** %13
  %15 = call i1 @isEof(%File* %14)
  %16 = xor i1 true, %15
  br i1 %16, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %17 = load %FileRange** %"$this.addr"
  %18 = getelementptr inbounds %FileRange* %17, i32 0, i32 0
  %19 = load %File** %18
  %20 = call i8 @readChar(%File* %19)
  %21 = load %FileRange** %"$this.addr"
  %22 = getelementptr inbounds %FileRange* %21, i32 0, i32 2
  store i8 %20, i8* %22
  %23 = load %FileRange** %"$this.addr"
  %24 = getelementptr inbounds %FileRange* %23, i32 0, i32 1
  store i1 false, i1* %24
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor141(%FileRange* %"$this") #2 {
  %"$this.addr" = alloca %FileRange*
  store %FileRange* %"$this", %FileRange** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isOpen(%File* %"$this") #2 {
  %"$this.addr" = alloca %File*
  store %File* %"$this", %File** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %File** %"$this.addr"
  %2 = getelementptr inbounds %File* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = call i1 @implOpRefNE(i8* %3, i8* null)
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal void @toString(%String* sret %_result, %StringRef %a1, %StringRef %a2) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %a1.addr = alloca %StringRef
  store %StringRef %a1, %StringRef* %a1.addr
  %a2.addr = alloca %StringRef
  store %StringRef %a2, %StringRef* %a2.addr
  %s = alloca %StringOutputStream
  br label %code

code:                                             ; preds = %0
  call void @ctor142(%StringOutputStream* %s)
  %1 = call %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %a1.addr)
  %2 = call %StringOutputStream* @"<<"(%StringOutputStream* %1, %StringRef* %a2.addr)
  %3 = load %String** %_result.addr
  %4 = getelementptr inbounds %StringOutputStream* %s, i32 0, i32 0
  call void @ctor163(%String* %3, %String* %4)
  call void @dtor165(%StringOutputStream* %s)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor165(%StringOutputStream* %s)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor142(%StringOutputStream* %"$this") #2 {
  %"$this.addr" = alloca %StringOutputStream*
  store %StringOutputStream* %"$this", %StringOutputStream** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %"$this.addr"
  %2 = getelementptr inbounds %StringOutputStream* %1, i32 0, i32 0
  call void @ctor131(%String* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %x) #3 {
  %s.addr = alloca %StringOutputStream*
  store %StringOutputStream* %s, %StringOutputStream** %s.addr
  %x.addr = alloca %StringRef*
  store %StringRef* %x, %StringRef** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %s.addr
  %2 = load %StringRef** %x.addr
  call void @"<<<"(%StringOutputStream* %1, %StringRef* %2)
  %3 = load %StringOutputStream** %s.addr
  ret %StringOutputStream* %3
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<"(%StringOutputStream* %"$this", %StringRef* %s) #2 {
  %"$this.addr" = alloca %StringOutputStream*
  store %StringOutputStream* %"$this", %StringOutputStream** %"$this.addr"
  %s.addr = alloca %StringRef*
  store %StringRef* %s, %StringRef** %s.addr
  %tmp.v = alloca %"ContiguousMemoryRange[Char/rtct]"
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC1" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %"$this.addr"
  %2 = getelementptr inbounds %StringOutputStream* %1, i32 0, i32 0
  %3 = load %StringRef** %s.addr
  %4 = getelementptr inbounds %StringRef* %3, i32 0, i32 0
  %5 = load i8** %4
  call void @fromBytePtr145(%"RawPtr[Char/rtct]"* %"$tmpC", i8* %5)
  %6 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  %7 = load %StringRef** %s.addr
  %8 = getelementptr inbounds %StringRef* %7, i32 0, i32 1
  %9 = load i8** %8
  call void @fromBytePtr145(%"RawPtr[Char/rtct]"* %"$tmpC1", i8* %9)
  %10 = load %"RawPtr[Char/rtct]"* %"$tmpC1"
  call void @ctor162(%"ContiguousMemoryRange[Char/rtct]"* %tmp.v, %"RawPtr[Char/rtct]" %6, %"RawPtr[Char/rtct]" %10)
  %11 = load %"ContiguousMemoryRange[Char/rtct]"* %tmp.v
  call void @append(%String* %2, %"ContiguousMemoryRange[Char/rtct]" %11)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @append(%String* %"$this", %"ContiguousMemoryRange[Char/rtct]" %range) #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %range.addr = alloca %"ContiguousMemoryRange[Char/rtct]"
  store %"ContiguousMemoryRange[Char/rtct]" %range, %"ContiguousMemoryRange[Char/rtct]"* %range.addr
  %tmp.v = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  %2 = load %"ContiguousMemoryRange[Char/rtct]"* %range.addr
  %3 = load %String** %"$this.addr"
  %4 = getelementptr inbounds %String* %3, i32 0, i32 1
  %5 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %4)
  %6 = load %String** %"$this.addr"
  %7 = getelementptr inbounds %String* %6, i32 0, i32 1
  %8 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %7)
  call void @ctor100(%StringRef* %tmp.v, i8* %5, i8* %8)
  %9 = load %StringRef* %tmp.v
  call void @insertBefore(%String* %1, %"ContiguousMemoryRange[Char/rtct]" %2, %StringRef %9)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @insertBefore(%String* %"$this", %"ContiguousMemoryRange[Char/rtct]" %range, %StringRef %pos) #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %range.addr = alloca %"ContiguousMemoryRange[Char/rtct]"
  store %"ContiguousMemoryRange[Char/rtct]" %range, %"ContiguousMemoryRange[Char/rtct]"* %range.addr
  %pos.addr = alloca %StringRef
  store %StringRef %pos, %StringRef* %pos.addr
  %n = alloca i64
  %index = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %p = alloca %"RawPtr[Char/rtct]"
  %q = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  %"$tmpC1" = alloca %"RawPtr[Char/rtct]"
  %tmp.v2 = alloca i64
  %"$tmpC3" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC4" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC9" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC10" = alloca %"RawPtr[Char/rtct]"
  %tmp.v11 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = call i64 @size143(%"ContiguousMemoryRange[Char/rtct]"* %range.addr)
  store i64 %1, i64* %n
  %2 = load %StringRef* %pos.addr
  call void @_frontPtr(%"RawPtr[Char/rtct]"* %"$tmpC", %StringRef %2)
  %3 = load %String** %"$this.addr"
  %4 = getelementptr inbounds %String* %3, i32 0, i32 0
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i64 @diff(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %5)
  store i64 %6, i64* %index
  %7 = load %String** %"$this.addr"
  %8 = load %String** %"$this.addr"
  %9 = call i64 @size152(%String* %8)
  %10 = load i64* %n
  %11 = call i64 @"+24"(i64 %9, i64 %10)
  call void @reserve(%String* %7, i64 %11)
  %12 = load %String** %"$this.addr"
  %13 = getelementptr inbounds %String* %12, i32 0, i32 1
  call void @advance(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]"* %13, i64 -1)
  %14 = load %String** %"$this.addr"
  %15 = getelementptr inbounds %String* %14, i32 0, i32 0
  %16 = load i64* %index
  store i64 1, i64* %tmp.v
  %17 = load i64* %tmp.v
  %18 = call i64 @-46(i64 %16, i64 %17)
  call void @advance(%"RawPtr[Char/rtct]"* %q, %"RawPtr[Char/rtct]"* %15, i64 %18)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %19 = load %"RawPtr[Char/rtct]"* %q
  %20 = call i1 @"==155"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %19)
  %21 = xor i1 true, %20
  br i1 %21, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %22 = call i8* @value(%"RawPtr[Char/rtct]"* %p)
  %23 = load i8* %22
  %24 = load i64* %n
  store i64 %24, i64* %tmp.v2
  %25 = load i64* %tmp.v2
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC1", %"RawPtr[Char/rtct]"* %p, i64 %25)
  %26 = call i8* @value(%"RawPtr[Char/rtct]"* %"$tmpC1")
  store i8 %23, i8* %26
  %27 = call i8* @value(%"RawPtr[Char/rtct]"* %p)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC3", %"RawPtr[Char/rtct]"* %p, i64 -1)
  %28 = load %"RawPtr[Char/rtct]"* %"$tmpC3"
  call void @"=153"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %28)
  br label %while_block

while_end:                                        ; preds = %while_block
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC4", %"RawPtr[Char/rtct]"* %p)
  %29 = load %"RawPtr[Char/rtct]"* %"$tmpC4"
  call void @"=153"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %29)
  br label %while_block5

while_block5:                                     ; preds = %while_step7, %while_end
  %30 = call i1 @isEmpty158(%"ContiguousMemoryRange[Char/rtct]"* %range.addr)
  %31 = xor i1 true, %30
  br i1 %31, label %while_body6, label %while_end8

while_body6:                                      ; preds = %while_block5
  %32 = call i8* @front160(%"ContiguousMemoryRange[Char/rtct]"* %range.addr)
  %33 = load i8* %32
  %34 = call i8* @value(%"RawPtr[Char/rtct]"* %p)
  store i8 %33, i8* %34
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC9", %"RawPtr[Char/rtct]"* %p)
  %35 = load %"RawPtr[Char/rtct]"* %"$tmpC9"
  call void @"=153"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %35)
  call void @popFront161(%"ContiguousMemoryRange[Char/rtct]"* %range.addr)
  br label %while_step7

while_step7:                                      ; preds = %while_body6
  br label %while_block5

while_end8:                                       ; preds = %while_block5
  %36 = load %String** %"$this.addr"
  %37 = getelementptr inbounds %String* %36, i32 0, i32 1
  %38 = load %String** %"$this.addr"
  %39 = getelementptr inbounds %String* %38, i32 0, i32 1
  %40 = load i64* %n
  store i64 %40, i64* %tmp.v11
  %41 = load i64* %tmp.v11
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC10", %"RawPtr[Char/rtct]"* %39, i64 %41)
  %42 = load %"RawPtr[Char/rtct]"* %"$tmpC10"
  call void @"=153"(%"RawPtr[Char/rtct]"* %37, %"RawPtr[Char/rtct]" %42)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i64 @size143(%"ContiguousMemoryRange[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %"$this", %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i64 @diff(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @diff(%"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]" %other) #2 {
  %"$this.addr" = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %other, %"RawPtr[Char/rtct]"* %other.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %"$this.addr"
  %2 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %1)
  %3 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %other.addr)
  %4 = call i64 @ptrDiff(i8* %2, i8* %3)
  store i64 1, i64* %tmp.v1
  %5 = load i64* %tmp.v1
  %6 = call i64 @"/144"(i64 %4, i64 %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"/144"(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn28(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn28(i64 %4, i64 %5)
  %7 = sdiv i64 %3, %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal void @_frontPtr(%"RawPtr[Char/rtct]"* sret %_result, %StringRef %s) #2 {
  %_result.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %_result, %"RawPtr[Char/rtct]"** %_result.addr
  %s.addr = alloca %StringRef
  store %StringRef %s, %StringRef* %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %_result.addr
  %2 = getelementptr inbounds %StringRef* %s.addr, i32 0, i32 0
  %3 = load i8** %2
  call void @fromBytePtr145(%"RawPtr[Char/rtct]"* %1, i8* %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @fromBytePtr145(%"RawPtr[Char/rtct]"* sret %_result, i8* %ptr) #3 {
  %_result.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %_result, %"RawPtr[Char/rtct]"** %_result.addr
  %ptr.addr = alloca i8*
  store i8* %ptr, i8** %ptr.addr
  %res = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  call void @ctor128(%"RawPtr[Char/rtct]"* %res)
  %1 = load i8** %ptr.addr
  %2 = getelementptr inbounds %"RawPtr[Char/rtct]"* %res, i32 0, i32 0
  store i8* %1, i8** %2
  %3 = load %"RawPtr[Char/rtct]"** %_result.addr
  call void @ctor146(%"RawPtr[Char/rtct]"* %3, %"RawPtr[Char/rtct]"* %res)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor146(%"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]"* %other) #2 {
  %"$this.addr" = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %other, %"RawPtr[Char/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %other.addr
  %2 = getelementptr inbounds %"RawPtr[Char/rtct]"* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %"RawPtr[Char/rtct]"** %"$this.addr"
  %5 = getelementptr inbounds %"RawPtr[Char/rtct]"* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor147(%"RawPtr[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @reserve(%String* %"$this", i64 %n) #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %curCapacity = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  %tmp.v8 = alloca i64
  %curSize = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %tmp.v9 = alloca i64
  %"$tmpC10" = alloca %"RawPtr[Char/rtct]"
  %tmp.v11 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  %2 = call i64 @capacity(%String* %1)
  store i64 %2, i64* %curCapacity
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64* %n.addr
  %4 = load i64* %curCapacity
  %5 = call i1 @"<="(i64 %3, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64* %n.addr
  store i64 16, i64* %tmp.v
  %7 = load i64* %tmp.v
  %8 = call i1 @"<"(i64 %6, i64 %7)
  br i1 %8, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 16, i64* %tmp.v4
  %9 = load i64* %tmp.v4
  store i64 %9, i64* %n.addr
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  br label %if_block5

if_block5:                                        ; preds = %if_end3
  %10 = load i64* %n.addr
  %11 = load i64* %curCapacity
  %12 = call double @"*151"(double 1.500000e+00, i64 %11)
  %13 = call i1 @"<148"(i64 %10, double %12)
  br i1 %13, label %if_then6, label %if_end7

if_then6:                                         ; preds = %if_block5
  %14 = load i64* %curCapacity
  %15 = call double @"*151"(double 1.500000e+00, i64 %14)
  %16 = fptoui double %15 to i64
  store i64 %16, i64* %tmp.v8
  %17 = load i64* %tmp.v8
  store i64 %17, i64* %n.addr
  br label %if_end7

if_end7:                                          ; preds = %if_then6, %if_block5
  %18 = load %String** %"$this.addr"
  %19 = call i64 @size152(%String* %18)
  store i64 %19, i64* %curSize
  %20 = load %String** %"$this.addr"
  %21 = getelementptr inbounds %String* %20, i32 0, i32 0
  %22 = load i64* %n.addr
  call void @reallocPtr(%"RawPtr[Char/rtct]"* %21, i64 %22)
  %23 = load %String** %"$this.addr"
  %24 = getelementptr inbounds %String* %23, i32 0, i32 1
  %25 = load %String** %"$this.addr"
  %26 = getelementptr inbounds %String* %25, i32 0, i32 0
  %27 = load i64* %curSize
  store i64 %27, i64* %tmp.v9
  %28 = load i64* %tmp.v9
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %26, i64 %28)
  %29 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=153"(%"RawPtr[Char/rtct]"* %24, %"RawPtr[Char/rtct]" %29)
  %30 = load %String** %"$this.addr"
  %31 = getelementptr inbounds %String* %30, i32 0, i32 2
  %32 = load %String** %"$this.addr"
  %33 = getelementptr inbounds %String* %32, i32 0, i32 0
  %34 = load i64* %n.addr
  store i64 %34, i64* %tmp.v11
  %35 = load i64* %tmp.v11
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC10", %"RawPtr[Char/rtct]"* %33, i64 %35)
  %36 = load %"RawPtr[Char/rtct]"* %"$tmpC10"
  call void @"=153"(%"RawPtr[Char/rtct]"* %31, %"RawPtr[Char/rtct]" %36)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i64 @capacity(%String* %"$this") #2 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  %2 = getelementptr inbounds %String* %1, i32 0, i32 2
  %3 = load %String** %"$this.addr"
  %4 = getelementptr inbounds %String* %3, i32 0, i32 0
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i64 @diff(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"<="(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn25(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn25(i64 %4, i64 %5)
  %7 = icmp sle i64 %3, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"<"(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn25(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn25(i64 %4, i64 %5)
  %7 = icmp slt i64 %3, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"<148"(i64 %x, double %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca double
  store double %y, double* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load double* %y.addr
  %3 = call double @cmn149(i64 %1, double %2)
  %4 = load double* %y.addr
  %5 = load i64* %x.addr
  %6 = call double @cmn150(double %4, i64 %5)
  %7 = call i1 @_Double_opLT(double %3, double %6)
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal double @cmn149(i64 %x, double %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca double
  store double %y, double* %y.addr
  %tmp.v = alloca double
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = sitofp i64 %1 to double
  store double %2, double* %tmp.v
  %3 = load double* %tmp.v
  ret double %3
}

; Function Attrs: alwaysinline nounwind
define internal double @cmn150(double %x, i64 %y) #2 {
  %x.addr = alloca double
  store double %x, double* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load double* %x.addr
  ret double %1
}

; Function Attrs: alwaysinline nounwind
define internal double @"*151"(double %x, i64 %y) #2 {
  %x.addr = alloca double
  store double %x, double* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load double* %x.addr
  %2 = load i64* %y.addr
  %3 = call double @cmn150(double %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load double* %x.addr
  %6 = call double @cmn149(i64 %4, double %5)
  %7 = call double @_Double_opMul(double %3, double %6)
  ret double %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @size152(%String* %"$this") #2 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  %2 = getelementptr inbounds %String* %1, i32 0, i32 1
  %3 = load %String** %"$this.addr"
  %4 = getelementptr inbounds %String* %3, i32 0, i32 0
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i64 @diff(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal void @reallocPtr(%"RawPtr[Char/rtct]"* %"$this", i64 %n) #3 {
  %"$this.addr" = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %"$this.addr"
  %2 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %1)
  %3 = load i64* %n.addr
  %4 = call i64 @"*"(i64 %3, i64 1)
  %5 = call i8* @realloc(i8* %2, i64 %4)
  %6 = load %"RawPtr[Char/rtct]"** %"$this.addr"
  %7 = getelementptr inbounds %"RawPtr[Char/rtct]"* %6, i32 0, i32 0
  store i8* %5, i8** %7
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=153"(%"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]" %other) #2 {
  %"$this.addr" = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %other, %"RawPtr[Char/rtct]"* %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[Char/rtct]"* %other.addr, i32 0, i32 0
  %2 = load i8** %1
  %3 = load %"RawPtr[Char/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"RawPtr[Char/rtct]"* %3, i32 0, i32 0
  store i8* %2, i8** %4
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @advance(%"RawPtr[Char/rtct]"* sret %_result, %"RawPtr[Char/rtct]"* %"$this", i64 %n) #2 {
  %_result.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %_result, %"RawPtr[Char/rtct]"** %_result.addr
  %"$this.addr" = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %_result.addr
  %2 = load %"RawPtr[Char/rtct]"** %"$this.addr"
  %3 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %2)
  %4 = load i64* %n.addr
  store i64 1, i64* %tmp.v1
  %5 = load i64* %tmp.v1
  %6 = call i64 @"*154"(i64 %4, i64 %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  %8 = call i8* @ptrAdd(i8* %3, i64 %7)
  call void @fromBytePtr145(%"RawPtr[Char/rtct]"* %1, i8* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"*154"(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn28(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn28(i64 %4, i64 %5)
  %7 = mul i64 %3, %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==155"(%"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]" %other) #2 {
  %"$this.addr" = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %other, %"RawPtr[Char/rtct]"* %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[Char/rtct]"* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = getelementptr inbounds %"RawPtr[Char/rtct]"* %other.addr, i32 0, i32 0
  %5 = load i8** %4
  %6 = call i1 @implOpRefEQ(i8* %3, i8* %5)
  ret i1 %6
}

; Function Attrs: alwaysinline nounwind
define internal i8* @value(%"RawPtr[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[Char/rtct]"* %1, i32 0, i32 0
  %3 = load i8** %2
  ret i8* %3
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor156(i8* %"$this") #2 {
  %"$this.addr" = alloca i8*
  store i8* %"$this", i8** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @advance157(%"RawPtr[Char/rtct]"* sret %_result, %"RawPtr[Char/rtct]"* %"$this") #2 {
  %_result.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %_result, %"RawPtr[Char/rtct]"** %_result.addr
  %"$this.addr" = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %_result.addr
  %2 = load %"RawPtr[Char/rtct]"** %"$this.addr"
  %3 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %2)
  %4 = call i8* @ptrAdd(i8* %3, i64 1)
  call void @fromBytePtr145(%"RawPtr[Char/rtct]"* %1, i8* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isEmpty158(%"ContiguousMemoryRange[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %"$this", %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i64 @diff(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  %7 = call i1 @"<=159"(i64 %6, i32 0)
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"<=159"(i64 %x, i32 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i32* %y.addr
  %3 = call i64 @cmn106(i64 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn107(i32 %4, i64 %5)
  %7 = icmp sle i64 %3, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8* @front160(%"ContiguousMemoryRange[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %"$this", %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %1, i32 0, i32 0
  %3 = call i8* @value(%"RawPtr[Char/rtct]"* %2)
  ret i8* %3
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront161(%"ContiguousMemoryRange[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %"$this", %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %3, i32 0, i32 0
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %4)
  %5 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=153"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor162(%"ContiguousMemoryRange[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]" %begin, %"RawPtr[Char/rtct]" %end) #3 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %"$this", %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %begin.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %begin, %"RawPtr[Char/rtct]"* %begin.addr
  %end.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %end, %"RawPtr[Char/rtct]"* %end.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %1, i32 0, i32 0
  call void @ctor146(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]"* %begin.addr)
  %3 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %3, i32 0, i32 1
  call void @ctor146(%"RawPtr[Char/rtct]"* %4, %"RawPtr[Char/rtct]"* %end.addr)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor163(%String* %"$this", %String* %other) #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %other.addr = alloca %String*
  store %String* %other, %String** %other.addr
  %size = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %other.addr
  %2 = call i64 @size152(%String* %1)
  store i64 %2, i64* %size
  %3 = load %String** %"$this.addr"
  %4 = load i64* %size
  call void @ctor164(%String* %3, i64 %4)
  %5 = load %String** %"$this.addr"
  %6 = getelementptr inbounds %String* %5, i32 0, i32 0
  %7 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %6)
  %8 = load %String** %other.addr
  %9 = getelementptr inbounds %String* %8, i32 0, i32 0
  %10 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %9)
  %11 = load i64* %size
  call void @_spr_memcpy(i8* %7, i8* %10, i64 %11)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor164(%String* %"$this", i64 %size) #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %size.addr = alloca i64
  store i64 %size, i64* %size.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC1" = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  %tmp.v2 = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  %2 = getelementptr inbounds %String* %1, i32 0, i32 0
  %3 = load i64* %size.addr
  %4 = call i64 @"+67"(i64 %3, i32 1)
  call void @alloc(%"RawPtr[Char/rtct]"* %"$tmpC", i64 %4)
  call void @ctor146(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]"* %"$tmpC")
  %5 = load %String** %"$this.addr"
  %6 = getelementptr inbounds %String* %5, i32 0, i32 1
  %7 = load %String** %"$this.addr"
  %8 = getelementptr inbounds %String* %7, i32 0, i32 0
  %9 = load i64* %size.addr
  store i64 %9, i64* %tmp.v
  %10 = load i64* %tmp.v
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC1", %"RawPtr[Char/rtct]"* %8, i64 %10)
  call void @ctor146(%"RawPtr[Char/rtct]"* %6, %"RawPtr[Char/rtct]"* %"$tmpC1")
  %11 = load %String** %"$this.addr"
  %12 = getelementptr inbounds %String* %11, i32 0, i32 2
  %13 = load %String** %"$this.addr"
  %14 = getelementptr inbounds %String* %13, i32 0, i32 1
  call void @ctor146(%"RawPtr[Char/rtct]"* %12, %"RawPtr[Char/rtct]"* %14)
  store i8 0, i8* %tmp.v2
  %15 = load i8* %tmp.v2
  %16 = load %String** %"$this.addr"
  %17 = getelementptr inbounds %String* %16, i32 0, i32 1
  %18 = call i8* @value(%"RawPtr[Char/rtct]"* %17)
  store i8 %15, i8* %18
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @alloc(%"RawPtr[Char/rtct]"* sret %_result, i64 %num) #3 {
  %_result.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %_result, %"RawPtr[Char/rtct]"** %_result.addr
  %num.addr = alloca i64
  store i64 %num, i64* %num.addr
  %res = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  call void @ctor128(%"RawPtr[Char/rtct]"* %res)
  %1 = load i64* %num.addr
  %2 = call i64 @"*"(i64 %1, i64 1)
  %3 = call i8* @malloc(i64 %2)
  %4 = getelementptr inbounds %"RawPtr[Char/rtct]"* %res, i32 0, i32 0
  store i8* %3, i8** %4
  %5 = load %"RawPtr[Char/rtct]"** %_result.addr
  call void @ctor146(%"RawPtr[Char/rtct]"* %5, %"RawPtr[Char/rtct]"* %res)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor165(%StringOutputStream* %"$this") #2 {
  %"$this.addr" = alloca %StringOutputStream*
  store %StringOutputStream* %"$this", %StringOutputStream** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %"$this.addr"
  %2 = getelementptr inbounds %StringOutputStream* %1, i32 0, i32 0
  call void @dtor166(%String* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @dtor166(%String* %"$this") #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  %2 = getelementptr inbounds %String* %1, i32 0, i32 0
  call void @freePtr(%"RawPtr[Char/rtct]"* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @freePtr(%"RawPtr[Char/rtct]"* %"$this") #3 {
  %"$this.addr" = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"RawPtr[Char/rtct]"** %"$this.addr"
  %2 = call i1 @isSet(%"RawPtr[Char/rtct]"* %1)
  br i1 %2, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %3 = load %"RawPtr[Char/rtct]"** %"$this.addr"
  %4 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %3)
  call void @free(i8* %4)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isSet(%"RawPtr[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[Char/rtct]"* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = call i1 @implOpRefNE(i8* %3, i8* null)
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal void @ctor167(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %"$this", %_CharSource %source, %ExternalErrorReporter %errorReporter, %Location* %iniLocation) #3 {
  %"$this.addr" = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %"$this", %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %source.addr = alloca %_CharSource
  store %_CharSource %source, %_CharSource* %source.addr
  %errorReporter.addr = alloca %ExternalErrorReporter
  store %ExternalErrorReporter %errorReporter, %ExternalErrorReporter* %errorReporter.addr
  %iniLocation.addr = alloca %Location*
  store %Location* %iniLocation, %Location** %iniLocation.addr
  %tmp.v = alloca %"RangeWithLookahead[_CharSource]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %Location** %iniLocation.addr
  call void @ctor168(%Location* %2, %Location* %3)
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %5 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = load %_CharSource* %source.addr
  call void @ctor177(%"RangeWithLookahead[_CharSource]"* %tmp.v, %_CharSource %6)
  %7 = load %"RangeWithLookahead[_CharSource]"* %tmp.v
  %8 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %9 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %8, i32 0, i32 0
  call void @ctor171(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5, %"RangeWithLookahead[_CharSource]" %7, %Location* %9)
  call void @dtor185(%"RangeWithLookahead[_CharSource]"* %tmp.v)
  %10 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %11 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %10, i32 0, i32 2
  call void @ctor129(%Token* %11)
  %12 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %13 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %12, i32 0, i32 3
  store i1 false, i1* %13
  %14 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %15 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %14, i32 0, i32 4
  store i1 false, i1* %15
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor168(%Location* %"$this", %Location* %other) #2 {
  %"$this.addr" = alloca %Location*
  store %Location* %"$this", %Location** %"$this.addr"
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %"$this.addr"
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 0
  %3 = load %Location** %other.addr
  %4 = getelementptr inbounds %Location* %3, i32 0, i32 0
  call void @ctor169(%SourceCode* %2, %SourceCode* %4)
  %5 = load %Location** %"$this.addr"
  %6 = getelementptr inbounds %Location* %5, i32 0, i32 1
  %7 = load %Location** %other.addr
  %8 = getelementptr inbounds %Location* %7, i32 0, i32 1
  call void @ctor170(%LineCol* %6, %LineCol* %8)
  %9 = load %Location** %"$this.addr"
  %10 = getelementptr inbounds %Location* %9, i32 0, i32 2
  %11 = load %Location** %other.addr
  %12 = getelementptr inbounds %Location* %11, i32 0, i32 2
  call void @ctor170(%LineCol* %10, %LineCol* %12)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor169(%SourceCode* %"$this", %SourceCode* %other) #2 {
  %"$this.addr" = alloca %SourceCode*
  store %SourceCode* %"$this", %SourceCode** %"$this.addr"
  %other.addr = alloca %SourceCode*
  store %SourceCode* %other, %SourceCode** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %SourceCode** %other.addr
  %2 = getelementptr inbounds %SourceCode* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %SourceCode** %"$this.addr"
  %5 = getelementptr inbounds %SourceCode* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor170(%LineCol* %"$this", %LineCol* %other) #2 {
  %"$this.addr" = alloca %LineCol*
  store %LineCol* %"$this", %LineCol** %"$this.addr"
  %other.addr = alloca %LineCol*
  store %LineCol* %other, %LineCol** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LineCol** %other.addr
  %2 = getelementptr inbounds %LineCol* %1, i32 0, i32 0
  %3 = load i32* %2
  %4 = load %LineCol** %"$this.addr"
  %5 = getelementptr inbounds %LineCol* %4, i32 0, i32 0
  store i32 %3, i32* %5
  %6 = load %LineCol** %other.addr
  %7 = getelementptr inbounds %LineCol* %6, i32 0, i32 1
  %8 = load i32* %7
  %9 = load %LineCol** %"$this.addr"
  %10 = getelementptr inbounds %LineCol* %9, i32 0, i32 1
  store i32 %8, i32* %10
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor171(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %"$this", %"RangeWithLookahead[_CharSource]" %fsource, %Location* %flocation) #2 {
  %"$this.addr" = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %"$this", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %"$this.addr"
  %fsource.addr = alloca %"RangeWithLookahead[_CharSource]"
  store %"RangeWithLookahead[_CharSource]" %fsource, %"RangeWithLookahead[_CharSource]"* %fsource.addr
  %flocation.addr = alloca %Location*
  store %Location* %flocation, %Location** %flocation.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %"$this.addr"
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  call void @ctor172(%"RangeWithLookahead[_CharSource]"* %2, %"RangeWithLookahead[_CharSource]"* %fsource.addr)
  %3 = load %Location** %flocation.addr
  %4 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %"$this.addr"
  %5 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4, i32 0, i32 1
  store %Location* %3, %Location** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor172(%"RangeWithLookahead[_CharSource]"* %"$this", %"RangeWithLookahead[_CharSource]"* %other) #2 {
  %"$this.addr" = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %"$this", %"RangeWithLookahead[_CharSource]"** %"$this.addr"
  %other.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %other, %"RangeWithLookahead[_CharSource]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"** %"$this.addr"
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 0
  %3 = load %"RangeWithLookahead[_CharSource]"** %other.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %3, i32 0, i32 0
  call void @ctor173(%_CharSource* %2, %_CharSource* %4)
  %5 = load %"RangeWithLookahead[_CharSource]"** %"$this.addr"
  %6 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %5, i32 0, i32 1
  %7 = load %"RangeWithLookahead[_CharSource]"** %other.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %7, i32 0, i32 1
  call void @ctor174(%"Vector[Char/rtct]"* %6, %"Vector[Char/rtct]"* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor173(%_CharSource* %"$this", %_CharSource* %other) #2 {
  %"$this.addr" = alloca %_CharSource*
  store %_CharSource* %"$this", %_CharSource** %"$this.addr"
  %other.addr = alloca %_CharSource*
  store %_CharSource* %other, %_CharSource** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource** %other.addr
  %2 = getelementptr inbounds %_CharSource* %1, i32 0, i32 0
  %3 = load %FileRange** %2
  %4 = load %_CharSource** %"$this.addr"
  %5 = getelementptr inbounds %_CharSource* %4, i32 0, i32 0
  store %FileRange* %3, %FileRange** %5
  %6 = load %_CharSource** %"$this.addr"
  %7 = getelementptr inbounds %_CharSource* %6, i32 0, i32 1
  %8 = load %_CharSource** %other.addr
  %9 = getelementptr inbounds %_CharSource* %8, i32 0, i32 1
  %10 = load %StringRef* %9
  call void @ctor70(%StringRef* %7, %StringRef %10)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor174(%"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"* %other) #3 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %other.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %other, %"Vector[Char/rtct]"** %other.addr
  %size = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC1" = alloca %"RawPtr[Char/rtct]"
  %dst = alloca %"RawPtr[Char/rtct]"
  %src = alloca %"RawPtr[Char/rtct]"
  %"$tmpC2" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC3" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 0
  call void @ctor128(%"RawPtr[Char/rtct]"* %2)
  %3 = load %"Vector[Char/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Char/rtct]"* %3, i32 0, i32 1
  call void @ctor128(%"RawPtr[Char/rtct]"* %4)
  %5 = load %"Vector[Char/rtct]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[Char/rtct]"* %5, i32 0, i32 2
  call void @ctor128(%"RawPtr[Char/rtct]"* %6)
  %7 = load %"Vector[Char/rtct]"** %other.addr
  %8 = call i64 @size175(%"Vector[Char/rtct]"* %7)
  store i64 %8, i64* %size
  %9 = load %"Vector[Char/rtct]"** %"$this.addr"
  %10 = getelementptr inbounds %"Vector[Char/rtct]"* %9, i32 0, i32 0
  %11 = load i64* %size
  call void @alloc(%"RawPtr[Char/rtct]"* %"$tmpC", i64 %11)
  %12 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=153"(%"RawPtr[Char/rtct]"* %10, %"RawPtr[Char/rtct]" %12)
  %13 = load %"Vector[Char/rtct]"** %"$this.addr"
  %14 = getelementptr inbounds %"Vector[Char/rtct]"* %13, i32 0, i32 1
  %15 = load %"Vector[Char/rtct]"** %"$this.addr"
  %16 = getelementptr inbounds %"Vector[Char/rtct]"* %15, i32 0, i32 0
  %17 = load i64* %size
  call void @advance176(%"RawPtr[Char/rtct]"* %"$tmpC1", %"RawPtr[Char/rtct]"* %16, i64 %17)
  %18 = load %"RawPtr[Char/rtct]"* %"$tmpC1"
  call void @"=153"(%"RawPtr[Char/rtct]"* %14, %"RawPtr[Char/rtct]" %18)
  %19 = load %"Vector[Char/rtct]"** %"$this.addr"
  %20 = getelementptr inbounds %"Vector[Char/rtct]"* %19, i32 0, i32 2
  %21 = load %"Vector[Char/rtct]"** %"$this.addr"
  %22 = getelementptr inbounds %"Vector[Char/rtct]"* %21, i32 0, i32 1
  %23 = load %"RawPtr[Char/rtct]"* %22
  call void @"=153"(%"RawPtr[Char/rtct]"* %20, %"RawPtr[Char/rtct]" %23)
  %24 = load %"Vector[Char/rtct]"** %"$this.addr"
  %25 = getelementptr inbounds %"Vector[Char/rtct]"* %24, i32 0, i32 0
  call void @ctor146(%"RawPtr[Char/rtct]"* %dst, %"RawPtr[Char/rtct]"* %25)
  %26 = load %"Vector[Char/rtct]"** %other.addr
  %27 = getelementptr inbounds %"Vector[Char/rtct]"* %26, i32 0, i32 0
  call void @ctor146(%"RawPtr[Char/rtct]"* %src, %"RawPtr[Char/rtct]"* %27)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %28 = load %"Vector[Char/rtct]"** %"$this.addr"
  %29 = getelementptr inbounds %"Vector[Char/rtct]"* %28, i32 0, i32 1
  %30 = load %"RawPtr[Char/rtct]"* %29
  %31 = call i1 @"==155"(%"RawPtr[Char/rtct]"* %dst, %"RawPtr[Char/rtct]" %30)
  %32 = xor i1 true, %31
  br i1 %32, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %33 = call i8* @value(%"RawPtr[Char/rtct]"* %src)
  %34 = load i8* %33
  %35 = call i8* @value(%"RawPtr[Char/rtct]"* %dst)
  store i8 %34, i8* %35
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC2", %"RawPtr[Char/rtct]"* %dst)
  %36 = load %"RawPtr[Char/rtct]"* %"$tmpC2"
  call void @"=153"(%"RawPtr[Char/rtct]"* %dst, %"RawPtr[Char/rtct]" %36)
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC3", %"RawPtr[Char/rtct]"* %src)
  %37 = load %"RawPtr[Char/rtct]"* %"$tmpC3"
  call void @"=153"(%"RawPtr[Char/rtct]"* %src, %"RawPtr[Char/rtct]" %37)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i64 @size175(%"Vector[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 1
  %3 = load %"Vector[Char/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Char/rtct]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i64 @diff(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal void @advance176(%"RawPtr[Char/rtct]"* sret %_result, %"RawPtr[Char/rtct]"* %"$this", i64 %n) #2 {
  %_result.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %_result, %"RawPtr[Char/rtct]"** %_result.addr
  %"$this.addr" = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %_result.addr
  %2 = load %"RawPtr[Char/rtct]"** %"$this.addr"
  %3 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %2)
  %4 = load i64* %n.addr
  %5 = call i64 @"*"(i64 %4, i64 1)
  %6 = call i8* @ptrAdd(i8* %3, i64 %5)
  call void @fromBytePtr145(%"RawPtr[Char/rtct]"* %1, i8* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor177(%"RangeWithLookahead[_CharSource]"* %"$this", %_CharSource %src) #3 {
  %"$this.addr" = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %"$this", %"RangeWithLookahead[_CharSource]"** %"$this.addr"
  %src.addr = alloca %_CharSource
  store %_CharSource %src, %_CharSource* %src.addr
  %"$tmpForRef" = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"** %"$this.addr"
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 0
  call void @ctor118(%_CharSource* %2)
  %3 = load %"RangeWithLookahead[_CharSource]"** %"$this.addr"
  %4 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %3, i32 0, i32 0
  call void @"=178"(%_CharSource* %4, %_CharSource* %src.addr)
  %5 = load %"RangeWithLookahead[_CharSource]"** %"$this.addr"
  %6 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %5, i32 0, i32 1
  call void @ctor127(%"Vector[Char/rtct]"* %6)
  %7 = load %"RangeWithLookahead[_CharSource]"** %"$this.addr"
  %8 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %7, i32 0, i32 1
  call void @reserve180(%"Vector[Char/rtct]"* %8, i64 10)
  br label %if_block

if_block:                                         ; preds = %code
  %9 = load %"RangeWithLookahead[_CharSource]"** %"$this.addr"
  %10 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %9, i32 0, i32 0
  %11 = call i1 @"pre_!!"(%_CharSource* %10)
  br i1 %11, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %12 = load %"RangeWithLookahead[_CharSource]"** %"$this.addr"
  %13 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %12, i32 0, i32 1
  %14 = load %"RangeWithLookahead[_CharSource]"** %"$this.addr"
  %15 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %14, i32 0, i32 0
  %16 = call i8 @"post_++184"(%_CharSource* %15)
  store i8 %16, i8* %"$tmpForRef"
  call void @"+="(%"Vector[Char/rtct]"* %13, i8* %"$tmpForRef")
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=178"(%_CharSource* %"$this", %_CharSource* %other) #2 {
  %"$this.addr" = alloca %_CharSource*
  store %_CharSource* %"$this", %_CharSource** %"$this.addr"
  %other.addr = alloca %_CharSource*
  store %_CharSource* %other, %_CharSource** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource** %other.addr
  %2 = getelementptr inbounds %_CharSource* %1, i32 0, i32 0
  %3 = load %FileRange** %2
  %4 = load %_CharSource** %"$this.addr"
  %5 = getelementptr inbounds %_CharSource* %4, i32 0, i32 0
  store %FileRange* %3, %FileRange** %5
  %6 = load %_CharSource** %"$this.addr"
  %7 = getelementptr inbounds %_CharSource* %6, i32 0, i32 1
  %8 = load %_CharSource** %other.addr
  %9 = getelementptr inbounds %_CharSource* %8, i32 0, i32 1
  %10 = load %StringRef* %9
  %11 = call %StringRef* @"=179"(%StringRef* %7, %StringRef %10)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringRef* @"=179"(%StringRef* %"$this", %StringRef %src) #3 {
  %"$this.addr" = alloca %StringRef*
  store %StringRef* %"$this", %StringRef** %"$this.addr"
  %src.addr = alloca %StringRef
  store %StringRef %src, %StringRef* %src.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %StringRef* %src.addr, i32 0, i32 0
  %2 = load i8** %1
  %3 = load %StringRef** %"$this.addr"
  %4 = getelementptr inbounds %StringRef* %3, i32 0, i32 0
  store i8* %2, i8** %4
  %5 = getelementptr inbounds %StringRef* %src.addr, i32 0, i32 1
  %6 = load i8** %5
  %7 = load %StringRef** %"$this.addr"
  %8 = getelementptr inbounds %StringRef* %7, i32 0, i32 1
  store i8* %6, i8** %8
  %9 = load %StringRef** %"$this.addr"
  ret %StringRef* %9
}

; Function Attrs: inlinehint nounwind
define internal void @reserve180(%"Vector[Char/rtct]"* %"$this", i64 %n) #3 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %curCapacity = alloca i64
  %tmp.v = alloca i64
  %curSize = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC7" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = call i64 @capacity181(%"Vector[Char/rtct]"* %1)
  store i64 %2, i64* %curCapacity
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64* %n.addr
  %4 = load i64* %curCapacity
  %5 = call i1 @"<="(i64 %3, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64* %n.addr
  %7 = call i1 @"<182"(i64 %6, i32 8)
  br i1 %7, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 8, i64* %n.addr
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  br label %if_block4

if_block4:                                        ; preds = %if_end3
  %8 = load i64* %n.addr
  %9 = load i64* %curCapacity
  %10 = call double @"*151"(double 2.000000e+00, i64 %9)
  %11 = call i1 @"<148"(i64 %8, double %10)
  br i1 %11, label %if_then5, label %if_end6

if_then5:                                         ; preds = %if_block4
  %12 = load i64* %curCapacity
  %13 = call double @"*151"(double 2.000000e+00, i64 %12)
  %14 = fptoui double %13 to i64
  store i64 %14, i64* %tmp.v
  %15 = load i64* %tmp.v
  store i64 %15, i64* %n.addr
  br label %if_end6

if_end6:                                          ; preds = %if_then5, %if_block4
  %16 = load %"Vector[Char/rtct]"** %"$this.addr"
  %17 = call i64 @size175(%"Vector[Char/rtct]"* %16)
  store i64 %17, i64* %curSize
  %18 = load %"Vector[Char/rtct]"** %"$this.addr"
  %19 = getelementptr inbounds %"Vector[Char/rtct]"* %18, i32 0, i32 0
  %20 = load i64* %n.addr
  call void @reallocPtr(%"RawPtr[Char/rtct]"* %19, i64 %20)
  %21 = load %"Vector[Char/rtct]"** %"$this.addr"
  %22 = getelementptr inbounds %"Vector[Char/rtct]"* %21, i32 0, i32 1
  %23 = load %"Vector[Char/rtct]"** %"$this.addr"
  %24 = getelementptr inbounds %"Vector[Char/rtct]"* %23, i32 0, i32 0
  %25 = load i64* %curSize
  call void @advance176(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %24, i64 %25)
  %26 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=153"(%"RawPtr[Char/rtct]"* %22, %"RawPtr[Char/rtct]" %26)
  %27 = load %"Vector[Char/rtct]"** %"$this.addr"
  %28 = getelementptr inbounds %"Vector[Char/rtct]"* %27, i32 0, i32 2
  %29 = load %"Vector[Char/rtct]"** %"$this.addr"
  %30 = getelementptr inbounds %"Vector[Char/rtct]"* %29, i32 0, i32 0
  %31 = load i64* %n.addr
  call void @advance176(%"RawPtr[Char/rtct]"* %"$tmpC7", %"RawPtr[Char/rtct]"* %30, i64 %31)
  %32 = load %"RawPtr[Char/rtct]"* %"$tmpC7"
  call void @"=153"(%"RawPtr[Char/rtct]"* %28, %"RawPtr[Char/rtct]" %32)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i64 @capacity181(%"Vector[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 2
  %3 = load %"Vector[Char/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Char/rtct]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i64 @diff(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"<182"(i64 %x, i32 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i32* %y.addr
  %3 = call i64 @cmn68(i64 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn69(i32 %4, i64 %5)
  %7 = icmp slt i64 %3, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"pre_!!"(%_CharSource* %r) #2 {
  %r.addr = alloca %_CharSource*
  store %_CharSource* %r, %_CharSource** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource** %r.addr
  %2 = call i1 @isEmpty102(%_CharSource* %1)
  %3 = xor i1 true, %2
  ret i1 %3
}

; Function Attrs: alwaysinline nounwind
define internal void @"+="(%"Vector[Char/rtct]"* %"$this", i8* %value) #2 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %value.addr = alloca i8*
  store i8* %value, i8** %value.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = load i8** %value.addr
  call void @pushBack(%"Vector[Char/rtct]"* %1, i8* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @pushBack(%"Vector[Char/rtct]"* %"$this", i8* %value) #3 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %value.addr = alloca i8*
  store i8* %value, i8** %value.addr
  %t = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 1
  %3 = load %"Vector[Char/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Char/rtct]"* %3, i32 0, i32 2
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i1 @"==155"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  br i1 %6, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %7 = load %"Vector[Char/rtct]"** %"$this.addr"
  %8 = call i64 @capacity181(%"Vector[Char/rtct]"* %7)
  %9 = call i64 @"*183"(i32 2, i64 %8)
  store i64 %9, i64* %t
  br label %if_block1

if_end:                                           ; preds = %if_end3, %if_block
  %10 = load i8** %value.addr
  %11 = load i8* %10
  %12 = load %"Vector[Char/rtct]"** %"$this.addr"
  %13 = getelementptr inbounds %"Vector[Char/rtct]"* %12, i32 0, i32 1
  %14 = call i8* @value(%"RawPtr[Char/rtct]"* %13)
  store i8 %11, i8* %14
  %15 = load %"Vector[Char/rtct]"** %"$this.addr"
  %16 = getelementptr inbounds %"Vector[Char/rtct]"* %15, i32 0, i32 1
  %17 = load %"Vector[Char/rtct]"** %"$this.addr"
  %18 = getelementptr inbounds %"Vector[Char/rtct]"* %17, i32 0, i32 1
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %18)
  %19 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=153"(%"RawPtr[Char/rtct]"* %16, %"RawPtr[Char/rtct]" %19)
  ret void

if_block1:                                        ; preds = %if_then
  %20 = load i64* %t
  %21 = call i1 @"<182"(i64 %20, i32 2)
  br i1 %21, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 2, i64* %t
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %22 = load %"Vector[Char/rtct]"** %"$this.addr"
  %23 = load i64* %t
  call void @reserve180(%"Vector[Char/rtct]"* %22, i64 %23)
  br label %if_end
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"*183"(i32 %x, i64 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn69(i32 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i32* %x.addr
  %6 = call i64 @cmn68(i64 %4, i32 %5)
  %7 = mul i64 %3, %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i8 @"post_++184"(%_CharSource* %r) #3 {
  %r.addr = alloca %_CharSource*
  store %_CharSource* %r, %_CharSource** %r.addr
  %res = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource** %r.addr
  %2 = call i8 @front108(%_CharSource* %1)
  store i8 %2, i8* %res
  %3 = load %_CharSource** %r.addr
  call void @popFront111(%_CharSource* %3)
  %4 = load i8* %res
  ret i8 %4
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor185(%"RangeWithLookahead[_CharSource]"* %"$this") #2 {
  %"$this.addr" = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %"$this", %"RangeWithLookahead[_CharSource]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"** %"$this.addr"
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 1
  call void @dtor186(%"Vector[Char/rtct]"* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @dtor186(%"Vector[Char/rtct]"* %"$this") #3 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %p = alloca %"RawPtr[Char/rtct]"
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 0
  call void @ctor146(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]"* %2)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %3 = load %"Vector[Char/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Char/rtct]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i1 @"==155"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %5)
  %7 = xor i1 true, %6
  br i1 %7, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %8 = call i8* @value(%"RawPtr[Char/rtct]"* %p)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %p)
  %9 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=153"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %9)
  br label %while_block

while_end:                                        ; preds = %while_block
  %10 = load %"Vector[Char/rtct]"** %"$this.addr"
  %11 = getelementptr inbounds %"Vector[Char/rtct]"* %10, i32 0, i32 0
  call void @freePtr(%"RawPtr[Char/rtct]"* %11)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor187(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %"$this", %"SparrowScanner[_CharSource, ExternalErrorReporter]" %tokens, %ExternalErrorReporter %errorReporter) #3 {
  %"$this.addr" = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %"$this", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %tokens.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]" %tokens, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %tokens.addr
  %errorReporter.addr = alloca %ExternalErrorReporter
  store %ExternalErrorReporter %errorReporter, %ExternalErrorReporter* %errorReporter.addr
  %"$tmpForRef" = alloca i32
  %tmp.v = alloca %TokenType
  %"$tmpC" = alloca %Token
  %tmp.v1 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 2
  call void @ctor134(%"Vector[UInt/rtct]"* %2)
  %3 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %4 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 3
  call void @ctor127(%"Vector[Char/rtct]"* %4)
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %6 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 4
  call void @ctor130(%TokenType* %6)
  %7 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %8 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 5
  store i32 0, i32* %8
  %9 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %10 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %9, i32 0, i32 0
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %tokens.addr
  call void @ctor188(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %10, %"SparrowScanner[_CharSource, ExternalErrorReporter]" %11)
  %12 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %13 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 2
  store i32 1, i32* %"$tmpForRef"
  call void @"+=300"(%"Vector[UInt/rtct]"* %13, i32* %"$tmpForRef")
  %14 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %15 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %14, i32 0, i32 4
  call void @ctor229(%TokenType* %tmp.v, i32 33)
  call void @"=197"(%TokenType* %15, %TokenType* %tmp.v)
  %16 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %17 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %16, i32 0, i32 5
  store i32 0, i32* %17
  br label %if_block

if_block:                                         ; preds = %code
  %18 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %19 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %18, i32 0, i32 0
  %20 = call i1 @isEmpty316(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %19)
  %21 = xor i1 true, %20
  br i1 %21, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %22 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  call void @popFront320(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %22)
  br label %if_end

if_end:                                           ; preds = %if_then, %cond.end
  br i1 %21, label %cond_destruct_alt1, label %cond_destruct_alt2

cond.true:                                        ; preds = %if_block
  %23 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %24 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %23, i32 0, i32 0
  call void @front318(%Token* %"$tmpC", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %24)
  %25 = getelementptr inbounds %Token* %"$tmpC", i32 0, i32 1
  call void @ctor229(%TokenType* %tmp.v1, i32 1)
  %26 = call i1 @"==227"(%TokenType* %25, %TokenType* %tmp.v1)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %26, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end

cond_destruct_alt1:                               ; preds = %if_end
  call void @dtor299(%Token* %"$tmpC")
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor188(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %"$this", %"SparrowScanner[_CharSource, ExternalErrorReporter]" %src) #3 {
  %"$this.addr" = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %"$this", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %"$this.addr"
  %src.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]" %src, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %src.addr
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %"$this.addr"
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 0
  call void @ctor121(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %2)
  %3 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %"$this.addr"
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %3, i32 0, i32 0
  call void @"=189"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %src.addr)
  %5 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %"$this.addr"
  %6 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %5, i32 0, i32 1
  call void @ctor132(%"Vector[Token]"* %6)
  %7 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %"$this.addr"
  %8 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %7, i32 0, i32 1
  call void @reserve201(%"Vector[Token]"* %8, i64 10)
  br label %if_block

if_block:                                         ; preds = %code
  %9 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %"$this.addr"
  %10 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %9, i32 0, i32 0
  %11 = call i1 @"pre_!!212"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %10)
  br i1 %11, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %12 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %"$this.addr"
  %13 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %12, i32 0, i32 1
  %14 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %"$this.addr"
  %15 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %14, i32 0, i32 0
  call void @"post_++221"(%Token* %"$tmpC", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %15)
  call void @"+=214"(%"Vector[Token]"* %13, %Token* %"$tmpC")
  call void @dtor299(%Token* %"$tmpC")
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=189"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %"$this", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %other) #2 {
  %"$this.addr" = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %"$this", %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %other.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %other, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %4 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 0, i32 0
  call void @"=190"(%Location* %2, %Location* %4)
  %5 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %6 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %8 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 0, i32 1
  call void @"=193"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %6, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8)
  %9 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %10 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %9, i32 0, i32 2
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %12 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11, i32 0, i32 2
  call void @"=196"(%Token* %10, %Token* %12)
  %13 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %14 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %13, i32 0, i32 3
  %15 = load i1* %14
  %16 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %17 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %16, i32 0, i32 3
  store i1 %15, i1* %17
  %18 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %19 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %18, i32 0, i32 4
  %20 = load i1* %19
  %21 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %22 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %21, i32 0, i32 4
  store i1 %20, i1* %22
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=190"(%Location* %"$this", %Location* %other) #2 {
  %"$this.addr" = alloca %Location*
  store %Location* %"$this", %Location** %"$this.addr"
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %"$this.addr"
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 0
  %3 = load %Location** %other.addr
  %4 = getelementptr inbounds %Location* %3, i32 0, i32 0
  call void @"=191"(%SourceCode* %2, %SourceCode* %4)
  %5 = load %Location** %"$this.addr"
  %6 = getelementptr inbounds %Location* %5, i32 0, i32 1
  %7 = load %Location** %other.addr
  %8 = getelementptr inbounds %Location* %7, i32 0, i32 1
  call void @"=192"(%LineCol* %6, %LineCol* %8)
  %9 = load %Location** %"$this.addr"
  %10 = getelementptr inbounds %Location* %9, i32 0, i32 2
  %11 = load %Location** %other.addr
  %12 = getelementptr inbounds %Location* %11, i32 0, i32 2
  call void @"=192"(%LineCol* %10, %LineCol* %12)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=191"(%SourceCode* %"$this", %SourceCode* %other) #2 {
  %"$this.addr" = alloca %SourceCode*
  store %SourceCode* %"$this", %SourceCode** %"$this.addr"
  %other.addr = alloca %SourceCode*
  store %SourceCode* %other, %SourceCode** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %SourceCode** %other.addr
  %2 = getelementptr inbounds %SourceCode* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %SourceCode** %"$this.addr"
  %5 = getelementptr inbounds %SourceCode* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=192"(%LineCol* %"$this", %LineCol* %other) #2 {
  %"$this.addr" = alloca %LineCol*
  store %LineCol* %"$this", %LineCol** %"$this.addr"
  %other.addr = alloca %LineCol*
  store %LineCol* %other, %LineCol** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LineCol** %other.addr
  %2 = getelementptr inbounds %LineCol* %1, i32 0, i32 0
  %3 = load i32* %2
  %4 = load %LineCol** %"$this.addr"
  %5 = getelementptr inbounds %LineCol* %4, i32 0, i32 0
  store i32 %3, i32* %5
  %6 = load %LineCol** %other.addr
  %7 = getelementptr inbounds %LineCol* %6, i32 0, i32 1
  %8 = load i32* %7
  %9 = load %LineCol** %"$this.addr"
  %10 = getelementptr inbounds %LineCol* %9, i32 0, i32 1
  store i32 %8, i32* %10
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=193"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %"$this", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %other) #2 {
  %"$this.addr" = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %"$this", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %"$this.addr"
  %other.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %other, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %"$this.addr"
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  %3 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %other.addr
  %4 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %3, i32 0, i32 0
  call void @"=194"(%"RangeWithLookahead[_CharSource]"* %2, %"RangeWithLookahead[_CharSource]"* %4)
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %other.addr
  %6 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5, i32 0, i32 1
  %7 = load %Location** %6
  %8 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %"$this.addr"
  %9 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8, i32 0, i32 1
  store %Location* %7, %Location** %9
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=194"(%"RangeWithLookahead[_CharSource]"* %"$this", %"RangeWithLookahead[_CharSource]"* %other) #2 {
  %"$this.addr" = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %"$this", %"RangeWithLookahead[_CharSource]"** %"$this.addr"
  %other.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %other, %"RangeWithLookahead[_CharSource]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"** %"$this.addr"
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 0
  %3 = load %"RangeWithLookahead[_CharSource]"** %other.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %3, i32 0, i32 0
  call void @"=178"(%_CharSource* %2, %_CharSource* %4)
  %5 = load %"RangeWithLookahead[_CharSource]"** %"$this.addr"
  %6 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %5, i32 0, i32 1
  %7 = load %"RangeWithLookahead[_CharSource]"** %other.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %7, i32 0, i32 1
  %9 = call %"Vector[Char/rtct]"* @"=195"(%"Vector[Char/rtct]"* %6, %"Vector[Char/rtct]"* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %"Vector[Char/rtct]"* @"=195"(%"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"* %other) #3 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %other.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %other, %"Vector[Char/rtct]"** %other.addr
  %tmp = alloca %"Vector[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %other.addr
  call void @ctor174(%"Vector[Char/rtct]"* %tmp, %"Vector[Char/rtct]"* %1)
  %2 = load %"Vector[Char/rtct]"** %"$this.addr"
  call void @swap(%"Vector[Char/rtct]"* %tmp, %"Vector[Char/rtct]"* %2)
  %3 = load %"Vector[Char/rtct]"** %"$this.addr"
  call void @dtor186(%"Vector[Char/rtct]"* %tmp)
  ret %"Vector[Char/rtct]"* %3

dumy_block:                                       ; No predecessors!
  call void @dtor186(%"Vector[Char/rtct]"* %tmp)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @swap(%"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"* %other) #3 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %other.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %other, %"Vector[Char/rtct]"** %other.addr
  %tmp = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 0
  call void @ctor146(%"RawPtr[Char/rtct]"* %tmp, %"RawPtr[Char/rtct]"* %2)
  %3 = load %"Vector[Char/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Char/rtct]"* %3, i32 0, i32 0
  %5 = load %"Vector[Char/rtct]"** %other.addr
  %6 = getelementptr inbounds %"Vector[Char/rtct]"* %5, i32 0, i32 0
  %7 = load %"RawPtr[Char/rtct]"* %6
  call void @"=153"(%"RawPtr[Char/rtct]"* %4, %"RawPtr[Char/rtct]" %7)
  %8 = load %"Vector[Char/rtct]"** %other.addr
  %9 = getelementptr inbounds %"Vector[Char/rtct]"* %8, i32 0, i32 0
  %10 = load %"RawPtr[Char/rtct]"* %tmp
  call void @"=153"(%"RawPtr[Char/rtct]"* %9, %"RawPtr[Char/rtct]" %10)
  %11 = load %"Vector[Char/rtct]"** %"$this.addr"
  %12 = getelementptr inbounds %"Vector[Char/rtct]"* %11, i32 0, i32 1
  %13 = load %"RawPtr[Char/rtct]"* %12
  call void @"=153"(%"RawPtr[Char/rtct]"* %tmp, %"RawPtr[Char/rtct]" %13)
  %14 = load %"Vector[Char/rtct]"** %"$this.addr"
  %15 = getelementptr inbounds %"Vector[Char/rtct]"* %14, i32 0, i32 1
  %16 = load %"Vector[Char/rtct]"** %other.addr
  %17 = getelementptr inbounds %"Vector[Char/rtct]"* %16, i32 0, i32 1
  %18 = load %"RawPtr[Char/rtct]"* %17
  call void @"=153"(%"RawPtr[Char/rtct]"* %15, %"RawPtr[Char/rtct]" %18)
  %19 = load %"Vector[Char/rtct]"** %other.addr
  %20 = getelementptr inbounds %"Vector[Char/rtct]"* %19, i32 0, i32 1
  %21 = load %"RawPtr[Char/rtct]"* %tmp
  call void @"=153"(%"RawPtr[Char/rtct]"* %20, %"RawPtr[Char/rtct]" %21)
  %22 = load %"Vector[Char/rtct]"** %"$this.addr"
  %23 = getelementptr inbounds %"Vector[Char/rtct]"* %22, i32 0, i32 2
  %24 = load %"RawPtr[Char/rtct]"* %23
  call void @"=153"(%"RawPtr[Char/rtct]"* %tmp, %"RawPtr[Char/rtct]" %24)
  %25 = load %"Vector[Char/rtct]"** %"$this.addr"
  %26 = getelementptr inbounds %"Vector[Char/rtct]"* %25, i32 0, i32 2
  %27 = load %"Vector[Char/rtct]"** %other.addr
  %28 = getelementptr inbounds %"Vector[Char/rtct]"* %27, i32 0, i32 2
  %29 = load %"RawPtr[Char/rtct]"* %28
  call void @"=153"(%"RawPtr[Char/rtct]"* %26, %"RawPtr[Char/rtct]" %29)
  %30 = load %"Vector[Char/rtct]"** %other.addr
  %31 = getelementptr inbounds %"Vector[Char/rtct]"* %30, i32 0, i32 2
  %32 = load %"RawPtr[Char/rtct]"* %tmp
  call void @"=153"(%"RawPtr[Char/rtct]"* %31, %"RawPtr[Char/rtct]" %32)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=196"(%Token* %"$this", %Token* %other) #2 {
  %"$this.addr" = alloca %Token*
  store %Token* %"$this", %Token** %"$this.addr"
  %other.addr = alloca %Token*
  store %Token* %other, %Token** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token** %"$this.addr"
  %2 = getelementptr inbounds %Token* %1, i32 0, i32 0
  %3 = load %Token** %other.addr
  %4 = getelementptr inbounds %Token* %3, i32 0, i32 0
  call void @"=190"(%Location* %2, %Location* %4)
  %5 = load %Token** %"$this.addr"
  %6 = getelementptr inbounds %Token* %5, i32 0, i32 1
  %7 = load %Token** %other.addr
  %8 = getelementptr inbounds %Token* %7, i32 0, i32 1
  call void @"=197"(%TokenType* %6, %TokenType* %8)
  %9 = load %Token** %"$this.addr"
  %10 = getelementptr inbounds %Token* %9, i32 0, i32 2
  %11 = load %Token** %other.addr
  %12 = getelementptr inbounds %Token* %11, i32 0, i32 2
  %13 = call %String* @"=198"(%String* %10, %String* %12)
  %14 = load %Token** %other.addr
  %15 = getelementptr inbounds %Token* %14, i32 0, i32 3
  %16 = load i64* %15
  %17 = load %Token** %"$this.addr"
  %18 = getelementptr inbounds %Token* %17, i32 0, i32 3
  store i64 %16, i64* %18
  %19 = load %Token** %other.addr
  %20 = getelementptr inbounds %Token* %19, i32 0, i32 4
  %21 = load double* %20
  %22 = load %Token** %"$this.addr"
  %23 = getelementptr inbounds %Token* %22, i32 0, i32 4
  store double %21, double* %23
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=197"(%TokenType* %"$this", %TokenType* %other) #2 {
  %"$this.addr" = alloca %TokenType*
  store %TokenType* %"$this", %TokenType** %"$this.addr"
  %other.addr = alloca %TokenType*
  store %TokenType* %other, %TokenType** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %TokenType** %other.addr
  %2 = getelementptr inbounds %TokenType* %1, i32 0, i32 0
  %3 = load i32* %2
  %4 = load %TokenType** %"$this.addr"
  %5 = getelementptr inbounds %TokenType* %4, i32 0, i32 0
  store i32 %3, i32* %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %String* @"=198"(%String* %"$this", %String* %other) #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %other.addr = alloca %String*
  store %String* %other, %String** %other.addr
  %tmp = alloca %String
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %other.addr
  call void @ctor163(%String* %tmp, %String* %1)
  %2 = load %String** %"$this.addr"
  call void @swap199(%String* %tmp, %String* %2)
  %3 = load %String** %"$this.addr"
  call void @dtor166(%String* %tmp)
  ret %String* %3

dumy_block:                                       ; No predecessors!
  call void @dtor166(%String* %tmp)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @swap199(%String* %"$this", %String* %other) #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %other.addr = alloca %String*
  store %String* %other, %String** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  %2 = getelementptr inbounds %String* %1, i32 0, i32 0
  %3 = load %String** %other.addr
  %4 = getelementptr inbounds %String* %3, i32 0, i32 0
  call void @swap200(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]"* %4)
  %5 = load %String** %"$this.addr"
  %6 = getelementptr inbounds %String* %5, i32 0, i32 1
  %7 = load %String** %other.addr
  %8 = getelementptr inbounds %String* %7, i32 0, i32 1
  call void @swap200(%"RawPtr[Char/rtct]"* %6, %"RawPtr[Char/rtct]"* %8)
  %9 = load %String** %"$this.addr"
  %10 = getelementptr inbounds %String* %9, i32 0, i32 2
  %11 = load %String** %other.addr
  %12 = getelementptr inbounds %String* %11, i32 0, i32 2
  call void @swap200(%"RawPtr[Char/rtct]"* %10, %"RawPtr[Char/rtct]"* %12)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @swap200(%"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]"* %other) #3 {
  %"$this.addr" = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %other, %"RawPtr[Char/rtct]"** %other.addr
  %t = alloca i8*
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[Char/rtct]"* %1, i32 0, i32 0
  %3 = load i8** %2
  store i8* %3, i8** %t
  %4 = load %"RawPtr[Char/rtct]"** %other.addr
  %5 = getelementptr inbounds %"RawPtr[Char/rtct]"* %4, i32 0, i32 0
  %6 = load i8** %5
  %7 = load %"RawPtr[Char/rtct]"** %"$this.addr"
  %8 = getelementptr inbounds %"RawPtr[Char/rtct]"* %7, i32 0, i32 0
  store i8* %6, i8** %8
  %9 = load i8** %t
  %10 = load %"RawPtr[Char/rtct]"** %other.addr
  %11 = getelementptr inbounds %"RawPtr[Char/rtct]"* %10, i32 0, i32 0
  store i8* %9, i8** %11
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @reserve201(%"Vector[Token]"* %"$this", i64 %n) #3 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %curCapacity = alloca i64
  %tmp.v = alloca i64
  %curSize = alloca i64
  %"$tmpC" = alloca %"RawPtr[Token]"
  %"$tmpC7" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = call i64 @capacity202(%"Vector[Token]"* %1)
  store i64 %2, i64* %curCapacity
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64* %n.addr
  %4 = load i64* %curCapacity
  %5 = call i1 @"<="(i64 %3, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64* %n.addr
  %7 = call i1 @"<182"(i64 %6, i32 8)
  br i1 %7, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 8, i64* %n.addr
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  br label %if_block4

if_block4:                                        ; preds = %if_end3
  %8 = load i64* %n.addr
  %9 = load i64* %curCapacity
  %10 = call double @"*151"(double 2.000000e+00, i64 %9)
  %11 = call i1 @"<148"(i64 %8, double %10)
  br i1 %11, label %if_then5, label %if_end6

if_then5:                                         ; preds = %if_block4
  %12 = load i64* %curCapacity
  %13 = call double @"*151"(double 2.000000e+00, i64 %12)
  %14 = fptoui double %13 to i64
  store i64 %14, i64* %tmp.v
  %15 = load i64* %tmp.v
  store i64 %15, i64* %n.addr
  br label %if_end6

if_end6:                                          ; preds = %if_then5, %if_block4
  %16 = load %"Vector[Token]"** %"$this.addr"
  %17 = call i64 @size205(%"Vector[Token]"* %16)
  store i64 %17, i64* %curSize
  %18 = load %"Vector[Token]"** %"$this.addr"
  %19 = getelementptr inbounds %"Vector[Token]"* %18, i32 0, i32 0
  %20 = load i64* %n.addr
  call void @reallocPtr206(%"RawPtr[Token]"* %19, i64 %20)
  %21 = load %"Vector[Token]"** %"$this.addr"
  %22 = getelementptr inbounds %"Vector[Token]"* %21, i32 0, i32 1
  %23 = load %"Vector[Token]"** %"$this.addr"
  %24 = getelementptr inbounds %"Vector[Token]"* %23, i32 0, i32 0
  %25 = load i64* %curSize
  call void @advance208(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]"* %24, i64 %25)
  %26 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=207"(%"RawPtr[Token]"* %22, %"RawPtr[Token]" %26)
  %27 = load %"Vector[Token]"** %"$this.addr"
  %28 = getelementptr inbounds %"Vector[Token]"* %27, i32 0, i32 2
  %29 = load %"Vector[Token]"** %"$this.addr"
  %30 = getelementptr inbounds %"Vector[Token]"* %29, i32 0, i32 0
  %31 = load i64* %n.addr
  call void @advance208(%"RawPtr[Token]"* %"$tmpC7", %"RawPtr[Token]"* %30, i64 %31)
  %32 = load %"RawPtr[Token]"* %"$tmpC7"
  call void @"=207"(%"RawPtr[Token]"* %28, %"RawPtr[Token]" %32)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i64 @capacity202(%"Vector[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 2
  %3 = load %"Vector[Token]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Token]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Token]"* %4
  %6 = call i64 @diff203(%"RawPtr[Token]"* %2, %"RawPtr[Token]" %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @diff203(%"RawPtr[Token]"* %"$this", %"RawPtr[Token]" %other) #2 {
  %"$this.addr" = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %"$this", %"RawPtr[Token]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %other, %"RawPtr[Token]"* %other.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %"$this.addr"
  %2 = call i8* @bytePtr204(%"RawPtr[Token]"* %1)
  %3 = call i8* @bytePtr204(%"RawPtr[Token]"* %other.addr)
  %4 = call i64 @ptrDiff(i8* %2, i8* %3)
  store i64 72, i64* %tmp.v1
  %5 = load i64* %tmp.v1
  %6 = call i64 @"/144"(i64 %4, i64 %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8* @bytePtr204(%"RawPtr[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %"$this", %"RawPtr[Token]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[Token]"* %1, i32 0, i32 0
  %3 = load %Token** %2
  %4 = bitcast %Token* %3 to i8*
  ret i8* %4
}

; Function Attrs: alwaysinline nounwind
define internal i64 @size205(%"Vector[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 1
  %3 = load %"Vector[Token]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Token]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Token]"* %4
  %6 = call i64 @diff203(%"RawPtr[Token]"* %2, %"RawPtr[Token]" %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal void @reallocPtr206(%"RawPtr[Token]"* %"$this", i64 %n) #3 {
  %"$this.addr" = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %"$this", %"RawPtr[Token]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %"$this.addr"
  %2 = call i8* @bytePtr204(%"RawPtr[Token]"* %1)
  %3 = load i64* %n.addr
  %4 = call i64 @"*"(i64 %3, i64 72)
  %5 = call i8* @realloc(i8* %2, i64 %4)
  %6 = bitcast i8* %5 to %Token*
  %7 = load %"RawPtr[Token]"** %"$this.addr"
  %8 = getelementptr inbounds %"RawPtr[Token]"* %7, i32 0, i32 0
  store %Token* %6, %Token** %8
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=207"(%"RawPtr[Token]"* %"$this", %"RawPtr[Token]" %other) #2 {
  %"$this.addr" = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %"$this", %"RawPtr[Token]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %other, %"RawPtr[Token]"* %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[Token]"* %other.addr, i32 0, i32 0
  %2 = load %Token** %1
  %3 = load %"RawPtr[Token]"** %"$this.addr"
  %4 = getelementptr inbounds %"RawPtr[Token]"* %3, i32 0, i32 0
  store %Token* %2, %Token** %4
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @advance208(%"RawPtr[Token]"* sret %_result, %"RawPtr[Token]"* %"$this", i64 %n) #2 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %"$this.addr" = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %"$this", %"RawPtr[Token]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %_result.addr
  %2 = load %"RawPtr[Token]"** %"$this.addr"
  %3 = call i8* @bytePtr204(%"RawPtr[Token]"* %2)
  %4 = load i64* %n.addr
  %5 = call i64 @"*"(i64 %4, i64 72)
  %6 = call i8* @ptrAdd(i8* %3, i64 %5)
  call void @fromBytePtr209(%"RawPtr[Token]"* %1, i8* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @fromBytePtr209(%"RawPtr[Token]"* sret %_result, i8* %ptr) #3 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %ptr.addr = alloca i8*
  store i8* %ptr, i8** %ptr.addr
  %res = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  call void @ctor133(%"RawPtr[Token]"* %res)
  %1 = load i8** %ptr.addr
  %2 = bitcast i8* %1 to %Token*
  %3 = getelementptr inbounds %"RawPtr[Token]"* %res, i32 0, i32 0
  store %Token* %2, %Token** %3
  %4 = load %"RawPtr[Token]"** %_result.addr
  call void @ctor210(%"RawPtr[Token]"* %4, %"RawPtr[Token]"* %res)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor210(%"RawPtr[Token]"* %"$this", %"RawPtr[Token]"* %other) #2 {
  %"$this.addr" = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %"$this", %"RawPtr[Token]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %other, %"RawPtr[Token]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %other.addr
  %2 = getelementptr inbounds %"RawPtr[Token]"* %1, i32 0, i32 0
  %3 = load %Token** %2
  %4 = load %"RawPtr[Token]"** %"$this.addr"
  %5 = getelementptr inbounds %"RawPtr[Token]"* %4, i32 0, i32 0
  store %Token* %3, %Token** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor211(%"RawPtr[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %"$this", %"RawPtr[Token]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"pre_!!212"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %r) #2 {
  %r.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %r, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %r.addr
  %2 = call i1 @isEmpty213(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1)
  %3 = xor i1 true, %2
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty213(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s) #3 {
  %s.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 4
  %3 = load i1* %2
  ret i1 %3
}

; Function Attrs: alwaysinline nounwind
define internal void @"+=214"(%"Vector[Token]"* %"$this", %Token* %value) #2 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %value.addr = alloca %Token*
  store %Token* %value, %Token** %value.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = load %Token** %value.addr
  call void @pushBack215(%"Vector[Token]"* %1, %Token* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @pushBack215(%"Vector[Token]"* %"$this", %Token* %value) #3 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %value.addr = alloca %Token*
  store %Token* %value, %Token** %value.addr
  %t = alloca i64
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 1
  %3 = load %"Vector[Token]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Token]"* %3, i32 0, i32 2
  %5 = load %"RawPtr[Token]"* %4
  %6 = call i1 @"==216"(%"RawPtr[Token]"* %2, %"RawPtr[Token]" %5)
  br i1 %6, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %7 = load %"Vector[Token]"** %"$this.addr"
  %8 = call i64 @capacity202(%"Vector[Token]"* %7)
  %9 = call i64 @"*183"(i32 2, i64 %8)
  store i64 %9, i64* %t
  br label %if_block1

if_end:                                           ; preds = %if_end3, %if_block
  %10 = load %"Vector[Token]"** %"$this.addr"
  %11 = getelementptr inbounds %"Vector[Token]"* %10, i32 0, i32 1
  %12 = call %Token* @value219(%"RawPtr[Token]"* %11)
  %13 = load %Token** %value.addr
  call void @ctor217(%Token* %12, %Token* %13)
  %14 = load %"Vector[Token]"** %"$this.addr"
  %15 = getelementptr inbounds %"Vector[Token]"* %14, i32 0, i32 1
  %16 = load %"Vector[Token]"** %"$this.addr"
  %17 = getelementptr inbounds %"Vector[Token]"* %16, i32 0, i32 1
  call void @advance220(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]"* %17)
  %18 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=207"(%"RawPtr[Token]"* %15, %"RawPtr[Token]" %18)
  ret void

if_block1:                                        ; preds = %if_then
  %19 = load i64* %t
  %20 = call i1 @"<182"(i64 %19, i32 2)
  br i1 %20, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 2, i64* %t
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %21 = load %"Vector[Token]"** %"$this.addr"
  %22 = load i64* %t
  call void @reserve201(%"Vector[Token]"* %21, i64 %22)
  br label %if_end
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==216"(%"RawPtr[Token]"* %"$this", %"RawPtr[Token]" %other) #2 {
  %"$this.addr" = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %"$this", %"RawPtr[Token]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %other, %"RawPtr[Token]"* %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[Token]"* %1, i32 0, i32 0
  %3 = load %Token** %2
  %4 = bitcast %Token* %3 to i8*
  %5 = getelementptr inbounds %"RawPtr[Token]"* %other.addr, i32 0, i32 0
  %6 = load %Token** %5
  %7 = bitcast %Token* %6 to i8*
  %8 = call i1 @implOpRefEQ(i8* %4, i8* %7)
  ret i1 %8
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor217(%Token* %"$this", %Token* %other) #2 {
  %"$this.addr" = alloca %Token*
  store %Token* %"$this", %Token** %"$this.addr"
  %other.addr = alloca %Token*
  store %Token* %other, %Token** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token** %"$this.addr"
  %2 = getelementptr inbounds %Token* %1, i32 0, i32 0
  %3 = load %Token** %other.addr
  %4 = getelementptr inbounds %Token* %3, i32 0, i32 0
  call void @ctor168(%Location* %2, %Location* %4)
  %5 = load %Token** %"$this.addr"
  %6 = getelementptr inbounds %Token* %5, i32 0, i32 1
  %7 = load %Token** %other.addr
  %8 = getelementptr inbounds %Token* %7, i32 0, i32 1
  call void @ctor218(%TokenType* %6, %TokenType* %8)
  %9 = load %Token** %"$this.addr"
  %10 = getelementptr inbounds %Token* %9, i32 0, i32 2
  %11 = load %Token** %other.addr
  %12 = getelementptr inbounds %Token* %11, i32 0, i32 2
  call void @ctor163(%String* %10, %String* %12)
  %13 = load %Token** %other.addr
  %14 = getelementptr inbounds %Token* %13, i32 0, i32 3
  %15 = load i64* %14
  %16 = load %Token** %"$this.addr"
  %17 = getelementptr inbounds %Token* %16, i32 0, i32 3
  store i64 %15, i64* %17
  %18 = load %Token** %other.addr
  %19 = getelementptr inbounds %Token* %18, i32 0, i32 4
  %20 = load double* %19
  %21 = load %Token** %"$this.addr"
  %22 = getelementptr inbounds %Token* %21, i32 0, i32 4
  store double %20, double* %22
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor218(%TokenType* %"$this", %TokenType* %other) #2 {
  %"$this.addr" = alloca %TokenType*
  store %TokenType* %"$this", %TokenType** %"$this.addr"
  %other.addr = alloca %TokenType*
  store %TokenType* %other, %TokenType** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %TokenType** %other.addr
  %2 = getelementptr inbounds %TokenType* %1, i32 0, i32 0
  %3 = load i32* %2
  %4 = load %TokenType** %"$this.addr"
  %5 = getelementptr inbounds %TokenType* %4, i32 0, i32 0
  store i32 %3, i32* %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal %Token* @value219(%"RawPtr[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %"$this", %"RawPtr[Token]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[Token]"* %1, i32 0, i32 0
  %3 = load %Token** %2
  ret %Token* %3
}

; Function Attrs: alwaysinline nounwind
define internal void @advance220(%"RawPtr[Token]"* sret %_result, %"RawPtr[Token]"* %"$this") #2 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %"$this.addr" = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %"$this", %"RawPtr[Token]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %_result.addr
  %2 = load %"RawPtr[Token]"** %"$this.addr"
  %3 = call i8* @bytePtr204(%"RawPtr[Token]"* %2)
  %4 = call i8* @ptrAdd(i8* %3, i64 72)
  call void @fromBytePtr209(%"RawPtr[Token]"* %1, i8* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"post_++221"(%Token* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %r) #3 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %r.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %r, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %r.addr
  %res = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %r.addr
  call void @front222(%Token* %res, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1)
  %2 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %r.addr
  call void @popFront223(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %2)
  %3 = load %Token** %_result.addr
  call void @ctor217(%Token* %3, %Token* %res)
  call void @dtor299(%Token* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor299(%Token* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @front222(%Token* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s) #3 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %s.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 3
  %3 = load i1* %2
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %6 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %5, i32 0, i32 3
  store i1 true, i1* %6
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  call void @popFront223(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  %8 = load %Token** %_result.addr
  %9 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %10 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %9, i32 0, i32 2
  call void @ctor217(%Token* %8, %Token* %10)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popFront223(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s) #3 {
  %s.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %tmp.v = alloca %TokenType
  %"$tmpC" = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = call i1 @isEmpty224(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  br i1 %3, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %5 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, i32 0, i32 4
  store i1 true, i1* %5
  br label %if_end

if_else:                                          ; preds = %cond.end
  %6 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %7 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %6, i32 0, i32 2
  %8 = getelementptr inbounds %Token* %7, i32 0, i32 1
  %9 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  call void @nextToken(%TokenType* %"$tmpC", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %9)
  call void @"=197"(%TokenType* %8, %TokenType* %"$tmpC")
  %10 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %11 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %10, i32 0, i32 2
  %12 = getelementptr inbounds %Token* %11, i32 0, i32 0
  %13 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %14 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %13, i32 0, i32 1
  %15 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %14, i32 0, i32 1
  %16 = load %Location** %15
  call void @"=190"(%Location* %12, %Location* %16)
  br label %if_end

if_end:                                           ; preds = %if_else, %if_then
  br i1 %3, label %cond_destruct_alt1, label %cond_destruct_alt2

cond.true:                                        ; preds = %if_block
  %17 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %18 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %17, i32 0, i32 2
  %19 = getelementptr inbounds %Token* %18, i32 0, i32 1
  call void @ctor229(%TokenType* %tmp.v, i32 0)
  %20 = call i1 @"==227"(%TokenType* %19, %TokenType* %tmp.v)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %20, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_else

cond_destruct_alt1:                               ; preds = %if_end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty224(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %s) #3 {
  %s.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %s, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %s.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  %3 = call i1 @isEmpty225(%"RangeWithLookahead[_CharSource]"* %2)
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty225(%"RangeWithLookahead[_CharSource]"* %s) #3 {
  %s.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %s, %"RangeWithLookahead[_CharSource]"** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"** %s.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 1
  %3 = call i1 @isEmpty226(%"Vector[Char/rtct]"* %2)
  ret i1 %3
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isEmpty226(%"Vector[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 0
  %3 = load %"Vector[Char/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Char/rtct]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i1 @"==155"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  ret i1 %6
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==227"(%TokenType* %"$this", %TokenType* %other) #2 {
  %"$this.addr" = alloca %TokenType*
  store %TokenType* %"$this", %TokenType** %"$this.addr"
  %other.addr = alloca %TokenType*
  store %TokenType* %other, %TokenType** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %TokenType** %"$this.addr"
  %2 = getelementptr inbounds %TokenType* %1, i32 0, i32 0
  %3 = load i32* %2
  %4 = load %TokenType** %other.addr
  %5 = getelementptr inbounds %TokenType* %4, i32 0, i32 0
  %6 = load i32* %5
  %7 = call i1 @"==228"(i32 %3, i32 %6)
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==228"(i32 %x, i32 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn13(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn13(i32 %4, i32 %5)
  %7 = icmp eq i32 %3, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor229(%TokenType* %"$this", i32 %fdata) #2 {
  %"$this.addr" = alloca %TokenType*
  store %TokenType* %"$this", %TokenType** %"$this.addr"
  %fdata.addr = alloca i32
  store i32 %fdata, i32* %fdata.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %fdata.addr
  %2 = load %TokenType** %"$this.addr"
  %3 = getelementptr inbounds %TokenType* %2, i32 0, i32 0
  store i32 %1, i32* %3
  ret void
}

; Function Attrs: noinline nounwind
define void @nextToken(%TokenType* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s) #4 {
  %_result.addr = alloca %TokenType*
  store %TokenType* %_result, %TokenType** %_result.addr
  %s.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %loc = alloca %Location*
  %ch = alloca i8
  %ch2 = alloca i8
  %tmp.v = alloca %"$lambdaEnclosure"
  %ch14 = alloca i8
  %ch215 = alloca i8
  %tmp.v19 = alloca %"$lambdaEnclosure.0"
  %"$tmpC" = alloca %String
  %const.bytes = alloca [30 x i8]
  %const.struct = alloca %StringRef
  %tmp.v24 = alloca %"$lambdaEnclosure.1"
  %tmp.v37 = alloca %"$lambdaEnclosure.2"
  %c1 = alloca i8
  %c2 = alloca i8
  %"$tmpForRef" = alloca %String
  %tmp.v61 = alloca %String
  %"$tmpC175" = alloca %String
  %const.bytes176 = alloca [27 x i8]
  %const.struct177 = alloca %StringRef
  %const.bytes178 = alloca [4 x i8]
  %const.struct179 = alloca %StringRef
  %tmp.v180 = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2, i32 0, i32 1
  %4 = load %Location** %3
  store %Location* %4, %Location** %loc
  br label %if_block

if_block:                                         ; preds = %code
  %5 = load %Location** %loc
  %6 = getelementptr inbounds %Location* %5, i32 0, i32 1
  %7 = getelementptr inbounds %LineCol* %6, i32 0, i32 0
  %8 = load i32* %7
  %9 = call i1 @"==230"(i32 %8, i32 1)
  br i1 %9, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %10 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %11 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %10, i32 0, i32 1
  %12 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %11)
  store i8 %12, i8* %ch
  %13 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %14 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %13)
  store i8 %14, i8* %ch2
  br label %if_block1

if_end:                                           ; preds = %if_end3, %cond.end
  br label %while_block

cond.true:                                        ; preds = %if_block
  %15 = load %Location** %loc
  %16 = getelementptr inbounds %Location* %15, i32 0, i32 1
  %17 = getelementptr inbounds %LineCol* %16, i32 0, i32 1
  %18 = load i32* %17
  %19 = call i1 @"==230"(i32 %18, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %19, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end

if_block1:                                        ; preds = %if_then
  %20 = load i8* %ch
  %21 = icmp eq i8 %20, 35
  br i1 %21, label %cond.true4, label %cond.false5

if_then2:                                         ; preds = %cond.end6
  %22 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %23 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %22, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %23)
  %24 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %25 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %24, i32 0, i32 1
  %26 = load %"$lambdaEnclosure"* %tmp.v
  call void @advanceIf(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %25, %"$lambdaEnclosure" %26)
  br label %if_block8

if_end3:                                          ; preds = %if_end10, %cond.end6
  br label %if_end

cond.true4:                                       ; preds = %if_block1
  %27 = load i8* %ch2
  %28 = icmp eq i8 %27, 33
  br label %cond.end6

cond.false5:                                      ; preds = %if_block1
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res7 = phi i1 [ %28, %cond.true4 ], [ false, %cond.false5 ]
  br i1 %cond.res7, label %if_then2, label %if_end3

if_block8:                                        ; preds = %if_then2
  %29 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %30 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %29, i32 0, i32 1
  %31 = call i1 @"pre_!!251"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %30)
  br i1 %31, label %if_then9, label %if_end10

if_then9:                                         ; preds = %if_block8
  %32 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %33 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %32, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %33)
  br label %if_end10

if_end10:                                         ; preds = %if_then9, %if_block8
  br label %if_end3

while_block:                                      ; preds = %while_step, %if_end
  br i1 true, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %34 = load %Location** %loc
  call void @stepOver(%Location* %34)
  %35 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %36 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %35, i32 0, i32 2
  %37 = getelementptr inbounds %Token* %36, i32 0, i32 2
  call void @clear(%String* %37)
  br label %if_block11

while_step:                                       ; preds = %dumy_block181, %if_then65, %if_end60, %if_then31, %if_then22, %if_then17
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void

if_block11:                                       ; preds = %while_body
  %38 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %39 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %38, i32 0, i32 1
  %40 = call i1 @isEmpty224(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %39)
  br i1 %40, label %if_then12, label %if_end13

if_then12:                                        ; preds = %if_block11
  %41 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %41, i32 0)
  ret void

if_end13:                                         ; preds = %dumy_block, %if_block11
  %42 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %43 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %42, i32 0, i32 1
  %44 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %43)
  store i8 %44, i8* %ch14
  %45 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %46 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %45)
  store i8 %46, i8* %ch215
  br label %if_block16

dumy_block:                                       ; No predecessors!
  br label %if_end13

if_block16:                                       ; preds = %if_end13
  %47 = load i8* %ch14
  %48 = icmp eq i8 %47, 32
  br i1 %48, label %if_then17, label %if_end18

if_then17:                                        ; preds = %if_block16
  %49 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %50 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %49, i32 0, i32 1
  %51 = load %"$lambdaEnclosure.0"* %tmp.v19
  call void @advanceIf253(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %50, %"$lambdaEnclosure.0" %51)
  br label %while_step

if_end18:                                         ; preds = %dumy_block20, %if_block16
  br label %if_block21

dumy_block20:                                     ; No predecessors!
  br label %if_end18

if_block21:                                       ; preds = %if_end18
  %52 = load i8* %ch14
  %53 = icmp eq i8 %52, 9
  br i1 %53, label %if_then22, label %if_end23

if_then22:                                        ; preds = %if_block21
  %54 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  store [30 x i8] c"Tabs are not valid characters\00", [30 x i8]* %const.bytes
  %55 = getelementptr inbounds [30 x i8]* %const.bytes, i32 0, i32 0
  %56 = getelementptr inbounds [30 x i8]* %const.bytes, i32 0, i32 29
  %57 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %58 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %55, i8** %57
  store i8* %56, i8** %58
  %59 = load %StringRef* %const.struct
  call void @toString257(%String* %"$tmpC", %StringRef %59)
  call void @reportError256(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %54, %String* %"$tmpC")
  call void @dtor166(%String* %"$tmpC")
  %60 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %61 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %60, i32 0, i32 1
  %62 = load %"$lambdaEnclosure.1"* %tmp.v24
  call void @advanceIf258(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %61, %"$lambdaEnclosure.1" %62)
  br label %while_step

if_end23:                                         ; preds = %dumy_block25, %if_block21
  br label %if_block26

dumy_block25:                                     ; No predecessors!
  br label %if_end23

if_block26:                                       ; preds = %if_end23
  %63 = load i8* %ch14
  %64 = icmp eq i8 %63, 10
  br i1 %64, label %if_then27, label %if_end28

if_then27:                                        ; preds = %if_block26
  %65 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %66 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %65, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %66)
  %67 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %67, i32 1)
  ret void

if_end28:                                         ; preds = %dumy_block29, %if_block26
  br label %if_block30

dumy_block29:                                     ; No predecessors!
  br label %if_end28

if_block30:                                       ; preds = %if_end28
  %68 = load i8* %ch14
  %69 = icmp eq i8 %68, 47
  br i1 %69, label %cond.true33, label %cond.false34

if_then31:                                        ; preds = %cond.end35
  %70 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %71 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %70, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %71)
  %72 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %73 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %72, i32 0, i32 1
  %74 = load %"$lambdaEnclosure.2"* %tmp.v37
  call void @advanceIf261(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %73, %"$lambdaEnclosure.2" %74)
  br label %while_step

if_end32:                                         ; preds = %dumy_block38, %cond.end35
  br label %if_block39

cond.true33:                                      ; preds = %if_block30
  %75 = load i8* %ch215
  %76 = icmp eq i8 %75, 47
  br label %cond.end35

cond.false34:                                     ; preds = %if_block30
  br label %cond.end35

cond.end35:                                       ; preds = %cond.false34, %cond.true33
  %cond.res36 = phi i1 [ %76, %cond.true33 ], [ false, %cond.false34 ]
  br i1 %cond.res36, label %if_then31, label %if_end32

dumy_block38:                                     ; No predecessors!
  br label %if_end32

if_block39:                                       ; preds = %if_end32
  %77 = load i8* %ch14
  %78 = icmp eq i8 %77, 47
  br i1 %78, label %cond.true42, label %cond.false43

if_then40:                                        ; preds = %cond.end44
  %79 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %80 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %79, i32 0, i32 1
  call void @advance264(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %80, i64 2)
  store i8 97, i8* %c1
  store i8 97, i8* %c2
  br label %while_block46

if_end41:                                         ; preds = %dumy_block63, %cond.end44
  br label %if_block64

cond.true42:                                      ; preds = %if_block39
  %81 = load i8* %ch215
  %82 = icmp eq i8 %81, 42
  br label %cond.end44

cond.false43:                                     ; preds = %if_block39
  br label %cond.end44

cond.end44:                                       ; preds = %cond.false43, %cond.true42
  %cond.res45 = phi i1 [ %82, %cond.true42 ], [ false, %cond.false43 ]
  br i1 %cond.res45, label %if_then40, label %if_end41

while_block46:                                    ; preds = %while_step48, %if_then40
  %83 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %84 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %83, i32 0, i32 1
  %85 = call i1 @"pre_!!251"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %84)
  br i1 %85, label %cond.true50, label %cond.false51

while_body47:                                     ; preds = %cond.end52
  %86 = load i8* %c2
  store i8 %86, i8* %c1
  %87 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %88 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %87, i32 0, i32 1
  %89 = call i8 @"pre_++265"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %88)
  store i8 %89, i8* %c2
  br label %while_step48

while_step48:                                     ; preds = %while_body47
  br label %while_block46

while_end49:                                      ; preds = %cond.end52
  br label %if_block58

cond.true50:                                      ; preds = %while_block46
  %90 = load i8* %c1
  %91 = icmp ne i8 %90, 42
  br i1 %91, label %cond.true53, label %cond.false54

cond.false51:                                     ; preds = %while_block46
  br label %cond.end52

cond.end52:                                       ; preds = %cond.false51, %cond.end55
  %cond.res57 = phi i1 [ %cond.res56, %cond.end55 ], [ false, %cond.false51 ]
  br i1 %cond.res57, label %while_body47, label %while_end49

cond.true53:                                      ; preds = %cond.true50
  br label %cond.end55

cond.false54:                                     ; preds = %cond.true50
  %92 = load i8* %c2
  %93 = icmp ne i8 %92, 47
  br label %cond.end55

cond.end55:                                       ; preds = %cond.false54, %cond.true53
  %cond.res56 = phi i1 [ true, %cond.true53 ], [ %93, %cond.false54 ]
  br label %cond.end52

if_block58:                                       ; preds = %while_end49
  %94 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %95 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %94, i32 0, i32 1
  %96 = call i1 @"pre_!"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %95)
  br i1 %96, label %if_then59, label %if_end60

if_then59:                                        ; preds = %if_block58
  %97 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  call void @ctorFromCt(%String* %tmp.v61)
  %98 = load %String* %tmp.v61
  store %String %98, %String* %"$tmpForRef"
  call void @reportError256(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %97, %String* %"$tmpForRef")
  call void @dtor166(%String* %tmp.v61)
  %99 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %99, i32 0)
  ret void

if_end60:                                         ; preds = %dumy_block62, %if_block58
  %100 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %101 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %100, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %101)
  br label %while_step

dumy_block62:                                     ; No predecessors!
  br label %if_end60

dumy_block63:                                     ; No predecessors!
  br label %if_end41

if_block64:                                       ; preds = %if_end41
  %102 = load i8* %ch14
  %103 = icmp eq i8 %102, 92
  br i1 %103, label %cond.true67, label %cond.false68

if_then65:                                        ; preds = %cond.end69
  %104 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %105 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %104, i32 0, i32 1
  call void @advance264(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %105, i64 2)
  br label %while_step

if_end66:                                         ; preds = %dumy_block71, %cond.end69
  br label %if_block72

cond.true67:                                      ; preds = %if_block64
  %106 = load i8* %ch215
  %107 = icmp eq i8 %106, 10
  br label %cond.end69

cond.false68:                                     ; preds = %if_block64
  br label %cond.end69

cond.end69:                                       ; preds = %cond.false68, %cond.true67
  %cond.res70 = phi i1 [ %107, %cond.true67 ], [ false, %cond.false68 ]
  br i1 %cond.res70, label %if_then65, label %if_end66

dumy_block71:                                     ; No predecessors!
  br label %if_end66

if_block72:                                       ; preds = %if_end66
  %108 = load i8* %ch14
  %109 = icmp eq i8 %108, 39
  br i1 %109, label %if_then73, label %if_end74

if_then73:                                        ; preds = %if_block72
  %110 = load %TokenType** %_result.addr
  %111 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  call void @parseString(%TokenType* %110, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %111, i8 39)
  ret void

if_end74:                                         ; preds = %dumy_block75, %if_block72
  br label %if_block76

dumy_block75:                                     ; No predecessors!
  br label %if_end74

if_block76:                                       ; preds = %if_end74
  %112 = load i8* %ch14
  %113 = icmp eq i8 %112, 34
  br i1 %113, label %if_then77, label %if_end78

if_then77:                                        ; preds = %if_block76
  %114 = load %TokenType** %_result.addr
  %115 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  call void @parseString(%TokenType* %114, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %115, i8 34)
  ret void

if_end78:                                         ; preds = %dumy_block79, %if_block76
  br label %if_block80

dumy_block79:                                     ; No predecessors!
  br label %if_end78

if_block80:                                       ; preds = %if_end78
  %116 = load i8* %ch14
  %117 = icmp eq i8 %116, 60
  br i1 %117, label %cond.true83, label %cond.false84

if_then81:                                        ; preds = %cond.end85
  %118 = load %TokenType** %_result.addr
  %119 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  call void @parseStringNE(%TokenType* %118, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %119)
  ret void

if_end82:                                         ; preds = %dumy_block87, %cond.end85
  br label %if_block88

cond.true83:                                      ; preds = %if_block80
  %120 = load i8* %ch215
  %121 = icmp eq i8 %120, 123
  br label %cond.end85

cond.false84:                                     ; preds = %if_block80
  br label %cond.end85

cond.end85:                                       ; preds = %cond.false84, %cond.true83
  %cond.res86 = phi i1 [ %121, %cond.true83 ], [ false, %cond.false84 ]
  br i1 %cond.res86, label %if_then81, label %if_end82

dumy_block87:                                     ; No predecessors!
  br label %if_end82

if_block88:                                       ; preds = %if_end82
  %122 = load i8* %ch14
  %123 = icmp eq i8 %122, 123
  br i1 %123, label %if_then89, label %if_end90

if_then89:                                        ; preds = %if_block88
  %124 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %125 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %124, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %125)
  %126 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %126, i32 26)
  ret void

if_end90:                                         ; preds = %dumy_block91, %if_block88
  br label %if_block92

dumy_block91:                                     ; No predecessors!
  br label %if_end90

if_block92:                                       ; preds = %if_end90
  %127 = load i8* %ch14
  %128 = icmp eq i8 %127, 123
  br i1 %128, label %if_then93, label %if_end94

if_then93:                                        ; preds = %if_block92
  %129 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %130 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %129, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %130)
  %131 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %131, i32 26)
  ret void

if_end94:                                         ; preds = %dumy_block95, %if_block92
  br label %if_block96

dumy_block95:                                     ; No predecessors!
  br label %if_end94

if_block96:                                       ; preds = %if_end94
  %132 = load i8* %ch14
  %133 = icmp eq i8 %132, 125
  br i1 %133, label %if_then97, label %if_end98

if_then97:                                        ; preds = %if_block96
  %134 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %135 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %134, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %135)
  %136 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %136, i32 27)
  ret void

if_end98:                                         ; preds = %dumy_block99, %if_block96
  br label %if_block100

dumy_block99:                                     ; No predecessors!
  br label %if_end98

if_block100:                                      ; preds = %if_end98
  %137 = load i8* %ch14
  %138 = icmp eq i8 %137, 91
  br i1 %138, label %if_then101, label %if_end102

if_then101:                                       ; preds = %if_block100
  %139 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %140 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %139, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %140)
  %141 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %141, i32 28)
  ret void

if_end102:                                        ; preds = %dumy_block103, %if_block100
  br label %if_block104

dumy_block103:                                    ; No predecessors!
  br label %if_end102

if_block104:                                      ; preds = %if_end102
  %142 = load i8* %ch14
  %143 = icmp eq i8 %142, 93
  br i1 %143, label %if_then105, label %if_end106

if_then105:                                       ; preds = %if_block104
  %144 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %145 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %144, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %145)
  %146 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %146, i32 29)
  ret void

if_end106:                                        ; preds = %dumy_block107, %if_block104
  br label %if_block108

dumy_block107:                                    ; No predecessors!
  br label %if_end106

if_block108:                                      ; preds = %if_end106
  %147 = load i8* %ch14
  %148 = icmp eq i8 %147, 40
  br i1 %148, label %if_then109, label %if_end110

if_then109:                                       ; preds = %if_block108
  %149 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %150 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %149, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %150)
  %151 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %151, i32 30)
  ret void

if_end110:                                        ; preds = %dumy_block111, %if_block108
  br label %if_block112

dumy_block111:                                    ; No predecessors!
  br label %if_end110

if_block112:                                      ; preds = %if_end110
  %152 = load i8* %ch14
  %153 = icmp eq i8 %152, 41
  br i1 %153, label %if_then113, label %if_end114

if_then113:                                       ; preds = %if_block112
  %154 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %155 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %154, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %155)
  %156 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %156, i32 31)
  ret void

if_end114:                                        ; preds = %dumy_block115, %if_block112
  br label %if_block116

dumy_block115:                                    ; No predecessors!
  br label %if_end114

if_block116:                                      ; preds = %if_end114
  %157 = load i8* %ch14
  %158 = icmp eq i8 %157, 59
  br i1 %158, label %if_then117, label %if_end118

if_then117:                                       ; preds = %if_block116
  %159 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %160 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %159, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %160)
  %161 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %161, i32 33)
  ret void

if_end118:                                        ; preds = %dumy_block119, %if_block116
  br label %if_block120

dumy_block119:                                    ; No predecessors!
  br label %if_end118

if_block120:                                      ; preds = %if_end118
  %162 = load i8* %ch14
  %163 = icmp eq i8 %162, 44
  br i1 %163, label %if_then121, label %if_end122

if_then121:                                       ; preds = %if_block120
  %164 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %165 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %164, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %165)
  %166 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %166, i32 34)
  ret void

if_end122:                                        ; preds = %dumy_block123, %if_block120
  br label %if_block124

dumy_block123:                                    ; No predecessors!
  br label %if_end122

if_block124:                                      ; preds = %if_end122
  %167 = load i8* %ch14
  %168 = icmp eq i8 %167, 96
  br i1 %168, label %if_then125, label %if_end126

if_then125:                                       ; preds = %if_block124
  %169 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %170 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %169, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %170)
  %171 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %171, i32 36)
  ret void

if_end126:                                        ; preds = %dumy_block127, %if_block124
  br label %if_block128

dumy_block127:                                    ; No predecessors!
  br label %if_end126

if_block128:                                      ; preds = %if_end126
  %172 = load i8* %ch14
  %173 = icmp eq i8 %172, 58
  br i1 %173, label %cond.true131, label %cond.false132

if_then129:                                       ; preds = %cond.end133
  %174 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %175 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %174, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %175)
  %176 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %176, i32 32)
  ret void

if_end130:                                        ; preds = %dumy_block135, %cond.end133
  br label %if_block136

cond.true131:                                     ; preds = %if_block128
  %177 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %178 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %177)
  %179 = call i1 @isOpChar(i8 %178)
  %180 = xor i1 true, %179
  br label %cond.end133

cond.false132:                                    ; preds = %if_block128
  br label %cond.end133

cond.end133:                                      ; preds = %cond.false132, %cond.true131
  %cond.res134 = phi i1 [ %180, %cond.true131 ], [ false, %cond.false132 ]
  br i1 %cond.res134, label %if_then129, label %if_end130

dumy_block135:                                    ; No predecessors!
  br label %if_end130

if_block136:                                      ; preds = %if_end130
  %181 = load i8* %ch14
  %182 = icmp eq i8 %181, 61
  br i1 %182, label %cond.true139, label %cond.false140

if_then137:                                       ; preds = %cond.end141
  %183 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %184 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %183, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %184)
  %185 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %185, i32 37)
  ret void

if_end138:                                        ; preds = %dumy_block143, %cond.end141
  br label %if_block144

cond.true139:                                     ; preds = %if_block136
  %186 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %187 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %186)
  %188 = call i1 @isOpChar(i8 %187)
  %189 = xor i1 true, %188
  br label %cond.end141

cond.false140:                                    ; preds = %if_block136
  br label %cond.end141

cond.end141:                                      ; preds = %cond.false140, %cond.true139
  %cond.res142 = phi i1 [ %189, %cond.true139 ], [ false, %cond.false140 ]
  br i1 %cond.res142, label %if_then137, label %if_end138

dumy_block143:                                    ; No predecessors!
  br label %if_end138

if_block144:                                      ; preds = %if_end138
  %190 = load i8* %ch14
  %191 = call i1 @isOpCharDot(i8 %190)
  br i1 %191, label %if_then145, label %if_end146

if_then145:                                       ; preds = %if_block144
  br label %if_block147

if_end146:                                        ; preds = %if_end149, %if_block144
  br label %if_block151

if_block147:                                      ; preds = %if_then145
  %192 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %193 = call i1 @parseOperator(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %192)
  br i1 %193, label %if_then148, label %if_end149

if_then148:                                       ; preds = %if_block147
  %194 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %194, i32 39)
  ret void

if_end149:                                        ; preds = %dumy_block150, %if_block147
  br label %if_end146

dumy_block150:                                    ; No predecessors!
  br label %if_end149

if_block151:                                      ; preds = %if_end146
  %195 = load i8* %ch14
  %196 = icmp eq i8 %195, 46
  br i1 %196, label %cond.true154, label %cond.false155

if_then152:                                       ; preds = %cond.end156
  %197 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %198 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %197, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %198)
  %199 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %199, i32 35)
  ret void

if_end153:                                        ; preds = %dumy_block158, %cond.end156
  br label %if_block159

cond.true154:                                     ; preds = %if_block151
  %200 = load i8* %ch215
  %201 = call i1 @isDigit(i8 %200)
  %202 = xor i1 true, %201
  br label %cond.end156

cond.false155:                                    ; preds = %if_block151
  br label %cond.end156

cond.end156:                                      ; preds = %cond.false155, %cond.true154
  %cond.res157 = phi i1 [ %202, %cond.true154 ], [ false, %cond.false155 ]
  br i1 %cond.res157, label %if_then152, label %if_end153

dumy_block158:                                    ; No predecessors!
  br label %if_end153

if_block159:                                      ; preds = %if_end153
  %203 = load i8* %ch14
  %204 = call i1 @isAlpha(i8 %203)
  br i1 %204, label %cond.true162, label %cond.false163

if_then160:                                       ; preds = %cond.end164
  %205 = load %TokenType** %_result.addr
  %206 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  call void @parseIdentifer(%TokenType* %205, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %206)
  ret void

if_end161:                                        ; preds = %dumy_block166, %cond.end164
  br label %if_block167

cond.true162:                                     ; preds = %if_block159
  br label %cond.end164

cond.false163:                                    ; preds = %if_block159
  %207 = load i8* %ch14
  %208 = icmp eq i8 %207, 95
  br label %cond.end164

cond.end164:                                      ; preds = %cond.false163, %cond.true162
  %cond.res165 = phi i1 [ true, %cond.true162 ], [ %208, %cond.false163 ]
  br i1 %cond.res165, label %if_then160, label %if_end161

dumy_block166:                                    ; No predecessors!
  br label %if_end161

if_block167:                                      ; preds = %if_end161
  %209 = load i8* %ch14
  %210 = call i1 @isDigit(i8 %209)
  br i1 %210, label %cond.true170, label %cond.false171

if_then168:                                       ; preds = %cond.end172
  %211 = load %TokenType** %_result.addr
  %212 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  call void @parseNumeric(%TokenType* %211, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %212)
  ret void

if_end169:                                        ; preds = %dumy_block174, %cond.end172
  %213 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  store [27 x i8] c"Invalid character found: '\00", [27 x i8]* %const.bytes176
  %214 = getelementptr inbounds [27 x i8]* %const.bytes176, i32 0, i32 0
  %215 = getelementptr inbounds [27 x i8]* %const.bytes176, i32 0, i32 26
  %216 = getelementptr inbounds %StringRef* %const.struct177, i32 0, i32 0
  %217 = getelementptr inbounds %StringRef* %const.struct177, i32 0, i32 1
  store i8* %214, i8** %216
  store i8* %215, i8** %217
  %218 = load %StringRef* %const.struct177
  %219 = load i8* %ch14
  store [4 x i8] c"' (\00", [4 x i8]* %const.bytes178
  %220 = getelementptr inbounds [4 x i8]* %const.bytes178, i32 0, i32 0
  %221 = getelementptr inbounds [4 x i8]* %const.bytes178, i32 0, i32 3
  %222 = getelementptr inbounds %StringRef* %const.struct179, i32 0, i32 0
  %223 = getelementptr inbounds %StringRef* %const.struct179, i32 0, i32 1
  store i8* %220, i8** %222
  store i8* %221, i8** %223
  %224 = load %StringRef* %const.struct179
  %225 = load i8* %ch14
  call void @_ass_32_8z(i32* %tmp.v180, i8 %225)
  %226 = load i32* %tmp.v180
  call void @toString288(%String* %"$tmpC175", %StringRef %218, i8 %219, %StringRef %224, i32 %226, i8 41)
  call void @reportError256(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %213, %String* %"$tmpC175")
  call void @dtor166(%String* %"$tmpC175")
  %227 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %228 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %227, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %228)
  %229 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %229, i32 0)
  ret void

cond.true170:                                     ; preds = %if_block167
  br label %cond.end172

cond.false171:                                    ; preds = %if_block167
  %230 = load i8* %ch14
  %231 = icmp eq i8 %230, 46
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false171, %cond.true170
  %cond.res173 = phi i1 [ true, %cond.true170 ], [ %231, %cond.false171 ]
  br i1 %cond.res173, label %if_then168, label %if_end169

dumy_block174:                                    ; No predecessors!
  br label %if_end169

dumy_block181:                                    ; No predecessors!
  br label %while_step
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==230"(i32 %x, i32 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn231(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn232(i32 %4, i32 %5)
  %7 = icmp eq i32 %3, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i32 @cmn231(i32 %x, i32 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  ret i32 %1
}

; Function Attrs: alwaysinline nounwind
define internal i32 @cmn232(i32 %x, i32 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  store i32 %1, i32* %tmp.v
  %2 = load i32* %tmp.v
  ret i32 %2
}

; Function Attrs: alwaysinline nounwind
define internal i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r) #2 {
  %r.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %2 = call i8 @front233(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  ret i8 %2
}

; Function Attrs: inlinehint nounwind
define internal i8 @front233(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %s) #3 {
  %s.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %s, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %s.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  %3 = call i8 @front234(%"RangeWithLookahead[_CharSource]"* %2)
  ret i8 %3
}

; Function Attrs: inlinehint nounwind
define internal i8 @front234(%"RangeWithLookahead[_CharSource]"* %s) #3 {
  %s.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %s, %"RangeWithLookahead[_CharSource]"** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"** %s.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 1
  %3 = call i8* @front235(%"Vector[Char/rtct]"* %2)
  %4 = load i8* %3
  ret i8 %4
}

; Function Attrs: alwaysinline nounwind
define internal i8* @front235(%"Vector[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 0
  %3 = call i8* @value(%"RawPtr[Char/rtct]"* %2)
  ret i8* %3
}

; Function Attrs: inlinehint nounwind
define internal i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s) #3 {
  %s.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2, i32 0, i32 0
  %4 = call i8 @peek(%"RangeWithLookahead[_CharSource]"* %3, i32 1)
  ret i8 %4
}

; Function Attrs: inlinehint nounwind
define internal i8 @peek(%"RangeWithLookahead[_CharSource]"* %s, i32 %n) #3 {
  %s.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %s, %"RangeWithLookahead[_CharSource]"** %s.addr
  %n.addr = alloca i32
  store i32 %n, i32* %n.addr
  %"$tmpForRef" = alloca i8
  %tmp.v = alloca i64
  %tmp.v1 = alloca i8
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load i32* %n.addr
  %2 = load %"RangeWithLookahead[_CharSource]"** %s.addr
  %3 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %2, i32 0, i32 1
  %4 = call i64 @size175(%"Vector[Char/rtct]"* %3)
  %5 = call i1 @">="(i32 %1, i64 %4)
  br i1 %5, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %6 = load %"RangeWithLookahead[_CharSource]"** %s.addr
  %7 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %6, i32 0, i32 1
  %8 = load %"RangeWithLookahead[_CharSource]"** %s.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %8, i32 0, i32 0
  %10 = call i8 @"post_++184"(%_CharSource* %9)
  store i8 %10, i8* %"$tmpForRef"
  call void @"+="(%"Vector[Char/rtct]"* %7, i8* %"$tmpForRef")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  br label %if_block

cond.true:                                        ; preds = %while_block
  %11 = load %"RangeWithLookahead[_CharSource]"** %s.addr
  %12 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %11, i32 0, i32 0
  %13 = call i1 @"pre_!!"(%_CharSource* %12)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %13, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end

if_block:                                         ; preds = %while_end
  %14 = load i32* %n.addr
  %15 = load %"RangeWithLookahead[_CharSource]"** %s.addr
  %16 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %15, i32 0, i32 1
  %17 = call i64 @size175(%"Vector[Char/rtct]"* %16)
  %18 = call i1 @"<238"(i32 %14, i64 %17)
  br i1 %18, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %19 = load %"RangeWithLookahead[_CharSource]"** %s.addr
  %20 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %19, i32 0, i32 1
  %21 = load i32* %n.addr
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %tmp.v
  %23 = load i64* %tmp.v
  %24 = call i8* @"()239"(%"Vector[Char/rtct]"* %20, i64 %23)
  %25 = load i8* %24
  ret i8 %25

if_else:                                          ; preds = %if_block
  store i8 0, i8* %tmp.v1
  %26 = load i8* %tmp.v1
  ret i8 %26

if_end:                                           ; preds = %dumy_block2, %dumy_block
  unreachable

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block2:                                      ; No predecessors!
  br label %if_end
}

; Function Attrs: alwaysinline nounwind
define internal i1 @">="(i32 %x, i64 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn236(i32 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i32* %x.addr
  %6 = call i64 @cmn237(i64 %4, i32 %5)
  %7 = icmp sge i64 %3, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @cmn236(i32 %x, i64 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = zext i32 %1 to i64
  store i64 %2, i64* %tmp.v
  %3 = load i64* %tmp.v
  ret i64 %3
}

; Function Attrs: alwaysinline nounwind
define internal i64 @cmn237(i64 %x, i32 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"<238"(i32 %x, i64 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn236(i32 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i32* %x.addr
  %6 = call i64 @cmn237(i64 %4, i32 %5)
  %7 = icmp slt i64 %3, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8* @"()239"(%"Vector[Char/rtct]"* %"$this", i64 %index) #2 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 0
  %3 = load i64* %index.addr
  call void @advance176(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %2, i64 %3)
  %4 = call i8* @value(%"RawPtr[Char/rtct]"* %"$tmpC")
  ret i8* %4
}

; Function Attrs: inlinehint nounwind
define internal void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %s) #3 {
  %s.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %s, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %s.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %s.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  %3 = call i8 @"pre_*241"(%"RangeWithLookahead[_CharSource]"* %2)
  %4 = icmp eq i8 %3, 10
  br i1 %4, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %s.addr
  %6 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5, i32 0, i32 1
  %7 = load %Location** %6
  call void @addLines(%Location* %7, i32 1)
  br label %if_end

if_else:                                          ; preds = %if_block
  %8 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %s.addr
  %9 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8, i32 0, i32 1
  %10 = load %Location** %9
  call void @addColumns(%Location* %10, i32 1)
  br label %if_end

if_end:                                           ; preds = %if_else, %if_then
  %11 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %s.addr
  %12 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %11, i32 0, i32 0
  call void @popFront242(%"RangeWithLookahead[_CharSource]"* %12)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i8 @"pre_*241"(%"RangeWithLookahead[_CharSource]"* %r) #2 {
  %r.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %r, %"RangeWithLookahead[_CharSource]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"** %r.addr
  %2 = call i8 @front234(%"RangeWithLookahead[_CharSource]"* %1)
  ret i8 %2
}

; Function Attrs: inlinehint nounwind
define internal void @addLines(%Location* %l, i32 %count) #3 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  %count.addr = alloca i32
  store i32 %count, i32* %count.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %l.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 2
  %3 = getelementptr inbounds %LineCol* %2, i32 0, i32 0
  %4 = load i32* %3
  %5 = load i32* %count.addr
  %6 = call i32 @"+15"(i32 %4, i32 %5)
  %7 = load %Location** %l.addr
  %8 = getelementptr inbounds %Location* %7, i32 0, i32 2
  %9 = getelementptr inbounds %LineCol* %8, i32 0, i32 0
  store i32 %6, i32* %9
  %10 = load %Location** %l.addr
  %11 = getelementptr inbounds %Location* %10, i32 0, i32 2
  %12 = getelementptr inbounds %LineCol* %11, i32 0, i32 1
  store i32 1, i32* %12
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @addColumns(%Location* %l, i32 %count) #3 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  %count.addr = alloca i32
  store i32 %count, i32* %count.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %l.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 2
  %3 = getelementptr inbounds %LineCol* %2, i32 0, i32 1
  %4 = load i32* %3
  %5 = load i32* %count.addr
  %6 = call i32 @"+15"(i32 %4, i32 %5)
  %7 = load %Location** %l.addr
  %8 = getelementptr inbounds %Location* %7, i32 0, i32 2
  %9 = getelementptr inbounds %LineCol* %8, i32 0, i32 1
  store i32 %6, i32* %9
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popFront242(%"RangeWithLookahead[_CharSource]"* %s) #3 {
  %s.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %s, %"RangeWithLookahead[_CharSource]"** %s.addr
  %"$tmpForRef" = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"** %s.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 1
  call void @remove(%"Vector[Char/rtct]"* %2, i64 0)
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load %"RangeWithLookahead[_CharSource]"** %s.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %3, i32 0, i32 1
  %5 = call i1 @isEmpty226(%"Vector[Char/rtct]"* %4)
  br i1 %5, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %6 = load %"RangeWithLookahead[_CharSource]"** %s.addr
  %7 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %6, i32 0, i32 1
  %8 = load %"RangeWithLookahead[_CharSource]"** %s.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %8, i32 0, i32 0
  %10 = call i8 @"post_++184"(%_CharSource* %9)
  store i8 %10, i8* %"$tmpForRef"
  call void @"+="(%"Vector[Char/rtct]"* %7, i8* %"$tmpForRef")
  br label %if_end

if_end:                                           ; preds = %if_then, %cond.end
  ret void

cond.true:                                        ; preds = %if_block
  %11 = load %"RangeWithLookahead[_CharSource]"** %s.addr
  %12 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %11, i32 0, i32 0
  %13 = call i1 @"pre_!!"(%_CharSource* %12)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %13, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @remove(%"Vector[Char/rtct]"* %"$this", i64 %index) #3 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %r = alloca %"ContiguousMemoryRange[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  call void @all243(%"ContiguousMemoryRange[Char/rtct]"* %r, %"Vector[Char/rtct]"* %1)
  %2 = load i64* %index.addr
  call void @popFront244(%"ContiguousMemoryRange[Char/rtct]"* %r, i64 %2)
  %3 = load %"Vector[Char/rtct]"** %"$this.addr"
  %4 = call i64 @size175(%"Vector[Char/rtct]"* %3)
  %5 = load i64* %index.addr
  %6 = call i64 @-44(i64 %4, i64 %5)
  %7 = call i64 @-246(i64 %6, i32 1)
  call void @popBack245(%"ContiguousMemoryRange[Char/rtct]"* %r, i64 %7)
  %8 = load %"Vector[Char/rtct]"** %"$this.addr"
  %9 = load %"ContiguousMemoryRange[Char/rtct]"* %r
  call void @remove247(%"Vector[Char/rtct]"* %8, %"ContiguousMemoryRange[Char/rtct]" %9)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @all243(%"ContiguousMemoryRange[Char/rtct]"* sret %_result, %"Vector[Char/rtct]"* %"$this") #2 {
  %_result.addr = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %_result, %"ContiguousMemoryRange[Char/rtct]"** %_result.addr
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %_result.addr
  %2 = load %"Vector[Char/rtct]"** %"$this.addr"
  %3 = getelementptr inbounds %"Vector[Char/rtct]"* %2, i32 0, i32 0
  %4 = load %"RawPtr[Char/rtct]"* %3
  %5 = load %"Vector[Char/rtct]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[Char/rtct]"* %5, i32 0, i32 1
  %7 = load %"RawPtr[Char/rtct]"* %6
  call void @ctor162(%"ContiguousMemoryRange[Char/rtct]"* %1, %"RawPtr[Char/rtct]" %4, %"RawPtr[Char/rtct]" %7)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront244(%"ContiguousMemoryRange[Char/rtct]"* %"$this", i64 %n) #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %"$this", %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %3, i32 0, i32 0
  %5 = load i64* %n.addr
  store i64 %5, i64* %tmp.v
  %6 = load i64* %tmp.v
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %4, i64 %6)
  %7 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=153"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %7)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack245(%"ContiguousMemoryRange[Char/rtct]"* %"$this", i64 %n) #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %"$this", %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %3, i32 0, i32 1
  %5 = load i64* %n.addr
  store i64 %5, i64* %tmp.v
  %6 = load i64* %tmp.v
  %7 = sub i64 0, %6
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %4, i64 %7)
  %8 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=153"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i64 @-246(i64 %x, i32 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i32* %y.addr
  %3 = call i64 @cmn68(i64 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn69(i32 %4, i64 %5)
  %7 = call i64 @_SizeType_opMinus(i64 %3, i64 %6)
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal void @remove247(%"Vector[Char/rtct]"* %"$this", %"ContiguousMemoryRange[Char/rtct]" %range) #3 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %range.addr = alloca %"ContiguousMemoryRange[Char/rtct]"
  store %"ContiguousMemoryRange[Char/rtct]" %range, %"ContiguousMemoryRange[Char/rtct]"* %range.addr
  %rBegin = alloca %"RawPtr[Char/rtct]"
  %rEnd = alloca %"RawPtr[Char/rtct]"
  %"$rangeVar" = alloca %"ContiguousMemoryRange[Char/rtct]"
  %el = alloca i8*
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC5" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  call void @frontPtr(%"RawPtr[Char/rtct]"* %rBegin, %"ContiguousMemoryRange[Char/rtct]"* %range.addr)
  call void @backPtr(%"RawPtr[Char/rtct]"* %rEnd, %"ContiguousMemoryRange[Char/rtct]"* %range.addr)
  call void @ctor248(%"ContiguousMemoryRange[Char/rtct]"* %"$rangeVar", %"ContiguousMemoryRange[Char/rtct]"* %range.addr)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = call i1 @isEmpty158(%"ContiguousMemoryRange[Char/rtct]"* %"$rangeVar")
  %2 = xor i1 true, %1
  br i1 %2, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %3 = call i8* @front160(%"ContiguousMemoryRange[Char/rtct]"* %"$rangeVar")
  store i8* %3, i8** %el
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @popFront161(%"ContiguousMemoryRange[Char/rtct]"* %"$rangeVar")
  br label %while_block

while_end:                                        ; preds = %while_block
  br label %while_block1

while_block1:                                     ; preds = %while_step3, %while_end
  %4 = load %"Vector[Char/rtct]"** %"$this.addr"
  %5 = getelementptr inbounds %"Vector[Char/rtct]"* %4, i32 0, i32 1
  %6 = load %"RawPtr[Char/rtct]"* %5
  %7 = call i1 @"==155"(%"RawPtr[Char/rtct]"* %rEnd, %"RawPtr[Char/rtct]" %6)
  %8 = xor i1 true, %7
  br i1 %8, label %while_body2, label %while_end4

while_body2:                                      ; preds = %while_block1
  %9 = call i8* @value(%"RawPtr[Char/rtct]"* %rEnd)
  %10 = load i8* %9
  %11 = call i8* @value(%"RawPtr[Char/rtct]"* %rBegin)
  store i8 %10, i8* %11
  %12 = call i8* @value(%"RawPtr[Char/rtct]"* %rEnd)
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %rBegin)
  %13 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=153"(%"RawPtr[Char/rtct]"* %rBegin, %"RawPtr[Char/rtct]" %13)
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC5", %"RawPtr[Char/rtct]"* %rEnd)
  %14 = load %"RawPtr[Char/rtct]"* %"$tmpC5"
  call void @"=153"(%"RawPtr[Char/rtct]"* %rEnd, %"RawPtr[Char/rtct]" %14)
  br label %while_step3

while_step3:                                      ; preds = %while_body2
  br label %while_block1

while_end4:                                       ; preds = %while_block1
  %15 = load %"Vector[Char/rtct]"** %"$this.addr"
  %16 = getelementptr inbounds %"Vector[Char/rtct]"* %15, i32 0, i32 1
  %17 = load %"RawPtr[Char/rtct]"* %rBegin
  call void @"=153"(%"RawPtr[Char/rtct]"* %16, %"RawPtr[Char/rtct]" %17)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @frontPtr(%"RawPtr[Char/rtct]"* sret %_result, %"ContiguousMemoryRange[Char/rtct]"* %"$this") #2 {
  %_result.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %_result, %"RawPtr[Char/rtct]"** %_result.addr
  %"$this.addr" = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %"$this", %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %_result.addr
  %2 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %3 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %2, i32 0, i32 0
  call void @ctor146(%"RawPtr[Char/rtct]"* %1, %"RawPtr[Char/rtct]"* %3)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @backPtr(%"RawPtr[Char/rtct]"* sret %_result, %"ContiguousMemoryRange[Char/rtct]"* %"$this") #2 {
  %_result.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %_result, %"RawPtr[Char/rtct]"** %_result.addr
  %"$this.addr" = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %"$this", %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %_result.addr
  %2 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %3 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %2, i32 0, i32 1
  call void @ctor146(%"RawPtr[Char/rtct]"* %1, %"RawPtr[Char/rtct]"* %3)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor248(%"ContiguousMemoryRange[Char/rtct]"* %"$this", %"ContiguousMemoryRange[Char/rtct]"* %other) #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %"$this", %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %other.addr = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %other, %"ContiguousMemoryRange[Char/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Char/rtct]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %3, i32 0, i32 0
  call void @ctor146(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]"* %4)
  %5 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %6 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %5, i32 0, i32 1
  %7 = load %"ContiguousMemoryRange[Char/rtct]"** %other.addr
  %8 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %7, i32 0, i32 1
  call void @ctor146(%"RawPtr[Char/rtct]"* %6, %"RawPtr[Char/rtct]"* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advanceIf(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"$lambdaEnclosure" %pred) #3 {
  %range.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %pred.addr = alloca %"$lambdaEnclosure"
  store %"$lambdaEnclosure" %pred, %"$lambdaEnclosure"* %pred.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %2 = call i1 @isEmpty224(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  %3 = xor i1 true, %2
  br i1 %3, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %4 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  ret void

cond.true:                                        ; preds = %while_block
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %6 = call i8 @front233(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  %7 = call i1 @"()249"(%"$lambdaEnclosure"* %pred.addr, i8 %6)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %7, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"()249"(%"$lambdaEnclosure"* %"$this", i8 %c) #2 {
  %"$this.addr" = alloca %"$lambdaEnclosure"*
  store %"$lambdaEnclosure"* %"$this", %"$lambdaEnclosure"** %"$this.addr"
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  %2 = icmp ne i8 %1, 10
  ret i1 %2
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor250(%"$lambdaEnclosure"* %"$this") #2 {
  %"$this.addr" = alloca %"$lambdaEnclosure"*
  store %"$lambdaEnclosure"* %"$this", %"$lambdaEnclosure"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"pre_!!251"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r) #2 {
  %r.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %2 = call i1 @isEmpty224(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  %3 = xor i1 true, %2
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal void @stepOver(%Location* %l) #3 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %l.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 1
  %3 = load %Location** %l.addr
  %4 = getelementptr inbounds %Location* %3, i32 0, i32 2
  call void @"=192"(%LineCol* %2, %LineCol* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @clear(%String* %"$this") #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %tmp.v = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  %2 = load %String** %"$this.addr"
  %3 = getelementptr inbounds %String* %2, i32 0, i32 0
  %4 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %3)
  %5 = load %String** %"$this.addr"
  %6 = getelementptr inbounds %String* %5, i32 0, i32 1
  %7 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %6)
  call void @ctor100(%StringRef* %tmp.v, i8* %4, i8* %7)
  %8 = load %StringRef* %tmp.v
  call void @remove252(%String* %1, %StringRef %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @remove252(%String* %"$this", %StringRef %range) #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %range.addr = alloca %StringRef
  store %StringRef %range, %StringRef* %range.addr
  %rSize = alloca i64
  %rBegin = alloca %"RawPtr[Char/rtct]"
  %rEnd = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC1" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = call i64 @size(%StringRef* %range.addr)
  store i64 %1, i64* %rSize
  %2 = load %StringRef* %range.addr
  call void @_frontPtr(%"RawPtr[Char/rtct]"* %rBegin, %StringRef %2)
  %3 = load i64* %rSize
  store i64 %3, i64* %tmp.v
  %4 = load i64* %tmp.v
  call void @advance(%"RawPtr[Char/rtct]"* %rEnd, %"RawPtr[Char/rtct]"* %rBegin, i64 %4)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %5 = load %String** %"$this.addr"
  %6 = getelementptr inbounds %String* %5, i32 0, i32 1
  %7 = load %"RawPtr[Char/rtct]"* %6
  %8 = call i1 @"==155"(%"RawPtr[Char/rtct]"* %rEnd, %"RawPtr[Char/rtct]" %7)
  %9 = xor i1 true, %8
  br i1 %9, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %10 = call i8* @value(%"RawPtr[Char/rtct]"* %rBegin)
  %11 = call i8* @value(%"RawPtr[Char/rtct]"* %rEnd)
  %12 = load i8* %11
  %13 = call i8* @value(%"RawPtr[Char/rtct]"* %rBegin)
  store i8 %12, i8* %13
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %rBegin)
  %14 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=153"(%"RawPtr[Char/rtct]"* %rBegin, %"RawPtr[Char/rtct]" %14)
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC1", %"RawPtr[Char/rtct]"* %rEnd)
  %15 = load %"RawPtr[Char/rtct]"* %"$tmpC1"
  call void @"=153"(%"RawPtr[Char/rtct]"* %rEnd, %"RawPtr[Char/rtct]" %15)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %16 = load %String** %"$this.addr"
  %17 = getelementptr inbounds %String* %16, i32 0, i32 1
  %18 = load %"RawPtr[Char/rtct]"* %rBegin
  call void @"=153"(%"RawPtr[Char/rtct]"* %17, %"RawPtr[Char/rtct]" %18)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advanceIf253(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"$lambdaEnclosure.0" %pred) #3 {
  %range.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %pred.addr = alloca %"$lambdaEnclosure.0"
  store %"$lambdaEnclosure.0" %pred, %"$lambdaEnclosure.0"* %pred.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %2 = call i1 @isEmpty224(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  %3 = xor i1 true, %2
  br i1 %3, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %4 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  ret void

cond.true:                                        ; preds = %while_block
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %6 = call i8 @front233(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  %7 = call i1 @"()254"(%"$lambdaEnclosure.0"* %pred.addr, i8 %6)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %7, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"()254"(%"$lambdaEnclosure.0"* %"$this", i8 %c) #2 {
  %"$this.addr" = alloca %"$lambdaEnclosure.0"*
  store %"$lambdaEnclosure.0"* %"$this", %"$lambdaEnclosure.0"** %"$this.addr"
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  %2 = icmp eq i8 %1, 32
  ret i1 %2
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor255(%"$lambdaEnclosure.0"* %"$this") #2 {
  %"$this.addr" = alloca %"$lambdaEnclosure.0"*
  store %"$lambdaEnclosure.0"* %"$this", %"$lambdaEnclosure.0"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @reportError256(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %String* %msg) #3 {
  %s.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %msg.addr = alloca %String*
  store %String* %msg, %String** %msg.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 5
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %4 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4, i32 0, i32 1
  %6 = load %Location** %5
  %7 = load %Location* %6
  %8 = load %String** %msg.addr
  call void @reportError(%ExternalErrorReporter* %2, %Location %7, %String* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @toString257(%String* sret %_result, %StringRef %a1) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %a1.addr = alloca %StringRef
  store %StringRef %a1, %StringRef* %a1.addr
  %s = alloca %StringOutputStream
  br label %code

code:                                             ; preds = %0
  call void @ctor142(%StringOutputStream* %s)
  %1 = call %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %a1.addr)
  %2 = load %String** %_result.addr
  %3 = getelementptr inbounds %StringOutputStream* %s, i32 0, i32 0
  call void @ctor163(%String* %2, %String* %3)
  call void @dtor165(%StringOutputStream* %s)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor165(%StringOutputStream* %s)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advanceIf258(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"$lambdaEnclosure.1" %pred) #3 {
  %range.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %pred.addr = alloca %"$lambdaEnclosure.1"
  store %"$lambdaEnclosure.1" %pred, %"$lambdaEnclosure.1"* %pred.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %2 = call i1 @isEmpty224(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  %3 = xor i1 true, %2
  br i1 %3, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %4 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  ret void

cond.true:                                        ; preds = %while_block
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %6 = call i8 @front233(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  %7 = call i1 @"()259"(%"$lambdaEnclosure.1"* %pred.addr, i8 %6)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %7, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"()259"(%"$lambdaEnclosure.1"* %"$this", i8 %c) #2 {
  %"$this.addr" = alloca %"$lambdaEnclosure.1"*
  store %"$lambdaEnclosure.1"* %"$this", %"$lambdaEnclosure.1"** %"$this.addr"
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  %2 = icmp eq i8 %1, 9
  ret i1 %2
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor260(%"$lambdaEnclosure.1"* %"$this") #2 {
  %"$this.addr" = alloca %"$lambdaEnclosure.1"*
  store %"$lambdaEnclosure.1"* %"$this", %"$lambdaEnclosure.1"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advanceIf261(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"$lambdaEnclosure.2" %pred) #3 {
  %range.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %pred.addr = alloca %"$lambdaEnclosure.2"
  store %"$lambdaEnclosure.2" %pred, %"$lambdaEnclosure.2"* %pred.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %2 = call i1 @isEmpty224(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  %3 = xor i1 true, %2
  br i1 %3, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %4 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  ret void

cond.true:                                        ; preds = %while_block
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %6 = call i8 @front233(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  %7 = call i1 @"()262"(%"$lambdaEnclosure.2"* %pred.addr, i8 %6)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %7, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"()262"(%"$lambdaEnclosure.2"* %"$this", i8 %c) #2 {
  %"$this.addr" = alloca %"$lambdaEnclosure.2"*
  store %"$lambdaEnclosure.2"* %"$this", %"$lambdaEnclosure.2"** %"$this.addr"
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  %2 = icmp ne i8 %1, 10
  ret i1 %2
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor263(%"$lambdaEnclosure.2"* %"$this") #2 {
  %"$this.addr" = alloca %"$lambdaEnclosure.2"*
  store %"$lambdaEnclosure.2"* %"$this", %"$lambdaEnclosure.2"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advance264(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, i64 %n) #3 {
  %range.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load i64* %n.addr
  %2 = call i1 @">"(i64 %1, i32 0)
  br i1 %2, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %3 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %3)
  br label %while_step

while_step:                                       ; preds = %while_body
  %4 = call i64 @post_--63(i64* %n.addr)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @">"(i64 %x, i32 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i32* %y.addr
  %3 = call i64 @cmn68(i64 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn69(i32 %4, i64 %5)
  %7 = icmp sgt i64 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i8 @"pre_++265"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r) #3 {
  %r.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  %2 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %3 = call i8 @front233(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  ret i8 %3
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"pre_!"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r) #2 {
  %r.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %2 = call i1 @isEmpty224(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  ret i1 %2
}

; Function Attrs: inlinehint nounwind
define internal void @ctorFromCt(%String* %"$this") #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %"$tmpForRef" = alloca %StringRef
  %const.bytes = alloca [33 x i8]
  %const.struct = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  store [33 x i8] c"End of file found inside comment\00", [33 x i8]* %const.bytes
  %2 = getelementptr inbounds [33 x i8]* %const.bytes, i32 0, i32 0
  %3 = getelementptr inbounds [33 x i8]* %const.bytes, i32 0, i32 32
  %4 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %5 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %2, i8** %4
  store i8* %3, i8** %5
  %6 = load %StringRef* %const.struct
  store %StringRef %6, %StringRef* %"$tmpForRef"
  call void @ctor266(%String* %1, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor266(%String* %"$this", %StringRef* %other) #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %other.addr = alloca %StringRef*
  store %StringRef* %other, %StringRef** %other.addr
  %size = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %other.addr
  %2 = call i64 @size(%StringRef* %1)
  store i64 %2, i64* %size
  %3 = load %String** %"$this.addr"
  %4 = load i64* %size
  call void @ctor164(%String* %3, i64 %4)
  %5 = load %String** %"$this.addr"
  %6 = getelementptr inbounds %String* %5, i32 0, i32 0
  %7 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %6)
  %8 = load %StringRef** %other.addr
  %9 = getelementptr inbounds %StringRef* %8, i32 0, i32 0
  %10 = load i8** %9
  %11 = load i64* %size
  call void @_spr_memcpy(i8* %7, i8* %10, i64 %11)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseString(%TokenType* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, i8 %endChar) #3 {
  %_result.addr = alloca %TokenType*
  store %TokenType* %_result, %TokenType** %_result.addr
  %s.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %endChar.addr = alloca i8
  store i8 %endChar, i8* %endChar.addr
  %"$tmpForRef" = alloca %String
  %tmp.v = alloca %String
  %"$tmpForRef7" = alloca %String
  %tmp.v8 = alloca %String
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %4 = call i1 @hasLessThan(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 1)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  call void @ctorFromCt268(%String* %tmp.v)
  %6 = load %String* %tmp.v
  store %String %6, %String* %"$tmpForRef"
  call void @reportError256(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %5, %String* %"$tmpForRef")
  call void @dtor166(%String* %tmp.v)
  %7 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %7, i32 0)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %8 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %9 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %8, i32 0, i32 1
  %10 = call i1 @"pre_!!251"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %9)
  br i1 %10, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  br label %if_block1

while_step:                                       ; preds = %if_end3
  br label %while_block

while_end:                                        ; preds = %cond.end
  br label %if_block4

cond.true:                                        ; preds = %while_block
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %12 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11, i32 0, i32 1
  %13 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %12)
  %14 = load i8* %endChar.addr
  %15 = icmp ne i8 %13, %14
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %15, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end

if_block1:                                        ; preds = %while_body
  %16 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %17 = call i1 @checkEscapeChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %16)
  %18 = xor i1 true, %17
  br i1 %18, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  %19 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  call void @advanceAndCapture1(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %19)
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  br label %while_step

if_block4:                                        ; preds = %while_end
  %20 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %21 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %20, i32 0, i32 1
  %22 = call i1 @"pre_!"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %21)
  br i1 %22, label %if_then5, label %if_end6

if_then5:                                         ; preds = %if_block4
  %23 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  call void @ctorFromCt273(%String* %tmp.v8)
  %24 = load %String* %tmp.v8
  store %String %24, %String* %"$tmpForRef7"
  call void @reportError256(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %23, %String* %"$tmpForRef7")
  call void @dtor166(%String* %tmp.v8)
  %25 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %25, i32 0)
  ret void

if_end6:                                          ; preds = %dumy_block9, %if_block4
  %26 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %27 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %26, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %27)
  %28 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %28, i32 41)
  ret void

dumy_block9:                                      ; No predecessors!
  br label %if_end6
}

; Function Attrs: inlinehint nounwind
define internal i1 @hasLessThan(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, i32 %n) #3 {
  %s.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %n.addr = alloca i32
  store i32 %n, i32* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2, i32 0, i32 0
  %4 = load i32* %n.addr
  %5 = call i1 @hasLessThan267(%"RangeWithLookahead[_CharSource]"* %3, i32 %4)
  ret i1 %5
}

; Function Attrs: inlinehint nounwind
define internal i1 @hasLessThan267(%"RangeWithLookahead[_CharSource]"* %s, i32 %n) #3 {
  %s.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %s, %"RangeWithLookahead[_CharSource]"** %s.addr
  %n.addr = alloca i32
  store i32 %n, i32* %n.addr
  %"$tmpForRef" = alloca i8
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load i32* %n.addr
  %2 = load %"RangeWithLookahead[_CharSource]"** %s.addr
  %3 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %2, i32 0, i32 1
  %4 = call i64 @size175(%"Vector[Char/rtct]"* %3)
  %5 = call i1 @">="(i32 %1, i64 %4)
  br i1 %5, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %6 = load %"RangeWithLookahead[_CharSource]"** %s.addr
  %7 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %6, i32 0, i32 1
  %8 = load %"RangeWithLookahead[_CharSource]"** %s.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %8, i32 0, i32 0
  %10 = call i8 @"post_++184"(%_CharSource* %9)
  store i8 %10, i8* %"$tmpForRef"
  call void @"+="(%"Vector[Char/rtct]"* %7, i8* %"$tmpForRef")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  %11 = load i32* %n.addr
  %12 = load %"RangeWithLookahead[_CharSource]"** %s.addr
  %13 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %12, i32 0, i32 1
  %14 = call i64 @size175(%"Vector[Char/rtct]"* %13)
  %15 = call i1 @">="(i32 %11, i64 %14)
  ret i1 %15

cond.true:                                        ; preds = %while_block
  %16 = load %"RangeWithLookahead[_CharSource]"** %s.addr
  %17 = getelementptr inbounds %"RangeWithLookahead[_CharSource]"* %16, i32 0, i32 0
  %18 = call i1 @"pre_!!"(%_CharSource* %17)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %18, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end
}

; Function Attrs: inlinehint nounwind
define internal void @ctorFromCt268(%String* %"$this") #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %"$tmpForRef" = alloca %StringRef
  %const.bytes = alloca [40 x i8]
  %const.struct = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  store [40 x i8] c"End of file found inside string literal\00", [40 x i8]* %const.bytes
  %2 = getelementptr inbounds [40 x i8]* %const.bytes, i32 0, i32 0
  %3 = getelementptr inbounds [40 x i8]* %const.bytes, i32 0, i32 39
  %4 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %5 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %2, i8** %4
  store i8* %3, i8** %5
  %6 = load %StringRef* %const.struct
  store %StringRef %6, %StringRef* %"$tmpForRef"
  call void @ctor266(%String* %1, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: noinline nounwind
define i1 @checkEscapeChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s) #4 {
  %s.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %ch = alloca i8
  %"$tmpForRef" = alloca %String
  %tmp.v = alloca %String
  %charVal = alloca i32
  %tmp.v39 = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  store i8 %3, i8* %ch
  br label %if_block

if_block:                                         ; preds = %code
  %4 = load i8* %ch
  %5 = icmp eq i8 %4, 92
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %6 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %7 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %6, i32 0, i32 1
  %8 = call i8 @"pre_++265"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %7)
  store i8 %8, i8* %ch
  br label %if_block1

if_end:                                           ; preds = %dumy_block40, %if_block
  ret i1 false

if_block1:                                        ; preds = %if_then
  %9 = load i8* %ch
  %10 = icmp eq i8 %9, 114
  br i1 %10, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %12 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11, i32 0, i32 2
  %13 = getelementptr inbounds %Token* %12, i32 0, i32 2
  call void @"+=269"(%String* %13, i8 13)
  br label %if_end3

if_else:                                          ; preds = %if_block1
  br label %if_block4

if_end3:                                          ; preds = %if_end7, %if_then2
  %14 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %15 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %14, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %15)
  ret i1 true

if_block4:                                        ; preds = %if_else
  %16 = load i8* %ch
  %17 = icmp eq i8 %16, 110
  br i1 %17, label %if_then5, label %if_else6

if_then5:                                         ; preds = %if_block4
  %18 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %19 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %18, i32 0, i32 2
  %20 = getelementptr inbounds %Token* %19, i32 0, i32 2
  call void @"+=269"(%String* %20, i8 10)
  br label %if_end7

if_else6:                                         ; preds = %if_block4
  br label %if_block8

if_end7:                                          ; preds = %if_end11, %if_then5
  br label %if_end3

if_block8:                                        ; preds = %if_else6
  %21 = load i8* %ch
  %22 = icmp eq i8 %21, 98
  br i1 %22, label %if_then9, label %if_else10

if_then9:                                         ; preds = %if_block8
  %23 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %24 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %23, i32 0, i32 2
  %25 = getelementptr inbounds %Token* %24, i32 0, i32 2
  call void @"+=269"(%String* %25, i8 8)
  br label %if_end11

if_else10:                                        ; preds = %if_block8
  br label %if_block12

if_end11:                                         ; preds = %if_end15, %if_then9
  br label %if_end7

if_block12:                                       ; preds = %if_else10
  %26 = load i8* %ch
  %27 = icmp eq i8 %26, 102
  br i1 %27, label %if_then13, label %if_else14

if_then13:                                        ; preds = %if_block12
  %28 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %29 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %28, i32 0, i32 2
  %30 = getelementptr inbounds %Token* %29, i32 0, i32 2
  call void @"+=269"(%String* %30, i8 12)
  br label %if_end15

if_else14:                                        ; preds = %if_block12
  br label %if_block16

if_end15:                                         ; preds = %if_end19, %if_then13
  br label %if_end11

if_block16:                                       ; preds = %if_else14
  %31 = load i8* %ch
  %32 = icmp eq i8 %31, 116
  br i1 %32, label %if_then17, label %if_else18

if_then17:                                        ; preds = %if_block16
  %33 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %34 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %33, i32 0, i32 2
  %35 = getelementptr inbounds %Token* %34, i32 0, i32 2
  call void @"+=269"(%String* %35, i8 9)
  br label %if_end19

if_else18:                                        ; preds = %if_block16
  br label %if_block20

if_end19:                                         ; preds = %if_end23, %if_then17
  br label %if_end15

if_block20:                                       ; preds = %if_else18
  %36 = load i8* %ch
  %37 = icmp eq i8 %36, 92
  br i1 %37, label %if_then21, label %if_else22

if_then21:                                        ; preds = %if_block20
  %38 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %39 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %38, i32 0, i32 2
  %40 = getelementptr inbounds %Token* %39, i32 0, i32 2
  call void @"+=269"(%String* %40, i8 92)
  br label %if_end23

if_else22:                                        ; preds = %if_block20
  br label %if_block24

if_end23:                                         ; preds = %if_end27, %if_then21
  br label %if_end19

if_block24:                                       ; preds = %if_else22
  %41 = load i8* %ch
  %42 = icmp eq i8 %41, 39
  br i1 %42, label %if_then25, label %if_else26

if_then25:                                        ; preds = %if_block24
  %43 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %44 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %43, i32 0, i32 2
  %45 = getelementptr inbounds %Token* %44, i32 0, i32 2
  call void @"+=269"(%String* %45, i8 39)
  br label %if_end27

if_else26:                                        ; preds = %if_block24
  br label %if_block28

if_end27:                                         ; preds = %if_end31, %if_then25
  br label %if_end23

if_block28:                                       ; preds = %if_else26
  %46 = load i8* %ch
  %47 = icmp eq i8 %46, 34
  br i1 %47, label %if_then29, label %if_else30

if_then29:                                        ; preds = %if_block28
  %48 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %49 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %48, i32 0, i32 2
  %50 = getelementptr inbounds %Token* %49, i32 0, i32 2
  call void @"+=269"(%String* %50, i8 34)
  br label %if_end31

if_else30:                                        ; preds = %if_block28
  br label %if_block32

if_end31:                                         ; preds = %if_end35, %if_then29
  br label %if_end27

if_block32:                                       ; preds = %if_else30
  %51 = load i8* %ch
  %52 = icmp eq i8 %51, 120
  br i1 %52, label %cond.true, label %cond.false

if_then33:                                        ; preds = %cond.end
  br label %if_block36

if_else34:                                        ; preds = %cond.end
  %53 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %54 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %53, i32 0, i32 2
  %55 = getelementptr inbounds %Token* %54, i32 0, i32 2
  %56 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %57 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %56, i32 0, i32 1
  %58 = call i8 @"pre_++265"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %57)
  call void @"+=269"(%String* %55, i8 %58)
  br label %if_end35

if_end35:                                         ; preds = %if_else34, %if_end38
  br label %if_end31

cond.true:                                        ; preds = %if_block32
  br label %cond.end

cond.false:                                       ; preds = %if_block32
  %59 = load i8* %ch
  %60 = icmp eq i8 %59, 88
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ true, %cond.true ], [ %60, %cond.false ]
  br i1 %cond.res, label %if_then33, label %if_else34

if_block36:                                       ; preds = %if_then33
  %61 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %62 = call i1 @hasLessThan(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %61, i32 2)
  br i1 %62, label %if_then37, label %if_end38

if_then37:                                        ; preds = %if_block36
  %63 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  call void @ctorFromCt271(%String* %tmp.v)
  %64 = load %String* %tmp.v
  store %String %64, %String* %"$tmpForRef"
  call void @reportError256(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %63, %String* %"$tmpForRef")
  call void @dtor166(%String* %tmp.v)
  ret i1 true

if_end38:                                         ; preds = %dumy_block, %if_block36
  %65 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %66 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %65, i32 0, i32 1
  %67 = call i8 @"pre_++265"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %66)
  %68 = call i32 @getXdigitVal(i8 %67)
  %69 = call i32 @"*272"(i32 16, i32 %68)
  store i32 %69, i32* %charVal
  %70 = load i32* %charVal
  %71 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %72 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %71, i32 0, i32 1
  %73 = call i8 @"pre_++265"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %72)
  %74 = call i32 @getXdigitVal(i8 %73)
  %75 = call i32 @"+12"(i32 %70, i32 %74)
  store i32 %75, i32* %charVal
  %76 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %77 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %76, i32 0, i32 2
  %78 = getelementptr inbounds %Token* %77, i32 0, i32 2
  %79 = load i32* %charVal
  %80 = trunc i32 %79 to i8
  store i8 %80, i8* %tmp.v39
  %81 = load i8* %tmp.v39
  call void @"+=269"(%String* %78, i8 %81)
  br label %if_end35

dumy_block:                                       ; No predecessors!
  br label %if_end38

dumy_block40:                                     ; No predecessors!
  br label %if_end
}

; Function Attrs: alwaysinline nounwind
define internal void @"+=269"(%String* %"$this", i8 %value) #2 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %value.addr = alloca i8
  store i8 %value, i8* %value.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  %2 = load i8* %value.addr
  call void @pushBack270(%String* %1, i8 %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @pushBack270(%String* %"$this", i8 %value) #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %value.addr = alloca i8
  store i8 %value, i8* %value.addr
  %t = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %String** %"$this.addr"
  %2 = getelementptr inbounds %String* %1, i32 0, i32 1
  %3 = load %String** %"$this.addr"
  %4 = getelementptr inbounds %String* %3, i32 0, i32 2
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i1 @"==155"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  br i1 %6, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %7 = load %String** %"$this.addr"
  %8 = call i64 @capacity(%String* %7)
  %9 = call i64 @"*183"(i32 2, i64 %8)
  store i64 %9, i64* %t
  br label %if_block1

if_end:                                           ; preds = %if_end3, %if_block
  %10 = load i8* %value.addr
  %11 = load %String** %"$this.addr"
  %12 = getelementptr inbounds %String* %11, i32 0, i32 1
  %13 = call i8* @value(%"RawPtr[Char/rtct]"* %12)
  store i8 %10, i8* %13
  %14 = load %String** %"$this.addr"
  %15 = getelementptr inbounds %String* %14, i32 0, i32 1
  %16 = load %String** %"$this.addr"
  %17 = getelementptr inbounds %String* %16, i32 0, i32 1
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %17)
  %18 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=153"(%"RawPtr[Char/rtct]"* %15, %"RawPtr[Char/rtct]" %18)
  ret void

if_block1:                                        ; preds = %if_then
  %19 = load i64* %t
  %20 = call i1 @"<182"(i64 %19, i32 2)
  br i1 %20, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 2, i64* %t
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %21 = load %String** %"$this.addr"
  %22 = load i64* %t
  call void @reserve(%String* %21, i64 %22)
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @ctorFromCt271(%String* %"$this") #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %"$tmpForRef" = alloca %StringRef
  %const.bytes = alloca [37 x i8]
  %const.struct = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  store [37 x i8] c"Not enough digits for character code\00", [37 x i8]* %const.bytes
  %2 = getelementptr inbounds [37 x i8]* %const.bytes, i32 0, i32 0
  %3 = getelementptr inbounds [37 x i8]* %const.bytes, i32 0, i32 36
  %4 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %5 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %2, i8** %4
  store i8* %3, i8** %5
  %6 = load %StringRef* %const.struct
  store %StringRef %6, %StringRef* %"$tmpForRef"
  call void @ctor266(%String* %1, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i32 @"*272"(i32 %x, i32 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn13(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn13(i32 %4, i32 %5)
  %7 = mul i32 %3, %6
  ret i32 %7
}

; Function Attrs: inlinehint nounwind
define internal i32 @getXdigitVal(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  %tmp.v1 = alloca i32
  %tmp.v2 = alloca i32
  %tmp.v3 = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  %2 = call i1 @isDigit(i8 %1)
  br i1 %2, label %cond_alt1, label %cond_alt2

cond_alt1:                                        ; preds = %code
  %3 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %3)
  %4 = load i32* %tmp.v
  call void @_ass_32_8z(i32* %tmp.v1, i8 48)
  %5 = load i32* %tmp.v1
  %6 = call i32 @-36(i32 %4, i32 %5)
  br label %cond_end

cond_alt2:                                        ; preds = %code
  %7 = load i8* %c.addr
  %8 = call i8 @toLower(i8 %7)
  call void @_ass_32_8z(i32* %tmp.v2, i8 %8)
  %9 = load i32* %tmp.v2
  %10 = call i32 @"+12"(i32 10, i32 %9)
  call void @_ass_32_8z(i32* %tmp.v3, i8 97)
  %11 = load i32* %tmp.v3
  %12 = call i32 @-36(i32 %10, i32 %11)
  br label %cond_end

cond_end:                                         ; preds = %cond_alt2, %cond_alt1
  %cond = phi i32 [ %6, %cond_alt1 ], [ %12, %cond_alt2 ]
  br i1 %2, label %cond_destruct_alt1, label %cond_destruct_alt2

cond_destruct_alt1:                               ; preds = %cond_end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %cond_end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  ret i32 %cond

cond_destruct_alt14:                              ; preds = %dumy_block
  br label %cond_destruct_end6

cond_destruct_alt25:                              ; preds = %dumy_block
  br label %cond_destruct_end6

cond_destruct_end6:                               ; preds = %cond_destruct_alt25, %cond_destruct_alt14
  unreachable

dumy_block:                                       ; No predecessors!
  br i1 %2, label %cond_destruct_alt14, label %cond_destruct_alt25
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isDigit(i8 %c) #2 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @isdigit(i32 %2)
  %4 = call i1 @"!=113"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @isdigit(i32)

; Function Attrs: inlinehint nounwind
define internal i8 @toLower(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i8
  %tmp.v1 = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v1, i8 %1)
  %2 = load i32* %tmp.v1
  %3 = call i32 @tolower(i32 %2)
  %4 = trunc i32 %3 to i8
  store i8 %4, i8* %tmp.v
  %5 = load i8* %tmp.v
  ret i8 %5
}

declare i32 @tolower(i32)

; Function Attrs: inlinehint nounwind
define internal void @advanceAndCapture1(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s) #3 {
  %s.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 2
  %3 = getelementptr inbounds %Token* %2, i32 0, i32 2
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %5 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  call void @"+=269"(%String* %3, i8 %6)
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %8 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctorFromCt273(%String* %"$this") #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %"$tmpForRef" = alloca %StringRef
  %const.bytes = alloca [40 x i8]
  %const.struct = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  store [40 x i8] c"End of file found inside string literal\00", [40 x i8]* %const.bytes
  %2 = getelementptr inbounds [40 x i8]* %const.bytes, i32 0, i32 0
  %3 = getelementptr inbounds [40 x i8]* %const.bytes, i32 0, i32 39
  %4 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %5 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %2, i8** %4
  store i8* %3, i8** %5
  %6 = load %StringRef* %const.struct
  store %StringRef %6, %StringRef* %"$tmpForRef"
  call void @ctor266(%String* %1, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseStringNE(%TokenType* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s) #3 {
  %_result.addr = alloca %TokenType*
  store %TokenType* %_result, %TokenType** %_result.addr
  %s.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %"$tmpForRef" = alloca %String
  %tmp.v = alloca %String
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  call void @advance264(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2, i64 2)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %4 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 0, i32 1
  %5 = call i1 @"pre_!!251"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  br i1 %5, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %6 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  call void @advanceAndCapture1(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %6)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  br label %if_block

cond.true:                                        ; preds = %while_block
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %8 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 0, i32 1
  %9 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8)
  %10 = icmp eq i8 %9, 125
  br i1 %10, label %cond.true1, label %cond.false2

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.end3
  %cond.res4 = phi i1 [ %14, %cond.end3 ], [ false, %cond.false ]
  br i1 %cond.res4, label %while_body, label %while_end

cond.true1:                                       ; preds = %cond.true
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %12 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11)
  %13 = icmp eq i8 %12, 62
  br label %cond.end3

cond.false2:                                      ; preds = %cond.true
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ %13, %cond.true1 ], [ false, %cond.false2 ]
  %14 = xor i1 true, %cond.res
  br label %cond.end

if_block:                                         ; preds = %while_end
  %15 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %16 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %15, i32 0, i32 1
  %17 = call i1 @"pre_!"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %16)
  br i1 %17, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %18 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  call void @ctorFromCt274(%String* %tmp.v)
  %19 = load %String* %tmp.v
  store %String %19, %String* %"$tmpForRef"
  call void @reportError256(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %18, %String* %"$tmpForRef")
  call void @dtor166(%String* %tmp.v)
  %20 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %20, i32 0)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %21 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %22 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %21, i32 0, i32 1
  call void @advance264(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %22, i64 2)
  %23 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %23, i32 41)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @ctorFromCt274(%String* %"$this") #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %"$tmpForRef" = alloca %StringRef
  %const.bytes = alloca [40 x i8]
  %const.struct = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  store [40 x i8] c"End of file found inside string literal\00", [40 x i8]* %const.bytes
  %2 = getelementptr inbounds [40 x i8]* %const.bytes, i32 0, i32 0
  %3 = getelementptr inbounds [40 x i8]* %const.bytes, i32 0, i32 39
  %4 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %5 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %2, i8** %4
  store i8* %3, i8** %5
  %6 = load %StringRef* %const.struct
  store %StringRef %6, %StringRef* %"$tmpForRef"
  call void @ctor266(%String* %1, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isOpChar(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  %2 = icmp eq i8 %1, 126
  br i1 %2, label %cond.true49, label %cond.false50

cond.true:                                        ; preds = %cond.end3
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  %3 = load i8* %c.addr
  %4 = icmp eq i8 %3, 42
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res68 = phi i1 [ true, %cond.true ], [ %4, %cond.false ]
  ret i1 %cond.res68

cond.true1:                                       ; preds = %cond.end6
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  %5 = load i8* %c.addr
  %6 = icmp eq i8 %5, 47
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res67 = phi i1 [ true, %cond.true1 ], [ %6, %cond.false2 ]
  br i1 %cond.res67, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %cond.end9
  br label %cond.end6

cond.false5:                                      ; preds = %cond.end9
  %7 = load i8* %c.addr
  %8 = icmp eq i8 %7, 63
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res66 = phi i1 [ true, %cond.true4 ], [ %8, %cond.false5 ]
  br i1 %cond.res66, label %cond.true1, label %cond.false2

cond.true7:                                       ; preds = %cond.end12
  br label %cond.end9

cond.false8:                                      ; preds = %cond.end12
  %9 = load i8* %c.addr
  %10 = icmp eq i8 %9, 62
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res65 = phi i1 [ true, %cond.true7 ], [ %10, %cond.false8 ]
  br i1 %cond.res65, label %cond.true4, label %cond.false5

cond.true10:                                      ; preds = %cond.end15
  br label %cond.end12

cond.false11:                                     ; preds = %cond.end15
  %11 = load i8* %c.addr
  %12 = icmp eq i8 %11, 60
  br label %cond.end12

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond.res64 = phi i1 [ true, %cond.true10 ], [ %12, %cond.false11 ]
  br i1 %cond.res64, label %cond.true7, label %cond.false8

cond.true13:                                      ; preds = %cond.end18
  br label %cond.end15

cond.false14:                                     ; preds = %cond.end18
  %13 = load i8* %c.addr
  %14 = icmp eq i8 %13, 58
  br label %cond.end15

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond.res63 = phi i1 [ true, %cond.true13 ], [ %14, %cond.false14 ]
  br i1 %cond.res63, label %cond.true10, label %cond.false11

cond.true16:                                      ; preds = %cond.end21
  br label %cond.end18

cond.false17:                                     ; preds = %cond.end21
  %15 = load i8* %c.addr
  %16 = icmp eq i8 %15, 92
  br label %cond.end18

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond.res62 = phi i1 [ true, %cond.true16 ], [ %16, %cond.false17 ]
  br i1 %cond.res62, label %cond.true13, label %cond.false14

cond.true19:                                      ; preds = %cond.end24
  br label %cond.end21

cond.false20:                                     ; preds = %cond.end24
  %17 = load i8* %c.addr
  %18 = icmp eq i8 %17, 124
  br label %cond.end21

cond.end21:                                       ; preds = %cond.false20, %cond.true19
  %cond.res61 = phi i1 [ true, %cond.true19 ], [ %18, %cond.false20 ]
  br i1 %cond.res61, label %cond.true16, label %cond.false17

cond.true22:                                      ; preds = %cond.end27
  br label %cond.end24

cond.false23:                                     ; preds = %cond.end27
  %19 = load i8* %c.addr
  %20 = icmp eq i8 %19, 61
  br label %cond.end24

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond.res60 = phi i1 [ true, %cond.true22 ], [ %20, %cond.false23 ]
  br i1 %cond.res60, label %cond.true19, label %cond.false20

cond.true25:                                      ; preds = %cond.end30
  br label %cond.end27

cond.false26:                                     ; preds = %cond.end30
  %21 = load i8* %c.addr
  %22 = icmp eq i8 %21, 43
  br label %cond.end27

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond.res59 = phi i1 [ true, %cond.true25 ], [ %22, %cond.false26 ]
  br i1 %cond.res59, label %cond.true22, label %cond.false23

cond.true28:                                      ; preds = %cond.end33
  br label %cond.end30

cond.false29:                                     ; preds = %cond.end33
  %23 = load i8* %c.addr
  %24 = icmp eq i8 %23, 45
  br label %cond.end30

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond.res58 = phi i1 [ true, %cond.true28 ], [ %24, %cond.false29 ]
  br i1 %cond.res58, label %cond.true25, label %cond.false26

cond.true31:                                      ; preds = %cond.end36
  br label %cond.end33

cond.false32:                                     ; preds = %cond.end36
  %25 = load i8* %c.addr
  %26 = icmp eq i8 %25, 38
  br label %cond.end33

cond.end33:                                       ; preds = %cond.false32, %cond.true31
  %cond.res57 = phi i1 [ true, %cond.true31 ], [ %26, %cond.false32 ]
  br i1 %cond.res57, label %cond.true28, label %cond.false29

cond.true34:                                      ; preds = %cond.end39
  br label %cond.end36

cond.false35:                                     ; preds = %cond.end39
  %27 = load i8* %c.addr
  %28 = icmp eq i8 %27, 94
  br label %cond.end36

cond.end36:                                       ; preds = %cond.false35, %cond.true34
  %cond.res56 = phi i1 [ true, %cond.true34 ], [ %28, %cond.false35 ]
  br i1 %cond.res56, label %cond.true31, label %cond.false32

cond.true37:                                      ; preds = %cond.end42
  br label %cond.end39

cond.false38:                                     ; preds = %cond.end42
  %29 = load i8* %c.addr
  %30 = icmp eq i8 %29, 37
  br label %cond.end39

cond.end39:                                       ; preds = %cond.false38, %cond.true37
  %cond.res55 = phi i1 [ true, %cond.true37 ], [ %30, %cond.false38 ]
  br i1 %cond.res55, label %cond.true34, label %cond.false35

cond.true40:                                      ; preds = %cond.end45
  br label %cond.end42

cond.false41:                                     ; preds = %cond.end45
  %31 = load i8* %c.addr
  %32 = icmp eq i8 %31, 36
  br label %cond.end42

cond.end42:                                       ; preds = %cond.false41, %cond.true40
  %cond.res54 = phi i1 [ true, %cond.true40 ], [ %32, %cond.false41 ]
  br i1 %cond.res54, label %cond.true37, label %cond.false38

cond.true43:                                      ; preds = %cond.end48
  br label %cond.end45

cond.false44:                                     ; preds = %cond.end48
  %33 = load i8* %c.addr
  %34 = icmp eq i8 %33, 35
  br label %cond.end45

cond.end45:                                       ; preds = %cond.false44, %cond.true43
  %cond.res53 = phi i1 [ true, %cond.true43 ], [ %34, %cond.false44 ]
  br i1 %cond.res53, label %cond.true40, label %cond.false41

cond.true46:                                      ; preds = %cond.end51
  br label %cond.end48

cond.false47:                                     ; preds = %cond.end51
  %35 = load i8* %c.addr
  %36 = icmp eq i8 %35, 64
  br label %cond.end48

cond.end48:                                       ; preds = %cond.false47, %cond.true46
  %cond.res52 = phi i1 [ true, %cond.true46 ], [ %36, %cond.false47 ]
  br i1 %cond.res52, label %cond.true43, label %cond.false44

cond.true49:                                      ; preds = %code
  br label %cond.end51

cond.false50:                                     ; preds = %code
  %37 = load i8* %c.addr
  %38 = icmp eq i8 %37, 33
  br label %cond.end51

cond.end51:                                       ; preds = %cond.false50, %cond.true49
  %cond.res = phi i1 [ true, %cond.true49 ], [ %38, %cond.false50 ]
  br i1 %cond.res, label %cond.true46, label %cond.false47
}

; Function Attrs: inlinehint nounwind
define internal i1 @isOpCharDot(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  %2 = icmp eq i8 %1, 46
  br i1 %2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  br label %cond.end

cond.false:                                       ; preds = %code
  %3 = load i8* %c.addr
  %4 = call i1 @isOpChar(i8 %3)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ true, %cond.true ], [ %4, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal i1 @parseOperator(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s) #3 {
  %s.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %ch = alloca i8
  %funptr = alloca i1 (i8)*
  %i = alloca i32
  %c = alloca i8
  %tmp.v = alloca i32
  %tmp.v4 = alloca i32
  %hasOtherDot = alloca i1
  %funptr8 = alloca i1 (i8)*
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  store i8 %3, i8* %ch
  br label %if_block

if_block:                                         ; preds = %code
  %4 = load i8* %ch
  %5 = call i1 @isOpChar(i8 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %6 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  store i1 (i8)* @isOpCharDot, i1 (i8)** %funptr
  %7 = bitcast i1 (i8)** %funptr to %"FunctionPtr[Bool, Char]"*
  %8 = load %"FunctionPtr[Bool, Char]"* %7
  call void @advanceAndCapture(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %6, %"FunctionPtr[Bool, Char]" %8)
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %9 = load i8* %ch
  %10 = icmp eq i8 %9, 46
  br i1 %10, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i32 1, i32* %i
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %12 = load i32* %i
  store i32 %12, i32* %tmp.v
  %13 = load i32* %tmp.v
  %14 = call i8 @peekChar276(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11, i32 %13)
  store i8 %14, i8* %c
  br label %while_block

if_end3:                                          ; preds = %if_end7, %if_block1
  ret i1 false

while_block:                                      ; preds = %while_step, %if_then2
  %15 = load i8* %c
  %16 = call i1 @isOpChar(i8 %15)
  br i1 %16, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %17 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %18 = call i32 @"pre_++11"(i32* %i)
  store i32 %18, i32* %tmp.v4
  %19 = load i32* %tmp.v4
  %20 = call i8 @peekChar276(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %17, i32 %19)
  store i8 %20, i8* %c
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %21 = load i8* %c
  %22 = icmp eq i8 %21, 46
  store i1 %22, i1* %hasOtherDot
  br label %if_block5

if_block5:                                        ; preds = %while_end
  %23 = load i1* %hasOtherDot
  br i1 %23, label %if_then6, label %if_end7

if_then6:                                         ; preds = %if_block5
  %24 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  store i1 (i8)* @isOpCharDot, i1 (i8)** %funptr8
  %25 = bitcast i1 (i8)** %funptr8 to %"FunctionPtr[Bool, Char]"*
  %26 = load %"FunctionPtr[Bool, Char]"* %25
  call void @advanceAndCapture(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %24, %"FunctionPtr[Bool, Char]" %26)
  ret i1 true

if_end7:                                          ; preds = %dumy_block9, %if_block5
  br label %if_end3

dumy_block9:                                      ; No predecessors!
  br label %if_end7
}

; Function Attrs: inlinehint nounwind
define internal void @advanceAndCapture(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %"FunctionPtr[Bool, Char]" %pred) #3 {
  %s.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %pred.addr = alloca %"FunctionPtr[Bool, Char]"
  store %"FunctionPtr[Bool, Char]" %pred, %"FunctionPtr[Bool, Char]"* %pred.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = call i1 @"pre_!!251"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  br i1 %3, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %5 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, i32 0, i32 2
  %6 = getelementptr inbounds %Token* %5, i32 0, i32 2
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %8 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 0, i32 1
  %9 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8)
  call void @"+=269"(%String* %6, i8 %9)
  br label %while_step

while_step:                                       ; preds = %while_body
  %10 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %11 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %10, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %11)
  br label %while_block

while_end:                                        ; preds = %cond.end
  ret void

cond.true:                                        ; preds = %while_block
  %12 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %13 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %12, i32 0, i32 1
  %14 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %13)
  %15 = call i1 @"()275"(%"FunctionPtr[Bool, Char]"* %pred.addr, i8 %14)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %15, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"()275"(%"FunctionPtr[Bool, Char]"* %"$this", i8 %p1) #2 {
  %"$this.addr" = alloca %"FunctionPtr[Bool, Char]"*
  store %"FunctionPtr[Bool, Char]"* %"$this", %"FunctionPtr[Bool, Char]"** %"$this.addr"
  %p1.addr = alloca i8
  store i8 %p1, i8* %p1.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"FunctionPtr[Bool, Char]"** %"$this.addr"
  %2 = load i8* %p1.addr
  %3 = bitcast %"FunctionPtr[Bool, Char]"* %1 to i1 (i8)**
  %4 = load i1 (i8)** %3
  %5 = call i1 %4(i8 %2)
  ret i1 %5
}

; Function Attrs: inlinehint nounwind
define internal i8 @peekChar276(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, i32 %n) #3 {
  %s.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %n.addr = alloca i32
  store i32 %n, i32* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2, i32 0, i32 0
  %4 = load i32* %n.addr
  %5 = call i8 @peek(%"RangeWithLookahead[_CharSource]"* %3, i32 %4)
  ret i8 %5
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isAlpha(i8 %c) #2 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @isalpha(i32 %2)
  %4 = call i1 @"!=113"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @isalpha(i32)

; Function Attrs: noinline nounwind
define void @parseIdentifer(%TokenType* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s) #4 {
  %_result.addr = alloca %TokenType*
  store %TokenType* %_result, %TokenType** %_result.addr
  %s.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %allowSymbolChars = alloca i1
  %firstDot = alloca i1
  %ch = alloca i8
  %data = alloca %StringRef*
  %"$tmpC" = alloca %StringRef
  %const.bytes = alloca [6 x i8]
  %const.struct = alloca %StringRef
  %const.bytes24 = alloca [6 x i8]
  %const.struct25 = alloca %StringRef
  %const.bytes31 = alloca [6 x i8]
  %const.struct32 = alloca %StringRef
  %const.bytes38 = alloca [8 x i8]
  %const.struct39 = alloca %StringRef
  %const.bytes45 = alloca [9 x i8]
  %const.struct46 = alloca %StringRef
  %const.bytes52 = alloca [9 x i8]
  %const.struct53 = alloca %StringRef
  %const.bytes59 = alloca [4 x i8]
  %const.struct60 = alloca %StringRef
  %const.bytes66 = alloca [3 x i8]
  %const.struct67 = alloca %StringRef
  %const.bytes73 = alloca [5 x i8]
  %const.struct74 = alloca %StringRef
  %const.bytes80 = alloca [6 x i8]
  %const.struct81 = alloca %StringRef
  %const.bytes87 = alloca [8 x i8]
  %const.struct88 = alloca %StringRef
  %const.bytes94 = alloca [4 x i8]
  %const.struct95 = alloca %StringRef
  %const.bytes101 = alloca [7 x i8]
  %const.struct102 = alloca %StringRef
  %const.bytes108 = alloca [7 x i8]
  %const.struct109 = alloca %StringRef
  %const.bytes115 = alloca [5 x i8]
  %const.struct116 = alloca %StringRef
  %const.bytes122 = alloca [8 x i8]
  %const.struct123 = alloca %StringRef
  %const.bytes129 = alloca [7 x i8]
  %const.struct130 = alloca %StringRef
  %const.bytes136 = alloca [5 x i8]
  %const.struct137 = alloca %StringRef
  %const.bytes143 = alloca [6 x i8]
  %const.struct144 = alloca %StringRef
  %const.bytes150 = alloca [5 x i8]
  %const.struct151 = alloca %StringRef
  %const.bytes157 = alloca [4 x i8]
  %const.struct158 = alloca %StringRef
  %const.bytes164 = alloca [6 x i8]
  %const.struct165 = alloca %StringRef
  %const.bytes171 = alloca [4 x i8]
  %const.struct172 = alloca %StringRef
  %const.bytes178 = alloca [6 x i8]
  %const.struct179 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  store i1 false, i1* %allowSymbolChars
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 2
  %3 = getelementptr inbounds %Token* %2, i32 0, i32 2
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %5 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  call void @"+=269"(%String* %3, i8 %6)
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %8 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8)
  store i1 true, i1* %firstDot
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %9 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %10 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %9, i32 0, i32 1
  %11 = call i1 @"pre_!!251"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %10)
  br i1 %11, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %12 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %13 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %12, i32 0, i32 1
  %14 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %13)
  store i8 %14, i8* %ch
  br label %if_block

while_step:                                       ; preds = %if_end7
  %15 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %16 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %15, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %16)
  br label %while_block

while_end:                                        ; preds = %if_then, %while_block
  %17 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %18 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %17, i32 0, i32 2
  %19 = getelementptr inbounds %Token* %18, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC", %String* %19)
  store %StringRef* %"$tmpC", %StringRef** %data
  br label %if_block16

if_block:                                         ; preds = %while_body
  %20 = load i8* %ch
  %21 = call i1 @isAlpha(i8 %20)
  %22 = xor i1 true, %21
  br i1 %22, label %cond.true1, label %cond.false2

if_then:                                          ; preds = %cond.end
  br label %while_end

if_end:                                           ; preds = %dumy_block, %cond.end
  %23 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %24 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %23, i32 0, i32 2
  %25 = getelementptr inbounds %Token* %24, i32 0, i32 2
  %26 = load i8* %ch
  call void @"+=269"(%String* %25, i8 %26)
  br label %if_block5

cond.true:                                        ; preds = %cond.end3
  %27 = load i8* %ch
  %28 = call i1 @isDigit(i8 %27)
  %29 = xor i1 true, %28
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res4 = phi i1 [ %29, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res4, label %if_then, label %if_end

cond.true1:                                       ; preds = %if_block
  %30 = load i8* %ch
  %31 = icmp ne i8 %30, 95
  br label %cond.end3

cond.false2:                                      ; preds = %if_block
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ %31, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res, label %cond.true, label %cond.false

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block5:                                        ; preds = %if_end
  %32 = load i8* %ch
  %33 = icmp eq i8 %32, 95
  br i1 %33, label %cond.true8, label %cond.false9

if_then6:                                         ; preds = %cond.end10
  %34 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %35 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %34, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %35)
  br label %if_block12

if_end7:                                          ; preds = %if_end14, %cond.end10
  br label %while_step

cond.true8:                                       ; preds = %if_block5
  %36 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %37 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %36)
  %38 = call i1 @isOpCharDot(i8 %37)
  br label %cond.end10

cond.false9:                                      ; preds = %if_block5
  br label %cond.end10

cond.end10:                                       ; preds = %cond.false9, %cond.true8
  %cond.res11 = phi i1 [ %38, %cond.true8 ], [ false, %cond.false9 ]
  br i1 %cond.res11, label %if_then6, label %if_end7

if_block12:                                       ; preds = %if_then6
  %39 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %40 = call i1 @parseOperator(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %39)
  br i1 %40, label %if_then13, label %if_end14

if_then13:                                        ; preds = %if_block12
  %41 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %41, i32 38)
  ret void

if_end14:                                         ; preds = %dumy_block15, %if_block12
  br label %if_end7

dumy_block15:                                     ; No predecessors!
  br label %if_end14

if_block16:                                       ; preds = %while_end
  %42 = load %StringRef** %data
  store [6 x i8] c"break\00", [6 x i8]* %const.bytes
  %43 = getelementptr inbounds [6 x i8]* %const.bytes, i32 0, i32 0
  %44 = getelementptr inbounds [6 x i8]* %const.bytes, i32 0, i32 5
  %45 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %46 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %43, i8** %45
  store i8* %44, i8** %46
  %47 = load %StringRef* %const.struct
  %48 = call i1 @"==277"(%StringRef* %42, %StringRef %47)
  br i1 %48, label %if_then17, label %if_else

if_then17:                                        ; preds = %if_block16
  %49 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %49, i32 11)
  ret void

if_else:                                          ; preds = %if_block16
  br label %if_block20

if_end18:                                         ; preds = %if_end23, %dumy_block19
  ret void

dumy_block19:                                     ; No predecessors!
  br label %if_end18

if_block20:                                       ; preds = %if_else
  %50 = load %StringRef** %data
  store [6 x i8] c"catch\00", [6 x i8]* %const.bytes24
  %51 = getelementptr inbounds [6 x i8]* %const.bytes24, i32 0, i32 0
  %52 = getelementptr inbounds [6 x i8]* %const.bytes24, i32 0, i32 5
  %53 = getelementptr inbounds %StringRef* %const.struct25, i32 0, i32 0
  %54 = getelementptr inbounds %StringRef* %const.struct25, i32 0, i32 1
  store i8* %51, i8** %53
  store i8* %52, i8** %54
  %55 = load %StringRef* %const.struct25
  %56 = call i1 @"==277"(%StringRef* %50, %StringRef %55)
  br i1 %56, label %if_then21, label %if_else22

if_then21:                                        ; preds = %if_block20
  %57 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %57, i32 12)
  ret void

if_else22:                                        ; preds = %if_block20
  br label %if_block27

if_end23:                                         ; preds = %if_end30, %dumy_block26
  br label %if_end18

dumy_block26:                                     ; No predecessors!
  br label %if_end23

if_block27:                                       ; preds = %if_else22
  %58 = load %StringRef** %data
  store [6 x i8] c"class\00", [6 x i8]* %const.bytes31
  %59 = getelementptr inbounds [6 x i8]* %const.bytes31, i32 0, i32 0
  %60 = getelementptr inbounds [6 x i8]* %const.bytes31, i32 0, i32 5
  %61 = getelementptr inbounds %StringRef* %const.struct32, i32 0, i32 0
  %62 = getelementptr inbounds %StringRef* %const.struct32, i32 0, i32 1
  store i8* %59, i8** %61
  store i8* %60, i8** %62
  %63 = load %StringRef* %const.struct32
  %64 = call i1 @"==277"(%StringRef* %58, %StringRef %63)
  br i1 %64, label %if_then28, label %if_else29

if_then28:                                        ; preds = %if_block27
  %65 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %65, i32 4)
  ret void

if_else29:                                        ; preds = %if_block27
  br label %if_block34

if_end30:                                         ; preds = %if_end37, %dumy_block33
  br label %if_end23

dumy_block33:                                     ; No predecessors!
  br label %if_end30

if_block34:                                       ; preds = %if_else29
  %66 = load %StringRef** %data
  store [8 x i8] c"concept\00", [8 x i8]* %const.bytes38
  %67 = getelementptr inbounds [8 x i8]* %const.bytes38, i32 0, i32 0
  %68 = getelementptr inbounds [8 x i8]* %const.bytes38, i32 0, i32 7
  %69 = getelementptr inbounds %StringRef* %const.struct39, i32 0, i32 0
  %70 = getelementptr inbounds %StringRef* %const.struct39, i32 0, i32 1
  store i8* %67, i8** %69
  store i8* %68, i8** %70
  %71 = load %StringRef* %const.struct39
  %72 = call i1 @"==277"(%StringRef* %66, %StringRef %71)
  br i1 %72, label %if_then35, label %if_else36

if_then35:                                        ; preds = %if_block34
  %73 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %73, i32 5)
  ret void

if_else36:                                        ; preds = %if_block34
  br label %if_block41

if_end37:                                         ; preds = %if_end44, %dumy_block40
  br label %if_end30

dumy_block40:                                     ; No predecessors!
  br label %if_end37

if_block41:                                       ; preds = %if_else36
  %74 = load %StringRef** %data
  store [9 x i8] c"continue\00", [9 x i8]* %const.bytes45
  %75 = getelementptr inbounds [9 x i8]* %const.bytes45, i32 0, i32 0
  %76 = getelementptr inbounds [9 x i8]* %const.bytes45, i32 0, i32 8
  %77 = getelementptr inbounds %StringRef* %const.struct46, i32 0, i32 0
  %78 = getelementptr inbounds %StringRef* %const.struct46, i32 0, i32 1
  store i8* %75, i8** %77
  store i8* %76, i8** %78
  %79 = load %StringRef* %const.struct46
  %80 = call i1 @"==277"(%StringRef* %74, %StringRef %79)
  br i1 %80, label %if_then42, label %if_else43

if_then42:                                        ; preds = %if_block41
  %81 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %81, i32 13)
  ret void

if_else43:                                        ; preds = %if_block41
  br label %if_block48

if_end44:                                         ; preds = %if_end51, %dumy_block47
  br label %if_end37

dumy_block47:                                     ; No predecessors!
  br label %if_end44

if_block48:                                       ; preds = %if_else43
  %82 = load %StringRef** %data
  store [9 x i8] c"datatype\00", [9 x i8]* %const.bytes52
  %83 = getelementptr inbounds [9 x i8]* %const.bytes52, i32 0, i32 0
  %84 = getelementptr inbounds [9 x i8]* %const.bytes52, i32 0, i32 8
  %85 = getelementptr inbounds %StringRef* %const.struct53, i32 0, i32 0
  %86 = getelementptr inbounds %StringRef* %const.struct53, i32 0, i32 1
  store i8* %83, i8** %85
  store i8* %84, i8** %86
  %87 = load %StringRef* %const.struct53
  %88 = call i1 @"==277"(%StringRef* %82, %StringRef %87)
  br i1 %88, label %if_then49, label %if_else50

if_then49:                                        ; preds = %if_block48
  %89 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %89, i32 6)
  ret void

if_else50:                                        ; preds = %if_block48
  br label %if_block55

if_end51:                                         ; preds = %if_end58, %dumy_block54
  br label %if_end44

dumy_block54:                                     ; No predecessors!
  br label %if_end51

if_block55:                                       ; preds = %if_else50
  %90 = load %StringRef** %data
  store [4 x i8] c"fun\00", [4 x i8]* %const.bytes59
  %91 = getelementptr inbounds [4 x i8]* %const.bytes59, i32 0, i32 0
  %92 = getelementptr inbounds [4 x i8]* %const.bytes59, i32 0, i32 3
  %93 = getelementptr inbounds %StringRef* %const.struct60, i32 0, i32 0
  %94 = getelementptr inbounds %StringRef* %const.struct60, i32 0, i32 1
  store i8* %91, i8** %93
  store i8* %92, i8** %94
  %95 = load %StringRef* %const.struct60
  %96 = call i1 @"==277"(%StringRef* %90, %StringRef %95)
  br i1 %96, label %if_then56, label %if_else57

if_then56:                                        ; preds = %if_block55
  %97 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %97, i32 7)
  ret void

if_else57:                                        ; preds = %if_block55
  br label %if_block62

if_end58:                                         ; preds = %if_end65, %dumy_block61
  br label %if_end51

dumy_block61:                                     ; No predecessors!
  br label %if_end58

if_block62:                                       ; preds = %if_else57
  %98 = load %StringRef** %data
  store [3 x i8] c"if\00", [3 x i8]* %const.bytes66
  %99 = getelementptr inbounds [3 x i8]* %const.bytes66, i32 0, i32 0
  %100 = getelementptr inbounds [3 x i8]* %const.bytes66, i32 0, i32 2
  %101 = getelementptr inbounds %StringRef* %const.struct67, i32 0, i32 0
  %102 = getelementptr inbounds %StringRef* %const.struct67, i32 0, i32 1
  store i8* %99, i8** %101
  store i8* %100, i8** %102
  %103 = load %StringRef* %const.struct67
  %104 = call i1 @"==277"(%StringRef* %98, %StringRef %103)
  br i1 %104, label %if_then63, label %if_else64

if_then63:                                        ; preds = %if_block62
  %105 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %105, i32 16)
  ret void

if_else64:                                        ; preds = %if_block62
  br label %if_block69

if_end65:                                         ; preds = %if_end72, %dumy_block68
  br label %if_end58

dumy_block68:                                     ; No predecessors!
  br label %if_end65

if_block69:                                       ; preds = %if_else64
  %106 = load %StringRef** %data
  store [5 x i8] c"else\00", [5 x i8]* %const.bytes73
  %107 = getelementptr inbounds [5 x i8]* %const.bytes73, i32 0, i32 0
  %108 = getelementptr inbounds [5 x i8]* %const.bytes73, i32 0, i32 4
  %109 = getelementptr inbounds %StringRef* %const.struct74, i32 0, i32 0
  %110 = getelementptr inbounds %StringRef* %const.struct74, i32 0, i32 1
  store i8* %107, i8** %109
  store i8* %108, i8** %110
  %111 = load %StringRef* %const.struct74
  %112 = call i1 @"==277"(%StringRef* %106, %StringRef %111)
  br i1 %112, label %if_then70, label %if_else71

if_then70:                                        ; preds = %if_block69
  %113 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %113, i32 25)
  ret void

if_else71:                                        ; preds = %if_block69
  br label %if_block76

if_end72:                                         ; preds = %if_end79, %dumy_block75
  br label %if_end65

dumy_block75:                                     ; No predecessors!
  br label %if_end72

if_block76:                                       ; preds = %if_else71
  %114 = load %StringRef** %data
  store [6 x i8] c"false\00", [6 x i8]* %const.bytes80
  %115 = getelementptr inbounds [6 x i8]* %const.bytes80, i32 0, i32 0
  %116 = getelementptr inbounds [6 x i8]* %const.bytes80, i32 0, i32 5
  %117 = getelementptr inbounds %StringRef* %const.struct81, i32 0, i32 0
  %118 = getelementptr inbounds %StringRef* %const.struct81, i32 0, i32 1
  store i8* %115, i8** %117
  store i8* %116, i8** %118
  %119 = load %StringRef* %const.struct81
  %120 = call i1 @"==277"(%StringRef* %114, %StringRef %119)
  br i1 %120, label %if_then77, label %if_else78

if_then77:                                        ; preds = %if_block76
  %121 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %121, i32 21)
  ret void

if_else78:                                        ; preds = %if_block76
  br label %if_block83

if_end79:                                         ; preds = %if_end86, %dumy_block82
  br label %if_end72

dumy_block82:                                     ; No predecessors!
  br label %if_end79

if_block83:                                       ; preds = %if_else78
  %122 = load %StringRef** %data
  store [8 x i8] c"finally\00", [8 x i8]* %const.bytes87
  %123 = getelementptr inbounds [8 x i8]* %const.bytes87, i32 0, i32 0
  %124 = getelementptr inbounds [8 x i8]* %const.bytes87, i32 0, i32 7
  %125 = getelementptr inbounds %StringRef* %const.struct88, i32 0, i32 0
  %126 = getelementptr inbounds %StringRef* %const.struct88, i32 0, i32 1
  store i8* %123, i8** %125
  store i8* %124, i8** %126
  %127 = load %StringRef* %const.struct88
  %128 = call i1 @"==277"(%StringRef* %122, %StringRef %127)
  br i1 %128, label %if_then84, label %if_else85

if_then84:                                        ; preds = %if_block83
  %129 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %129, i32 14)
  ret void

if_else85:                                        ; preds = %if_block83
  br label %if_block90

if_end86:                                         ; preds = %if_end93, %dumy_block89
  br label %if_end79

dumy_block89:                                     ; No predecessors!
  br label %if_end86

if_block90:                                       ; preds = %if_else85
  %130 = load %StringRef** %data
  store [4 x i8] c"for\00", [4 x i8]* %const.bytes94
  %131 = getelementptr inbounds [4 x i8]* %const.bytes94, i32 0, i32 0
  %132 = getelementptr inbounds [4 x i8]* %const.bytes94, i32 0, i32 3
  %133 = getelementptr inbounds %StringRef* %const.struct95, i32 0, i32 0
  %134 = getelementptr inbounds %StringRef* %const.struct95, i32 0, i32 1
  store i8* %131, i8** %133
  store i8* %132, i8** %134
  %135 = load %StringRef* %const.struct95
  %136 = call i1 @"==277"(%StringRef* %130, %StringRef %135)
  br i1 %136, label %if_then91, label %if_else92

if_then91:                                        ; preds = %if_block90
  %137 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %137, i32 15)
  ret void

if_else92:                                        ; preds = %if_block90
  br label %if_block97

if_end93:                                         ; preds = %if_end100, %dumy_block96
  br label %if_end86

dumy_block96:                                     ; No predecessors!
  br label %if_end93

if_block97:                                       ; preds = %if_else92
  %138 = load %StringRef** %data
  store [7 x i8] c"import\00", [7 x i8]* %const.bytes101
  %139 = getelementptr inbounds [7 x i8]* %const.bytes101, i32 0, i32 0
  %140 = getelementptr inbounds [7 x i8]* %const.bytes101, i32 0, i32 6
  %141 = getelementptr inbounds %StringRef* %const.struct102, i32 0, i32 0
  %142 = getelementptr inbounds %StringRef* %const.struct102, i32 0, i32 1
  store i8* %139, i8** %141
  store i8* %140, i8** %142
  %143 = load %StringRef* %const.struct102
  %144 = call i1 @"==277"(%StringRef* %138, %StringRef %143)
  br i1 %144, label %if_then98, label %if_else99

if_then98:                                        ; preds = %if_block97
  %145 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %145, i32 3)
  ret void

if_else99:                                        ; preds = %if_block97
  br label %if_block104

if_end100:                                        ; preds = %if_end107, %dumy_block103
  br label %if_end93

dumy_block103:                                    ; No predecessors!
  br label %if_end100

if_block104:                                      ; preds = %if_else99
  %146 = load %StringRef** %data
  store [7 x i8] c"module\00", [7 x i8]* %const.bytes108
  %147 = getelementptr inbounds [7 x i8]* %const.bytes108, i32 0, i32 0
  %148 = getelementptr inbounds [7 x i8]* %const.bytes108, i32 0, i32 6
  %149 = getelementptr inbounds %StringRef* %const.struct109, i32 0, i32 0
  %150 = getelementptr inbounds %StringRef* %const.struct109, i32 0, i32 1
  store i8* %147, i8** %149
  store i8* %148, i8** %150
  %151 = load %StringRef* %const.struct109
  %152 = call i1 @"==277"(%StringRef* %146, %StringRef %151)
  br i1 %152, label %if_then105, label %if_else106

if_then105:                                       ; preds = %if_block104
  %153 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %153, i32 2)
  ret void

if_else106:                                       ; preds = %if_block104
  br label %if_block111

if_end107:                                        ; preds = %if_end114, %dumy_block110
  br label %if_end100

dumy_block110:                                    ; No predecessors!
  br label %if_end107

if_block111:                                      ; preds = %if_else106
  %154 = load %StringRef** %data
  store [5 x i8] c"null\00", [5 x i8]* %const.bytes115
  %155 = getelementptr inbounds [5 x i8]* %const.bytes115, i32 0, i32 0
  %156 = getelementptr inbounds [5 x i8]* %const.bytes115, i32 0, i32 4
  %157 = getelementptr inbounds %StringRef* %const.struct116, i32 0, i32 0
  %158 = getelementptr inbounds %StringRef* %const.struct116, i32 0, i32 1
  store i8* %155, i8** %157
  store i8* %156, i8** %158
  %159 = load %StringRef* %const.struct116
  %160 = call i1 @"==277"(%StringRef* %154, %StringRef %159)
  br i1 %160, label %if_then112, label %if_else113

if_then112:                                       ; preds = %if_block111
  %161 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %161, i32 22)
  ret void

if_else113:                                       ; preds = %if_block111
  br label %if_block118

if_end114:                                        ; preds = %if_end121, %dumy_block117
  br label %if_end107

dumy_block117:                                    ; No predecessors!
  br label %if_end114

if_block118:                                      ; preds = %if_else113
  %162 = load %StringRef** %data
  store [8 x i8] c"package\00", [8 x i8]* %const.bytes122
  %163 = getelementptr inbounds [8 x i8]* %const.bytes122, i32 0, i32 0
  %164 = getelementptr inbounds [8 x i8]* %const.bytes122, i32 0, i32 7
  %165 = getelementptr inbounds %StringRef* %const.struct123, i32 0, i32 0
  %166 = getelementptr inbounds %StringRef* %const.struct123, i32 0, i32 1
  store i8* %163, i8** %165
  store i8* %164, i8** %166
  %167 = load %StringRef* %const.struct123
  %168 = call i1 @"==277"(%StringRef* %162, %StringRef %167)
  br i1 %168, label %if_then119, label %if_else120

if_then119:                                       ; preds = %if_block118
  %169 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %169, i32 8)
  ret void

if_else120:                                       ; preds = %if_block118
  br label %if_block125

if_end121:                                        ; preds = %if_end128, %dumy_block124
  br label %if_end114

dumy_block124:                                    ; No predecessors!
  br label %if_end121

if_block125:                                      ; preds = %if_else120
  %170 = load %StringRef** %data
  store [7 x i8] c"return\00", [7 x i8]* %const.bytes129
  %171 = getelementptr inbounds [7 x i8]* %const.bytes129, i32 0, i32 0
  %172 = getelementptr inbounds [7 x i8]* %const.bytes129, i32 0, i32 6
  %173 = getelementptr inbounds %StringRef* %const.struct130, i32 0, i32 0
  %174 = getelementptr inbounds %StringRef* %const.struct130, i32 0, i32 1
  store i8* %171, i8** %173
  store i8* %172, i8** %174
  %175 = load %StringRef* %const.struct130
  %176 = call i1 @"==277"(%StringRef* %170, %StringRef %175)
  br i1 %176, label %if_then126, label %if_else127

if_then126:                                       ; preds = %if_block125
  %177 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %177, i32 17)
  ret void

if_else127:                                       ; preds = %if_block125
  br label %if_block132

if_end128:                                        ; preds = %if_end135, %dumy_block131
  br label %if_end121

dumy_block131:                                    ; No predecessors!
  br label %if_end128

if_block132:                                      ; preds = %if_else127
  %178 = load %StringRef** %data
  store [5 x i8] c"this\00", [5 x i8]* %const.bytes136
  %179 = getelementptr inbounds [5 x i8]* %const.bytes136, i32 0, i32 0
  %180 = getelementptr inbounds [5 x i8]* %const.bytes136, i32 0, i32 4
  %181 = getelementptr inbounds %StringRef* %const.struct137, i32 0, i32 0
  %182 = getelementptr inbounds %StringRef* %const.struct137, i32 0, i32 1
  store i8* %179, i8** %181
  store i8* %180, i8** %182
  %183 = load %StringRef* %const.struct137
  %184 = call i1 @"==277"(%StringRef* %178, %StringRef %183)
  br i1 %184, label %if_then133, label %if_else134

if_then133:                                       ; preds = %if_block132
  %185 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %185, i32 23)
  ret void

if_else134:                                       ; preds = %if_block132
  br label %if_block139

if_end135:                                        ; preds = %if_end142, %dumy_block138
  br label %if_end128

dumy_block138:                                    ; No predecessors!
  br label %if_end135

if_block139:                                      ; preds = %if_else134
  %186 = load %StringRef** %data
  store [6 x i8] c"throw\00", [6 x i8]* %const.bytes143
  %187 = getelementptr inbounds [6 x i8]* %const.bytes143, i32 0, i32 0
  %188 = getelementptr inbounds [6 x i8]* %const.bytes143, i32 0, i32 5
  %189 = getelementptr inbounds %StringRef* %const.struct144, i32 0, i32 0
  %190 = getelementptr inbounds %StringRef* %const.struct144, i32 0, i32 1
  store i8* %187, i8** %189
  store i8* %188, i8** %190
  %191 = load %StringRef* %const.struct144
  %192 = call i1 @"==277"(%StringRef* %186, %StringRef %191)
  br i1 %192, label %if_then140, label %if_else141

if_then140:                                       ; preds = %if_block139
  %193 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %193, i32 18)
  ret void

if_else141:                                       ; preds = %if_block139
  br label %if_block146

if_end142:                                        ; preds = %if_end149, %dumy_block145
  br label %if_end135

dumy_block145:                                    ; No predecessors!
  br label %if_end142

if_block146:                                      ; preds = %if_else141
  %194 = load %StringRef** %data
  store [5 x i8] c"true\00", [5 x i8]* %const.bytes150
  %195 = getelementptr inbounds [5 x i8]* %const.bytes150, i32 0, i32 0
  %196 = getelementptr inbounds [5 x i8]* %const.bytes150, i32 0, i32 4
  %197 = getelementptr inbounds %StringRef* %const.struct151, i32 0, i32 0
  %198 = getelementptr inbounds %StringRef* %const.struct151, i32 0, i32 1
  store i8* %195, i8** %197
  store i8* %196, i8** %198
  %199 = load %StringRef* %const.struct151
  %200 = call i1 @"==277"(%StringRef* %194, %StringRef %199)
  br i1 %200, label %if_then147, label %if_else148

if_then147:                                       ; preds = %if_block146
  %201 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %201, i32 24)
  ret void

if_else148:                                       ; preds = %if_block146
  br label %if_block153

if_end149:                                        ; preds = %if_end156, %dumy_block152
  br label %if_end142

dumy_block152:                                    ; No predecessors!
  br label %if_end149

if_block153:                                      ; preds = %if_else148
  %202 = load %StringRef** %data
  store [4 x i8] c"try\00", [4 x i8]* %const.bytes157
  %203 = getelementptr inbounds [4 x i8]* %const.bytes157, i32 0, i32 0
  %204 = getelementptr inbounds [4 x i8]* %const.bytes157, i32 0, i32 3
  %205 = getelementptr inbounds %StringRef* %const.struct158, i32 0, i32 0
  %206 = getelementptr inbounds %StringRef* %const.struct158, i32 0, i32 1
  store i8* %203, i8** %205
  store i8* %204, i8** %206
  %207 = load %StringRef* %const.struct158
  %208 = call i1 @"==277"(%StringRef* %202, %StringRef %207)
  br i1 %208, label %if_then154, label %if_else155

if_then154:                                       ; preds = %if_block153
  %209 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %209, i32 19)
  ret void

if_else155:                                       ; preds = %if_block153
  br label %if_block160

if_end156:                                        ; preds = %if_end163, %dumy_block159
  br label %if_end149

dumy_block159:                                    ; No predecessors!
  br label %if_end156

if_block160:                                      ; preds = %if_else155
  %210 = load %StringRef** %data
  store [6 x i8] c"using\00", [6 x i8]* %const.bytes164
  %211 = getelementptr inbounds [6 x i8]* %const.bytes164, i32 0, i32 0
  %212 = getelementptr inbounds [6 x i8]* %const.bytes164, i32 0, i32 5
  %213 = getelementptr inbounds %StringRef* %const.struct165, i32 0, i32 0
  %214 = getelementptr inbounds %StringRef* %const.struct165, i32 0, i32 1
  store i8* %211, i8** %213
  store i8* %212, i8** %214
  %215 = load %StringRef* %const.struct165
  %216 = call i1 @"==277"(%StringRef* %210, %StringRef %215)
  br i1 %216, label %if_then161, label %if_else162

if_then161:                                       ; preds = %if_block160
  %217 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %217, i32 9)
  ret void

if_else162:                                       ; preds = %if_block160
  br label %if_block167

if_end163:                                        ; preds = %if_end170, %dumy_block166
  br label %if_end156

dumy_block166:                                    ; No predecessors!
  br label %if_end163

if_block167:                                      ; preds = %if_else162
  %218 = load %StringRef** %data
  store [4 x i8] c"var\00", [4 x i8]* %const.bytes171
  %219 = getelementptr inbounds [4 x i8]* %const.bytes171, i32 0, i32 0
  %220 = getelementptr inbounds [4 x i8]* %const.bytes171, i32 0, i32 3
  %221 = getelementptr inbounds %StringRef* %const.struct172, i32 0, i32 0
  %222 = getelementptr inbounds %StringRef* %const.struct172, i32 0, i32 1
  store i8* %219, i8** %221
  store i8* %220, i8** %222
  %223 = load %StringRef* %const.struct172
  %224 = call i1 @"==277"(%StringRef* %218, %StringRef %223)
  br i1 %224, label %if_then168, label %if_else169

if_then168:                                       ; preds = %if_block167
  %225 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %225, i32 10)
  ret void

if_else169:                                       ; preds = %if_block167
  br label %if_block174

if_end170:                                        ; preds = %if_end177, %dumy_block173
  br label %if_end163

dumy_block173:                                    ; No predecessors!
  br label %if_end170

if_block174:                                      ; preds = %if_else169
  %226 = load %StringRef** %data
  store [6 x i8] c"while\00", [6 x i8]* %const.bytes178
  %227 = getelementptr inbounds [6 x i8]* %const.bytes178, i32 0, i32 0
  %228 = getelementptr inbounds [6 x i8]* %const.bytes178, i32 0, i32 5
  %229 = getelementptr inbounds %StringRef* %const.struct179, i32 0, i32 0
  %230 = getelementptr inbounds %StringRef* %const.struct179, i32 0, i32 1
  store i8* %227, i8** %229
  store i8* %228, i8** %230
  %231 = load %StringRef* %const.struct179
  %232 = call i1 @"==277"(%StringRef* %226, %StringRef %231)
  br i1 %232, label %if_then175, label %if_else176

if_then175:                                       ; preds = %if_block174
  %233 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %233, i32 20)
  ret void

if_else176:                                       ; preds = %if_block174
  %234 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %234, i32 38)
  ret void

if_end177:                                        ; preds = %dumy_block181, %dumy_block180
  br label %if_end170

dumy_block180:                                    ; No predecessors!
  br label %if_end177

dumy_block181:                                    ; No predecessors!
  br label %if_end177
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==277"(%StringRef* %"$this", %StringRef %other) #3 {
  %"$this.addr" = alloca %StringRef*
  store %StringRef* %"$this", %StringRef** %"$this.addr"
  %other.addr = alloca %StringRef
  store %StringRef %other, %StringRef* %other.addr
  %s = alloca i64
  %i = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %"$this.addr"
  %2 = call i64 @size(%StringRef* %1)
  store i64 %2, i64* %s
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64* %s
  %4 = call i64 @size(%StringRef* %other.addr)
  %5 = call i1 @"!=278"(i64 %3, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  store i64 0, i64* %i
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %6 = load i64* %i
  %7 = load i64* %s
  %8 = call i1 @"<"(i64 %6, i64 %7)
  br i1 %8, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block1

while_step:                                       ; preds = %if_end3
  %9 = load i64* %i
  %10 = call i64 @"+67"(i64 %9, i32 1)
  store i64 %10, i64* %i
  br label %while_block

while_end:                                        ; preds = %while_block
  ret i1 true

if_block1:                                        ; preds = %while_body
  %11 = load %StringRef** %"$this.addr"
  %12 = load i64* %i
  %13 = call i8* @at(%StringRef* %11, i64 %12)
  %14 = load i8* %13
  %15 = load i64* %i
  %16 = call i8* @at(%StringRef* %other.addr, i64 %15)
  %17 = load i8* %16
  %18 = icmp ne i8 %14, %17
  br i1 %18, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block4, %if_block1
  br label %while_step

dumy_block4:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"!=278"(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn25(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn25(i64 %4, i64 %5)
  %7 = icmp ne i64 %3, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8* @at(%StringRef* %"$this", i64 %index) #2 {
  %"$this.addr" = alloca %StringRef*
  store %StringRef* %"$this", %StringRef** %"$this.addr"
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %"$this.addr"
  %2 = getelementptr inbounds %StringRef* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load i64* %index.addr
  %5 = call i8* @ptrAdd(i8* %3, i64 %4)
  ret i8* %5
}

; Function Attrs: noinline nounwind
define void @parseNumeric(%TokenType* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s) #4 {
  %_result.addr = alloca %TokenType*
  store %TokenType* %_result, %TokenType** %_result.addr
  %s.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %isLong = alloca i1
  %isUnsigned = alloca i1
  %isFloating = alloca i1
  %type = alloca i32
  %ch = alloca i8
  %ch2 = alloca i8
  %ch3 = alloca i8
  %funptr = alloca i1 (i8)*
  %funptr48 = alloca i1 (i8)*
  %"$tmpForRef" = alloca %String
  %tmp.v = alloca %String
  %tmp.v82 = alloca i8
  %"$tmpC" = alloca %StringRef
  %tmp.v83 = alloca %TokenType
  %tmp.v84 = alloca %TokenType
  %tmp.v96 = alloca %TokenType
  %tmp.v97 = alloca %TokenType
  %tmp.v109 = alloca %TokenType
  %tmp.v110 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  store i1 false, i1* %isLong
  store i1 false, i1* %isUnsigned
  store i1 false, i1* %isFloating
  store i32 0, i32* %type
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  store i8 %3, i8* %ch
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %5 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4)
  %6 = call i8 @toLower(i8 %5)
  store i8 %6, i8* %ch2
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %8 = call i8 @peekChar276(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 2)
  %9 = call i8 @toLower(i8 %8)
  store i8 %9, i8* %ch3
  br label %if_block

if_block:                                         ; preds = %code
  %10 = load i8* %ch
  %11 = icmp eq i8 %10, 48
  br i1 %11, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %12 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %13 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %12, i32 0, i32 1
  call void @advance264(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %13, i64 2)
  %14 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %15 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %14, i32 0, i32 1
  %16 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %17 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %16, i32 0, i32 2
  %18 = getelementptr inbounds %Token* %17, i32 0, i32 2
  %19 = call i64 @consumeDigits(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %15, i64 16, %String* %18)
  %20 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %21 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %20, i32 0, i32 2
  %22 = getelementptr inbounds %Token* %21, i32 0, i32 3
  store i64 %19, i64* %22
  br label %if_end

if_else:                                          ; preds = %cond.end
  br label %if_block1

if_end:                                           ; preds = %if_end4, %if_then
  br label %if_block59

cond.true:                                        ; preds = %if_block
  %23 = load i8* %ch2
  %24 = icmp eq i8 %23, 120
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %24, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_else

if_block1:                                        ; preds = %if_else
  %25 = load i8* %ch
  %26 = icmp eq i8 %25, 48
  br i1 %26, label %cond.true5, label %cond.false6

if_then2:                                         ; preds = %cond.end7
  %27 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %28 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %27, i32 0, i32 1
  call void @advance264(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %28, i64 2)
  %29 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %30 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %29, i32 0, i32 1
  %31 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %32 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %31, i32 0, i32 2
  %33 = getelementptr inbounds %Token* %32, i32 0, i32 2
  %34 = call i64 @consumeDigits(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %30, i64 2, %String* %33)
  %35 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %36 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %35, i32 0, i32 2
  %37 = getelementptr inbounds %Token* %36, i32 0, i32 3
  store i64 %34, i64* %37
  br label %if_end4

if_else3:                                         ; preds = %cond.end7
  br label %if_block9

if_end4:                                          ; preds = %if_end12, %if_then2
  br label %if_end

cond.true5:                                       ; preds = %if_block1
  %38 = load i8* %ch2
  %39 = icmp eq i8 %38, 98
  br label %cond.end7

cond.false6:                                      ; preds = %if_block1
  br label %cond.end7

cond.end7:                                        ; preds = %cond.false6, %cond.true5
  %cond.res8 = phi i1 [ %39, %cond.true5 ], [ false, %cond.false6 ]
  br i1 %cond.res8, label %if_then2, label %if_else3

if_block9:                                        ; preds = %if_else3
  %40 = load i8* %ch
  %41 = icmp eq i8 %40, 48
  br i1 %41, label %cond.true13, label %cond.false14

if_then10:                                        ; preds = %cond.end15
  %42 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %43 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %42, i32 0, i32 1
  call void @advance264(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %43, i64 1)
  %44 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %45 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %44, i32 0, i32 1
  %46 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %47 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %46, i32 0, i32 2
  %48 = getelementptr inbounds %Token* %47, i32 0, i32 2
  %49 = call i64 @consumeDigits(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %45, i64 8, %String* %48)
  %50 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %51 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %50, i32 0, i32 2
  %52 = getelementptr inbounds %Token* %51, i32 0, i32 3
  store i64 %49, i64* %52
  br label %if_end12

if_else11:                                        ; preds = %cond.end15
  %53 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %54 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %53, i32 0, i32 1
  %55 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %56 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %55, i32 0, i32 2
  %57 = getelementptr inbounds %Token* %56, i32 0, i32 2
  %58 = call i64 @consumeDigits(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %54, i64 10, %String* %57)
  %59 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %60 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %59, i32 0, i32 2
  %61 = getelementptr inbounds %Token* %60, i32 0, i32 3
  store i64 %58, i64* %61
  br label %if_block17

if_end12:                                         ; preds = %if_end19, %if_then10
  br label %if_end4

cond.true13:                                      ; preds = %if_block9
  %62 = load i8* %ch2
  %63 = icmp eq i8 %62, 111
  br label %cond.end15

cond.false14:                                     ; preds = %if_block9
  br label %cond.end15

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond.res16 = phi i1 [ %63, %cond.true13 ], [ false, %cond.false14 ]
  br i1 %cond.res16, label %if_then10, label %if_else11

if_block17:                                       ; preds = %if_else11
  %64 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %65 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %64, i32 0, i32 1
  %66 = call i1 @"pre_!!251"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %65)
  br i1 %66, label %if_then18, label %if_end19

if_then18:                                        ; preds = %if_block17
  %67 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %68 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %67, i32 0, i32 1
  %69 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %68)
  %70 = call i8 @toLower(i8 %69)
  store i8 %70, i8* %ch
  br label %if_block20

if_end19:                                         ; preds = %if_end22, %if_block17
  br label %if_end12

if_block20:                                       ; preds = %if_then18
  %71 = load i8* %ch
  %72 = icmp eq i8 %71, 46
  br i1 %72, label %cond.true32, label %cond.false33

if_then21:                                        ; preds = %cond.end25
  store i1 true, i1* %isFloating
  br label %if_block39

if_end22:                                         ; preds = %if_end51, %cond.end25
  br label %if_end19

cond.true23:                                      ; preds = %cond.end28
  br label %cond.end25

cond.false24:                                     ; preds = %cond.end28
  %73 = load i8* %ch
  %74 = icmp eq i8 %73, 100
  br label %cond.end25

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond.res38 = phi i1 [ true, %cond.true23 ], [ %74, %cond.false24 ]
  br i1 %cond.res38, label %if_then21, label %if_end22

cond.true26:                                      ; preds = %cond.end31
  br label %cond.end28

cond.false27:                                     ; preds = %cond.end31
  %75 = load i8* %ch
  %76 = icmp eq i8 %75, 102
  br label %cond.end28

cond.end28:                                       ; preds = %cond.false27, %cond.true26
  %cond.res37 = phi i1 [ true, %cond.true26 ], [ %76, %cond.false27 ]
  br i1 %cond.res37, label %cond.true23, label %cond.false24

cond.true29:                                      ; preds = %cond.end34
  br label %cond.end31

cond.false30:                                     ; preds = %cond.end34
  %77 = load i8* %ch
  %78 = icmp eq i8 %77, 101
  br label %cond.end31

cond.end31:                                       ; preds = %cond.false30, %cond.true29
  %cond.res36 = phi i1 [ true, %cond.true29 ], [ %78, %cond.false30 ]
  br i1 %cond.res36, label %cond.true26, label %cond.false27

cond.true32:                                      ; preds = %if_block20
  %79 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %80 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %79)
  %81 = call i1 @isOpCharDot(i8 %80)
  %82 = xor i1 true, %81
  br label %cond.end34

cond.false33:                                     ; preds = %if_block20
  br label %cond.end34

cond.end34:                                       ; preds = %cond.false33, %cond.true32
  %cond.res35 = phi i1 [ %82, %cond.true32 ], [ false, %cond.false33 ]
  br i1 %cond.res35, label %cond.true29, label %cond.false30

if_block39:                                       ; preds = %if_then21
  %83 = load i8* %ch
  %84 = icmp eq i8 %83, 46
  br i1 %84, label %if_then40, label %if_end41

if_then40:                                        ; preds = %if_block39
  %85 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  call void @advanceAndCapture1(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %85)
  %86 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  store i1 (i8)* @isDigit, i1 (i8)** %funptr
  %87 = bitcast i1 (i8)** %funptr to %"FunctionPtr[Bool/rtct, Char/rtct]"*
  %88 = load %"FunctionPtr[Bool/rtct, Char/rtct]"* %87
  call void @advanceAndCaptureDigit(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %86, %"FunctionPtr[Bool/rtct, Char/rtct]" %88)
  br label %if_end41

if_end41:                                         ; preds = %if_then40, %if_block39
  br label %if_block42

if_block42:                                       ; preds = %if_end41
  %89 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %90 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %89, i32 0, i32 1
  %91 = call i1 @"pre_!!251"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %90)
  br i1 %91, label %if_then43, label %if_end44

if_then43:                                        ; preds = %if_block42
  %92 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %93 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %92, i32 0, i32 1
  %94 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %93)
  %95 = call i8 @toLower(i8 %94)
  store i8 %95, i8* %ch
  br label %if_block45

if_end44:                                         ; preds = %if_end47, %if_block42
  br label %if_block49

if_block45:                                       ; preds = %if_then43
  %96 = load i8* %ch
  %97 = icmp eq i8 %96, 101
  br i1 %97, label %if_then46, label %if_end47

if_then46:                                        ; preds = %if_block45
  %98 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  call void @advanceAndCapture1(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %98)
  %99 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  store i1 (i8)* @isDigit, i1 (i8)** %funptr48
  %100 = bitcast i1 (i8)** %funptr48 to %"FunctionPtr[Bool/rtct, Char/rtct]"*
  %101 = load %"FunctionPtr[Bool/rtct, Char/rtct]"* %100
  call void @advanceAndCaptureDigit(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %99, %"FunctionPtr[Bool/rtct, Char/rtct]" %101)
  br label %if_end47

if_end47:                                         ; preds = %if_then46, %if_block45
  br label %if_end44

if_block49:                                       ; preds = %if_end44
  %102 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %103 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %102, i32 0, i32 1
  %104 = call i1 @"pre_!!251"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %103)
  br i1 %104, label %if_then50, label %if_end51

if_then50:                                        ; preds = %if_block49
  store i1 true, i1* %isLong
  %105 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %106 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %105, i32 0, i32 1
  %107 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %106)
  %108 = call i8 @toLower(i8 %107)
  store i8 %108, i8* %ch
  br label %if_block52

if_end51:                                         ; preds = %if_end55, %if_block49
  br label %if_end22

if_block52:                                       ; preds = %if_then50
  %109 = load i8* %ch
  %110 = icmp eq i8 %109, 102
  br i1 %110, label %if_then53, label %if_else54

if_then53:                                        ; preds = %if_block52
  store i1 false, i1* %isLong
  %111 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %112 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %111, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %112)
  br label %if_end55

if_else54:                                        ; preds = %if_block52
  br label %if_block56

if_end55:                                         ; preds = %if_end58, %if_then53
  br label %if_end51

if_block56:                                       ; preds = %if_else54
  %113 = load i8* %ch
  %114 = icmp eq i8 %113, 100
  br i1 %114, label %if_then57, label %if_end58

if_then57:                                        ; preds = %if_block56
  %115 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %116 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %115, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %116)
  br label %if_end58

if_end58:                                         ; preds = %if_then57, %if_block56
  br label %if_end55

if_block59:                                       ; preds = %if_end
  %117 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %118 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %117, i32 0, i32 2
  %119 = getelementptr inbounds %Token* %118, i32 0, i32 2
  %120 = call i1 @isEmpty285(%String* %119)
  br i1 %120, label %if_then60, label %if_end61

if_then60:                                        ; preds = %if_block59
  %121 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  call void @ctorFromCt286(%String* %tmp.v)
  %122 = load %String* %tmp.v
  store %String %122, %String* %"$tmpForRef"
  call void @reportError256(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %121, %String* %"$tmpForRef")
  call void @dtor166(%String* %tmp.v)
  %123 = load %TokenType** %_result.addr
  call void @ctor229(%TokenType* %123, i32 0)
  ret void

if_end61:                                         ; preds = %dumy_block, %if_block59
  br label %if_block62

dumy_block:                                       ; No predecessors!
  br label %if_end61

if_block62:                                       ; preds = %if_end61
  %124 = load i1* %isFloating
  %125 = xor i1 true, %124
  br i1 %125, label %if_then63, label %if_end64

if_then63:                                        ; preds = %if_block62
  br label %if_block65

if_end64:                                         ; preds = %if_end74, %if_block62
  br label %if_block79

if_block65:                                       ; preds = %if_then63
  %126 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %127 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %126, i32 0, i32 1
  %128 = call i1 @"pre_!!251"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %127)
  br i1 %128, label %cond.true68, label %cond.false69

if_then66:                                        ; preds = %cond.end70
  store i1 true, i1* %isUnsigned
  %129 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %130 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %129, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %130)
  br label %if_end67

if_end67:                                         ; preds = %if_then66, %cond.end70
  br label %if_block72

cond.true68:                                      ; preds = %if_block65
  %131 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %132 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %131, i32 0, i32 1
  %133 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %132)
  %134 = call i8 @toLower(i8 %133)
  %135 = icmp eq i8 %134, 117
  br label %cond.end70

cond.false69:                                     ; preds = %if_block65
  br label %cond.end70

cond.end70:                                       ; preds = %cond.false69, %cond.true68
  %cond.res71 = phi i1 [ %135, %cond.true68 ], [ false, %cond.false69 ]
  br i1 %cond.res71, label %if_then66, label %if_end67

if_block72:                                       ; preds = %if_end67
  %136 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %137 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %136, i32 0, i32 1
  %138 = call i1 @"pre_!!251"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %137)
  br i1 %138, label %cond.true75, label %cond.false76

if_then73:                                        ; preds = %cond.end77
  store i1 true, i1* %isLong
  %139 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %140 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %139, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %140)
  br label %if_end74

if_end74:                                         ; preds = %if_then73, %cond.end77
  br label %if_end64

cond.true75:                                      ; preds = %if_block72
  %141 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %142 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %141, i32 0, i32 1
  %143 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %142)
  %144 = call i8 @toLower(i8 %143)
  %145 = icmp eq i8 %144, 108
  br label %cond.end77

cond.false76:                                     ; preds = %if_block72
  br label %cond.end77

cond.end77:                                       ; preds = %cond.false76, %cond.true75
  %cond.res78 = phi i1 [ %145, %cond.true75 ], [ false, %cond.false76 ]
  br i1 %cond.res78, label %if_then73, label %if_end74

if_block79:                                       ; preds = %if_end64
  %146 = load i1* %isFloating
  br i1 %146, label %if_then80, label %if_end81

if_then80:                                        ; preds = %if_block79
  %147 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %148 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %147, i32 0, i32 2
  %149 = getelementptr inbounds %Token* %148, i32 0, i32 2
  store i8 0, i8* %tmp.v82
  %150 = load i8* %tmp.v82
  call void @"+=269"(%String* %149, i8 %150)
  %151 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %152 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %151, i32 0, i32 2
  %153 = getelementptr inbounds %Token* %152, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC", %String* %153)
  %154 = load %StringRef* %"$tmpC"
  %155 = call double @asDouble(%StringRef %154)
  %156 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %157 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %156, i32 0, i32 2
  %158 = getelementptr inbounds %Token* %157, i32 0, i32 4
  store double %155, double* %158
  %159 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %160 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %159, i32 0, i32 2
  %161 = getelementptr inbounds %Token* %160, i32 0, i32 2
  call void @popBack287(%String* %161)
  %162 = load %TokenType** %_result.addr
  %163 = load i1* %isLong
  br i1 %163, label %cond_alt1, label %cond_alt2

if_end81:                                         ; preds = %cond_destruct_end87, %if_block79
  br label %if_block89

cond_alt1:                                        ; preds = %if_then80
  call void @ctor229(%TokenType* %tmp.v83, i32 47)
  br label %cond_end

cond_alt2:                                        ; preds = %if_then80
  call void @ctor229(%TokenType* %tmp.v84, i32 46)
  br label %cond_end

cond_end:                                         ; preds = %cond_alt2, %cond_alt1
  %cond = phi %TokenType* [ %tmp.v83, %cond_alt1 ], [ %tmp.v84, %cond_alt2 ]
  call void @ctor218(%TokenType* %162, %TokenType* %cond)
  br i1 %163, label %cond_destruct_alt1, label %cond_destruct_alt2

cond_destruct_alt1:                               ; preds = %cond_end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %cond_end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  ret void

cond_destruct_alt185:                             ; preds = %dumy_block88
  br label %cond_destruct_end87

cond_destruct_alt286:                             ; preds = %dumy_block88
  br label %cond_destruct_end87

cond_destruct_end87:                              ; preds = %cond_destruct_alt286, %cond_destruct_alt185
  br label %if_end81

dumy_block88:                                     ; No predecessors!
  br i1 %163, label %cond_destruct_alt185, label %cond_destruct_alt286

if_block89:                                       ; preds = %if_end81
  %164 = load i1* %isUnsigned
  br i1 %164, label %if_then90, label %if_else91

if_then90:                                        ; preds = %if_block89
  %165 = load %TokenType** %_result.addr
  %166 = load i1* %isLong
  br i1 %166, label %cond_alt193, label %cond_alt294

if_else91:                                        ; preds = %if_block89
  %167 = load %TokenType** %_result.addr
  %168 = load i1* %isLong
  br i1 %168, label %cond_alt1106, label %cond_alt2107

if_end92:                                         ; preds = %cond_destruct_end117, %cond_destruct_end104
  ret void

cond_alt193:                                      ; preds = %if_then90
  call void @ctor229(%TokenType* %tmp.v96, i32 45)
  br label %cond_end95

cond_alt294:                                      ; preds = %if_then90
  call void @ctor229(%TokenType* %tmp.v97, i32 44)
  br label %cond_end95

cond_end95:                                       ; preds = %cond_alt294, %cond_alt193
  %cond98 = phi %TokenType* [ %tmp.v96, %cond_alt193 ], [ %tmp.v97, %cond_alt294 ]
  call void @ctor218(%TokenType* %165, %TokenType* %cond98)
  br i1 %166, label %cond_destruct_alt199, label %cond_destruct_alt2100

cond_destruct_alt199:                             ; preds = %cond_end95
  br label %cond_destruct_end101

cond_destruct_alt2100:                            ; preds = %cond_end95
  br label %cond_destruct_end101

cond_destruct_end101:                             ; preds = %cond_destruct_alt2100, %cond_destruct_alt199
  ret void

cond_destruct_alt1102:                            ; preds = %dumy_block105
  br label %cond_destruct_end104

cond_destruct_alt2103:                            ; preds = %dumy_block105
  br label %cond_destruct_end104

cond_destruct_end104:                             ; preds = %cond_destruct_alt2103, %cond_destruct_alt1102
  br label %if_end92

dumy_block105:                                    ; No predecessors!
  br i1 %166, label %cond_destruct_alt1102, label %cond_destruct_alt2103

cond_alt1106:                                     ; preds = %if_else91
  call void @ctor229(%TokenType* %tmp.v109, i32 43)
  br label %cond_end108

cond_alt2107:                                     ; preds = %if_else91
  call void @ctor229(%TokenType* %tmp.v110, i32 42)
  br label %cond_end108

cond_end108:                                      ; preds = %cond_alt2107, %cond_alt1106
  %cond111 = phi %TokenType* [ %tmp.v109, %cond_alt1106 ], [ %tmp.v110, %cond_alt2107 ]
  call void @ctor218(%TokenType* %167, %TokenType* %cond111)
  br i1 %168, label %cond_destruct_alt1112, label %cond_destruct_alt2113

cond_destruct_alt1112:                            ; preds = %cond_end108
  br label %cond_destruct_end114

cond_destruct_alt2113:                            ; preds = %cond_end108
  br label %cond_destruct_end114

cond_destruct_end114:                             ; preds = %cond_destruct_alt2113, %cond_destruct_alt1112
  ret void

cond_destruct_alt1115:                            ; preds = %dumy_block118
  br label %cond_destruct_end117

cond_destruct_alt2116:                            ; preds = %dumy_block118
  br label %cond_destruct_end117

cond_destruct_end117:                             ; preds = %cond_destruct_alt2116, %cond_destruct_alt1115
  br label %if_end92

dumy_block118:                                    ; No predecessors!
  br i1 %168, label %cond_destruct_alt1115, label %cond_destruct_alt2116
}

; Function Attrs: inlinehint nounwind
define internal i64 @consumeDigits(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r, i64 %base, %String* %capture) #3 {
  %r.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %base.addr = alloca i64
  store i64 %base, i64* %base.addr
  %capture.addr = alloca %String*
  store %String* %capture, %String** %capture.addr
  %res = alloca i64
  br label %code

code:                                             ; preds = %0
  store i64 0, i64* %res
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load i64* %base.addr
  %2 = call i1 @"==279"(i64 %1, i32 16)
  br i1 %2, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  br label %while_block

if_else:                                          ; preds = %if_block
  br label %while_block8

if_end:                                           ; preds = %while_end11, %while_end
  %3 = load i64* %res
  ret i64 %3

while_block:                                      ; preds = %while_step, %if_then
  %4 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %5 = call i1 @"pre_!!251"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  br i1 %5, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  br label %if_block5

while_step:                                       ; preds = %if_end7
  %6 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %6)
  br label %while_block

while_end:                                        ; preds = %cond.end
  br label %if_end

cond.true:                                        ; preds = %while_block
  %7 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %8 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %7)
  %9 = call i1 @isXdigit(i8 %8)
  br i1 %9, label %cond.true1, label %cond.false2

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.end3
  %cond.res4 = phi i1 [ %cond.res, %cond.end3 ], [ false, %cond.false ]
  br i1 %cond.res4, label %while_body, label %while_end

cond.true1:                                       ; preds = %cond.true
  br label %cond.end3

cond.false2:                                      ; preds = %cond.true
  %10 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %11 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %10)
  %12 = icmp eq i8 %11, 95
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ true, %cond.true1 ], [ %12, %cond.false2 ]
  br label %cond.end

if_block5:                                        ; preds = %while_body
  %13 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %14 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %13)
  %15 = icmp ne i8 %14, 95
  br i1 %15, label %if_then6, label %if_end7

if_then6:                                         ; preds = %if_block5
  %16 = load %String** %capture.addr
  %17 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %18 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %17)
  call void @"+=269"(%String* %16, i8 %18)
  %19 = load i64* %res
  %20 = load i64* %base.addr
  %21 = call i64 @"*282"(i64 %19, i64 %20)
  store i64 %21, i64* %res
  %22 = load i64* %res
  %23 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %24 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %23)
  %25 = call i32 @getXdigitVal(i8 %24)
  %26 = call i64 @"+283"(i64 %22, i32 %25)
  store i64 %26, i64* %res
  br label %if_end7

if_end7:                                          ; preds = %if_then6, %if_block5
  br label %while_step

while_block8:                                     ; preds = %while_step10, %if_else
  %27 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %28 = call i1 @"pre_!!251"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %27)
  br i1 %28, label %cond.true12, label %cond.false13

while_body9:                                      ; preds = %cond.end14
  br label %if_block20

while_step10:                                     ; preds = %if_end22
  %29 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %29)
  br label %while_block8

while_end11:                                      ; preds = %cond.end14
  br label %if_end

cond.true12:                                      ; preds = %while_block8
  %30 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %31 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %30)
  %32 = call i1 @isXdigit(i8 %31)
  br i1 %32, label %cond.true15, label %cond.false16

cond.false13:                                     ; preds = %while_block8
  br label %cond.end14

cond.end14:                                       ; preds = %cond.false13, %cond.end17
  %cond.res19 = phi i1 [ %cond.res18, %cond.end17 ], [ false, %cond.false13 ]
  br i1 %cond.res19, label %while_body9, label %while_end11

cond.true15:                                      ; preds = %cond.true12
  br label %cond.end17

cond.false16:                                     ; preds = %cond.true12
  %33 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %34 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %33)
  %35 = icmp eq i8 %34, 95
  br label %cond.end17

cond.end17:                                       ; preds = %cond.false16, %cond.true15
  %cond.res18 = phi i1 [ true, %cond.true15 ], [ %35, %cond.false16 ]
  br label %cond.end14

if_block20:                                       ; preds = %while_body9
  %36 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %37 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %36)
  %38 = icmp ne i8 %37, 95
  br i1 %38, label %if_then21, label %if_end22

if_then21:                                        ; preds = %if_block20
  %39 = load %String** %capture.addr
  %40 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %41 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %40)
  call void @"+=269"(%String* %39, i8 %41)
  %42 = load i64* %res
  %43 = load i64* %base.addr
  %44 = call i64 @"*282"(i64 %42, i64 %43)
  store i64 %44, i64* %res
  %45 = load i64* %res
  %46 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %47 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %46)
  %48 = call i32 @getDigitVal(i8 %47)
  %49 = call i64 @"+283"(i64 %45, i32 %48)
  store i64 %49, i64* %res
  br label %if_end22

if_end22:                                         ; preds = %if_then21, %if_block20
  br label %while_step10
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==279"(i64 %x, i32 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i32* %y.addr
  %3 = call i64 @cmn280(i64 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn281(i32 %4, i64 %5)
  %7 = icmp eq i64 %3, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @cmn280(i64 %x, i32 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind
define internal i64 @cmn281(i32 %x, i64 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = zext i32 %1 to i64
  store i64 %2, i64* %tmp.v
  %3 = load i64* %tmp.v
  ret i64 %3
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isXdigit(i8 %c) #2 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @isxdigit(i32 %2)
  %4 = call i1 @"!=113"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @isxdigit(i32)

; Function Attrs: alwaysinline nounwind
define internal i64 @"*282"(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn22(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn22(i64 %4, i64 %5)
  %7 = mul i64 %3, %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"+283"(i64 %x, i32 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i32* %y.addr
  %3 = call i64 @cmn280(i64 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn281(i32 %4, i64 %5)
  %7 = add i64 %3, %6
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal i32 @getDigitVal(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  %tmp.v1 = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  call void @_ass_32_8z(i32* %tmp.v1, i8 48)
  %3 = load i32* %tmp.v1
  %4 = call i32 @-36(i32 %2, i32 %3)
  ret i32 %4
}

; Function Attrs: inlinehint nounwind
define internal void @advanceAndCaptureDigit(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %"FunctionPtr[Bool/rtct, Char/rtct]" %pred) #3 {
  %s.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %s, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %pred.addr = alloca %"FunctionPtr[Bool/rtct, Char/rtct]"
  store %"FunctionPtr[Bool/rtct, Char/rtct]" %pred, %"FunctionPtr[Bool/rtct, Char/rtct]"* %pred.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = call i1 @"pre_!!251"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  br i1 %3, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  br label %if_block

while_step:                                       ; preds = %if_end
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %5 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, i32 0, i32 1
  call void @popFront240(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  br label %while_block

while_end:                                        ; preds = %cond.end
  ret void

cond.true:                                        ; preds = %while_block
  %6 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %7 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %6, i32 0, i32 1
  %8 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %7)
  %9 = call i1 @"()284"(%"FunctionPtr[Bool/rtct, Char/rtct]"* %pred.addr, i8 %8)
  br i1 %9, label %cond.true1, label %cond.false2

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.end3
  %cond.res4 = phi i1 [ %cond.res, %cond.end3 ], [ false, %cond.false ]
  br i1 %cond.res4, label %while_body, label %while_end

cond.true1:                                       ; preds = %cond.true
  br label %cond.end3

cond.false2:                                      ; preds = %cond.true
  %10 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %11 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %10, i32 0, i32 1
  %12 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %11)
  %13 = icmp eq i8 %12, 95
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ true, %cond.true1 ], [ %13, %cond.false2 ]
  br label %cond.end

if_block:                                         ; preds = %while_body
  %14 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %15 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %14, i32 0, i32 1
  %16 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %15)
  %17 = icmp ne i8 %16, 95
  br i1 %17, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %18 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %19 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %18, i32 0, i32 2
  %20 = getelementptr inbounds %Token* %19, i32 0, i32 2
  %21 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %s.addr
  %22 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %21, i32 0, i32 1
  %23 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %22)
  call void @"+=269"(%String* %20, i8 %23)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  br label %while_step
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"()284"(%"FunctionPtr[Bool/rtct, Char/rtct]"* %"$this", i8 %p1) #2 {
  %"$this.addr" = alloca %"FunctionPtr[Bool/rtct, Char/rtct]"*
  store %"FunctionPtr[Bool/rtct, Char/rtct]"* %"$this", %"FunctionPtr[Bool/rtct, Char/rtct]"** %"$this.addr"
  %p1.addr = alloca i8
  store i8 %p1, i8* %p1.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"FunctionPtr[Bool/rtct, Char/rtct]"** %"$this.addr"
  %2 = load i8* %p1.addr
  %3 = bitcast %"FunctionPtr[Bool/rtct, Char/rtct]"* %1 to i1 (i8)**
  %4 = load i1 (i8)** %3
  %5 = call i1 %4(i8 %2)
  ret i1 %5
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isEmpty285(%String* %"$this") #2 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  %2 = getelementptr inbounds %String* %1, i32 0, i32 0
  %3 = load %String** %"$this.addr"
  %4 = getelementptr inbounds %String* %3, i32 0, i32 1
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i1 @"==155"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  ret i1 %6
}

; Function Attrs: inlinehint nounwind
define internal void @ctorFromCt286(%String* %"$this") #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %"$tmpForRef" = alloca %StringRef
  %const.bytes = alloca [24 x i8]
  %const.struct = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  store [24 x i8] c"Invalid numeric literal\00", [24 x i8]* %const.bytes
  %2 = getelementptr inbounds [24 x i8]* %const.bytes, i32 0, i32 0
  %3 = getelementptr inbounds [24 x i8]* %const.bytes, i32 0, i32 23
  %4 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %5 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %2, i8** %4
  store i8* %3, i8** %5
  %6 = load %StringRef* %const.struct
  store %StringRef %6, %StringRef* %"$tmpForRef"
  call void @ctor266(%String* %1, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popBack287(%String* %"$this") #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  %2 = getelementptr inbounds %String* %1, i32 0, i32 1
  %3 = load %String** %"$this.addr"
  %4 = getelementptr inbounds %String* %3, i32 0, i32 1
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %4, i64 -1)
  %5 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=153"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  %6 = load %String** %"$this.addr"
  %7 = getelementptr inbounds %String* %6, i32 0, i32 1
  %8 = call i8* @value(%"RawPtr[Char/rtct]"* %7)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @toString288(%String* sret %_result, %StringRef %a1, i8 %a2, %StringRef %a3, i32 %a4, i8 %a5) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %a1.addr = alloca %StringRef
  store %StringRef %a1, %StringRef* %a1.addr
  %a2.addr = alloca i8
  store i8 %a2, i8* %a2.addr
  %a3.addr = alloca %StringRef
  store %StringRef %a3, %StringRef* %a3.addr
  %a4.addr = alloca i32
  store i32 %a4, i32* %a4.addr
  %a5.addr = alloca i8
  store i8 %a5, i8* %a5.addr
  %s = alloca %StringOutputStream
  br label %code

code:                                             ; preds = %0
  call void @ctor142(%StringOutputStream* %s)
  %1 = call %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %a1.addr)
  %2 = call %StringOutputStream* @"<<289"(%StringOutputStream* %1, i8* %a2.addr)
  %3 = call %StringOutputStream* @"<<"(%StringOutputStream* %2, %StringRef* %a3.addr)
  %4 = call %StringOutputStream* @"<<293"(%StringOutputStream* %3, i32* %a4.addr)
  %5 = call %StringOutputStream* @"<<289"(%StringOutputStream* %4, i8* %a5.addr)
  %6 = load %String** %_result.addr
  %7 = getelementptr inbounds %StringOutputStream* %s, i32 0, i32 0
  call void @ctor163(%String* %6, %String* %7)
  call void @dtor165(%StringOutputStream* %s)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor165(%StringOutputStream* %s)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringOutputStream* @"<<289"(%StringOutputStream* %s, i8* %x) #3 {
  %s.addr = alloca %StringOutputStream*
  store %StringOutputStream* %s, %StringOutputStream** %s.addr
  %x.addr = alloca i8*
  store i8* %x, i8** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %s.addr
  %2 = load i8** %x.addr
  %3 = load i8* %2
  call void @"<<<290"(%StringOutputStream* %1, i8 %3)
  %4 = load %StringOutputStream** %s.addr
  ret %StringOutputStream* %4
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<290"(%StringOutputStream* %"$this", i8 %x) #2 {
  %"$this.addr" = alloca %StringOutputStream*
  store %StringOutputStream* %"$this", %StringOutputStream** %"$this.addr"
  %x.addr = alloca i8
  store i8 %x, i8* %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %"$this.addr"
  %2 = getelementptr inbounds %StringOutputStream* %1, i32 0, i32 0
  %3 = load i8* %x.addr
  call void @append291(%String* %2, i8 %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @append291(%String* %"$this", i8 %value) #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %value.addr = alloca i8
  store i8 %value, i8* %value.addr
  %tmp.v = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  %2 = load i8* %value.addr
  %3 = load %String** %"$this.addr"
  %4 = getelementptr inbounds %String* %3, i32 0, i32 1
  %5 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %4)
  %6 = load %String** %"$this.addr"
  %7 = getelementptr inbounds %String* %6, i32 0, i32 1
  %8 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %7)
  call void @ctor100(%StringRef* %tmp.v, i8* %5, i8* %8)
  %9 = load %StringRef* %tmp.v
  call void @insertBefore292(%String* %1, i8 %2, %StringRef %9)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @insertBefore292(%String* %"$this", i8 %value, %StringRef %pos) #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %value.addr = alloca i8
  store i8 %value, i8* %value.addr
  %pos.addr = alloca %StringRef
  store %StringRef %pos, %StringRef* %pos.addr
  %posCount = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %p = alloca %"RawPtr[Char/rtct]"
  %q = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  %"$tmpC1" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC2" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC3" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC4" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef* %pos.addr
  call void @_frontPtr(%"RawPtr[Char/rtct]"* %"$tmpC", %StringRef %1)
  %2 = load %String** %"$this.addr"
  %3 = getelementptr inbounds %String* %2, i32 0, i32 0
  %4 = load %"RawPtr[Char/rtct]"* %3
  %5 = call i64 @diff(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %4)
  store i64 %5, i64* %posCount
  %6 = load %String** %"$this.addr"
  %7 = load %String** %"$this.addr"
  %8 = call i64 @size152(%String* %7)
  %9 = call i64 @"+67"(i64 %8, i32 1)
  call void @reserve(%String* %6, i64 %9)
  %10 = load %String** %"$this.addr"
  %11 = getelementptr inbounds %String* %10, i32 0, i32 1
  call void @advance(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]"* %11, i64 -1)
  %12 = load %String** %"$this.addr"
  %13 = getelementptr inbounds %String* %12, i32 0, i32 0
  %14 = load i64* %posCount
  store i64 1, i64* %tmp.v
  %15 = load i64* %tmp.v
  %16 = call i64 @-46(i64 %14, i64 %15)
  call void @advance(%"RawPtr[Char/rtct]"* %q, %"RawPtr[Char/rtct]"* %13, i64 %16)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %17 = load %"RawPtr[Char/rtct]"* %q
  %18 = call i1 @"==155"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %17)
  %19 = xor i1 true, %18
  br i1 %19, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %20 = call i8* @value(%"RawPtr[Char/rtct]"* %p)
  %21 = load i8* %20
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC1", %"RawPtr[Char/rtct]"* %p)
  %22 = call i8* @value(%"RawPtr[Char/rtct]"* %"$tmpC1")
  store i8 %21, i8* %22
  %23 = call i8* @value(%"RawPtr[Char/rtct]"* %p)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC2", %"RawPtr[Char/rtct]"* %p, i64 -1)
  %24 = load %"RawPtr[Char/rtct]"* %"$tmpC2"
  call void @"=153"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %24)
  br label %while_block

while_end:                                        ; preds = %while_block
  %25 = load i8* %value.addr
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC3", %"RawPtr[Char/rtct]"* %p)
  %26 = call i8* @value(%"RawPtr[Char/rtct]"* %"$tmpC3")
  store i8 %25, i8* %26
  %27 = load %String** %"$this.addr"
  %28 = getelementptr inbounds %String* %27, i32 0, i32 1
  %29 = load %String** %"$this.addr"
  %30 = getelementptr inbounds %String* %29, i32 0, i32 1
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC4", %"RawPtr[Char/rtct]"* %30)
  %31 = load %"RawPtr[Char/rtct]"* %"$tmpC4"
  call void @"=153"(%"RawPtr[Char/rtct]"* %28, %"RawPtr[Char/rtct]" %31)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringOutputStream* @"<<293"(%StringOutputStream* %s, i32* %x) #3 {
  %s.addr = alloca %StringOutputStream*
  store %StringOutputStream* %s, %StringOutputStream** %s.addr
  %x.addr = alloca i32*
  store i32* %x, i32** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %s.addr
  %2 = load i32** %x.addr
  %3 = load i32* %2
  call void @"<<<294"(%StringOutputStream* %1, i32 %3)
  %4 = load %StringOutputStream** %s.addr
  ret %StringOutputStream* %4
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<294"(%StringOutputStream* %"$this", i32 %x) #2 {
  %"$this.addr" = alloca %StringOutputStream*
  store %StringOutputStream* %"$this", %StringOutputStream** %"$this.addr"
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %"$tmpC" = alloca %StringRef
  %"$tmpC1" = alloca %String
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %"$this.addr"
  %2 = getelementptr inbounds %StringOutputStream* %1, i32 0, i32 0
  %3 = load i32* %x.addr
  call void @intToString(%String* %"$tmpC1", i32 %3)
  call void @all297(%StringRef* %"$tmpC", %String* %"$tmpC1")
  %4 = load %StringRef* %"$tmpC"
  call void @append295(%String* %2, %StringRef %4)
  call void @dtor166(%String* %"$tmpC1")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @append295(%String* %"$this", %StringRef %range) #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %range.addr = alloca %StringRef
  store %StringRef %range, %StringRef* %range.addr
  %tmp.v = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  %2 = load %StringRef* %range.addr
  %3 = load %String** %"$this.addr"
  %4 = getelementptr inbounds %String* %3, i32 0, i32 1
  %5 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %4)
  %6 = load %String** %"$this.addr"
  %7 = getelementptr inbounds %String* %6, i32 0, i32 1
  %8 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %7)
  call void @ctor100(%StringRef* %tmp.v, i8* %5, i8* %8)
  %9 = load %StringRef* %tmp.v
  call void @insertBefore296(%String* %1, %StringRef %2, %StringRef %9)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @insertBefore296(%String* %"$this", %StringRef %range, %StringRef %pos) #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %range.addr = alloca %StringRef
  store %StringRef %range, %StringRef* %range.addr
  %pos.addr = alloca %StringRef
  store %StringRef %pos, %StringRef* %pos.addr
  %n = alloca i64
  %index = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %p = alloca %"RawPtr[Char/rtct]"
  %q = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  %"$tmpC1" = alloca %"RawPtr[Char/rtct]"
  %tmp.v2 = alloca i64
  %"$tmpC3" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC4" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC9" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC10" = alloca %"RawPtr[Char/rtct]"
  %tmp.v11 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = call i64 @size(%StringRef* %range.addr)
  store i64 %1, i64* %n
  %2 = load %StringRef* %pos.addr
  call void @_frontPtr(%"RawPtr[Char/rtct]"* %"$tmpC", %StringRef %2)
  %3 = load %String** %"$this.addr"
  %4 = getelementptr inbounds %String* %3, i32 0, i32 0
  %5 = load %"RawPtr[Char/rtct]"* %4
  %6 = call i64 @diff(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %5)
  store i64 %6, i64* %index
  %7 = load %String** %"$this.addr"
  %8 = load %String** %"$this.addr"
  %9 = call i64 @size152(%String* %8)
  %10 = load i64* %n
  %11 = call i64 @"+24"(i64 %9, i64 %10)
  call void @reserve(%String* %7, i64 %11)
  %12 = load %String** %"$this.addr"
  %13 = getelementptr inbounds %String* %12, i32 0, i32 1
  call void @advance(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]"* %13, i64 -1)
  %14 = load %String** %"$this.addr"
  %15 = getelementptr inbounds %String* %14, i32 0, i32 0
  %16 = load i64* %index
  store i64 1, i64* %tmp.v
  %17 = load i64* %tmp.v
  %18 = call i64 @-46(i64 %16, i64 %17)
  call void @advance(%"RawPtr[Char/rtct]"* %q, %"RawPtr[Char/rtct]"* %15, i64 %18)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %19 = load %"RawPtr[Char/rtct]"* %q
  %20 = call i1 @"==155"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %19)
  %21 = xor i1 true, %20
  br i1 %21, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %22 = call i8* @value(%"RawPtr[Char/rtct]"* %p)
  %23 = load i8* %22
  %24 = load i64* %n
  store i64 %24, i64* %tmp.v2
  %25 = load i64* %tmp.v2
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC1", %"RawPtr[Char/rtct]"* %p, i64 %25)
  %26 = call i8* @value(%"RawPtr[Char/rtct]"* %"$tmpC1")
  store i8 %23, i8* %26
  %27 = call i8* @value(%"RawPtr[Char/rtct]"* %p)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC3", %"RawPtr[Char/rtct]"* %p, i64 -1)
  %28 = load %"RawPtr[Char/rtct]"* %"$tmpC3"
  call void @"=153"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %28)
  br label %while_block

while_end:                                        ; preds = %while_block
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC4", %"RawPtr[Char/rtct]"* %p)
  %29 = load %"RawPtr[Char/rtct]"* %"$tmpC4"
  call void @"=153"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %29)
  br label %while_block5

while_block5:                                     ; preds = %while_step7, %while_end
  %30 = call i1 @isEmpty104(%StringRef* %range.addr)
  %31 = xor i1 true, %30
  br i1 %31, label %while_body6, label %while_end8

while_body6:                                      ; preds = %while_block5
  %32 = call i8* @front110(%StringRef* %range.addr)
  %33 = load i8* %32
  %34 = call i8* @value(%"RawPtr[Char/rtct]"* %p)
  store i8 %33, i8* %34
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC9", %"RawPtr[Char/rtct]"* %p)
  %35 = load %"RawPtr[Char/rtct]"* %"$tmpC9"
  call void @"=153"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %35)
  call void @popFront114(%StringRef* %range.addr)
  br label %while_step7

while_step7:                                      ; preds = %while_body6
  br label %while_block5

while_end8:                                       ; preds = %while_block5
  %36 = load %String** %"$this.addr"
  %37 = getelementptr inbounds %String* %36, i32 0, i32 1
  %38 = load %String** %"$this.addr"
  %39 = getelementptr inbounds %String* %38, i32 0, i32 1
  %40 = load i64* %n
  store i64 %40, i64* %tmp.v11
  %41 = load i64* %tmp.v11
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC10", %"RawPtr[Char/rtct]"* %39, i64 %41)
  %42 = load %"RawPtr[Char/rtct]"* %"$tmpC10"
  call void @"=153"(%"RawPtr[Char/rtct]"* %37, %"RawPtr[Char/rtct]" %42)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @all297(%StringRef* sret %_result, %String* %"$this") #2 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef** %_result.addr
  %2 = load %String** %"$this.addr"
  %3 = getelementptr inbounds %String* %2, i32 0, i32 0
  %4 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %3)
  %5 = load %String** %"$this.addr"
  %6 = getelementptr inbounds %String* %5, i32 0, i32 1
  %7 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %6)
  call void @ctor100(%StringRef* %1, i8* %4, i8* %7)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @intToString(%String* sret %_result, i32 %x) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %buf = alloca [12 x i8]
  %"$tmpForRef" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = bitcast [12 x i8]* %buf to i8*
  store i8 0, i8* %1
  %2 = load i32* %x.addr
  %3 = bitcast [12 x i8]* %buf to i8*
  call void @_Int_to_CString(i32 %2, i8* %3)
  %4 = load %String** %_result.addr
  %5 = bitcast [12 x i8]* %buf to i8*
  %6 = call %StringRef @_String_fromCString(i8* %5)
  store %StringRef %6, %StringRef* %"$tmpForRef"
  call void @ctor266(%String* %4, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor298(%TokenType* %"$this") #2 {
  %"$this.addr" = alloca %TokenType*
  store %TokenType* %"$this", %TokenType** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor299(%Token* %"$this") #2 {
  %"$this.addr" = alloca %Token*
  store %Token* %"$this", %Token** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %Token** %"$this.addr"
  %2 = getelementptr inbounds %Token* %1, i32 0, i32 2
  call void @dtor166(%String* %2)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"+=300"(%"Vector[UInt/rtct]"* %"$this", i32* %value) #2 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %value.addr = alloca i32*
  store i32* %value, i32** %value.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = load i32** %value.addr
  call void @pushBack301(%"Vector[UInt/rtct]"* %1, i32* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @pushBack301(%"Vector[UInt/rtct]"* %"$this", i32* %value) #3 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %value.addr = alloca i32*
  store i32* %value, i32** %value.addr
  %t = alloca i64
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 1
  %3 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[UInt/rtct]"* %3, i32 0, i32 2
  %5 = load %"RawPtr[UInt/rtct]"* %4
  %6 = call i1 @"==302"(%"RawPtr[UInt/rtct]"* %2, %"RawPtr[UInt/rtct]" %5)
  br i1 %6, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %7 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %8 = call i64 @capacity303(%"Vector[UInt/rtct]"* %7)
  %9 = call i64 @"*183"(i32 2, i64 %8)
  store i64 %9, i64* %t
  br label %if_block1

if_end:                                           ; preds = %if_end3, %if_block
  %10 = load i32** %value.addr
  %11 = load i32* %10
  %12 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %13 = getelementptr inbounds %"Vector[UInt/rtct]"* %12, i32 0, i32 1
  %14 = call i32* @value314(%"RawPtr[UInt/rtct]"* %13)
  store i32 %11, i32* %14
  %15 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %16 = getelementptr inbounds %"Vector[UInt/rtct]"* %15, i32 0, i32 1
  %17 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %18 = getelementptr inbounds %"Vector[UInt/rtct]"* %17, i32 0, i32 1
  call void @advance315(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]"* %18)
  %19 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %16, %"RawPtr[UInt/rtct]" %19)
  ret void

if_block1:                                        ; preds = %if_then
  %20 = load i64* %t
  %21 = call i1 @"<182"(i64 %20, i32 2)
  br i1 %21, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 2, i64* %t
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %22 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %23 = load i64* %t
  call void @reserve306(%"Vector[UInt/rtct]"* %22, i64 %23)
  br label %if_end
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==302"(%"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]" %other) #2 {
  %"$this.addr" = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[UInt/rtct]"
  store %"RawPtr[UInt/rtct]" %other, %"RawPtr[UInt/rtct]"* %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load i32** %2
  %4 = bitcast i32* %3 to i8*
  %5 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %other.addr, i32 0, i32 0
  %6 = load i32** %5
  %7 = bitcast i32* %6 to i8*
  %8 = call i1 @implOpRefEQ(i8* %4, i8* %7)
  ret i1 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @capacity303(%"Vector[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 2
  %3 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[UInt/rtct]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[UInt/rtct]"* %4
  %6 = call i64 @diff304(%"RawPtr[UInt/rtct]"* %2, %"RawPtr[UInt/rtct]" %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @diff304(%"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]" %other) #2 {
  %"$this.addr" = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[UInt/rtct]"
  store %"RawPtr[UInt/rtct]" %other, %"RawPtr[UInt/rtct]"* %other.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %"$this.addr"
  %2 = call i8* @bytePtr305(%"RawPtr[UInt/rtct]"* %1)
  %3 = call i8* @bytePtr305(%"RawPtr[UInt/rtct]"* %other.addr)
  %4 = call i64 @ptrDiff(i8* %2, i8* %3)
  store i64 4, i64* %tmp.v1
  %5 = load i64* %tmp.v1
  %6 = call i64 @"/144"(i64 %4, i64 %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8* @bytePtr305(%"RawPtr[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load i32** %2
  %4 = bitcast i32* %3 to i8*
  ret i8* %4
}

; Function Attrs: inlinehint nounwind
define internal void @reserve306(%"Vector[UInt/rtct]"* %"$this", i64 %n) #3 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %curCapacity = alloca i64
  %tmp.v = alloca i64
  %curSize = alloca i64
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC7" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = call i64 @capacity303(%"Vector[UInt/rtct]"* %1)
  store i64 %2, i64* %curCapacity
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64* %n.addr
  %4 = load i64* %curCapacity
  %5 = call i1 @"<="(i64 %3, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64* %n.addr
  %7 = call i1 @"<182"(i64 %6, i32 8)
  br i1 %7, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 8, i64* %n.addr
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  br label %if_block4

if_block4:                                        ; preds = %if_end3
  %8 = load i64* %n.addr
  %9 = load i64* %curCapacity
  %10 = call double @"*151"(double 2.000000e+00, i64 %9)
  %11 = call i1 @"<148"(i64 %8, double %10)
  br i1 %11, label %if_then5, label %if_end6

if_then5:                                         ; preds = %if_block4
  %12 = load i64* %curCapacity
  %13 = call double @"*151"(double 2.000000e+00, i64 %12)
  %14 = fptoui double %13 to i64
  store i64 %14, i64* %tmp.v
  %15 = load i64* %tmp.v
  store i64 %15, i64* %n.addr
  br label %if_end6

if_end6:                                          ; preds = %if_then5, %if_block4
  %16 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %17 = call i64 @size307(%"Vector[UInt/rtct]"* %16)
  store i64 %17, i64* %curSize
  %18 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %19 = getelementptr inbounds %"Vector[UInt/rtct]"* %18, i32 0, i32 0
  %20 = load i64* %n.addr
  call void @reallocPtr308(%"RawPtr[UInt/rtct]"* %19, i64 %20)
  %21 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %22 = getelementptr inbounds %"Vector[UInt/rtct]"* %21, i32 0, i32 1
  %23 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %24 = getelementptr inbounds %"Vector[UInt/rtct]"* %23, i32 0, i32 0
  %25 = load i64* %curSize
  call void @advance310(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]"* %24, i64 %25)
  %26 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %22, %"RawPtr[UInt/rtct]" %26)
  %27 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %28 = getelementptr inbounds %"Vector[UInt/rtct]"* %27, i32 0, i32 2
  %29 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %30 = getelementptr inbounds %"Vector[UInt/rtct]"* %29, i32 0, i32 0
  %31 = load i64* %n.addr
  call void @advance310(%"RawPtr[UInt/rtct]"* %"$tmpC7", %"RawPtr[UInt/rtct]"* %30, i64 %31)
  %32 = load %"RawPtr[UInt/rtct]"* %"$tmpC7"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %28, %"RawPtr[UInt/rtct]" %32)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i64 @size307(%"Vector[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 1
  %3 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[UInt/rtct]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[UInt/rtct]"* %4
  %6 = call i64 @diff304(%"RawPtr[UInt/rtct]"* %2, %"RawPtr[UInt/rtct]" %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal void @reallocPtr308(%"RawPtr[UInt/rtct]"* %"$this", i64 %n) #3 {
  %"$this.addr" = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %"$this.addr"
  %2 = call i8* @bytePtr305(%"RawPtr[UInt/rtct]"* %1)
  %3 = load i64* %n.addr
  %4 = call i64 @"*"(i64 %3, i64 4)
  %5 = call i8* @realloc(i8* %2, i64 %4)
  %6 = bitcast i8* %5 to i32*
  %7 = load %"RawPtr[UInt/rtct]"** %"$this.addr"
  %8 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %7, i32 0, i32 0
  store i32* %6, i32** %8
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=309"(%"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]" %other) #2 {
  %"$this.addr" = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[UInt/rtct]"
  store %"RawPtr[UInt/rtct]" %other, %"RawPtr[UInt/rtct]"* %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %other.addr, i32 0, i32 0
  %2 = load i32** %1
  %3 = load %"RawPtr[UInt/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %3, i32 0, i32 0
  store i32* %2, i32** %4
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @advance310(%"RawPtr[UInt/rtct]"* sret %_result, %"RawPtr[UInt/rtct]"* %"$this", i64 %n) #2 {
  %_result.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %_result, %"RawPtr[UInt/rtct]"** %_result.addr
  %"$this.addr" = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %_result.addr
  %2 = load %"RawPtr[UInt/rtct]"** %"$this.addr"
  %3 = call i8* @bytePtr305(%"RawPtr[UInt/rtct]"* %2)
  %4 = load i64* %n.addr
  %5 = call i64 @"*"(i64 %4, i64 4)
  %6 = call i8* @ptrAdd(i8* %3, i64 %5)
  call void @fromBytePtr311(%"RawPtr[UInt/rtct]"* %1, i8* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @fromBytePtr311(%"RawPtr[UInt/rtct]"* sret %_result, i8* %ptr) #3 {
  %_result.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %_result, %"RawPtr[UInt/rtct]"** %_result.addr
  %ptr.addr = alloca i8*
  store i8* %ptr, i8** %ptr.addr
  %res = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  call void @ctor135(%"RawPtr[UInt/rtct]"* %res)
  %1 = load i8** %ptr.addr
  %2 = bitcast i8* %1 to i32*
  %3 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %res, i32 0, i32 0
  store i32* %2, i32** %3
  %4 = load %"RawPtr[UInt/rtct]"** %_result.addr
  call void @ctor312(%"RawPtr[UInt/rtct]"* %4, %"RawPtr[UInt/rtct]"* %res)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor312(%"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]"* %other) #2 {
  %"$this.addr" = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %other, %"RawPtr[UInt/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %other.addr
  %2 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load i32** %2
  %4 = load %"RawPtr[UInt/rtct]"** %"$this.addr"
  %5 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %4, i32 0, i32 0
  store i32* %3, i32** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor313(%"RawPtr[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i32* @value314(%"RawPtr[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load i32** %2
  ret i32* %3
}

; Function Attrs: alwaysinline nounwind
define internal void @advance315(%"RawPtr[UInt/rtct]"* sret %_result, %"RawPtr[UInt/rtct]"* %"$this") #2 {
  %_result.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %_result, %"RawPtr[UInt/rtct]"** %_result.addr
  %"$this.addr" = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %_result.addr
  %2 = load %"RawPtr[UInt/rtct]"** %"$this.addr"
  %3 = call i8* @bytePtr305(%"RawPtr[UInt/rtct]"* %2)
  %4 = call i8* @ptrAdd(i8* %3, i64 4)
  call void @fromBytePtr311(%"RawPtr[UInt/rtct]"* %1, i8* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty316(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %s) #3 {
  %s.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %s, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %s.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 1
  %3 = call i1 @isEmpty317(%"Vector[Token]"* %2)
  ret i1 %3
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isEmpty317(%"Vector[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 0
  %3 = load %"Vector[Token]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Token]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[Token]"* %4
  %6 = call i1 @"==216"(%"RawPtr[Token]"* %2, %"RawPtr[Token]" %5)
  ret i1 %6
}

; Function Attrs: inlinehint nounwind
define internal void @front318(%Token* sret %_result, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %s) #3 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %s.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %s, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token** %_result.addr
  %2 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %s.addr
  %3 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %2, i32 0, i32 1
  %4 = call %Token* @front319(%"Vector[Token]"* %3)
  call void @ctor217(%Token* %1, %Token* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal %Token* @front319(%"Vector[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 0
  %3 = call %Token* @value219(%"RawPtr[Token]"* %2)
  ret %Token* %3
}

; Function Attrs: noinline nounwind
define void @popFront320(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %t) #4 {
  %t.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %t, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %tmp.v = alloca %TokenType
  %oldType = alloca %TokenType
  %"$tmpC" = alloca %Token
  %changeLine = alloca i1
  %"$tmpC1" = alloca %Token
  %tmp.v2 = alloca %TokenType
  %"$tmpC3" = alloca %Token
  %tmp.v4 = alloca %TokenType
  %tk = alloca %Token
  %outsideParens = alloca i1
  %newCol = alloca i32
  %oldCol = alloca i32
  %tmp.v15 = alloca %TokenType
  %tmp.v28 = alloca %TokenType
  %tmp.v30 = alloca %TokenType
  %tmp.v32 = alloca %TokenType
  %tmp.v34 = alloca %TokenType
  %tmp.v47 = alloca %TokenType
  %tmp.v49 = alloca %TokenType
  %numDedents = alloca i32
  %tmp.v64 = alloca %TokenType
  %"$tmpC68" = alloca %String
  %const.bytes = alloca [32 x i8]
  %const.struct = alloca %StringRef
  %const.bytes69 = alloca [7 x i8]
  %const.struct70 = alloca %StringRef
  %tmp.v74 = alloca %TokenType
  %"$tmpForRef" = alloca i8
  %tmp.v79 = alloca %TokenType
  %"$tmpForRef80" = alloca i8
  %tmp.v85 = alloca %TokenType
  %"$tmpForRef86" = alloca i8
  %tmp.v94 = alloca %TokenType
  %tmp.v103 = alloca %TokenType
  %tmp.v111 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 5
  %3 = load i32* %2
  %4 = call i1 @">321"(i32 %3, i32 0)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %6 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 5
  %7 = call i32 @post_--59(i32* %6)
  %8 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %9 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %8, i32 0, i32 4
  call void @ctor229(%TokenType* %tmp.v, i32 27)
  call void @"=197"(%TokenType* %9, %TokenType* %tmp.v)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %10 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  call void @front322(%Token* %"$tmpC", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %10)
  %11 = getelementptr inbounds %Token* %"$tmpC", i32 0, i32 1
  call void @ctor218(%TokenType* %oldType, %TokenType* %11)
  call void @dtor299(%Token* %"$tmpC")
  %12 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %13 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 0
  call void @popFront323(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %13)
  %14 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %15 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %14, i32 0, i32 0
  call void @front318(%Token* %"$tmpC1", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %15)
  %16 = getelementptr inbounds %Token* %"$tmpC1", i32 0, i32 1
  call void @ctor229(%TokenType* %tmp.v2, i32 1)
  %17 = call i1 @"==227"(%TokenType* %16, %TokenType* %tmp.v2)
  store i1 %17, i1* %changeLine
  call void @dtor299(%Token* %"$tmpC1")
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %18 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %19 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %18, i32 0, i32 0
  call void @front318(%Token* %"$tmpC3", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %19)
  %20 = getelementptr inbounds %Token* %"$tmpC3", i32 0, i32 1
  call void @ctor229(%TokenType* %tmp.v4, i32 1)
  %21 = call i1 @"==227"(%TokenType* %20, %TokenType* %tmp.v4)
  br i1 %21, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %22 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %23 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %22, i32 0, i32 0
  call void @popFront323(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %23)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  call void @dtor299(%Token* %"$tmpC3")
  %24 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %25 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %24, i32 0, i32 0
  call void @front318(%Token* %tk, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %25)
  %26 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %27 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %26, i32 0, i32 3
  %28 = call i1 @isEmpty226(%"Vector[Char/rtct]"* %27)
  br i1 %28, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while_end
  br label %cond.end

cond.false:                                       ; preds = %while_end
  %29 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %30 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %29, i32 0, i32 3
  %31 = call i8* @back337(%"Vector[Char/rtct]"* %30)
  %32 = load i8* %31
  %33 = icmp eq i8 %32, 123
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ true, %cond.true ], [ %33, %cond.false ]
  store i1 %cond.res, i1* %outsideParens
  br label %if_block5

if_block5:                                        ; preds = %cond.end
  %34 = load i1* %changeLine
  br i1 %34, label %cond.true8, label %cond.false9

if_then6:                                         ; preds = %cond.end10
  %35 = getelementptr inbounds %Token* %tk, i32 0, i32 0
  %36 = getelementptr inbounds %Location* %35, i32 0, i32 1
  %37 = getelementptr inbounds %LineCol* %36, i32 0, i32 1
  %38 = load i32* %37
  store i32 %38, i32* %newCol
  %39 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %40 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %39, i32 0, i32 2
  %41 = call i32* @back338(%"Vector[UInt/rtct]"* %40)
  %42 = load i32* %41
  store i32 %42, i32* %oldCol
  br label %if_block12

if_end7:                                          ; preds = %if_end55, %cond.end10
  br label %if_block71

cond.true8:                                       ; preds = %if_block5
  %43 = load i1* %outsideParens
  br label %cond.end10

cond.false9:                                      ; preds = %if_block5
  br label %cond.end10

cond.end10:                                       ; preds = %cond.false9, %cond.true8
  %cond.res11 = phi i1 [ %43, %cond.true8 ], [ false, %cond.false9 ]
  br i1 %cond.res11, label %if_then6, label %if_end7

if_block12:                                       ; preds = %if_then6
  %44 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  call void @ctor229(%TokenType* %tmp.v15, i32 0)
  %45 = call i1 @"==227"(%TokenType* %44, %TokenType* %tmp.v15)
  br i1 %45, label %if_then13, label %if_end14

if_then13:                                        ; preds = %if_block12
  store i32 1, i32* %newCol
  br label %if_end14

if_end14:                                         ; preds = %if_then13, %if_block12
  br label %if_block16

if_block16:                                       ; preds = %if_end14
  %46 = load i32* %newCol
  %47 = load i32* %oldCol
  %48 = call i1 @"==340"(i32 %46, i32 %47)
  br i1 %48, label %cond.true25, label %cond.false26

if_then17:                                        ; preds = %cond.end21
  %49 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %50 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %49, i32 0, i32 4
  call void @ctor229(%TokenType* %tmp.v34, i32 33)
  call void @"=197"(%TokenType* %50, %TokenType* %tmp.v34)
  %51 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %52 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %51, i32 0, i32 5
  store i32 1, i32* %52
  br label %if_end18

if_end18:                                         ; preds = %if_then17, %cond.end21
  br i1 %cond.res31, label %cond_destruct_alt1, label %cond_destruct_alt2

cond.true19:                                      ; preds = %cond.end24
  call void @ctor229(%TokenType* %tmp.v32, i32 27)
  %53 = call i1 @"==227"(%TokenType* %oldType, %TokenType* %tmp.v32)
  %54 = xor i1 true, %53
  br label %cond.end21

cond.false20:                                     ; preds = %cond.end24
  br label %cond.end21

cond.end21:                                       ; preds = %cond.false20, %cond.true19
  %cond.res33 = phi i1 [ %54, %cond.true19 ], [ false, %cond.false20 ]
  br i1 %cond.res33, label %if_then17, label %if_end18

cond.true22:                                      ; preds = %cond.end27
  call void @ctor229(%TokenType* %tmp.v30, i32 33)
  %55 = call i1 @"==227"(%TokenType* %oldType, %TokenType* %tmp.v30)
  %56 = xor i1 true, %55
  br label %cond.end24

cond.false23:                                     ; preds = %cond.end27
  br label %cond.end24

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond.res31 = phi i1 [ %56, %cond.true22 ], [ false, %cond.false23 ]
  br i1 %cond.res31, label %cond.true19, label %cond.false20

cond.true25:                                      ; preds = %if_block16
  %57 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  call void @ctor229(%TokenType* %tmp.v28, i32 26)
  %58 = call i1 @"==227"(%TokenType* %57, %TokenType* %tmp.v28)
  %59 = xor i1 true, %58
  br label %cond.end27

cond.false26:                                     ; preds = %if_block16
  br label %cond.end27

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond.res29 = phi i1 [ %59, %cond.true25 ], [ false, %cond.false26 ]
  br i1 %cond.res29, label %cond.true22, label %cond.false23

cond_destruct_alt1:                               ; preds = %if_end18
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_end18
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  br i1 %cond.res29, label %cond_destruct_alt135, label %cond_destruct_alt236

cond_destruct_alt135:                             ; preds = %cond_destruct_end
  br label %cond_destruct_end37

cond_destruct_alt236:                             ; preds = %cond_destruct_end
  br label %cond_destruct_end37

cond_destruct_end37:                              ; preds = %cond_destruct_alt236, %cond_destruct_alt135
  br i1 %48, label %cond_destruct_alt138, label %cond_destruct_alt239

cond_destruct_alt138:                             ; preds = %cond_destruct_end37
  br label %cond_destruct_end40

cond_destruct_alt239:                             ; preds = %cond_destruct_end37
  br label %cond_destruct_end40

cond_destruct_end40:                              ; preds = %cond_destruct_alt239, %cond_destruct_alt138
  br label %if_block41

if_block41:                                       ; preds = %cond_destruct_end40
  %60 = load i32* %newCol
  %61 = load i32* %oldCol
  %62 = call i1 @">341"(i32 %60, i32 %61)
  br i1 %62, label %cond.true44, label %cond.false45

if_then42:                                        ; preds = %cond.end46
  %63 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %64 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %63, i32 0, i32 4
  call void @ctor229(%TokenType* %tmp.v49, i32 26)
  call void @"=197"(%TokenType* %64, %TokenType* %tmp.v49)
  %65 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %66 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %65, i32 0, i32 5
  store i32 1, i32* %66
  %67 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %68 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %67, i32 0, i32 2
  call void @"+=300"(%"Vector[UInt/rtct]"* %68, i32* %newCol)
  br label %if_end43

if_end43:                                         ; preds = %if_then42, %cond.end46
  br i1 %62, label %cond_destruct_alt150, label %cond_destruct_alt251

cond.true44:                                      ; preds = %if_block41
  %69 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  call void @ctor229(%TokenType* %tmp.v47, i32 0)
  %70 = call i1 @"==227"(%TokenType* %69, %TokenType* %tmp.v47)
  %71 = xor i1 true, %70
  br label %cond.end46

cond.false45:                                     ; preds = %if_block41
  br label %cond.end46

cond.end46:                                       ; preds = %cond.false45, %cond.true44
  %cond.res48 = phi i1 [ %71, %cond.true44 ], [ false, %cond.false45 ]
  br i1 %cond.res48, label %if_then42, label %if_end43

cond_destruct_alt150:                             ; preds = %if_end43
  br label %cond_destruct_end52

cond_destruct_alt251:                             ; preds = %if_end43
  br label %cond_destruct_end52

cond_destruct_end52:                              ; preds = %cond_destruct_alt251, %cond_destruct_alt150
  br label %if_block53

if_block53:                                       ; preds = %cond_destruct_end52
  %72 = load i32* %newCol
  %73 = load i32* %oldCol
  %74 = call i1 @"<342"(i32 %72, i32 %73)
  br i1 %74, label %cond.true56, label %cond.false57

if_then54:                                        ; preds = %cond.end58
  store i32 0, i32* %numDedents
  br label %while_block60

if_end55:                                         ; preds = %if_end67, %cond.end58
  br label %if_end7

cond.true56:                                      ; preds = %if_block53
  %75 = load i32* %newCol
  %76 = call i1 @">=343"(i32 %75, i32 1)
  br label %cond.end58

cond.false57:                                     ; preds = %if_block53
  br label %cond.end58

cond.end58:                                       ; preds = %cond.false57, %cond.true56
  %cond.res59 = phi i1 [ %76, %cond.true56 ], [ false, %cond.false57 ]
  br i1 %cond.res59, label %if_then54, label %if_end55

while_block60:                                    ; preds = %while_step62, %if_then54
  %77 = load i32* %newCol
  %78 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %79 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %78, i32 0, i32 2
  %80 = call i32* @back338(%"Vector[UInt/rtct]"* %79)
  %81 = load i32* %80
  %82 = call i1 @"<342"(i32 %77, i32 %81)
  br i1 %82, label %while_body61, label %while_end63

while_body61:                                     ; preds = %while_block60
  %83 = call i32 @"post_++50"(i32* %numDedents)
  %84 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %85 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %84, i32 0, i32 2
  call void @popBack344(%"Vector[UInt/rtct]"* %85)
  br label %while_step62

while_step62:                                     ; preds = %while_body61
  br label %while_block60

while_end63:                                      ; preds = %while_block60
  %86 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %87 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %86, i32 0, i32 4
  call void @ctor229(%TokenType* %tmp.v64, i32 33)
  call void @"=197"(%TokenType* %87, %TokenType* %tmp.v64)
  %88 = load i32* %numDedents
  %89 = call i32 @"+12"(i32 1, i32 %88)
  %90 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %91 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %90, i32 0, i32 5
  store i32 %89, i32* %91
  br label %if_block65

if_block65:                                       ; preds = %while_end63
  %92 = load i32* %newCol
  %93 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %94 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %93, i32 0, i32 2
  %95 = call i32* @back338(%"Vector[UInt/rtct]"* %94)
  %96 = load i32* %95
  %97 = call i1 @"!=346"(i32 %92, i32 %96)
  br i1 %97, label %if_then66, label %if_end67

if_then66:                                        ; preds = %if_block65
  %98 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %99 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %98, i32 0, i32 1
  %100 = getelementptr inbounds %Token* %tk, i32 0, i32 0
  %101 = load %Location* %100
  store [32 x i8] c"Invalid indentation, expecting \00", [32 x i8]* %const.bytes
  %102 = getelementptr inbounds [32 x i8]* %const.bytes, i32 0, i32 0
  %103 = getelementptr inbounds [32 x i8]* %const.bytes, i32 0, i32 31
  %104 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %105 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %102, i8** %104
  store i8* %103, i8** %105
  %106 = load %StringRef* %const.struct
  %107 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %108 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %107, i32 0, i32 2
  %109 = call i32* @back338(%"Vector[UInt/rtct]"* %108)
  %110 = load i32* %109
  store [7 x i8] c", got \00", [7 x i8]* %const.bytes69
  %111 = getelementptr inbounds [7 x i8]* %const.bytes69, i32 0, i32 0
  %112 = getelementptr inbounds [7 x i8]* %const.bytes69, i32 0, i32 6
  %113 = getelementptr inbounds %StringRef* %const.struct70, i32 0, i32 0
  %114 = getelementptr inbounds %StringRef* %const.struct70, i32 0, i32 1
  store i8* %111, i8** %113
  store i8* %112, i8** %114
  %115 = load %StringRef* %const.struct70
  %116 = load i32* %newCol
  call void @toString347(%String* %"$tmpC68", %StringRef %106, i32 %110, %StringRef %115, i32 %116)
  call void @reportError(%ExternalErrorReporter* %99, %Location %101, %String* %"$tmpC68")
  call void @dtor166(%String* %"$tmpC68")
  br label %if_end67

if_end67:                                         ; preds = %if_then66, %if_block65
  br label %if_end55

if_block71:                                       ; preds = %if_end7
  %117 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  call void @ctor229(%TokenType* %tmp.v74, i32 30)
  %118 = call i1 @"==227"(%TokenType* %117, %TokenType* %tmp.v74)
  br i1 %118, label %if_then72, label %if_else

if_then72:                                        ; preds = %if_block71
  %119 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %120 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %119, i32 0, i32 3
  store i8 40, i8* %"$tmpForRef"
  call void @"+="(%"Vector[Char/rtct]"* %120, i8* %"$tmpForRef")
  br label %if_end73

if_else:                                          ; preds = %if_block71
  br label %if_block75

if_end73:                                         ; preds = %if_end78, %if_then72
  call void @dtor299(%Token* %tk)
  ret void

if_block75:                                       ; preds = %if_else
  %121 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  call void @ctor229(%TokenType* %tmp.v79, i32 28)
  %122 = call i1 @"==227"(%TokenType* %121, %TokenType* %tmp.v79)
  br i1 %122, label %if_then76, label %if_else77

if_then76:                                        ; preds = %if_block75
  %123 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %124 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %123, i32 0, i32 3
  store i8 91, i8* %"$tmpForRef80"
  call void @"+="(%"Vector[Char/rtct]"* %124, i8* %"$tmpForRef80")
  br label %if_end78

if_else77:                                        ; preds = %if_block75
  br label %if_block81

if_end78:                                         ; preds = %if_end84, %if_then76
  br label %if_end73

if_block81:                                       ; preds = %if_else77
  %125 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  call void @ctor229(%TokenType* %tmp.v85, i32 26)
  %126 = call i1 @"==227"(%TokenType* %125, %TokenType* %tmp.v85)
  br i1 %126, label %if_then82, label %if_else83

if_then82:                                        ; preds = %if_block81
  %127 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %128 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %127, i32 0, i32 3
  store i8 123, i8* %"$tmpForRef86"
  call void @"+="(%"Vector[Char/rtct]"* %128, i8* %"$tmpForRef86")
  br label %if_end84

if_else83:                                        ; preds = %if_block81
  br label %if_block87

if_end84:                                         ; preds = %if_end90, %if_then82
  br label %if_end78

if_block87:                                       ; preds = %if_else83
  %129 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  call void @ctor229(%TokenType* %tmp.v94, i32 31)
  %130 = call i1 @"==227"(%TokenType* %129, %TokenType* %tmp.v94)
  br i1 %130, label %cond.true91, label %cond.false92

if_then88:                                        ; preds = %cond.end93
  %131 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %132 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %131, i32 0, i32 3
  call void @popBack350(%"Vector[Char/rtct]"* %132)
  br label %if_end90

if_else89:                                        ; preds = %cond.end93
  br label %if_block96

if_end90:                                         ; preds = %if_end99, %if_then88
  br label %if_end84

cond.true91:                                      ; preds = %if_block87
  %133 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %134 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %133, i32 0, i32 3
  %135 = call i8* @back337(%"Vector[Char/rtct]"* %134)
  %136 = load i8* %135
  %137 = icmp eq i8 %136, 40
  br label %cond.end93

cond.false92:                                     ; preds = %if_block87
  br label %cond.end93

cond.end93:                                       ; preds = %cond.false92, %cond.true91
  %cond.res95 = phi i1 [ %137, %cond.true91 ], [ false, %cond.false92 ]
  br i1 %cond.res95, label %if_then88, label %if_else89

if_block96:                                       ; preds = %if_else89
  %138 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  call void @ctor229(%TokenType* %tmp.v103, i32 29)
  %139 = call i1 @"==227"(%TokenType* %138, %TokenType* %tmp.v103)
  br i1 %139, label %cond.true100, label %cond.false101

if_then97:                                        ; preds = %cond.end102
  %140 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %141 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %140, i32 0, i32 3
  call void @popBack350(%"Vector[Char/rtct]"* %141)
  br label %if_end99

if_else98:                                        ; preds = %cond.end102
  br label %if_block105

if_end99:                                         ; preds = %if_end107, %if_then97
  br label %if_end90

cond.true100:                                     ; preds = %if_block96
  %142 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %143 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %142, i32 0, i32 3
  %144 = call i8* @back337(%"Vector[Char/rtct]"* %143)
  %145 = load i8* %144
  %146 = icmp eq i8 %145, 91
  br label %cond.end102

cond.false101:                                    ; preds = %if_block96
  br label %cond.end102

cond.end102:                                      ; preds = %cond.false101, %cond.true100
  %cond.res104 = phi i1 [ %146, %cond.true100 ], [ false, %cond.false101 ]
  br i1 %cond.res104, label %if_then97, label %if_else98

if_block105:                                      ; preds = %if_else98
  %147 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  call void @ctor229(%TokenType* %tmp.v111, i32 27)
  %148 = call i1 @"==227"(%TokenType* %147, %TokenType* %tmp.v111)
  br i1 %148, label %cond.true108, label %cond.false109

if_then106:                                       ; preds = %cond.end110
  %149 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %150 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %149, i32 0, i32 3
  call void @popBack350(%"Vector[Char/rtct]"* %150)
  br label %if_end107

if_end107:                                        ; preds = %if_then106, %cond.end110
  br label %if_end99

cond.true108:                                     ; preds = %if_block105
  %151 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %152 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %151, i32 0, i32 3
  %153 = call i8* @back337(%"Vector[Char/rtct]"* %152)
  %154 = load i8* %153
  %155 = icmp eq i8 %154, 123
  br label %cond.end110

cond.false109:                                    ; preds = %if_block105
  br label %cond.end110

cond.end110:                                      ; preds = %cond.false109, %cond.true108
  %cond.res112 = phi i1 [ %155, %cond.true108 ], [ false, %cond.false109 ]
  br i1 %cond.res112, label %if_then106, label %if_end107
}

; Function Attrs: alwaysinline nounwind
define internal i1 @">321"(i32 %x, i32 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn13(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn13(i32 %4, i32 %5)
  %7 = icmp sgt i32 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal void @front322(%Token* sret %_result, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %t) #3 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %t.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %t, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %tk = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @front318(%Token* %tk, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %2)
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %4 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 5
  %5 = load i32* %4
  %6 = call i1 @">321"(i32 %5, i32 0)
  br i1 %6, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %7 = getelementptr inbounds %Token* %tk, i32 0, i32 1
  %8 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %9 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %8, i32 0, i32 4
  call void @"=197"(%TokenType* %7, %TokenType* %9)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  %10 = load %Token** %_result.addr
  call void @ctor217(%Token* %10, %Token* %tk)
  call void @dtor299(%Token* %tk)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor299(%Token* %tk)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popFront323(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %s) #3 {
  %s.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %s, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %s.addr
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %s.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 1
  call void @remove324(%"Vector[Token]"* %2, i64 0)
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %s.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %3, i32 0, i32 1
  %5 = call i1 @isEmpty317(%"Vector[Token]"* %4)
  br i1 %5, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %6 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %s.addr
  %7 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %6, i32 0, i32 1
  %8 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %s.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %8, i32 0, i32 0
  call void @"post_++221"(%Token* %"$tmpC", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %9)
  call void @"+=214"(%"Vector[Token]"* %7, %Token* %"$tmpC")
  call void @dtor299(%Token* %"$tmpC")
  br label %if_end

if_end:                                           ; preds = %if_then, %cond.end
  ret void

cond.true:                                        ; preds = %if_block
  %10 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %s.addr
  %11 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %10, i32 0, i32 0
  %12 = call i1 @"pre_!!212"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %12, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @remove324(%"Vector[Token]"* %"$this", i64 %index) #3 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %r = alloca %"ContiguousMemoryRange[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  call void @all325(%"ContiguousMemoryRange[Token]"* %r, %"Vector[Token]"* %1)
  %2 = load i64* %index.addr
  call void @popFront327(%"ContiguousMemoryRange[Token]"* %r, i64 %2)
  %3 = load %"Vector[Token]"** %"$this.addr"
  %4 = call i64 @size205(%"Vector[Token]"* %3)
  %5 = load i64* %index.addr
  %6 = call i64 @-44(i64 %4, i64 %5)
  %7 = call i64 @-246(i64 %6, i32 1)
  call void @popBack329(%"ContiguousMemoryRange[Token]"* %r, i64 %7)
  %8 = load %"Vector[Token]"** %"$this.addr"
  %9 = load %"ContiguousMemoryRange[Token]"* %r
  call void @remove330(%"Vector[Token]"* %8, %"ContiguousMemoryRange[Token]" %9)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @all325(%"ContiguousMemoryRange[Token]"* sret %_result, %"Vector[Token]"* %"$this") #2 {
  %_result.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %_result, %"ContiguousMemoryRange[Token]"** %_result.addr
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %_result.addr
  %2 = load %"Vector[Token]"** %"$this.addr"
  %3 = getelementptr inbounds %"Vector[Token]"* %2, i32 0, i32 0
  %4 = load %"RawPtr[Token]"* %3
  %5 = load %"Vector[Token]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[Token]"* %5, i32 0, i32 1
  %7 = load %"RawPtr[Token]"* %6
  call void @ctor326(%"ContiguousMemoryRange[Token]"* %1, %"RawPtr[Token]" %4, %"RawPtr[Token]" %7)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor326(%"ContiguousMemoryRange[Token]"* %"$this", %"RawPtr[Token]" %begin, %"RawPtr[Token]" %end) #3 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %"$this", %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %begin.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %begin, %"RawPtr[Token]"* %begin.addr
  %end.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %end, %"RawPtr[Token]"* %end.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  call void @ctor210(%"RawPtr[Token]"* %2, %"RawPtr[Token]"* %begin.addr)
  %3 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 1
  call void @ctor210(%"RawPtr[Token]"* %4, %"RawPtr[Token]"* %end.addr)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront327(%"ContiguousMemoryRange[Token]"* %"$this", i64 %n) #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %"$this", %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[Token]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 0
  %5 = load i64* %n.addr
  store i64 %5, i64* %tmp.v
  %6 = load i64* %tmp.v
  call void @advance328(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]"* %4, i64 %6)
  %7 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=207"(%"RawPtr[Token]"* %2, %"RawPtr[Token]" %7)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @advance328(%"RawPtr[Token]"* sret %_result, %"RawPtr[Token]"* %"$this", i64 %n) #2 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %"$this.addr" = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %"$this", %"RawPtr[Token]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %_result.addr
  %2 = load %"RawPtr[Token]"** %"$this.addr"
  %3 = call i8* @bytePtr204(%"RawPtr[Token]"* %2)
  %4 = load i64* %n.addr
  store i64 72, i64* %tmp.v1
  %5 = load i64* %tmp.v1
  %6 = call i64 @"*154"(i64 %4, i64 %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  %8 = call i8* @ptrAdd(i8* %3, i64 %7)
  call void @fromBytePtr209(%"RawPtr[Token]"* %1, i8* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack329(%"ContiguousMemoryRange[Token]"* %"$this", i64 %n) #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %"$this", %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[Token]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 1
  %5 = load i64* %n.addr
  store i64 %5, i64* %tmp.v
  %6 = load i64* %tmp.v
  %7 = sub i64 0, %6
  call void @advance328(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]"* %4, i64 %7)
  %8 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=207"(%"RawPtr[Token]"* %2, %"RawPtr[Token]" %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @remove330(%"Vector[Token]"* %"$this", %"ContiguousMemoryRange[Token]" %range) #3 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %range.addr = alloca %"ContiguousMemoryRange[Token]"
  store %"ContiguousMemoryRange[Token]" %range, %"ContiguousMemoryRange[Token]"* %range.addr
  %rBegin = alloca %"RawPtr[Token]"
  %rEnd = alloca %"RawPtr[Token]"
  %"$rangeVar" = alloca %"ContiguousMemoryRange[Token]"
  %el = alloca %Token*
  %"$tmpC" = alloca %"RawPtr[Token]"
  %"$tmpC5" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  call void @frontPtr331(%"RawPtr[Token]"* %rBegin, %"ContiguousMemoryRange[Token]"* %range.addr)
  call void @backPtr332(%"RawPtr[Token]"* %rEnd, %"ContiguousMemoryRange[Token]"* %range.addr)
  call void @ctor333(%"ContiguousMemoryRange[Token]"* %"$rangeVar", %"ContiguousMemoryRange[Token]"* %range.addr)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = call i1 @isEmpty334(%"ContiguousMemoryRange[Token]"* %"$rangeVar")
  %2 = xor i1 true, %1
  br i1 %2, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %3 = call %Token* @front335(%"ContiguousMemoryRange[Token]"* %"$rangeVar")
  store %Token* %3, %Token** %el
  %4 = load %Token** %el
  call void @dtor299(%Token* %4)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @popFront336(%"ContiguousMemoryRange[Token]"* %"$rangeVar")
  br label %while_block

while_end:                                        ; preds = %while_block
  br label %while_block1

while_block1:                                     ; preds = %while_step3, %while_end
  %5 = load %"Vector[Token]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[Token]"* %5, i32 0, i32 1
  %7 = load %"RawPtr[Token]"* %6
  %8 = call i1 @"==216"(%"RawPtr[Token]"* %rEnd, %"RawPtr[Token]" %7)
  %9 = xor i1 true, %8
  br i1 %9, label %while_body2, label %while_end4

while_body2:                                      ; preds = %while_block1
  %10 = call %Token* @value219(%"RawPtr[Token]"* %rBegin)
  %11 = call %Token* @value219(%"RawPtr[Token]"* %rEnd)
  call void @ctor217(%Token* %10, %Token* %11)
  %12 = call %Token* @value219(%"RawPtr[Token]"* %rEnd)
  call void @dtor299(%Token* %12)
  call void @advance220(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]"* %rBegin)
  %13 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=207"(%"RawPtr[Token]"* %rBegin, %"RawPtr[Token]" %13)
  call void @advance220(%"RawPtr[Token]"* %"$tmpC5", %"RawPtr[Token]"* %rEnd)
  %14 = load %"RawPtr[Token]"* %"$tmpC5"
  call void @"=207"(%"RawPtr[Token]"* %rEnd, %"RawPtr[Token]" %14)
  br label %while_step3

while_step3:                                      ; preds = %while_body2
  br label %while_block1

while_end4:                                       ; preds = %while_block1
  %15 = load %"Vector[Token]"** %"$this.addr"
  %16 = getelementptr inbounds %"Vector[Token]"* %15, i32 0, i32 1
  %17 = load %"RawPtr[Token]"* %rBegin
  call void @"=207"(%"RawPtr[Token]"* %16, %"RawPtr[Token]" %17)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @frontPtr331(%"RawPtr[Token]"* sret %_result, %"ContiguousMemoryRange[Token]"* %"$this") #2 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %"$this.addr" = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %"$this", %"ContiguousMemoryRange[Token]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %_result.addr
  %2 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %3 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %2, i32 0, i32 0
  call void @ctor210(%"RawPtr[Token]"* %1, %"RawPtr[Token]"* %3)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @backPtr332(%"RawPtr[Token]"* sret %_result, %"ContiguousMemoryRange[Token]"* %"$this") #2 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %"$this.addr" = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %"$this", %"ContiguousMemoryRange[Token]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %_result.addr
  %2 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %3 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %2, i32 0, i32 1
  call void @ctor210(%"RawPtr[Token]"* %1, %"RawPtr[Token]"* %3)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor333(%"ContiguousMemoryRange[Token]"* %"$this", %"ContiguousMemoryRange[Token]"* %other) #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %"$this", %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %other.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %other, %"ContiguousMemoryRange[Token]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Token]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 0
  call void @ctor210(%"RawPtr[Token]"* %2, %"RawPtr[Token]"* %4)
  %5 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %6 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %5, i32 0, i32 1
  %7 = load %"ContiguousMemoryRange[Token]"** %other.addr
  %8 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %7, i32 0, i32 1
  call void @ctor210(%"RawPtr[Token]"* %6, %"RawPtr[Token]"* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isEmpty334(%"ContiguousMemoryRange[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %"$this", %"ContiguousMemoryRange[Token]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Token]"* %4
  %6 = call i64 @diff203(%"RawPtr[Token]"* %2, %"RawPtr[Token]" %5)
  %7 = call i1 @"<=159"(i64 %6, i32 0)
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal %Token* @front335(%"ContiguousMemoryRange[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %"$this", %"ContiguousMemoryRange[Token]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  %3 = call %Token* @value219(%"RawPtr[Token]"* %2)
  ret %Token* %3
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront336(%"ContiguousMemoryRange[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %"$this", %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 0
  call void @advance220(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]"* %4)
  %5 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=207"(%"RawPtr[Token]"* %2, %"RawPtr[Token]" %5)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i8* @back337(%"Vector[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 1
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %2, i64 -1)
  %3 = call i8* @value(%"RawPtr[Char/rtct]"* %"$tmpC")
  ret i8* %3
}

; Function Attrs: alwaysinline nounwind
define internal i32* @back338(%"Vector[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 1
  call void @advance339(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]"* %2, i64 -1)
  %3 = call i32* @value314(%"RawPtr[UInt/rtct]"* %"$tmpC")
  ret i32* %3
}

; Function Attrs: alwaysinline nounwind
define internal void @advance339(%"RawPtr[UInt/rtct]"* sret %_result, %"RawPtr[UInt/rtct]"* %"$this", i64 %n) #2 {
  %_result.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %_result, %"RawPtr[UInt/rtct]"** %_result.addr
  %"$this.addr" = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %_result.addr
  %2 = load %"RawPtr[UInt/rtct]"** %"$this.addr"
  %3 = call i8* @bytePtr305(%"RawPtr[UInt/rtct]"* %2)
  %4 = load i64* %n.addr
  store i64 4, i64* %tmp.v1
  %5 = load i64* %tmp.v1
  %6 = call i64 @"*154"(i64 %4, i64 %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  %8 = call i8* @ptrAdd(i8* %3, i64 %7)
  call void @fromBytePtr311(%"RawPtr[UInt/rtct]"* %1, i8* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==340"(i32 %x, i32 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn16(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn16(i32 %4, i32 %5)
  %7 = icmp eq i32 %3, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i1 @">341"(i32 %x, i32 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn16(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn16(i32 %4, i32 %5)
  %7 = icmp sgt i32 %3, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"<342"(i32 %x, i32 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn16(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn16(i32 %4, i32 %5)
  %7 = icmp slt i32 %3, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i1 @">=343"(i32 %x, i32 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn231(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn232(i32 %4, i32 %5)
  %7 = icmp sge i32 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal void @popBack344(%"Vector[UInt/rtct]"* %"$this") #3 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 1
  %3 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[UInt/rtct]"* %3, i32 0, i32 1
  call void @advance339(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]"* %4, i64 -1)
  %5 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %2, %"RawPtr[UInt/rtct]" %5)
  %6 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %7 = getelementptr inbounds %"Vector[UInt/rtct]"* %6, i32 0, i32 1
  %8 = call i32* @value314(%"RawPtr[UInt/rtct]"* %7)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor345(i32* %"$this") #2 {
  %"$this.addr" = alloca i32*
  store i32* %"$this", i32** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"!=346"(i32 %x, i32 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i32* %y.addr
  %3 = call i32 @cmn16(i32 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i32* %x.addr
  %6 = call i32 @cmn16(i32 %4, i32 %5)
  %7 = icmp ne i32 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal void @toString347(%String* sret %_result, %StringRef %a1, i32 %a2, %StringRef %a3, i32 %a4) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %a1.addr = alloca %StringRef
  store %StringRef %a1, %StringRef* %a1.addr
  %a2.addr = alloca i32
  store i32 %a2, i32* %a2.addr
  %a3.addr = alloca %StringRef
  store %StringRef %a3, %StringRef* %a3.addr
  %a4.addr = alloca i32
  store i32 %a4, i32* %a4.addr
  %s = alloca %StringOutputStream
  br label %code

code:                                             ; preds = %0
  call void @ctor142(%StringOutputStream* %s)
  %1 = call %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %a1.addr)
  %2 = call %StringOutputStream* @"<<348"(%StringOutputStream* %1, i32* %a2.addr)
  %3 = call %StringOutputStream* @"<<"(%StringOutputStream* %2, %StringRef* %a3.addr)
  %4 = call %StringOutputStream* @"<<348"(%StringOutputStream* %3, i32* %a4.addr)
  %5 = load %String** %_result.addr
  %6 = getelementptr inbounds %StringOutputStream* %s, i32 0, i32 0
  call void @ctor163(%String* %5, %String* %6)
  call void @dtor165(%StringOutputStream* %s)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor165(%StringOutputStream* %s)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringOutputStream* @"<<348"(%StringOutputStream* %s, i32* %x) #3 {
  %s.addr = alloca %StringOutputStream*
  store %StringOutputStream* %s, %StringOutputStream** %s.addr
  %x.addr = alloca i32*
  store i32* %x, i32** %x.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %s.addr
  %2 = load i32** %x.addr
  %3 = load i32* %2
  %4 = zext i32 %3 to i64
  store i64 %4, i64* %tmp.v
  %5 = load i64* %tmp.v
  call void @"<<<349"(%StringOutputStream* %1, i64 %5)
  %6 = load %StringOutputStream** %s.addr
  ret %StringOutputStream* %6
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<349"(%StringOutputStream* %"$this", i64 %x) #2 {
  %"$this.addr" = alloca %StringOutputStream*
  store %StringOutputStream* %"$this", %StringOutputStream** %"$this.addr"
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %"$tmpC" = alloca %StringRef
  %"$tmpC1" = alloca %String
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %"$this.addr"
  %2 = getelementptr inbounds %StringOutputStream* %1, i32 0, i32 0
  %3 = load i64* %x.addr
  call void @ulongToString(%String* %"$tmpC1", i64 %3)
  call void @all297(%StringRef* %"$tmpC", %String* %"$tmpC1")
  %4 = load %StringRef* %"$tmpC"
  call void @append295(%String* %2, %StringRef %4)
  call void @dtor166(%String* %"$tmpC1")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ulongToString(%String* sret %_result, i64 %x) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %buf = alloca [16 x i8]
  %"$tmpForRef" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = bitcast [16 x i8]* %buf to i8*
  store i8 0, i8* %1
  %2 = load i64* %x.addr
  %3 = bitcast [16 x i8]* %buf to i8*
  call void @_ULong_to_CString(i64 %2, i8* %3)
  %4 = load %String** %_result.addr
  %5 = bitcast [16 x i8]* %buf to i8*
  %6 = call %StringRef @_String_fromCString(i8* %5)
  store %StringRef %6, %StringRef* %"$tmpForRef"
  call void @ctor266(%String* %4, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popBack350(%"Vector[Char/rtct]"* %"$this") #3 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 1
  %3 = load %"Vector[Char/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Char/rtct]"* %3, i32 0, i32 1
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %4, i64 -1)
  %5 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=153"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  %6 = load %"Vector[Char/rtct]"** %"$this.addr"
  %7 = getelementptr inbounds %"Vector[Char/rtct]"* %6, i32 0, i32 1
  %8 = call i8* @value(%"RawPtr[Char/rtct]"* %7)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor351(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %"$this", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" %tokens, %ExternalErrorReporter %errorReporter) #3 {
  %"$this.addr" = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %"$this", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %tokens.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" %tokens, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %tokens.addr
  %errorReporter.addr = alloca %ExternalErrorReporter
  store %ExternalErrorReporter %errorReporter, %ExternalErrorReporter* %errorReporter.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 1
  call void @ctor129(%Token* %2)
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %tokens.addr
  call void @ctor352(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %4, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" %5)
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %7 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, i32 0, i32 2
  store i1 false, i1* %7
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor352(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %"$this", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" %src) #3 {
  %"$this.addr" = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %"$this", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %"$this.addr"
  %src.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" %src, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %src.addr
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %"$this.addr"
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1, i32 0, i32 0
  call void @ctor119(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %"$this.addr"
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %3, i32 0, i32 0
  call void @"=353"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %4, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %src.addr)
  %5 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %"$this.addr"
  %6 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %5, i32 0, i32 1
  call void @ctor132(%"Vector[Token]"* %6)
  %7 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %"$this.addr"
  %8 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %7, i32 0, i32 1
  call void @reserve201(%"Vector[Token]"* %8, i64 10)
  br label %if_block

if_block:                                         ; preds = %code
  %9 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %"$this.addr"
  %10 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %9, i32 0, i32 0
  %11 = call i1 @"pre_!!369"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %10)
  br i1 %11, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %12 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %"$this.addr"
  %13 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %12, i32 0, i32 1
  %14 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %"$this.addr"
  %15 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %14, i32 0, i32 0
  call void @"post_++371"(%Token* %"$tmpC", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %15)
  call void @"+=214"(%"Vector[Token]"* %13, %Token* %"$tmpC")
  call void @dtor299(%Token* %"$tmpC")
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=353"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %"$this", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %other) #2 {
  %"$this.addr" = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %"$this", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %other.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %other, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %4 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  call void @"=354"(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %2, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %4)
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %6 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 2
  %7 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %8 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 2
  %9 = call %"Vector[UInt/rtct]"* @"=362"(%"Vector[UInt/rtct]"* %6, %"Vector[UInt/rtct]"* %8)
  %10 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %11 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %10, i32 0, i32 3
  %12 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %13 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 3
  %14 = call %"Vector[Char/rtct]"* @"=195"(%"Vector[Char/rtct]"* %11, %"Vector[Char/rtct]"* %13)
  %15 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %16 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %15, i32 0, i32 4
  %17 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %18 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %17, i32 0, i32 4
  call void @"=197"(%TokenType* %16, %TokenType* %18)
  %19 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %20 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %19, i32 0, i32 5
  %21 = load i32* %20
  %22 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %23 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %22, i32 0, i32 5
  store i32 %21, i32* %23
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=354"(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %"$this", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %other) #2 {
  %"$this.addr" = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %"$this", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %"$this.addr"
  %other.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %other, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %"$this.addr"
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 0
  %3 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %other.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %3, i32 0, i32 0
  call void @"=189"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %2, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4)
  %5 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %"$this.addr"
  %6 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %5, i32 0, i32 1
  %7 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %other.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %7, i32 0, i32 1
  %9 = call %"Vector[Token]"* @"=355"(%"Vector[Token]"* %6, %"Vector[Token]"* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %"Vector[Token]"* @"=355"(%"Vector[Token]"* %"$this", %"Vector[Token]"* %other) #3 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %other.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %other, %"Vector[Token]"** %other.addr
  %tmp = alloca %"Vector[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %other.addr
  call void @ctor356(%"Vector[Token]"* %tmp, %"Vector[Token]"* %1)
  %2 = load %"Vector[Token]"** %"$this.addr"
  call void @swap358(%"Vector[Token]"* %tmp, %"Vector[Token]"* %2)
  %3 = load %"Vector[Token]"** %"$this.addr"
  call void @dtor359(%"Vector[Token]"* %tmp)
  ret %"Vector[Token]"* %3

dumy_block:                                       ; No predecessors!
  call void @dtor359(%"Vector[Token]"* %tmp)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @ctor356(%"Vector[Token]"* %"$this", %"Vector[Token]"* %other) #3 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %other.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %other, %"Vector[Token]"** %other.addr
  %size = alloca i64
  %"$tmpC" = alloca %"RawPtr[Token]"
  %"$tmpC1" = alloca %"RawPtr[Token]"
  %dst = alloca %"RawPtr[Token]"
  %src = alloca %"RawPtr[Token]"
  %"$tmpC2" = alloca %"RawPtr[Token]"
  %"$tmpC3" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 0
  call void @ctor133(%"RawPtr[Token]"* %2)
  %3 = load %"Vector[Token]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Token]"* %3, i32 0, i32 1
  call void @ctor133(%"RawPtr[Token]"* %4)
  %5 = load %"Vector[Token]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[Token]"* %5, i32 0, i32 2
  call void @ctor133(%"RawPtr[Token]"* %6)
  %7 = load %"Vector[Token]"** %other.addr
  %8 = call i64 @size205(%"Vector[Token]"* %7)
  store i64 %8, i64* %size
  %9 = load %"Vector[Token]"** %"$this.addr"
  %10 = getelementptr inbounds %"Vector[Token]"* %9, i32 0, i32 0
  %11 = load i64* %size
  call void @alloc357(%"RawPtr[Token]"* %"$tmpC", i64 %11)
  %12 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=207"(%"RawPtr[Token]"* %10, %"RawPtr[Token]" %12)
  %13 = load %"Vector[Token]"** %"$this.addr"
  %14 = getelementptr inbounds %"Vector[Token]"* %13, i32 0, i32 1
  %15 = load %"Vector[Token]"** %"$this.addr"
  %16 = getelementptr inbounds %"Vector[Token]"* %15, i32 0, i32 0
  %17 = load i64* %size
  call void @advance208(%"RawPtr[Token]"* %"$tmpC1", %"RawPtr[Token]"* %16, i64 %17)
  %18 = load %"RawPtr[Token]"* %"$tmpC1"
  call void @"=207"(%"RawPtr[Token]"* %14, %"RawPtr[Token]" %18)
  %19 = load %"Vector[Token]"** %"$this.addr"
  %20 = getelementptr inbounds %"Vector[Token]"* %19, i32 0, i32 2
  %21 = load %"Vector[Token]"** %"$this.addr"
  %22 = getelementptr inbounds %"Vector[Token]"* %21, i32 0, i32 1
  %23 = load %"RawPtr[Token]"* %22
  call void @"=207"(%"RawPtr[Token]"* %20, %"RawPtr[Token]" %23)
  %24 = load %"Vector[Token]"** %"$this.addr"
  %25 = getelementptr inbounds %"Vector[Token]"* %24, i32 0, i32 0
  call void @ctor210(%"RawPtr[Token]"* %dst, %"RawPtr[Token]"* %25)
  %26 = load %"Vector[Token]"** %other.addr
  %27 = getelementptr inbounds %"Vector[Token]"* %26, i32 0, i32 0
  call void @ctor210(%"RawPtr[Token]"* %src, %"RawPtr[Token]"* %27)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %28 = load %"Vector[Token]"** %"$this.addr"
  %29 = getelementptr inbounds %"Vector[Token]"* %28, i32 0, i32 1
  %30 = load %"RawPtr[Token]"* %29
  %31 = call i1 @"==216"(%"RawPtr[Token]"* %dst, %"RawPtr[Token]" %30)
  %32 = xor i1 true, %31
  br i1 %32, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %33 = call %Token* @value219(%"RawPtr[Token]"* %dst)
  %34 = call %Token* @value219(%"RawPtr[Token]"* %src)
  call void @ctor217(%Token* %33, %Token* %34)
  call void @advance220(%"RawPtr[Token]"* %"$tmpC2", %"RawPtr[Token]"* %dst)
  %35 = load %"RawPtr[Token]"* %"$tmpC2"
  call void @"=207"(%"RawPtr[Token]"* %dst, %"RawPtr[Token]" %35)
  call void @advance220(%"RawPtr[Token]"* %"$tmpC3", %"RawPtr[Token]"* %src)
  %36 = load %"RawPtr[Token]"* %"$tmpC3"
  call void @"=207"(%"RawPtr[Token]"* %src, %"RawPtr[Token]" %36)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @alloc357(%"RawPtr[Token]"* sret %_result, i64 %num) #3 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %num.addr = alloca i64
  store i64 %num, i64* %num.addr
  %res = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  call void @ctor133(%"RawPtr[Token]"* %res)
  %1 = load i64* %num.addr
  %2 = call i64 @"*"(i64 %1, i64 72)
  %3 = call i8* @malloc(i64 %2)
  %4 = bitcast i8* %3 to %Token*
  %5 = getelementptr inbounds %"RawPtr[Token]"* %res, i32 0, i32 0
  store %Token* %4, %Token** %5
  %6 = load %"RawPtr[Token]"** %_result.addr
  call void @ctor210(%"RawPtr[Token]"* %6, %"RawPtr[Token]"* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @swap358(%"Vector[Token]"* %"$this", %"Vector[Token]"* %other) #3 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %other.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %other, %"Vector[Token]"** %other.addr
  %tmp = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 0
  call void @ctor210(%"RawPtr[Token]"* %tmp, %"RawPtr[Token]"* %2)
  %3 = load %"Vector[Token]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Token]"* %3, i32 0, i32 0
  %5 = load %"Vector[Token]"** %other.addr
  %6 = getelementptr inbounds %"Vector[Token]"* %5, i32 0, i32 0
  %7 = load %"RawPtr[Token]"* %6
  call void @"=207"(%"RawPtr[Token]"* %4, %"RawPtr[Token]" %7)
  %8 = load %"Vector[Token]"** %other.addr
  %9 = getelementptr inbounds %"Vector[Token]"* %8, i32 0, i32 0
  %10 = load %"RawPtr[Token]"* %tmp
  call void @"=207"(%"RawPtr[Token]"* %9, %"RawPtr[Token]" %10)
  %11 = load %"Vector[Token]"** %"$this.addr"
  %12 = getelementptr inbounds %"Vector[Token]"* %11, i32 0, i32 1
  %13 = load %"RawPtr[Token]"* %12
  call void @"=207"(%"RawPtr[Token]"* %tmp, %"RawPtr[Token]" %13)
  %14 = load %"Vector[Token]"** %"$this.addr"
  %15 = getelementptr inbounds %"Vector[Token]"* %14, i32 0, i32 1
  %16 = load %"Vector[Token]"** %other.addr
  %17 = getelementptr inbounds %"Vector[Token]"* %16, i32 0, i32 1
  %18 = load %"RawPtr[Token]"* %17
  call void @"=207"(%"RawPtr[Token]"* %15, %"RawPtr[Token]" %18)
  %19 = load %"Vector[Token]"** %other.addr
  %20 = getelementptr inbounds %"Vector[Token]"* %19, i32 0, i32 1
  %21 = load %"RawPtr[Token]"* %tmp
  call void @"=207"(%"RawPtr[Token]"* %20, %"RawPtr[Token]" %21)
  %22 = load %"Vector[Token]"** %"$this.addr"
  %23 = getelementptr inbounds %"Vector[Token]"* %22, i32 0, i32 2
  %24 = load %"RawPtr[Token]"* %23
  call void @"=207"(%"RawPtr[Token]"* %tmp, %"RawPtr[Token]" %24)
  %25 = load %"Vector[Token]"** %"$this.addr"
  %26 = getelementptr inbounds %"Vector[Token]"* %25, i32 0, i32 2
  %27 = load %"Vector[Token]"** %other.addr
  %28 = getelementptr inbounds %"Vector[Token]"* %27, i32 0, i32 2
  %29 = load %"RawPtr[Token]"* %28
  call void @"=207"(%"RawPtr[Token]"* %26, %"RawPtr[Token]" %29)
  %30 = load %"Vector[Token]"** %other.addr
  %31 = getelementptr inbounds %"Vector[Token]"* %30, i32 0, i32 2
  %32 = load %"RawPtr[Token]"* %tmp
  call void @"=207"(%"RawPtr[Token]"* %31, %"RawPtr[Token]" %32)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @dtor359(%"Vector[Token]"* %"$this") #3 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %p = alloca %"RawPtr[Token]"
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 0
  call void @ctor210(%"RawPtr[Token]"* %p, %"RawPtr[Token]"* %2)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %3 = load %"Vector[Token]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Token]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[Token]"* %4
  %6 = call i1 @"==216"(%"RawPtr[Token]"* %p, %"RawPtr[Token]" %5)
  %7 = xor i1 true, %6
  br i1 %7, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %8 = call %Token* @value219(%"RawPtr[Token]"* %p)
  call void @dtor299(%Token* %8)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @advance220(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]"* %p)
  %9 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=207"(%"RawPtr[Token]"* %p, %"RawPtr[Token]" %9)
  br label %while_block

while_end:                                        ; preds = %while_block
  %10 = load %"Vector[Token]"** %"$this.addr"
  %11 = getelementptr inbounds %"Vector[Token]"* %10, i32 0, i32 0
  call void @freePtr360(%"RawPtr[Token]"* %11)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @freePtr360(%"RawPtr[Token]"* %"$this") #3 {
  %"$this.addr" = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %"$this", %"RawPtr[Token]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"RawPtr[Token]"** %"$this.addr"
  %2 = call i1 @isSet361(%"RawPtr[Token]"* %1)
  br i1 %2, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %3 = load %"RawPtr[Token]"** %"$this.addr"
  %4 = call i8* @bytePtr204(%"RawPtr[Token]"* %3)
  call void @free(i8* %4)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isSet361(%"RawPtr[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %"$this", %"RawPtr[Token]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[Token]"* %1, i32 0, i32 0
  %3 = load %Token** %2
  %4 = bitcast %Token* %3 to i8*
  %5 = call i1 @implOpRefNE(i8* %4, i8* null)
  ret i1 %5
}

; Function Attrs: inlinehint nounwind
define internal %"Vector[UInt/rtct]"* @"=362"(%"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"* %other) #3 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %other.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %other, %"Vector[UInt/rtct]"** %other.addr
  %tmp = alloca %"Vector[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %other.addr
  call void @ctor363(%"Vector[UInt/rtct]"* %tmp, %"Vector[UInt/rtct]"* %1)
  %2 = load %"Vector[UInt/rtct]"** %"$this.addr"
  call void @swap365(%"Vector[UInt/rtct]"* %tmp, %"Vector[UInt/rtct]"* %2)
  %3 = load %"Vector[UInt/rtct]"** %"$this.addr"
  call void @dtor366(%"Vector[UInt/rtct]"* %tmp)
  ret %"Vector[UInt/rtct]"* %3

dumy_block:                                       ; No predecessors!
  call void @dtor366(%"Vector[UInt/rtct]"* %tmp)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @ctor363(%"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"* %other) #3 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %other.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %other, %"Vector[UInt/rtct]"** %other.addr
  %size = alloca i64
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC1" = alloca %"RawPtr[UInt/rtct]"
  %dst = alloca %"RawPtr[UInt/rtct]"
  %src = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC2" = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC3" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 0
  call void @ctor135(%"RawPtr[UInt/rtct]"* %2)
  %3 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[UInt/rtct]"* %3, i32 0, i32 1
  call void @ctor135(%"RawPtr[UInt/rtct]"* %4)
  %5 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[UInt/rtct]"* %5, i32 0, i32 2
  call void @ctor135(%"RawPtr[UInt/rtct]"* %6)
  %7 = load %"Vector[UInt/rtct]"** %other.addr
  %8 = call i64 @size307(%"Vector[UInt/rtct]"* %7)
  store i64 %8, i64* %size
  %9 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %10 = getelementptr inbounds %"Vector[UInt/rtct]"* %9, i32 0, i32 0
  %11 = load i64* %size
  call void @alloc364(%"RawPtr[UInt/rtct]"* %"$tmpC", i64 %11)
  %12 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %10, %"RawPtr[UInt/rtct]" %12)
  %13 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %14 = getelementptr inbounds %"Vector[UInt/rtct]"* %13, i32 0, i32 1
  %15 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %16 = getelementptr inbounds %"Vector[UInt/rtct]"* %15, i32 0, i32 0
  %17 = load i64* %size
  call void @advance310(%"RawPtr[UInt/rtct]"* %"$tmpC1", %"RawPtr[UInt/rtct]"* %16, i64 %17)
  %18 = load %"RawPtr[UInt/rtct]"* %"$tmpC1"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %14, %"RawPtr[UInt/rtct]" %18)
  %19 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %20 = getelementptr inbounds %"Vector[UInt/rtct]"* %19, i32 0, i32 2
  %21 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %22 = getelementptr inbounds %"Vector[UInt/rtct]"* %21, i32 0, i32 1
  %23 = load %"RawPtr[UInt/rtct]"* %22
  call void @"=309"(%"RawPtr[UInt/rtct]"* %20, %"RawPtr[UInt/rtct]" %23)
  %24 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %25 = getelementptr inbounds %"Vector[UInt/rtct]"* %24, i32 0, i32 0
  call void @ctor312(%"RawPtr[UInt/rtct]"* %dst, %"RawPtr[UInt/rtct]"* %25)
  %26 = load %"Vector[UInt/rtct]"** %other.addr
  %27 = getelementptr inbounds %"Vector[UInt/rtct]"* %26, i32 0, i32 0
  call void @ctor312(%"RawPtr[UInt/rtct]"* %src, %"RawPtr[UInt/rtct]"* %27)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %28 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %29 = getelementptr inbounds %"Vector[UInt/rtct]"* %28, i32 0, i32 1
  %30 = load %"RawPtr[UInt/rtct]"* %29
  %31 = call i1 @"==302"(%"RawPtr[UInt/rtct]"* %dst, %"RawPtr[UInt/rtct]" %30)
  %32 = xor i1 true, %31
  br i1 %32, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %33 = call i32* @value314(%"RawPtr[UInt/rtct]"* %src)
  %34 = load i32* %33
  %35 = call i32* @value314(%"RawPtr[UInt/rtct]"* %dst)
  store i32 %34, i32* %35
  call void @advance315(%"RawPtr[UInt/rtct]"* %"$tmpC2", %"RawPtr[UInt/rtct]"* %dst)
  %36 = load %"RawPtr[UInt/rtct]"* %"$tmpC2"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %dst, %"RawPtr[UInt/rtct]" %36)
  call void @advance315(%"RawPtr[UInt/rtct]"* %"$tmpC3", %"RawPtr[UInt/rtct]"* %src)
  %37 = load %"RawPtr[UInt/rtct]"* %"$tmpC3"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %src, %"RawPtr[UInt/rtct]" %37)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @alloc364(%"RawPtr[UInt/rtct]"* sret %_result, i64 %num) #3 {
  %_result.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %_result, %"RawPtr[UInt/rtct]"** %_result.addr
  %num.addr = alloca i64
  store i64 %num, i64* %num.addr
  %res = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  call void @ctor135(%"RawPtr[UInt/rtct]"* %res)
  %1 = load i64* %num.addr
  %2 = call i64 @"*"(i64 %1, i64 4)
  %3 = call i8* @malloc(i64 %2)
  %4 = bitcast i8* %3 to i32*
  %5 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %res, i32 0, i32 0
  store i32* %4, i32** %5
  %6 = load %"RawPtr[UInt/rtct]"** %_result.addr
  call void @ctor312(%"RawPtr[UInt/rtct]"* %6, %"RawPtr[UInt/rtct]"* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @swap365(%"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"* %other) #3 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %other.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %other, %"Vector[UInt/rtct]"** %other.addr
  %tmp = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 0
  call void @ctor312(%"RawPtr[UInt/rtct]"* %tmp, %"RawPtr[UInt/rtct]"* %2)
  %3 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[UInt/rtct]"* %3, i32 0, i32 0
  %5 = load %"Vector[UInt/rtct]"** %other.addr
  %6 = getelementptr inbounds %"Vector[UInt/rtct]"* %5, i32 0, i32 0
  %7 = load %"RawPtr[UInt/rtct]"* %6
  call void @"=309"(%"RawPtr[UInt/rtct]"* %4, %"RawPtr[UInt/rtct]" %7)
  %8 = load %"Vector[UInt/rtct]"** %other.addr
  %9 = getelementptr inbounds %"Vector[UInt/rtct]"* %8, i32 0, i32 0
  %10 = load %"RawPtr[UInt/rtct]"* %tmp
  call void @"=309"(%"RawPtr[UInt/rtct]"* %9, %"RawPtr[UInt/rtct]" %10)
  %11 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %12 = getelementptr inbounds %"Vector[UInt/rtct]"* %11, i32 0, i32 1
  %13 = load %"RawPtr[UInt/rtct]"* %12
  call void @"=309"(%"RawPtr[UInt/rtct]"* %tmp, %"RawPtr[UInt/rtct]" %13)
  %14 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %15 = getelementptr inbounds %"Vector[UInt/rtct]"* %14, i32 0, i32 1
  %16 = load %"Vector[UInt/rtct]"** %other.addr
  %17 = getelementptr inbounds %"Vector[UInt/rtct]"* %16, i32 0, i32 1
  %18 = load %"RawPtr[UInt/rtct]"* %17
  call void @"=309"(%"RawPtr[UInt/rtct]"* %15, %"RawPtr[UInt/rtct]" %18)
  %19 = load %"Vector[UInt/rtct]"** %other.addr
  %20 = getelementptr inbounds %"Vector[UInt/rtct]"* %19, i32 0, i32 1
  %21 = load %"RawPtr[UInt/rtct]"* %tmp
  call void @"=309"(%"RawPtr[UInt/rtct]"* %20, %"RawPtr[UInt/rtct]" %21)
  %22 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %23 = getelementptr inbounds %"Vector[UInt/rtct]"* %22, i32 0, i32 2
  %24 = load %"RawPtr[UInt/rtct]"* %23
  call void @"=309"(%"RawPtr[UInt/rtct]"* %tmp, %"RawPtr[UInt/rtct]" %24)
  %25 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %26 = getelementptr inbounds %"Vector[UInt/rtct]"* %25, i32 0, i32 2
  %27 = load %"Vector[UInt/rtct]"** %other.addr
  %28 = getelementptr inbounds %"Vector[UInt/rtct]"* %27, i32 0, i32 2
  %29 = load %"RawPtr[UInt/rtct]"* %28
  call void @"=309"(%"RawPtr[UInt/rtct]"* %26, %"RawPtr[UInt/rtct]" %29)
  %30 = load %"Vector[UInt/rtct]"** %other.addr
  %31 = getelementptr inbounds %"Vector[UInt/rtct]"* %30, i32 0, i32 2
  %32 = load %"RawPtr[UInt/rtct]"* %tmp
  call void @"=309"(%"RawPtr[UInt/rtct]"* %31, %"RawPtr[UInt/rtct]" %32)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @dtor366(%"Vector[UInt/rtct]"* %"$this") #3 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %p = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 0
  call void @ctor312(%"RawPtr[UInt/rtct]"* %p, %"RawPtr[UInt/rtct]"* %2)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %3 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[UInt/rtct]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[UInt/rtct]"* %4
  %6 = call i1 @"==302"(%"RawPtr[UInt/rtct]"* %p, %"RawPtr[UInt/rtct]" %5)
  %7 = xor i1 true, %6
  br i1 %7, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %8 = call i32* @value314(%"RawPtr[UInt/rtct]"* %p)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @advance315(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]"* %p)
  %9 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %p, %"RawPtr[UInt/rtct]" %9)
  br label %while_block

while_end:                                        ; preds = %while_block
  %10 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %11 = getelementptr inbounds %"Vector[UInt/rtct]"* %10, i32 0, i32 0
  call void @freePtr367(%"RawPtr[UInt/rtct]"* %11)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @freePtr367(%"RawPtr[UInt/rtct]"* %"$this") #3 {
  %"$this.addr" = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"RawPtr[UInt/rtct]"** %"$this.addr"
  %2 = call i1 @isSet368(%"RawPtr[UInt/rtct]"* %1)
  br i1 %2, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %3 = load %"RawPtr[UInt/rtct]"** %"$this.addr"
  %4 = call i8* @bytePtr305(%"RawPtr[UInt/rtct]"* %3)
  call void @free(i8* %4)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isSet368(%"RawPtr[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load i32** %2
  %4 = bitcast i32* %3 to i8*
  %5 = call i1 @implOpRefNE(i8* %4, i8* null)
  ret i1 %5
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"pre_!!369"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %r) #2 {
  %r.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %r, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %r.addr
  %2 = call i1 @isEmpty370(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %3 = xor i1 true, %2
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty370(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %t) #3 {
  %t.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %t, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 5
  %3 = load i32* %2
  %4 = call i1 @"==228"(i32 %3, i32 0)
  br i1 %4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %t.addr
  %6 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 0
  %7 = call i1 @isEmpty316(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %6)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %7, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal void @"post_++371"(%Token* sret %_result, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %r) #3 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %r.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %r, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %r.addr
  %res = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %r.addr
  call void @front322(%Token* %res, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %r.addr
  call void @popFront320(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %Token** %_result.addr
  call void @ctor217(%Token* %3, %Token* %res)
  call void @dtor299(%Token* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor299(%Token* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %ParserContext* @createScanner(%StringRef %filename, %StringRef %code, %Location* %loc) #3 {
  %filename.addr = alloca %StringRef
  store %StringRef %filename, %StringRef* %filename.addr
  %code.addr = alloca %StringRef
  store %StringRef %code, %StringRef* %code.addr
  %loc.addr = alloca %Location*
  store %Location* %loc, %Location** %loc.addr
  %"$tmpForRef" = alloca i1
  br label %code1

code1:                                            ; preds = %0
  %1 = load %Location** %loc.addr
  store i1 true, i1* %"$tmpForRef"
  %2 = call %ParserContext* @new(%StringRef* %filename.addr, %StringRef* %code.addr, %Location* %1, i1* %"$tmpForRef")
  ret %ParserContext* %2
}

; Function Attrs: inlinehint nounwind
define internal %ParserContext* @new(%StringRef* %arg1, %StringRef* %arg2, %Location* %arg3, i1* %arg4) #3 {
  %arg1.addr = alloca %StringRef*
  store %StringRef* %arg1, %StringRef** %arg1.addr
  %arg2.addr = alloca %StringRef*
  store %StringRef* %arg2, %StringRef** %arg2.addr
  %arg3.addr = alloca %Location*
  store %Location* %arg3, %Location** %arg3.addr
  %arg4.addr = alloca i1*
  store i1* %arg4, i1** %arg4.addr
  %res = alloca %ParserContext*
  br label %code

code:                                             ; preds = %0
  %1 = call i8* @malloc(i64 792)
  %2 = bitcast i8* %1 to %ParserContext*
  store %ParserContext* %2, %ParserContext** %res
  %3 = load %ParserContext** %res
  %4 = load %StringRef** %arg1.addr
  %5 = load %StringRef* %4
  %6 = load %StringRef** %arg2.addr
  %7 = load %StringRef* %6
  %8 = load %Location** %arg3.addr
  %9 = load %Location* %8
  %10 = load i1** %arg4.addr
  %11 = load i1* %10
  call void @ctor115(%ParserContext* %3, %StringRef %5, %StringRef %7, %Location %9, i1 %11)
  %12 = load %ParserContext** %res
  ret %ParserContext* %12
}

; Function Attrs: noinline nounwind
define %ParserContext* @spr_parserIf_createParser(%StringRef %filename, %StringRef %code, %Location* %loc) #4 {
  %filename.addr = alloca %StringRef
  store %StringRef %filename, %StringRef* %filename.addr
  %code.addr = alloca %StringRef
  store %StringRef %code, %StringRef* %code.addr
  %loc.addr = alloca %Location*
  store %Location* %loc, %Location** %loc.addr
  %res = alloca %ParserContext*
  br label %code1

code1:                                            ; preds = %0
  %1 = load %Location** %loc.addr
  %2 = call %ParserContext* @new372(%StringRef* %filename.addr, %StringRef* %code.addr, %Location* %1)
  store %ParserContext* %2, %ParserContext** %res
  %3 = load %ParserContext** %res
  ret %ParserContext* %3
}

; Function Attrs: inlinehint nounwind
define internal %ParserContext* @new372(%StringRef* %arg1, %StringRef* %arg2, %Location* %arg3) #3 {
  %arg1.addr = alloca %StringRef*
  store %StringRef* %arg1, %StringRef** %arg1.addr
  %arg2.addr = alloca %StringRef*
  store %StringRef* %arg2, %StringRef** %arg2.addr
  %arg3.addr = alloca %Location*
  store %Location* %arg3, %Location** %arg3.addr
  %res = alloca %ParserContext*
  br label %code

code:                                             ; preds = %0
  %1 = call i8* @malloc(i64 792)
  %2 = bitcast i8* %1 to %ParserContext*
  store %ParserContext* %2, %ParserContext** %res
  %3 = load %ParserContext** %res
  %4 = load %StringRef** %arg1.addr
  %5 = load %StringRef* %4
  %6 = load %StringRef** %arg2.addr
  %7 = load %StringRef* %6
  %8 = load %Location** %arg3.addr
  %9 = load %Location* %8
  call void @ctor115(%ParserContext* %3, %StringRef %5, %StringRef %7, %Location %9, i1 false)
  %10 = load %ParserContext** %res
  ret %ParserContext* %10
}

; Function Attrs: noinline nounwind
define void @spr_parserIf_destroyParser(%ParserContext* %ctx) #4 {
  %ctx.addr = alloca %ParserContext*
  store %ParserContext* %ctx, %ParserContext** %ctx.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %ParserContext** %ctx.addr
  call void @delete(%ParserContext* %1)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @delete(%ParserContext* %obj) #3 {
  %obj.addr = alloca %ParserContext*
  store %ParserContext* %obj, %ParserContext** %obj.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %ParserContext** %obj.addr
  %2 = bitcast %ParserContext* %1 to i8*
  %3 = call i1 @implOpRefNE(i8* %2, i8* null)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %ParserContext** %obj.addr
  call void @dtor373(%ParserContext* %4)
  %5 = load %ParserContext** %obj.addr
  %6 = bitcast %ParserContext* %5 to i8*
  call void @free(i8* %6)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor373(%ParserContext* %"$this") #2 {
  %"$this.addr" = alloca %ParserContext*
  store %ParserContext* %"$this", %ParserContext** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %ParserContext** %"$this.addr"
  %2 = getelementptr inbounds %ParserContext* %1, i32 0, i32 5
  call void @dtor374(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %ParserContext** %"$this.addr"
  %4 = getelementptr inbounds %ParserContext* %3, i32 0, i32 4
  call void @dtor376(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %4)
  %5 = load %ParserContext** %"$this.addr"
  %6 = getelementptr inbounds %ParserContext* %5, i32 0, i32 3
  call void @dtor378(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %6)
  %7 = load %ParserContext** %"$this.addr"
  %8 = getelementptr inbounds %ParserContext* %7, i32 0, i32 1
  %9 = load %ParserContext** %"$this.addr"
  %10 = getelementptr inbounds %ParserContext* %9, i32 0, i32 0
  call void @dtor381(%File* %10)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor374(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %"$this") #2 {
  %"$this.addr" = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %"$this", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 1
  call void @dtor299(%Token* %2)
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  call void @dtor375(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor375(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %"$this") #2 {
  %"$this.addr" = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %"$this", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %"$this.addr"
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1, i32 0, i32 1
  call void @dtor359(%"Vector[Token]"* %2)
  %3 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %"$this.addr"
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %3, i32 0, i32 0
  call void @dtor376(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor376(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %"$this") #2 {
  %"$this.addr" = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %"$this", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 4
  %3 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %4 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 3
  call void @dtor186(%"Vector[Char/rtct]"* %4)
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %6 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 2
  call void @dtor366(%"Vector[UInt/rtct]"* %6)
  %7 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %"$this.addr"
  %8 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 0
  call void @dtor377(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor377(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %"$this") #2 {
  %"$this.addr" = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %"$this", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %"$this.addr"
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 1
  call void @dtor359(%"Vector[Token]"* %2)
  %3 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %"$this.addr"
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %3, i32 0, i32 0
  call void @dtor378(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor378(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %"$this") #2 {
  %"$this.addr" = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %"$this", %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 2
  call void @dtor299(%Token* %2)
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %4 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 0, i32 1
  call void @dtor379(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  %5 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %"$this.addr"
  %6 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %5, i32 0, i32 0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor379(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %"$this") #2 {
  %"$this.addr" = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %"$this", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %"$this.addr"
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  call void @dtor185(%"RangeWithLookahead[_CharSource]"* %2)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor380(%Location* %"$this") #2 {
  %"$this.addr" = alloca %Location*
  store %Location* %"$this", %Location** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @dtor381(%File* %"$this") #3 {
  %"$this.addr" = alloca %File*
  store %File* %"$this", %File** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %File** %"$this.addr"
  call void @close(%File* %1)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @close(%File* %"$this") #3 {
  %"$this.addr" = alloca %File*
  store %File* %"$this", %File** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %File** %"$this.addr"
  %2 = call i1 @isOpen(%File* %1)
  br i1 %2, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %3 = load %File** %"$this.addr"
  %4 = getelementptr inbounds %File* %3, i32 0, i32 0
  %5 = load i8** %4
  call void @fclose(i8* %5)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  %6 = load %File** %"$this.addr"
  %7 = getelementptr inbounds %File* %6, i32 0, i32 0
  store i8* null, i8** %7
  ret void
}

declare void @fclose(i8*)

; Function Attrs: noinline nounwind
define void @spr_parserIf_nextToken(%ParserContext* %ctx, %Token* %outToken) #4 {
  %ctx.addr = alloca %ParserContext*
  store %ParserContext* %ctx, %ParserContext** %ctx.addr
  %outToken.addr = alloca %Token*
  store %Token* %outToken, %Token** %outToken.addr
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %Token** %outToken.addr
  %2 = load %ParserContext** %ctx.addr
  %3 = getelementptr inbounds %ParserContext* %2, i32 0, i32 3
  call void @"post_++221"(%Token* %"$tmpC", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3)
  call void @"=196"(%Token* %1, %Token* %"$tmpC")
  call void @dtor299(%Token* %"$tmpC")
  ret void
}

; Function Attrs: noinline nounwind
define %Node @spr_parserIf_parseModule(%ParserContext* %ctx) #4 {
  %ctx.addr = alloca %ParserContext*
  store %ParserContext* %ctx, %ParserContext** %ctx.addr
  %"$tmpC" = alloca %Node
  br label %code

code:                                             ; preds = %0
  %1 = load %ParserContext** %ctx.addr
  %2 = getelementptr inbounds %ParserContext* %1, i32 0, i32 5
  call void @parseModule(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %Node* %"$tmpC"
  ret %Node %3
}

; Function Attrs: inlinehint nounwind
define internal void @parseModule(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %loc = alloca %Location
  %moduleName = alloca %Node
  %decls = alloca %Node
  %tmp.v = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %Location
  %"$tmpC1" = alloca %Location
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseModuleName(%Node* %moduleName, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  call void @ctor396(%Node* %decls)
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseStmts(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i1 true, %Node* %decls)
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 0)
  %5 = load %TokenType* %tmp.v
  %6 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, %TokenType %5)
  %7 = load %Node** %_result.addr
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @lastLoc(%Location* %"$tmpC1", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  call void @span(%Location* %"$tmpC", %Location* %loc, %Location* %"$tmpC1")
  %9 = load %Node* %moduleName
  %10 = load %Node* %decls
  %11 = call %Node @comp_parser_mkModule(%Location* %"$tmpC", %Node %9, %Node %10)
  store %Node %11, %Node* %"$tmpForRef"
  call void @ctor391(%Node* %7, %Node* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @curLoc(%Location* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %Location*
  store %Location* %_result, %Location** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %_result.addr
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %3 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, i32 0, i32 0
  call void @"pre_*382"(%Token* %"$tmpC", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %3)
  %4 = getelementptr inbounds %Token* %"$tmpC", i32 0, i32 0
  call void @ctor168(%Location* %1, %Location* %4)
  call void @dtor299(%Token* %"$tmpC")
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor299(%Token* %"$tmpC")
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"pre_*382"(%Token* sret %_result, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %r) #2 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %r.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %r, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token** %_result.addr
  %2 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %r.addr
  call void @front383(%Token* %1, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @front383(%Token* sret %_result, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %s) #3 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %s.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %s, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token** %_result.addr
  %2 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %s.addr
  %3 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2, i32 0, i32 1
  %4 = call %Token* @front319(%"Vector[Token]"* %3)
  call void @ctor217(%Token* %1, %Token* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseModuleName(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %tmp.v = alloca %TokenType
  %qid = alloca %Node
  %tmp.v1 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 2)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseQualifiedName(%Node* %qid, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i1 false)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v1, i32 33)
  %6 = load %TokenType* %tmp.v1
  %7 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %TokenType %6)
  %8 = load %Node** %_result.addr
  call void @ctor391(%Node* %8, %Node* %qid)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %9 = load %Node** %_result.addr
  call void @ctor396(%Node* %9)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %TokenType %t) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %t.addr = alloca %TokenType
  store %TokenType %t, %TokenType* %t.addr
  %"$tmpC" = alloca %Token
  %"$tmpC1" = alloca %Token
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @"pre_*382"(%Token* %"$tmpC", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2)
  %3 = getelementptr inbounds %Token* %"$tmpC", i32 0, i32 1
  %4 = call i1 @"==227"(%TokenType* %3, %TokenType* %t.addr)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %8 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 0
  call void @"post_++384"(%Token* %"$tmpC1", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %8)
  call void @"=196"(%Token* %6, %Token* %"$tmpC1")
  call void @dtor299(%Token* %"$tmpC1")
  call void @dtor299(%Token* %"$tmpC")
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  call void @dtor299(%Token* %"$tmpC")
  ret i1 false

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @"post_++384"(%Token* sret %_result, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %r) #3 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %r.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %r, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %r.addr
  %res = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %r.addr
  call void @front383(%Token* %res, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1)
  %2 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %r.addr
  call void @popFront385(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2)
  %3 = load %Token** %_result.addr
  call void @ctor217(%Token* %3, %Token* %res)
  call void @dtor299(%Token* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor299(%Token* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popFront385(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %s) #3 {
  %s.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %s, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %s.addr
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %s.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1, i32 0, i32 1
  call void @remove324(%"Vector[Token]"* %2, i64 0)
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %s.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %3, i32 0, i32 1
  %5 = call i1 @isEmpty317(%"Vector[Token]"* %4)
  br i1 %5, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %6 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %s.addr
  %7 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %6, i32 0, i32 1
  %8 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %s.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %8, i32 0, i32 0
  call void @"post_++371"(%Token* %"$tmpC", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %9)
  call void @"+=214"(%"Vector[Token]"* %7, %Token* %"$tmpC")
  call void @dtor299(%Token* %"$tmpC")
  br label %if_end

if_end:                                           ; preds = %if_then, %cond.end
  ret void

cond.true:                                        ; preds = %if_block
  %10 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %s.addr
  %11 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %10, i32 0, i32 0
  %12 = call i1 @"pre_!!369"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %11)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %12, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseQualifiedName(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, i1 %allowStar) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %allowStar.addr = alloca i1
  store i1 %allowStar, i1* %allowStar.addr
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %base = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %lastId = alloca %String
  %tmp.v1 = alloca %TokenType
  %tmp.v2 = alloca %TokenType
  %"$tmpForRef3" = alloca %Node
  %"$tmpC4" = alloca %Location
  %"$tmpC5" = alloca %Location
  %"$tmpC6" = alloca %StringRef
  %tmp.v10 = alloca %TokenType
  %"$tmpForRef11" = alloca %Node
  %"$tmpC12" = alloca %Location
  %"$tmpC13" = alloca %Location
  %"$tmpC14" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 38)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC", %String* %7)
  %8 = load %StringRef* %"$tmpC"
  %9 = call %Node @comp_parser_mkIdentifier(%Location* %loc, %StringRef %8)
  store %Node %9, %Node* %"$tmpForRef"
  call void @ctor391(%Node* %base, %Node* %"$tmpForRef")
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %11 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, i32 0, i32 1
  %12 = getelementptr inbounds %Token* %11, i32 0, i32 2
  call void @ctor163(%String* %lastId, %String* %12)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v1, i32 35)
  %14 = load %TokenType* %tmp.v1
  %15 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, %TokenType %14)
  br i1 %15, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block

while_step:                                       ; preds = %cond_destruct_end9
  br label %while_block

while_end:                                        ; preds = %cond_destruct_end, %while_block
  %16 = load %Node** %_result.addr
  call void @ctor391(%Node* %16, %Node* %base)
  call void @dtor166(%String* %lastId)
  ret void

if_block:                                         ; preds = %while_body
  %17 = load i1* %allowStar.addr
  br i1 %17, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @lastLoc(%Location* %"$tmpC5", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18)
  call void @span(%Location* %"$tmpC4", %Location* %loc, %Location* %"$tmpC5")
  %19 = load %Node* %base
  %20 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %21 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %20, i32 0, i32 1
  %22 = getelementptr inbounds %Token* %21, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC6", %String* %22)
  %23 = load %StringRef* %"$tmpC6"
  %24 = call %Node @comp_parser_mkStarExpr(%Location* %"$tmpC4", %Node %19, %StringRef %23)
  store %Node %24, %Node* %"$tmpForRef3"
  call void @"=393"(%Node* %base, %Node* %"$tmpForRef3")
  br i1 %17, label %cond_destruct_alt1, label %cond_destruct_alt2

if_end:                                           ; preds = %dumy_block, %cond.end
  br i1 %17, label %cond_destruct_alt17, label %cond_destruct_alt28

cond.true:                                        ; preds = %if_block
  %25 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v2, i32 39)
  %26 = load %TokenType* %tmp.v2
  %27 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %25, %TokenType %26)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %27, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end

cond_destruct_alt1:                               ; preds = %if_then
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_then
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  br label %while_end

dumy_block:                                       ; No predecessors!
  br label %if_end

cond_destruct_alt17:                              ; preds = %if_end
  br label %cond_destruct_end9

cond_destruct_alt28:                              ; preds = %if_end
  br label %cond_destruct_end9

cond_destruct_end9:                               ; preds = %cond_destruct_alt28, %cond_destruct_alt17
  %28 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v10, i32 38)
  %29 = load %TokenType* %tmp.v10
  %30 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %28, %TokenType %29)
  %31 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @lastLoc(%Location* %"$tmpC13", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %31)
  call void @span(%Location* %"$tmpC12", %Location* %loc, %Location* %"$tmpC13")
  %32 = load %Node* %base
  %33 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %34 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %33, i32 0, i32 1
  %35 = getelementptr inbounds %Token* %34, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC14", %String* %35)
  %36 = load %StringRef* %"$tmpC14"
  %37 = call %Node @comp_parser_mkCompoundExpr(%Location* %"$tmpC12", %Node %32, %StringRef %36)
  store %Node %37, %Node* %"$tmpForRef11"
  call void @"=393"(%Node* %base, %Node* %"$tmpForRef11")
  br label %while_step

dumy_block15:                                     ; No predecessors!
  call void @dtor166(%String* %lastId)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %TokenType %t) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %t.addr = alloca %TokenType
  store %TokenType %t, %TokenType* %t.addr
  %"$tmpC" = alloca %String
  %const.bytes = alloca [26 x i8]
  %const.struct = alloca %StringRef
  %"$tmpC5" = alloca %Token
  %const.bytes6 = alloca [13 x i8]
  %const.struct7 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %2 = load %TokenType* %t.addr
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %5 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i32 0, i32 2
  %6 = load i1* %5
  br i1 %6, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block4, %if_block1
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  store [26 x i8] c"Syntax error, unexpected \00", [26 x i8]* %const.bytes
  %8 = getelementptr inbounds [26 x i8]* %const.bytes, i32 0, i32 0
  %9 = getelementptr inbounds [26 x i8]* %const.bytes, i32 0, i32 25
  %10 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %11 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %8, i8** %10
  store i8* %9, i8** %11
  %12 = load %StringRef* %const.struct
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %14 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, i32 0, i32 0
  call void @"pre_*382"(%Token* %"$tmpC5", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %14)
  %15 = getelementptr inbounds %Token* %"$tmpC5", i32 0, i32 1
  %16 = load %TokenType* %15
  store [13 x i8] c", expecting \00", [13 x i8]* %const.bytes6
  %17 = getelementptr inbounds [13 x i8]* %const.bytes6, i32 0, i32 0
  %18 = getelementptr inbounds [13 x i8]* %const.bytes6, i32 0, i32 12
  %19 = getelementptr inbounds %StringRef* %const.struct7, i32 0, i32 0
  %20 = getelementptr inbounds %StringRef* %const.struct7, i32 0, i32 1
  store i8* %17, i8** %19
  store i8* %18, i8** %20
  %21 = load %StringRef* %const.struct7
  %22 = load %TokenType* %t.addr
  call void @toString387(%String* %"$tmpC", %StringRef %12, %TokenType %16, %StringRef %21, %TokenType %22)
  call void @reportError386(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, %String* %"$tmpC")
  call void @dtor166(%String* %"$tmpC")
  call void @dtor299(%Token* %"$tmpC5")
  ret i1 false

dumy_block4:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: inlinehint nounwind
define internal void @reportError386(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %String* %msg) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %msg.addr = alloca %String*
  store %String* %msg, %String** %msg.addr
  %"$tmpC" = alloca %Token
  %"$tmpC1" = alloca %Token
  %tmp.v = alloca %TokenType
  %"$tmpC2" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 3
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  call void @"pre_*382"(%Token* %"$tmpC", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %4)
  %5 = getelementptr inbounds %Token* %"$tmpC", i32 0, i32 0
  %6 = load %Location* %5
  %7 = load %String** %msg.addr
  call void @reportError(%ExternalErrorReporter* %2, %Location %6, %String* %7)
  call void @dtor299(%Token* %"$tmpC")
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %9 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, i32 0, i32 0
  call void @"pre_*382"(%Token* %"$tmpC1", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %9)
  %10 = getelementptr inbounds %Token* %"$tmpC1", i32 0, i32 1
  call void @ctor229(%TokenType* %tmp.v, i32 0)
  %11 = call i1 @"==227"(%TokenType* %10, %TokenType* %tmp.v)
  %12 = xor i1 true, %11
  br i1 %12, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %14 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, i32 0, i32 1
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %16 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, i32 0, i32 0
  call void @"post_++384"(%Token* %"$tmpC2", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %16)
  call void @"=196"(%Token* %14, %Token* %"$tmpC2")
  call void @dtor299(%Token* %"$tmpC2")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  call void @dtor299(%Token* %"$tmpC1")
  %17 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %18 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %17, i32 0, i32 2
  store i1 true, i1* %18
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @toString387(%String* sret %_result, %StringRef %a1, %TokenType %a2, %StringRef %a3, %TokenType %a4) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %a1.addr = alloca %StringRef
  store %StringRef %a1, %StringRef* %a1.addr
  %a2.addr = alloca %TokenType
  store %TokenType %a2, %TokenType* %a2.addr
  %a3.addr = alloca %StringRef
  store %StringRef %a3, %StringRef* %a3.addr
  %a4.addr = alloca %TokenType
  store %TokenType %a4, %TokenType* %a4.addr
  %s = alloca %StringOutputStream
  br label %code

code:                                             ; preds = %0
  call void @ctor142(%StringOutputStream* %s)
  %1 = call %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %a1.addr)
  %2 = call %StringOutputStream* @"<<388"(%StringOutputStream* %1, %TokenType* %a2.addr)
  %3 = call %StringOutputStream* @"<<"(%StringOutputStream* %2, %StringRef* %a3.addr)
  %4 = call %StringOutputStream* @"<<388"(%StringOutputStream* %3, %TokenType* %a4.addr)
  %5 = load %String** %_result.addr
  %6 = getelementptr inbounds %StringOutputStream* %s, i32 0, i32 0
  call void @ctor163(%String* %5, %String* %6)
  call void @dtor165(%StringOutputStream* %s)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor165(%StringOutputStream* %s)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringOutputStream* @"<<388"(%StringOutputStream* %s, %TokenType* %x) #3 {
  %s.addr = alloca %StringOutputStream*
  store %StringOutputStream* %s, %StringOutputStream** %s.addr
  %x.addr = alloca %TokenType*
  store %TokenType* %x, %TokenType** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %TokenType** %x.addr
  %2 = load %TokenType* %1
  %3 = load %StringOutputStream** %s.addr
  call void @">>"(%TokenType %2, %StringOutputStream* %3)
  %4 = load %StringOutputStream** %s.addr
  ret %StringOutputStream* %4
}

; Function Attrs: inlinehint nounwind
define internal void @">>"(%TokenType %t, %StringOutputStream* %os) #3 {
  %t.addr = alloca %TokenType
  store %TokenType %t, %TokenType* %t.addr
  %os.addr = alloca %StringOutputStream*
  store %StringOutputStream* %os, %StringOutputStream** %os.addr
  %"$tmpC" = alloca %String
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %os.addr
  %2 = load %TokenType* %t.addr
  call void @_asString(%String* %"$tmpC", %TokenType %2)
  %3 = call %StringOutputStream* @"<<389"(%StringOutputStream* %1, %String* %"$tmpC")
  call void @dtor166(%String* %"$tmpC")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringOutputStream* @"<<389"(%StringOutputStream* %s, %String* %x) #3 {
  %s.addr = alloca %StringOutputStream*
  store %StringOutputStream* %s, %StringOutputStream** %s.addr
  %x.addr = alloca %String*
  store %String* %x, %String** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %x.addr
  %2 = load %StringOutputStream** %s.addr
  call void @">>390"(%String* %1, %StringOutputStream* %2)
  %3 = load %StringOutputStream** %s.addr
  ret %StringOutputStream* %3
}

; Function Attrs: inlinehint nounwind
define internal void @">>390"(%String* %"$this", %StringOutputStream* %os) #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %os.addr = alloca %StringOutputStream*
  store %StringOutputStream* %os, %StringOutputStream** %os.addr
  %"$tmpC" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream** %os.addr
  %2 = load %String** %"$this.addr"
  call void @asStringRef(%StringRef* %"$tmpC", %String* %2)
  %3 = call %StringOutputStream* @"<<"(%StringOutputStream* %1, %StringRef* %"$tmpC")
  ret void
}

; Function Attrs: noinline nounwind
define void @_asString(%String* sret %_result, %TokenType %t) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %t.addr = alloca %TokenType
  store %TokenType %t, %TokenType* %t.addr
  %tmp.v = alloca %TokenType
  %"$tmpForRef" = alloca %StringRef
  %const.bytes = alloca [12 x i8]
  %const.struct = alloca %StringRef
  %tmp.v5 = alloca %TokenType
  %"$tmpForRef6" = alloca %StringRef
  %const.bytes7 = alloca [9 x i8]
  %const.struct8 = alloca %StringRef
  %tmp.v14 = alloca %TokenType
  %"$tmpForRef15" = alloca %StringRef
  %const.bytes16 = alloca [9 x i8]
  %const.struct17 = alloca %StringRef
  %tmp.v23 = alloca %TokenType
  %"$tmpForRef24" = alloca %StringRef
  %const.bytes25 = alloca [9 x i8]
  %const.struct26 = alloca %StringRef
  %tmp.v32 = alloca %TokenType
  %"$tmpForRef33" = alloca %StringRef
  %const.bytes34 = alloca [8 x i8]
  %const.struct35 = alloca %StringRef
  %tmp.v41 = alloca %TokenType
  %"$tmpForRef42" = alloca %StringRef
  %const.bytes43 = alloca [10 x i8]
  %const.struct44 = alloca %StringRef
  %tmp.v50 = alloca %TokenType
  %"$tmpForRef51" = alloca %StringRef
  %const.bytes52 = alloca [11 x i8]
  %const.struct53 = alloca %StringRef
  %tmp.v59 = alloca %TokenType
  %"$tmpForRef60" = alloca %StringRef
  %const.bytes61 = alloca [6 x i8]
  %const.struct62 = alloca %StringRef
  %tmp.v68 = alloca %TokenType
  %"$tmpForRef69" = alloca %StringRef
  %const.bytes70 = alloca [10 x i8]
  %const.struct71 = alloca %StringRef
  %tmp.v77 = alloca %TokenType
  %"$tmpForRef78" = alloca %StringRef
  %const.bytes79 = alloca [8 x i8]
  %const.struct80 = alloca %StringRef
  %tmp.v86 = alloca %TokenType
  %"$tmpForRef87" = alloca %StringRef
  %const.bytes88 = alloca [6 x i8]
  %const.struct89 = alloca %StringRef
  %tmp.v95 = alloca %TokenType
  %"$tmpForRef96" = alloca %StringRef
  %const.bytes97 = alloca [8 x i8]
  %const.struct98 = alloca %StringRef
  %tmp.v104 = alloca %TokenType
  %"$tmpForRef105" = alloca %StringRef
  %const.bytes106 = alloca [8 x i8]
  %const.struct107 = alloca %StringRef
  %tmp.v113 = alloca %TokenType
  %"$tmpForRef114" = alloca %StringRef
  %const.bytes115 = alloca [11 x i8]
  %const.struct116 = alloca %StringRef
  %tmp.v122 = alloca %TokenType
  %"$tmpForRef123" = alloca %StringRef
  %const.bytes124 = alloca [10 x i8]
  %const.struct125 = alloca %StringRef
  %tmp.v131 = alloca %TokenType
  %"$tmpForRef132" = alloca %StringRef
  %const.bytes133 = alloca [6 x i8]
  %const.struct134 = alloca %StringRef
  %tmp.v140 = alloca %TokenType
  %"$tmpForRef141" = alloca %StringRef
  %const.bytes142 = alloca [5 x i8]
  %const.struct143 = alloca %StringRef
  %tmp.v149 = alloca %TokenType
  %"$tmpForRef150" = alloca %StringRef
  %const.bytes151 = alloca [9 x i8]
  %const.struct152 = alloca %StringRef
  %tmp.v158 = alloca %TokenType
  %"$tmpForRef159" = alloca %StringRef
  %const.bytes160 = alloca [8 x i8]
  %const.struct161 = alloca %StringRef
  %tmp.v167 = alloca %TokenType
  %"$tmpForRef168" = alloca %StringRef
  %const.bytes169 = alloca [6 x i8]
  %const.struct170 = alloca %StringRef
  %tmp.v176 = alloca %TokenType
  %"$tmpForRef177" = alloca %StringRef
  %const.bytes178 = alloca [8 x i8]
  %const.struct179 = alloca %StringRef
  %tmp.v185 = alloca %TokenType
  %"$tmpForRef186" = alloca %StringRef
  %const.bytes187 = alloca [8 x i8]
  %const.struct188 = alloca %StringRef
  %tmp.v194 = alloca %TokenType
  %"$tmpForRef195" = alloca %StringRef
  %const.bytes196 = alloca [7 x i8]
  %const.struct197 = alloca %StringRef
  %tmp.v203 = alloca %TokenType
  %"$tmpForRef204" = alloca %StringRef
  %const.bytes205 = alloca [7 x i8]
  %const.struct206 = alloca %StringRef
  %tmp.v212 = alloca %TokenType
  %"$tmpForRef213" = alloca %StringRef
  %const.bytes214 = alloca [7 x i8]
  %const.struct215 = alloca %StringRef
  %tmp.v221 = alloca %TokenType
  %"$tmpForRef222" = alloca %StringRef
  %const.bytes223 = alloca [7 x i8]
  %const.struct224 = alloca %StringRef
  %tmp.v230 = alloca %TokenType
  %"$tmpForRef231" = alloca %StringRef
  %const.bytes232 = alloca [16 x i8]
  %const.struct233 = alloca %StringRef
  %tmp.v239 = alloca %TokenType
  %"$tmpForRef240" = alloca %StringRef
  %const.bytes241 = alloca [16 x i8]
  %const.struct242 = alloca %StringRef
  %tmp.v248 = alloca %TokenType
  %"$tmpForRef249" = alloca %StringRef
  %const.bytes250 = alloca [4 x i8]
  %const.struct251 = alloca %StringRef
  %tmp.v257 = alloca %TokenType
  %"$tmpForRef258" = alloca %StringRef
  %const.bytes259 = alloca [4 x i8]
  %const.struct260 = alloca %StringRef
  %tmp.v266 = alloca %TokenType
  %"$tmpForRef267" = alloca %StringRef
  %const.bytes268 = alloca [4 x i8]
  %const.struct269 = alloca %StringRef
  %tmp.v275 = alloca %TokenType
  %"$tmpForRef276" = alloca %StringRef
  %const.bytes277 = alloca [4 x i8]
  %const.struct278 = alloca %StringRef
  %tmp.v284 = alloca %TokenType
  %"$tmpForRef285" = alloca %StringRef
  %const.bytes286 = alloca [4 x i8]
  %const.struct287 = alloca %StringRef
  %tmp.v293 = alloca %TokenType
  %"$tmpForRef294" = alloca %StringRef
  %const.bytes295 = alloca [17 x i8]
  %const.struct296 = alloca %StringRef
  %tmp.v302 = alloca %TokenType
  %"$tmpForRef303" = alloca %StringRef
  %const.bytes304 = alloca [4 x i8]
  %const.struct305 = alloca %StringRef
  %tmp.v311 = alloca %TokenType
  %"$tmpForRef312" = alloca %StringRef
  %const.bytes313 = alloca [4 x i8]
  %const.struct314 = alloca %StringRef
  %tmp.v320 = alloca %TokenType
  %"$tmpForRef321" = alloca %StringRef
  %const.bytes322 = alloca [4 x i8]
  %const.struct323 = alloca %StringRef
  %tmp.v329 = alloca %TokenType
  %"$tmpForRef330" = alloca %StringRef
  %const.bytes331 = alloca [4 x i8]
  %const.struct332 = alloca %StringRef
  %tmp.v338 = alloca %TokenType
  %"$tmpForRef339" = alloca %StringRef
  %const.bytes340 = alloca [11 x i8]
  %const.struct341 = alloca %StringRef
  %tmp.v347 = alloca %TokenType
  %"$tmpForRef348" = alloca %StringRef
  %const.bytes349 = alloca [9 x i8]
  %const.struct350 = alloca %StringRef
  %tmp.v356 = alloca %TokenType
  %"$tmpForRef357" = alloca %StringRef
  %const.bytes358 = alloca [13 x i8]
  %const.struct359 = alloca %StringRef
  %tmp.v365 = alloca %TokenType
  %"$tmpForRef366" = alloca %StringRef
  %const.bytes367 = alloca [15 x i8]
  %const.struct368 = alloca %StringRef
  %tmp.v374 = alloca %TokenType
  %"$tmpForRef375" = alloca %StringRef
  %const.bytes376 = alloca [12 x i8]
  %const.struct377 = alloca %StringRef
  %tmp.v383 = alloca %TokenType
  %"$tmpForRef384" = alloca %StringRef
  %const.bytes385 = alloca [13 x i8]
  %const.struct386 = alloca %StringRef
  %tmp.v392 = alloca %TokenType
  %"$tmpForRef393" = alloca %StringRef
  %const.bytes394 = alloca [13 x i8]
  %const.struct395 = alloca %StringRef
  %tmp.v401 = alloca %TokenType
  %"$tmpForRef402" = alloca %StringRef
  %const.bytes403 = alloca [14 x i8]
  %const.struct404 = alloca %StringRef
  %tmp.v410 = alloca %TokenType
  %"$tmpForRef411" = alloca %StringRef
  %const.bytes412 = alloca [14 x i8]
  %const.struct413 = alloca %StringRef
  %tmp.v418 = alloca %TokenType
  %"$tmpForRef419" = alloca %StringRef
  %const.bytes420 = alloca [15 x i8]
  %const.struct421 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  call void @ctor229(%TokenType* %tmp.v, i32 0)
  %1 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v)
  br i1 %1, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %2 = load %String** %_result.addr
  store [12 x i8] c"end-of-file\00", [12 x i8]* %const.bytes
  %3 = getelementptr inbounds [12 x i8]* %const.bytes, i32 0, i32 0
  %4 = getelementptr inbounds [12 x i8]* %const.bytes, i32 0, i32 11
  %5 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %6 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %3, i8** %5
  store i8* %4, i8** %6
  %7 = load %StringRef* %const.struct
  store %StringRef %7, %StringRef* %"$tmpForRef"
  call void @ctor266(%String* %2, %StringRef* %"$tmpForRef")
  ret void

if_else:                                          ; preds = %if_block
  br label %if_block1

if_end:                                           ; preds = %if_end4, %dumy_block
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_else
  call void @ctor229(%TokenType* %tmp.v5, i32 1)
  %8 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v5)
  br i1 %8, label %if_then2, label %if_else3

if_then2:                                         ; preds = %if_block1
  %9 = load %String** %_result.addr
  store [9 x i8] c"new-line\00", [9 x i8]* %const.bytes7
  %10 = getelementptr inbounds [9 x i8]* %const.bytes7, i32 0, i32 0
  %11 = getelementptr inbounds [9 x i8]* %const.bytes7, i32 0, i32 8
  %12 = getelementptr inbounds %StringRef* %const.struct8, i32 0, i32 0
  %13 = getelementptr inbounds %StringRef* %const.struct8, i32 0, i32 1
  store i8* %10, i8** %12
  store i8* %11, i8** %13
  %14 = load %StringRef* %const.struct8
  store %StringRef %14, %StringRef* %"$tmpForRef6"
  call void @ctor266(%String* %9, %StringRef* %"$tmpForRef6")
  ret void

if_else3:                                         ; preds = %if_block1
  br label %if_block10

if_end4:                                          ; preds = %if_end13, %dumy_block9
  br label %if_end

dumy_block9:                                      ; No predecessors!
  br label %if_end4

if_block10:                                       ; preds = %if_else3
  call void @ctor229(%TokenType* %tmp.v14, i32 2)
  %15 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v14)
  br i1 %15, label %if_then11, label %if_else12

if_then11:                                        ; preds = %if_block10
  %16 = load %String** %_result.addr
  store [9 x i8] c"'module'\00", [9 x i8]* %const.bytes16
  %17 = getelementptr inbounds [9 x i8]* %const.bytes16, i32 0, i32 0
  %18 = getelementptr inbounds [9 x i8]* %const.bytes16, i32 0, i32 8
  %19 = getelementptr inbounds %StringRef* %const.struct17, i32 0, i32 0
  %20 = getelementptr inbounds %StringRef* %const.struct17, i32 0, i32 1
  store i8* %17, i8** %19
  store i8* %18, i8** %20
  %21 = load %StringRef* %const.struct17
  store %StringRef %21, %StringRef* %"$tmpForRef15"
  call void @ctor266(%String* %16, %StringRef* %"$tmpForRef15")
  ret void

if_else12:                                        ; preds = %if_block10
  br label %if_block19

if_end13:                                         ; preds = %if_end22, %dumy_block18
  br label %if_end4

dumy_block18:                                     ; No predecessors!
  br label %if_end13

if_block19:                                       ; preds = %if_else12
  call void @ctor229(%TokenType* %tmp.v23, i32 3)
  %22 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v23)
  br i1 %22, label %if_then20, label %if_else21

if_then20:                                        ; preds = %if_block19
  %23 = load %String** %_result.addr
  store [9 x i8] c"'import'\00", [9 x i8]* %const.bytes25
  %24 = getelementptr inbounds [9 x i8]* %const.bytes25, i32 0, i32 0
  %25 = getelementptr inbounds [9 x i8]* %const.bytes25, i32 0, i32 8
  %26 = getelementptr inbounds %StringRef* %const.struct26, i32 0, i32 0
  %27 = getelementptr inbounds %StringRef* %const.struct26, i32 0, i32 1
  store i8* %24, i8** %26
  store i8* %25, i8** %27
  %28 = load %StringRef* %const.struct26
  store %StringRef %28, %StringRef* %"$tmpForRef24"
  call void @ctor266(%String* %23, %StringRef* %"$tmpForRef24")
  ret void

if_else21:                                        ; preds = %if_block19
  br label %if_block28

if_end22:                                         ; preds = %if_end31, %dumy_block27
  br label %if_end13

dumy_block27:                                     ; No predecessors!
  br label %if_end22

if_block28:                                       ; preds = %if_else21
  call void @ctor229(%TokenType* %tmp.v32, i32 4)
  %29 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v32)
  br i1 %29, label %if_then29, label %if_else30

if_then29:                                        ; preds = %if_block28
  %30 = load %String** %_result.addr
  store [8 x i8] c"'class'\00", [8 x i8]* %const.bytes34
  %31 = getelementptr inbounds [8 x i8]* %const.bytes34, i32 0, i32 0
  %32 = getelementptr inbounds [8 x i8]* %const.bytes34, i32 0, i32 7
  %33 = getelementptr inbounds %StringRef* %const.struct35, i32 0, i32 0
  %34 = getelementptr inbounds %StringRef* %const.struct35, i32 0, i32 1
  store i8* %31, i8** %33
  store i8* %32, i8** %34
  %35 = load %StringRef* %const.struct35
  store %StringRef %35, %StringRef* %"$tmpForRef33"
  call void @ctor266(%String* %30, %StringRef* %"$tmpForRef33")
  ret void

if_else30:                                        ; preds = %if_block28
  br label %if_block37

if_end31:                                         ; preds = %if_end40, %dumy_block36
  br label %if_end22

dumy_block36:                                     ; No predecessors!
  br label %if_end31

if_block37:                                       ; preds = %if_else30
  call void @ctor229(%TokenType* %tmp.v41, i32 5)
  %36 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v41)
  br i1 %36, label %if_then38, label %if_else39

if_then38:                                        ; preds = %if_block37
  %37 = load %String** %_result.addr
  store [10 x i8] c"'concept'\00", [10 x i8]* %const.bytes43
  %38 = getelementptr inbounds [10 x i8]* %const.bytes43, i32 0, i32 0
  %39 = getelementptr inbounds [10 x i8]* %const.bytes43, i32 0, i32 9
  %40 = getelementptr inbounds %StringRef* %const.struct44, i32 0, i32 0
  %41 = getelementptr inbounds %StringRef* %const.struct44, i32 0, i32 1
  store i8* %38, i8** %40
  store i8* %39, i8** %41
  %42 = load %StringRef* %const.struct44
  store %StringRef %42, %StringRef* %"$tmpForRef42"
  call void @ctor266(%String* %37, %StringRef* %"$tmpForRef42")
  ret void

if_else39:                                        ; preds = %if_block37
  br label %if_block46

if_end40:                                         ; preds = %if_end49, %dumy_block45
  br label %if_end31

dumy_block45:                                     ; No predecessors!
  br label %if_end40

if_block46:                                       ; preds = %if_else39
  call void @ctor229(%TokenType* %tmp.v50, i32 6)
  %43 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v50)
  br i1 %43, label %if_then47, label %if_else48

if_then47:                                        ; preds = %if_block46
  %44 = load %String** %_result.addr
  store [11 x i8] c"'datatype'\00", [11 x i8]* %const.bytes52
  %45 = getelementptr inbounds [11 x i8]* %const.bytes52, i32 0, i32 0
  %46 = getelementptr inbounds [11 x i8]* %const.bytes52, i32 0, i32 10
  %47 = getelementptr inbounds %StringRef* %const.struct53, i32 0, i32 0
  %48 = getelementptr inbounds %StringRef* %const.struct53, i32 0, i32 1
  store i8* %45, i8** %47
  store i8* %46, i8** %48
  %49 = load %StringRef* %const.struct53
  store %StringRef %49, %StringRef* %"$tmpForRef51"
  call void @ctor266(%String* %44, %StringRef* %"$tmpForRef51")
  ret void

if_else48:                                        ; preds = %if_block46
  br label %if_block55

if_end49:                                         ; preds = %if_end58, %dumy_block54
  br label %if_end40

dumy_block54:                                     ; No predecessors!
  br label %if_end49

if_block55:                                       ; preds = %if_else48
  call void @ctor229(%TokenType* %tmp.v59, i32 7)
  %50 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v59)
  br i1 %50, label %if_then56, label %if_else57

if_then56:                                        ; preds = %if_block55
  %51 = load %String** %_result.addr
  store [6 x i8] c"'fun'\00", [6 x i8]* %const.bytes61
  %52 = getelementptr inbounds [6 x i8]* %const.bytes61, i32 0, i32 0
  %53 = getelementptr inbounds [6 x i8]* %const.bytes61, i32 0, i32 5
  %54 = getelementptr inbounds %StringRef* %const.struct62, i32 0, i32 0
  %55 = getelementptr inbounds %StringRef* %const.struct62, i32 0, i32 1
  store i8* %52, i8** %54
  store i8* %53, i8** %55
  %56 = load %StringRef* %const.struct62
  store %StringRef %56, %StringRef* %"$tmpForRef60"
  call void @ctor266(%String* %51, %StringRef* %"$tmpForRef60")
  ret void

if_else57:                                        ; preds = %if_block55
  br label %if_block64

if_end58:                                         ; preds = %if_end67, %dumy_block63
  br label %if_end49

dumy_block63:                                     ; No predecessors!
  br label %if_end58

if_block64:                                       ; preds = %if_else57
  call void @ctor229(%TokenType* %tmp.v68, i32 8)
  %57 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v68)
  br i1 %57, label %if_then65, label %if_else66

if_then65:                                        ; preds = %if_block64
  %58 = load %String** %_result.addr
  store [10 x i8] c"'package'\00", [10 x i8]* %const.bytes70
  %59 = getelementptr inbounds [10 x i8]* %const.bytes70, i32 0, i32 0
  %60 = getelementptr inbounds [10 x i8]* %const.bytes70, i32 0, i32 9
  %61 = getelementptr inbounds %StringRef* %const.struct71, i32 0, i32 0
  %62 = getelementptr inbounds %StringRef* %const.struct71, i32 0, i32 1
  store i8* %59, i8** %61
  store i8* %60, i8** %62
  %63 = load %StringRef* %const.struct71
  store %StringRef %63, %StringRef* %"$tmpForRef69"
  call void @ctor266(%String* %58, %StringRef* %"$tmpForRef69")
  ret void

if_else66:                                        ; preds = %if_block64
  br label %if_block73

if_end67:                                         ; preds = %if_end76, %dumy_block72
  br label %if_end58

dumy_block72:                                     ; No predecessors!
  br label %if_end67

if_block73:                                       ; preds = %if_else66
  call void @ctor229(%TokenType* %tmp.v77, i32 9)
  %64 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v77)
  br i1 %64, label %if_then74, label %if_else75

if_then74:                                        ; preds = %if_block73
  %65 = load %String** %_result.addr
  store [8 x i8] c"'using'\00", [8 x i8]* %const.bytes79
  %66 = getelementptr inbounds [8 x i8]* %const.bytes79, i32 0, i32 0
  %67 = getelementptr inbounds [8 x i8]* %const.bytes79, i32 0, i32 7
  %68 = getelementptr inbounds %StringRef* %const.struct80, i32 0, i32 0
  %69 = getelementptr inbounds %StringRef* %const.struct80, i32 0, i32 1
  store i8* %66, i8** %68
  store i8* %67, i8** %69
  %70 = load %StringRef* %const.struct80
  store %StringRef %70, %StringRef* %"$tmpForRef78"
  call void @ctor266(%String* %65, %StringRef* %"$tmpForRef78")
  ret void

if_else75:                                        ; preds = %if_block73
  br label %if_block82

if_end76:                                         ; preds = %if_end85, %dumy_block81
  br label %if_end67

dumy_block81:                                     ; No predecessors!
  br label %if_end76

if_block82:                                       ; preds = %if_else75
  call void @ctor229(%TokenType* %tmp.v86, i32 10)
  %71 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v86)
  br i1 %71, label %if_then83, label %if_else84

if_then83:                                        ; preds = %if_block82
  %72 = load %String** %_result.addr
  store [6 x i8] c"'var'\00", [6 x i8]* %const.bytes88
  %73 = getelementptr inbounds [6 x i8]* %const.bytes88, i32 0, i32 0
  %74 = getelementptr inbounds [6 x i8]* %const.bytes88, i32 0, i32 5
  %75 = getelementptr inbounds %StringRef* %const.struct89, i32 0, i32 0
  %76 = getelementptr inbounds %StringRef* %const.struct89, i32 0, i32 1
  store i8* %73, i8** %75
  store i8* %74, i8** %76
  %77 = load %StringRef* %const.struct89
  store %StringRef %77, %StringRef* %"$tmpForRef87"
  call void @ctor266(%String* %72, %StringRef* %"$tmpForRef87")
  ret void

if_else84:                                        ; preds = %if_block82
  br label %if_block91

if_end85:                                         ; preds = %if_end94, %dumy_block90
  br label %if_end76

dumy_block90:                                     ; No predecessors!
  br label %if_end85

if_block91:                                       ; preds = %if_else84
  call void @ctor229(%TokenType* %tmp.v95, i32 11)
  %78 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v95)
  br i1 %78, label %if_then92, label %if_else93

if_then92:                                        ; preds = %if_block91
  %79 = load %String** %_result.addr
  store [8 x i8] c"'break'\00", [8 x i8]* %const.bytes97
  %80 = getelementptr inbounds [8 x i8]* %const.bytes97, i32 0, i32 0
  %81 = getelementptr inbounds [8 x i8]* %const.bytes97, i32 0, i32 7
  %82 = getelementptr inbounds %StringRef* %const.struct98, i32 0, i32 0
  %83 = getelementptr inbounds %StringRef* %const.struct98, i32 0, i32 1
  store i8* %80, i8** %82
  store i8* %81, i8** %83
  %84 = load %StringRef* %const.struct98
  store %StringRef %84, %StringRef* %"$tmpForRef96"
  call void @ctor266(%String* %79, %StringRef* %"$tmpForRef96")
  ret void

if_else93:                                        ; preds = %if_block91
  br label %if_block100

if_end94:                                         ; preds = %if_end103, %dumy_block99
  br label %if_end85

dumy_block99:                                     ; No predecessors!
  br label %if_end94

if_block100:                                      ; preds = %if_else93
  call void @ctor229(%TokenType* %tmp.v104, i32 12)
  %85 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v104)
  br i1 %85, label %if_then101, label %if_else102

if_then101:                                       ; preds = %if_block100
  %86 = load %String** %_result.addr
  store [8 x i8] c"'catch'\00", [8 x i8]* %const.bytes106
  %87 = getelementptr inbounds [8 x i8]* %const.bytes106, i32 0, i32 0
  %88 = getelementptr inbounds [8 x i8]* %const.bytes106, i32 0, i32 7
  %89 = getelementptr inbounds %StringRef* %const.struct107, i32 0, i32 0
  %90 = getelementptr inbounds %StringRef* %const.struct107, i32 0, i32 1
  store i8* %87, i8** %89
  store i8* %88, i8** %90
  %91 = load %StringRef* %const.struct107
  store %StringRef %91, %StringRef* %"$tmpForRef105"
  call void @ctor266(%String* %86, %StringRef* %"$tmpForRef105")
  ret void

if_else102:                                       ; preds = %if_block100
  br label %if_block109

if_end103:                                        ; preds = %if_end112, %dumy_block108
  br label %if_end94

dumy_block108:                                    ; No predecessors!
  br label %if_end103

if_block109:                                      ; preds = %if_else102
  call void @ctor229(%TokenType* %tmp.v113, i32 13)
  %92 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v113)
  br i1 %92, label %if_then110, label %if_else111

if_then110:                                       ; preds = %if_block109
  %93 = load %String** %_result.addr
  store [11 x i8] c"'continue'\00", [11 x i8]* %const.bytes115
  %94 = getelementptr inbounds [11 x i8]* %const.bytes115, i32 0, i32 0
  %95 = getelementptr inbounds [11 x i8]* %const.bytes115, i32 0, i32 10
  %96 = getelementptr inbounds %StringRef* %const.struct116, i32 0, i32 0
  %97 = getelementptr inbounds %StringRef* %const.struct116, i32 0, i32 1
  store i8* %94, i8** %96
  store i8* %95, i8** %97
  %98 = load %StringRef* %const.struct116
  store %StringRef %98, %StringRef* %"$tmpForRef114"
  call void @ctor266(%String* %93, %StringRef* %"$tmpForRef114")
  ret void

if_else111:                                       ; preds = %if_block109
  br label %if_block118

if_end112:                                        ; preds = %if_end121, %dumy_block117
  br label %if_end103

dumy_block117:                                    ; No predecessors!
  br label %if_end112

if_block118:                                      ; preds = %if_else111
  call void @ctor229(%TokenType* %tmp.v122, i32 14)
  %99 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v122)
  br i1 %99, label %if_then119, label %if_else120

if_then119:                                       ; preds = %if_block118
  %100 = load %String** %_result.addr
  store [10 x i8] c"'finally'\00", [10 x i8]* %const.bytes124
  %101 = getelementptr inbounds [10 x i8]* %const.bytes124, i32 0, i32 0
  %102 = getelementptr inbounds [10 x i8]* %const.bytes124, i32 0, i32 9
  %103 = getelementptr inbounds %StringRef* %const.struct125, i32 0, i32 0
  %104 = getelementptr inbounds %StringRef* %const.struct125, i32 0, i32 1
  store i8* %101, i8** %103
  store i8* %102, i8** %104
  %105 = load %StringRef* %const.struct125
  store %StringRef %105, %StringRef* %"$tmpForRef123"
  call void @ctor266(%String* %100, %StringRef* %"$tmpForRef123")
  ret void

if_else120:                                       ; preds = %if_block118
  br label %if_block127

if_end121:                                        ; preds = %if_end130, %dumy_block126
  br label %if_end112

dumy_block126:                                    ; No predecessors!
  br label %if_end121

if_block127:                                      ; preds = %if_else120
  call void @ctor229(%TokenType* %tmp.v131, i32 15)
  %106 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v131)
  br i1 %106, label %if_then128, label %if_else129

if_then128:                                       ; preds = %if_block127
  %107 = load %String** %_result.addr
  store [6 x i8] c"'for'\00", [6 x i8]* %const.bytes133
  %108 = getelementptr inbounds [6 x i8]* %const.bytes133, i32 0, i32 0
  %109 = getelementptr inbounds [6 x i8]* %const.bytes133, i32 0, i32 5
  %110 = getelementptr inbounds %StringRef* %const.struct134, i32 0, i32 0
  %111 = getelementptr inbounds %StringRef* %const.struct134, i32 0, i32 1
  store i8* %108, i8** %110
  store i8* %109, i8** %111
  %112 = load %StringRef* %const.struct134
  store %StringRef %112, %StringRef* %"$tmpForRef132"
  call void @ctor266(%String* %107, %StringRef* %"$tmpForRef132")
  ret void

if_else129:                                       ; preds = %if_block127
  br label %if_block136

if_end130:                                        ; preds = %if_end139, %dumy_block135
  br label %if_end121

dumy_block135:                                    ; No predecessors!
  br label %if_end130

if_block136:                                      ; preds = %if_else129
  call void @ctor229(%TokenType* %tmp.v140, i32 16)
  %113 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v140)
  br i1 %113, label %if_then137, label %if_else138

if_then137:                                       ; preds = %if_block136
  %114 = load %String** %_result.addr
  store [5 x i8] c"'if'\00", [5 x i8]* %const.bytes142
  %115 = getelementptr inbounds [5 x i8]* %const.bytes142, i32 0, i32 0
  %116 = getelementptr inbounds [5 x i8]* %const.bytes142, i32 0, i32 4
  %117 = getelementptr inbounds %StringRef* %const.struct143, i32 0, i32 0
  %118 = getelementptr inbounds %StringRef* %const.struct143, i32 0, i32 1
  store i8* %115, i8** %117
  store i8* %116, i8** %118
  %119 = load %StringRef* %const.struct143
  store %StringRef %119, %StringRef* %"$tmpForRef141"
  call void @ctor266(%String* %114, %StringRef* %"$tmpForRef141")
  ret void

if_else138:                                       ; preds = %if_block136
  br label %if_block145

if_end139:                                        ; preds = %if_end148, %dumy_block144
  br label %if_end130

dumy_block144:                                    ; No predecessors!
  br label %if_end139

if_block145:                                      ; preds = %if_else138
  call void @ctor229(%TokenType* %tmp.v149, i32 17)
  %120 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v149)
  br i1 %120, label %if_then146, label %if_else147

if_then146:                                       ; preds = %if_block145
  %121 = load %String** %_result.addr
  store [9 x i8] c"'return'\00", [9 x i8]* %const.bytes151
  %122 = getelementptr inbounds [9 x i8]* %const.bytes151, i32 0, i32 0
  %123 = getelementptr inbounds [9 x i8]* %const.bytes151, i32 0, i32 8
  %124 = getelementptr inbounds %StringRef* %const.struct152, i32 0, i32 0
  %125 = getelementptr inbounds %StringRef* %const.struct152, i32 0, i32 1
  store i8* %122, i8** %124
  store i8* %123, i8** %125
  %126 = load %StringRef* %const.struct152
  store %StringRef %126, %StringRef* %"$tmpForRef150"
  call void @ctor266(%String* %121, %StringRef* %"$tmpForRef150")
  ret void

if_else147:                                       ; preds = %if_block145
  br label %if_block154

if_end148:                                        ; preds = %if_end157, %dumy_block153
  br label %if_end139

dumy_block153:                                    ; No predecessors!
  br label %if_end148

if_block154:                                      ; preds = %if_else147
  call void @ctor229(%TokenType* %tmp.v158, i32 18)
  %127 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v158)
  br i1 %127, label %if_then155, label %if_else156

if_then155:                                       ; preds = %if_block154
  %128 = load %String** %_result.addr
  store [8 x i8] c"'throw'\00", [8 x i8]* %const.bytes160
  %129 = getelementptr inbounds [8 x i8]* %const.bytes160, i32 0, i32 0
  %130 = getelementptr inbounds [8 x i8]* %const.bytes160, i32 0, i32 7
  %131 = getelementptr inbounds %StringRef* %const.struct161, i32 0, i32 0
  %132 = getelementptr inbounds %StringRef* %const.struct161, i32 0, i32 1
  store i8* %129, i8** %131
  store i8* %130, i8** %132
  %133 = load %StringRef* %const.struct161
  store %StringRef %133, %StringRef* %"$tmpForRef159"
  call void @ctor266(%String* %128, %StringRef* %"$tmpForRef159")
  ret void

if_else156:                                       ; preds = %if_block154
  br label %if_block163

if_end157:                                        ; preds = %if_end166, %dumy_block162
  br label %if_end148

dumy_block162:                                    ; No predecessors!
  br label %if_end157

if_block163:                                      ; preds = %if_else156
  call void @ctor229(%TokenType* %tmp.v167, i32 19)
  %134 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v167)
  br i1 %134, label %if_then164, label %if_else165

if_then164:                                       ; preds = %if_block163
  %135 = load %String** %_result.addr
  store [6 x i8] c"'try'\00", [6 x i8]* %const.bytes169
  %136 = getelementptr inbounds [6 x i8]* %const.bytes169, i32 0, i32 0
  %137 = getelementptr inbounds [6 x i8]* %const.bytes169, i32 0, i32 5
  %138 = getelementptr inbounds %StringRef* %const.struct170, i32 0, i32 0
  %139 = getelementptr inbounds %StringRef* %const.struct170, i32 0, i32 1
  store i8* %136, i8** %138
  store i8* %137, i8** %139
  %140 = load %StringRef* %const.struct170
  store %StringRef %140, %StringRef* %"$tmpForRef168"
  call void @ctor266(%String* %135, %StringRef* %"$tmpForRef168")
  ret void

if_else165:                                       ; preds = %if_block163
  br label %if_block172

if_end166:                                        ; preds = %if_end175, %dumy_block171
  br label %if_end157

dumy_block171:                                    ; No predecessors!
  br label %if_end166

if_block172:                                      ; preds = %if_else165
  call void @ctor229(%TokenType* %tmp.v176, i32 20)
  %141 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v176)
  br i1 %141, label %if_then173, label %if_else174

if_then173:                                       ; preds = %if_block172
  %142 = load %String** %_result.addr
  store [8 x i8] c"'while'\00", [8 x i8]* %const.bytes178
  %143 = getelementptr inbounds [8 x i8]* %const.bytes178, i32 0, i32 0
  %144 = getelementptr inbounds [8 x i8]* %const.bytes178, i32 0, i32 7
  %145 = getelementptr inbounds %StringRef* %const.struct179, i32 0, i32 0
  %146 = getelementptr inbounds %StringRef* %const.struct179, i32 0, i32 1
  store i8* %143, i8** %145
  store i8* %144, i8** %146
  %147 = load %StringRef* %const.struct179
  store %StringRef %147, %StringRef* %"$tmpForRef177"
  call void @ctor266(%String* %142, %StringRef* %"$tmpForRef177")
  ret void

if_else174:                                       ; preds = %if_block172
  br label %if_block181

if_end175:                                        ; preds = %if_end184, %dumy_block180
  br label %if_end166

dumy_block180:                                    ; No predecessors!
  br label %if_end175

if_block181:                                      ; preds = %if_else174
  call void @ctor229(%TokenType* %tmp.v185, i32 21)
  %148 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v185)
  br i1 %148, label %if_then182, label %if_else183

if_then182:                                       ; preds = %if_block181
  %149 = load %String** %_result.addr
  store [8 x i8] c"'false'\00", [8 x i8]* %const.bytes187
  %150 = getelementptr inbounds [8 x i8]* %const.bytes187, i32 0, i32 0
  %151 = getelementptr inbounds [8 x i8]* %const.bytes187, i32 0, i32 7
  %152 = getelementptr inbounds %StringRef* %const.struct188, i32 0, i32 0
  %153 = getelementptr inbounds %StringRef* %const.struct188, i32 0, i32 1
  store i8* %150, i8** %152
  store i8* %151, i8** %153
  %154 = load %StringRef* %const.struct188
  store %StringRef %154, %StringRef* %"$tmpForRef186"
  call void @ctor266(%String* %149, %StringRef* %"$tmpForRef186")
  ret void

if_else183:                                       ; preds = %if_block181
  br label %if_block190

if_end184:                                        ; preds = %if_end193, %dumy_block189
  br label %if_end175

dumy_block189:                                    ; No predecessors!
  br label %if_end184

if_block190:                                      ; preds = %if_else183
  call void @ctor229(%TokenType* %tmp.v194, i32 22)
  %155 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v194)
  br i1 %155, label %if_then191, label %if_else192

if_then191:                                       ; preds = %if_block190
  %156 = load %String** %_result.addr
  store [7 x i8] c"'null'\00", [7 x i8]* %const.bytes196
  %157 = getelementptr inbounds [7 x i8]* %const.bytes196, i32 0, i32 0
  %158 = getelementptr inbounds [7 x i8]* %const.bytes196, i32 0, i32 6
  %159 = getelementptr inbounds %StringRef* %const.struct197, i32 0, i32 0
  %160 = getelementptr inbounds %StringRef* %const.struct197, i32 0, i32 1
  store i8* %157, i8** %159
  store i8* %158, i8** %160
  %161 = load %StringRef* %const.struct197
  store %StringRef %161, %StringRef* %"$tmpForRef195"
  call void @ctor266(%String* %156, %StringRef* %"$tmpForRef195")
  ret void

if_else192:                                       ; preds = %if_block190
  br label %if_block199

if_end193:                                        ; preds = %if_end202, %dumy_block198
  br label %if_end184

dumy_block198:                                    ; No predecessors!
  br label %if_end193

if_block199:                                      ; preds = %if_else192
  call void @ctor229(%TokenType* %tmp.v203, i32 23)
  %162 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v203)
  br i1 %162, label %if_then200, label %if_else201

if_then200:                                       ; preds = %if_block199
  %163 = load %String** %_result.addr
  store [7 x i8] c"'this'\00", [7 x i8]* %const.bytes205
  %164 = getelementptr inbounds [7 x i8]* %const.bytes205, i32 0, i32 0
  %165 = getelementptr inbounds [7 x i8]* %const.bytes205, i32 0, i32 6
  %166 = getelementptr inbounds %StringRef* %const.struct206, i32 0, i32 0
  %167 = getelementptr inbounds %StringRef* %const.struct206, i32 0, i32 1
  store i8* %164, i8** %166
  store i8* %165, i8** %167
  %168 = load %StringRef* %const.struct206
  store %StringRef %168, %StringRef* %"$tmpForRef204"
  call void @ctor266(%String* %163, %StringRef* %"$tmpForRef204")
  ret void

if_else201:                                       ; preds = %if_block199
  br label %if_block208

if_end202:                                        ; preds = %if_end211, %dumy_block207
  br label %if_end193

dumy_block207:                                    ; No predecessors!
  br label %if_end202

if_block208:                                      ; preds = %if_else201
  call void @ctor229(%TokenType* %tmp.v212, i32 24)
  %169 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v212)
  br i1 %169, label %if_then209, label %if_else210

if_then209:                                       ; preds = %if_block208
  %170 = load %String** %_result.addr
  store [7 x i8] c"'true'\00", [7 x i8]* %const.bytes214
  %171 = getelementptr inbounds [7 x i8]* %const.bytes214, i32 0, i32 0
  %172 = getelementptr inbounds [7 x i8]* %const.bytes214, i32 0, i32 6
  %173 = getelementptr inbounds %StringRef* %const.struct215, i32 0, i32 0
  %174 = getelementptr inbounds %StringRef* %const.struct215, i32 0, i32 1
  store i8* %171, i8** %173
  store i8* %172, i8** %174
  %175 = load %StringRef* %const.struct215
  store %StringRef %175, %StringRef* %"$tmpForRef213"
  call void @ctor266(%String* %170, %StringRef* %"$tmpForRef213")
  ret void

if_else210:                                       ; preds = %if_block208
  br label %if_block217

if_end211:                                        ; preds = %if_end220, %dumy_block216
  br label %if_end202

dumy_block216:                                    ; No predecessors!
  br label %if_end211

if_block217:                                      ; preds = %if_else210
  call void @ctor229(%TokenType* %tmp.v221, i32 25)
  %176 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v221)
  br i1 %176, label %if_then218, label %if_else219

if_then218:                                       ; preds = %if_block217
  %177 = load %String** %_result.addr
  store [7 x i8] c"'else'\00", [7 x i8]* %const.bytes223
  %178 = getelementptr inbounds [7 x i8]* %const.bytes223, i32 0, i32 0
  %179 = getelementptr inbounds [7 x i8]* %const.bytes223, i32 0, i32 6
  %180 = getelementptr inbounds %StringRef* %const.struct224, i32 0, i32 0
  %181 = getelementptr inbounds %StringRef* %const.struct224, i32 0, i32 1
  store i8* %178, i8** %180
  store i8* %179, i8** %181
  %182 = load %StringRef* %const.struct224
  store %StringRef %182, %StringRef* %"$tmpForRef222"
  call void @ctor266(%String* %177, %StringRef* %"$tmpForRef222")
  ret void

if_else219:                                       ; preds = %if_block217
  br label %if_block226

if_end220:                                        ; preds = %if_end229, %dumy_block225
  br label %if_end211

dumy_block225:                                    ; No predecessors!
  br label %if_end220

if_block226:                                      ; preds = %if_else219
  call void @ctor229(%TokenType* %tmp.v230, i32 26)
  %183 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v230)
  br i1 %183, label %if_then227, label %if_else228

if_then227:                                       ; preds = %if_block226
  %184 = load %String** %_result.addr
  store [16 x i8] c"'{' (or indent)\00", [16 x i8]* %const.bytes232
  %185 = getelementptr inbounds [16 x i8]* %const.bytes232, i32 0, i32 0
  %186 = getelementptr inbounds [16 x i8]* %const.bytes232, i32 0, i32 15
  %187 = getelementptr inbounds %StringRef* %const.struct233, i32 0, i32 0
  %188 = getelementptr inbounds %StringRef* %const.struct233, i32 0, i32 1
  store i8* %185, i8** %187
  store i8* %186, i8** %188
  %189 = load %StringRef* %const.struct233
  store %StringRef %189, %StringRef* %"$tmpForRef231"
  call void @ctor266(%String* %184, %StringRef* %"$tmpForRef231")
  ret void

if_else228:                                       ; preds = %if_block226
  br label %if_block235

if_end229:                                        ; preds = %if_end238, %dumy_block234
  br label %if_end220

dumy_block234:                                    ; No predecessors!
  br label %if_end229

if_block235:                                      ; preds = %if_else228
  call void @ctor229(%TokenType* %tmp.v239, i32 27)
  %190 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v239)
  br i1 %190, label %if_then236, label %if_else237

if_then236:                                       ; preds = %if_block235
  %191 = load %String** %_result.addr
  store [16 x i8] c"'}' (or dedent)\00", [16 x i8]* %const.bytes241
  %192 = getelementptr inbounds [16 x i8]* %const.bytes241, i32 0, i32 0
  %193 = getelementptr inbounds [16 x i8]* %const.bytes241, i32 0, i32 15
  %194 = getelementptr inbounds %StringRef* %const.struct242, i32 0, i32 0
  %195 = getelementptr inbounds %StringRef* %const.struct242, i32 0, i32 1
  store i8* %192, i8** %194
  store i8* %193, i8** %195
  %196 = load %StringRef* %const.struct242
  store %StringRef %196, %StringRef* %"$tmpForRef240"
  call void @ctor266(%String* %191, %StringRef* %"$tmpForRef240")
  ret void

if_else237:                                       ; preds = %if_block235
  br label %if_block244

if_end238:                                        ; preds = %if_end247, %dumy_block243
  br label %if_end229

dumy_block243:                                    ; No predecessors!
  br label %if_end238

if_block244:                                      ; preds = %if_else237
  call void @ctor229(%TokenType* %tmp.v248, i32 28)
  %197 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v248)
  br i1 %197, label %if_then245, label %if_else246

if_then245:                                       ; preds = %if_block244
  %198 = load %String** %_result.addr
  store [4 x i8] c"'['\00", [4 x i8]* %const.bytes250
  %199 = getelementptr inbounds [4 x i8]* %const.bytes250, i32 0, i32 0
  %200 = getelementptr inbounds [4 x i8]* %const.bytes250, i32 0, i32 3
  %201 = getelementptr inbounds %StringRef* %const.struct251, i32 0, i32 0
  %202 = getelementptr inbounds %StringRef* %const.struct251, i32 0, i32 1
  store i8* %199, i8** %201
  store i8* %200, i8** %202
  %203 = load %StringRef* %const.struct251
  store %StringRef %203, %StringRef* %"$tmpForRef249"
  call void @ctor266(%String* %198, %StringRef* %"$tmpForRef249")
  ret void

if_else246:                                       ; preds = %if_block244
  br label %if_block253

if_end247:                                        ; preds = %if_end256, %dumy_block252
  br label %if_end238

dumy_block252:                                    ; No predecessors!
  br label %if_end247

if_block253:                                      ; preds = %if_else246
  call void @ctor229(%TokenType* %tmp.v257, i32 29)
  %204 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v257)
  br i1 %204, label %if_then254, label %if_else255

if_then254:                                       ; preds = %if_block253
  %205 = load %String** %_result.addr
  store [4 x i8] c"']'\00", [4 x i8]* %const.bytes259
  %206 = getelementptr inbounds [4 x i8]* %const.bytes259, i32 0, i32 0
  %207 = getelementptr inbounds [4 x i8]* %const.bytes259, i32 0, i32 3
  %208 = getelementptr inbounds %StringRef* %const.struct260, i32 0, i32 0
  %209 = getelementptr inbounds %StringRef* %const.struct260, i32 0, i32 1
  store i8* %206, i8** %208
  store i8* %207, i8** %209
  %210 = load %StringRef* %const.struct260
  store %StringRef %210, %StringRef* %"$tmpForRef258"
  call void @ctor266(%String* %205, %StringRef* %"$tmpForRef258")
  ret void

if_else255:                                       ; preds = %if_block253
  br label %if_block262

if_end256:                                        ; preds = %if_end265, %dumy_block261
  br label %if_end247

dumy_block261:                                    ; No predecessors!
  br label %if_end256

if_block262:                                      ; preds = %if_else255
  call void @ctor229(%TokenType* %tmp.v266, i32 30)
  %211 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v266)
  br i1 %211, label %if_then263, label %if_else264

if_then263:                                       ; preds = %if_block262
  %212 = load %String** %_result.addr
  store [4 x i8] c"'('\00", [4 x i8]* %const.bytes268
  %213 = getelementptr inbounds [4 x i8]* %const.bytes268, i32 0, i32 0
  %214 = getelementptr inbounds [4 x i8]* %const.bytes268, i32 0, i32 3
  %215 = getelementptr inbounds %StringRef* %const.struct269, i32 0, i32 0
  %216 = getelementptr inbounds %StringRef* %const.struct269, i32 0, i32 1
  store i8* %213, i8** %215
  store i8* %214, i8** %216
  %217 = load %StringRef* %const.struct269
  store %StringRef %217, %StringRef* %"$tmpForRef267"
  call void @ctor266(%String* %212, %StringRef* %"$tmpForRef267")
  ret void

if_else264:                                       ; preds = %if_block262
  br label %if_block271

if_end265:                                        ; preds = %if_end274, %dumy_block270
  br label %if_end256

dumy_block270:                                    ; No predecessors!
  br label %if_end265

if_block271:                                      ; preds = %if_else264
  call void @ctor229(%TokenType* %tmp.v275, i32 31)
  %218 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v275)
  br i1 %218, label %if_then272, label %if_else273

if_then272:                                       ; preds = %if_block271
  %219 = load %String** %_result.addr
  store [4 x i8] c"')'\00", [4 x i8]* %const.bytes277
  %220 = getelementptr inbounds [4 x i8]* %const.bytes277, i32 0, i32 0
  %221 = getelementptr inbounds [4 x i8]* %const.bytes277, i32 0, i32 3
  %222 = getelementptr inbounds %StringRef* %const.struct278, i32 0, i32 0
  %223 = getelementptr inbounds %StringRef* %const.struct278, i32 0, i32 1
  store i8* %220, i8** %222
  store i8* %221, i8** %223
  %224 = load %StringRef* %const.struct278
  store %StringRef %224, %StringRef* %"$tmpForRef276"
  call void @ctor266(%String* %219, %StringRef* %"$tmpForRef276")
  ret void

if_else273:                                       ; preds = %if_block271
  br label %if_block280

if_end274:                                        ; preds = %if_end283, %dumy_block279
  br label %if_end265

dumy_block279:                                    ; No predecessors!
  br label %if_end274

if_block280:                                      ; preds = %if_else273
  call void @ctor229(%TokenType* %tmp.v284, i32 32)
  %225 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v284)
  br i1 %225, label %if_then281, label %if_else282

if_then281:                                       ; preds = %if_block280
  %226 = load %String** %_result.addr
  store [4 x i8] c"':'\00", [4 x i8]* %const.bytes286
  %227 = getelementptr inbounds [4 x i8]* %const.bytes286, i32 0, i32 0
  %228 = getelementptr inbounds [4 x i8]* %const.bytes286, i32 0, i32 3
  %229 = getelementptr inbounds %StringRef* %const.struct287, i32 0, i32 0
  %230 = getelementptr inbounds %StringRef* %const.struct287, i32 0, i32 1
  store i8* %227, i8** %229
  store i8* %228, i8** %230
  %231 = load %StringRef* %const.struct287
  store %StringRef %231, %StringRef* %"$tmpForRef285"
  call void @ctor266(%String* %226, %StringRef* %"$tmpForRef285")
  ret void

if_else282:                                       ; preds = %if_block280
  br label %if_block289

if_end283:                                        ; preds = %if_end292, %dumy_block288
  br label %if_end274

dumy_block288:                                    ; No predecessors!
  br label %if_end283

if_block289:                                      ; preds = %if_else282
  call void @ctor229(%TokenType* %tmp.v293, i32 33)
  %232 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v293)
  br i1 %232, label %if_then290, label %if_else291

if_then290:                                       ; preds = %if_block289
  %233 = load %String** %_result.addr
  store [17 x i8] c"';' (or newline)\00", [17 x i8]* %const.bytes295
  %234 = getelementptr inbounds [17 x i8]* %const.bytes295, i32 0, i32 0
  %235 = getelementptr inbounds [17 x i8]* %const.bytes295, i32 0, i32 16
  %236 = getelementptr inbounds %StringRef* %const.struct296, i32 0, i32 0
  %237 = getelementptr inbounds %StringRef* %const.struct296, i32 0, i32 1
  store i8* %234, i8** %236
  store i8* %235, i8** %237
  %238 = load %StringRef* %const.struct296
  store %StringRef %238, %StringRef* %"$tmpForRef294"
  call void @ctor266(%String* %233, %StringRef* %"$tmpForRef294")
  ret void

if_else291:                                       ; preds = %if_block289
  br label %if_block298

if_end292:                                        ; preds = %if_end301, %dumy_block297
  br label %if_end283

dumy_block297:                                    ; No predecessors!
  br label %if_end292

if_block298:                                      ; preds = %if_else291
  call void @ctor229(%TokenType* %tmp.v302, i32 34)
  %239 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v302)
  br i1 %239, label %if_then299, label %if_else300

if_then299:                                       ; preds = %if_block298
  %240 = load %String** %_result.addr
  store [4 x i8] c"','\00", [4 x i8]* %const.bytes304
  %241 = getelementptr inbounds [4 x i8]* %const.bytes304, i32 0, i32 0
  %242 = getelementptr inbounds [4 x i8]* %const.bytes304, i32 0, i32 3
  %243 = getelementptr inbounds %StringRef* %const.struct305, i32 0, i32 0
  %244 = getelementptr inbounds %StringRef* %const.struct305, i32 0, i32 1
  store i8* %241, i8** %243
  store i8* %242, i8** %244
  %245 = load %StringRef* %const.struct305
  store %StringRef %245, %StringRef* %"$tmpForRef303"
  call void @ctor266(%String* %240, %StringRef* %"$tmpForRef303")
  ret void

if_else300:                                       ; preds = %if_block298
  br label %if_block307

if_end301:                                        ; preds = %if_end310, %dumy_block306
  br label %if_end292

dumy_block306:                                    ; No predecessors!
  br label %if_end301

if_block307:                                      ; preds = %if_else300
  call void @ctor229(%TokenType* %tmp.v311, i32 35)
  %246 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v311)
  br i1 %246, label %if_then308, label %if_else309

if_then308:                                       ; preds = %if_block307
  %247 = load %String** %_result.addr
  store [4 x i8] c"'.'\00", [4 x i8]* %const.bytes313
  %248 = getelementptr inbounds [4 x i8]* %const.bytes313, i32 0, i32 0
  %249 = getelementptr inbounds [4 x i8]* %const.bytes313, i32 0, i32 3
  %250 = getelementptr inbounds %StringRef* %const.struct314, i32 0, i32 0
  %251 = getelementptr inbounds %StringRef* %const.struct314, i32 0, i32 1
  store i8* %248, i8** %250
  store i8* %249, i8** %251
  %252 = load %StringRef* %const.struct314
  store %StringRef %252, %StringRef* %"$tmpForRef312"
  call void @ctor266(%String* %247, %StringRef* %"$tmpForRef312")
  ret void

if_else309:                                       ; preds = %if_block307
  br label %if_block316

if_end310:                                        ; preds = %if_end319, %dumy_block315
  br label %if_end301

dumy_block315:                                    ; No predecessors!
  br label %if_end310

if_block316:                                      ; preds = %if_else309
  call void @ctor229(%TokenType* %tmp.v320, i32 36)
  %253 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v320)
  br i1 %253, label %if_then317, label %if_else318

if_then317:                                       ; preds = %if_block316
  %254 = load %String** %_result.addr
  store [4 x i8] c"'`'\00", [4 x i8]* %const.bytes322
  %255 = getelementptr inbounds [4 x i8]* %const.bytes322, i32 0, i32 0
  %256 = getelementptr inbounds [4 x i8]* %const.bytes322, i32 0, i32 3
  %257 = getelementptr inbounds %StringRef* %const.struct323, i32 0, i32 0
  %258 = getelementptr inbounds %StringRef* %const.struct323, i32 0, i32 1
  store i8* %255, i8** %257
  store i8* %256, i8** %258
  %259 = load %StringRef* %const.struct323
  store %StringRef %259, %StringRef* %"$tmpForRef321"
  call void @ctor266(%String* %254, %StringRef* %"$tmpForRef321")
  ret void

if_else318:                                       ; preds = %if_block316
  br label %if_block325

if_end319:                                        ; preds = %if_end328, %dumy_block324
  br label %if_end310

dumy_block324:                                    ; No predecessors!
  br label %if_end319

if_block325:                                      ; preds = %if_else318
  call void @ctor229(%TokenType* %tmp.v329, i32 37)
  %260 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v329)
  br i1 %260, label %if_then326, label %if_else327

if_then326:                                       ; preds = %if_block325
  %261 = load %String** %_result.addr
  store [4 x i8] c"'='\00", [4 x i8]* %const.bytes331
  %262 = getelementptr inbounds [4 x i8]* %const.bytes331, i32 0, i32 0
  %263 = getelementptr inbounds [4 x i8]* %const.bytes331, i32 0, i32 3
  %264 = getelementptr inbounds %StringRef* %const.struct332, i32 0, i32 0
  %265 = getelementptr inbounds %StringRef* %const.struct332, i32 0, i32 1
  store i8* %262, i8** %264
  store i8* %263, i8** %265
  %266 = load %StringRef* %const.struct332
  store %StringRef %266, %StringRef* %"$tmpForRef330"
  call void @ctor266(%String* %261, %StringRef* %"$tmpForRef330")
  ret void

if_else327:                                       ; preds = %if_block325
  br label %if_block334

if_end328:                                        ; preds = %if_end337, %dumy_block333
  br label %if_end319

dumy_block333:                                    ; No predecessors!
  br label %if_end328

if_block334:                                      ; preds = %if_else327
  call void @ctor229(%TokenType* %tmp.v338, i32 38)
  %267 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v338)
  br i1 %267, label %if_then335, label %if_else336

if_then335:                                       ; preds = %if_block334
  %268 = load %String** %_result.addr
  store [11 x i8] c"identifier\00", [11 x i8]* %const.bytes340
  %269 = getelementptr inbounds [11 x i8]* %const.bytes340, i32 0, i32 0
  %270 = getelementptr inbounds [11 x i8]* %const.bytes340, i32 0, i32 10
  %271 = getelementptr inbounds %StringRef* %const.struct341, i32 0, i32 0
  %272 = getelementptr inbounds %StringRef* %const.struct341, i32 0, i32 1
  store i8* %269, i8** %271
  store i8* %270, i8** %272
  %273 = load %StringRef* %const.struct341
  store %StringRef %273, %StringRef* %"$tmpForRef339"
  call void @ctor266(%String* %268, %StringRef* %"$tmpForRef339")
  ret void

if_else336:                                       ; preds = %if_block334
  br label %if_block343

if_end337:                                        ; preds = %if_end346, %dumy_block342
  br label %if_end328

dumy_block342:                                    ; No predecessors!
  br label %if_end337

if_block343:                                      ; preds = %if_else336
  call void @ctor229(%TokenType* %tmp.v347, i32 39)
  %274 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v347)
  br i1 %274, label %if_then344, label %if_else345

if_then344:                                       ; preds = %if_block343
  %275 = load %String** %_result.addr
  store [9 x i8] c"operator\00", [9 x i8]* %const.bytes349
  %276 = getelementptr inbounds [9 x i8]* %const.bytes349, i32 0, i32 0
  %277 = getelementptr inbounds [9 x i8]* %const.bytes349, i32 0, i32 8
  %278 = getelementptr inbounds %StringRef* %const.struct350, i32 0, i32 0
  %279 = getelementptr inbounds %StringRef* %const.struct350, i32 0, i32 1
  store i8* %276, i8** %278
  store i8* %277, i8** %279
  %280 = load %StringRef* %const.struct350
  store %StringRef %280, %StringRef* %"$tmpForRef348"
  call void @ctor266(%String* %275, %StringRef* %"$tmpForRef348")
  ret void

if_else345:                                       ; preds = %if_block343
  br label %if_block352

if_end346:                                        ; preds = %if_end355, %dumy_block351
  br label %if_end337

dumy_block351:                                    ; No predecessors!
  br label %if_end346

if_block352:                                      ; preds = %if_else345
  call void @ctor229(%TokenType* %tmp.v356, i32 40)
  %281 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v356)
  br i1 %281, label %if_then353, label %if_else354

if_then353:                                       ; preds = %if_block352
  %282 = load %String** %_result.addr
  store [13 x i8] c"char literal\00", [13 x i8]* %const.bytes358
  %283 = getelementptr inbounds [13 x i8]* %const.bytes358, i32 0, i32 0
  %284 = getelementptr inbounds [13 x i8]* %const.bytes358, i32 0, i32 12
  %285 = getelementptr inbounds %StringRef* %const.struct359, i32 0, i32 0
  %286 = getelementptr inbounds %StringRef* %const.struct359, i32 0, i32 1
  store i8* %283, i8** %285
  store i8* %284, i8** %286
  %287 = load %StringRef* %const.struct359
  store %StringRef %287, %StringRef* %"$tmpForRef357"
  call void @ctor266(%String* %282, %StringRef* %"$tmpForRef357")
  ret void

if_else354:                                       ; preds = %if_block352
  br label %if_block361

if_end355:                                        ; preds = %if_end364, %dumy_block360
  br label %if_end346

dumy_block360:                                    ; No predecessors!
  br label %if_end355

if_block361:                                      ; preds = %if_else354
  call void @ctor229(%TokenType* %tmp.v365, i32 41)
  %288 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v365)
  br i1 %288, label %if_then362, label %if_else363

if_then362:                                       ; preds = %if_block361
  %289 = load %String** %_result.addr
  store [15 x i8] c"string literal\00", [15 x i8]* %const.bytes367
  %290 = getelementptr inbounds [15 x i8]* %const.bytes367, i32 0, i32 0
  %291 = getelementptr inbounds [15 x i8]* %const.bytes367, i32 0, i32 14
  %292 = getelementptr inbounds %StringRef* %const.struct368, i32 0, i32 0
  %293 = getelementptr inbounds %StringRef* %const.struct368, i32 0, i32 1
  store i8* %290, i8** %292
  store i8* %291, i8** %293
  %294 = load %StringRef* %const.struct368
  store %StringRef %294, %StringRef* %"$tmpForRef366"
  call void @ctor266(%String* %289, %StringRef* %"$tmpForRef366")
  ret void

if_else363:                                       ; preds = %if_block361
  br label %if_block370

if_end364:                                        ; preds = %if_end373, %dumy_block369
  br label %if_end355

dumy_block369:                                    ; No predecessors!
  br label %if_end364

if_block370:                                      ; preds = %if_else363
  call void @ctor229(%TokenType* %tmp.v374, i32 42)
  %295 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v374)
  br i1 %295, label %if_then371, label %if_else372

if_then371:                                       ; preds = %if_block370
  %296 = load %String** %_result.addr
  store [12 x i8] c"int literal\00", [12 x i8]* %const.bytes376
  %297 = getelementptr inbounds [12 x i8]* %const.bytes376, i32 0, i32 0
  %298 = getelementptr inbounds [12 x i8]* %const.bytes376, i32 0, i32 11
  %299 = getelementptr inbounds %StringRef* %const.struct377, i32 0, i32 0
  %300 = getelementptr inbounds %StringRef* %const.struct377, i32 0, i32 1
  store i8* %297, i8** %299
  store i8* %298, i8** %300
  %301 = load %StringRef* %const.struct377
  store %StringRef %301, %StringRef* %"$tmpForRef375"
  call void @ctor266(%String* %296, %StringRef* %"$tmpForRef375")
  ret void

if_else372:                                       ; preds = %if_block370
  br label %if_block379

if_end373:                                        ; preds = %if_end382, %dumy_block378
  br label %if_end364

dumy_block378:                                    ; No predecessors!
  br label %if_end373

if_block379:                                      ; preds = %if_else372
  call void @ctor229(%TokenType* %tmp.v383, i32 43)
  %302 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v383)
  br i1 %302, label %if_then380, label %if_else381

if_then380:                                       ; preds = %if_block379
  %303 = load %String** %_result.addr
  store [13 x i8] c"long literal\00", [13 x i8]* %const.bytes385
  %304 = getelementptr inbounds [13 x i8]* %const.bytes385, i32 0, i32 0
  %305 = getelementptr inbounds [13 x i8]* %const.bytes385, i32 0, i32 12
  %306 = getelementptr inbounds %StringRef* %const.struct386, i32 0, i32 0
  %307 = getelementptr inbounds %StringRef* %const.struct386, i32 0, i32 1
  store i8* %304, i8** %306
  store i8* %305, i8** %307
  %308 = load %StringRef* %const.struct386
  store %StringRef %308, %StringRef* %"$tmpForRef384"
  call void @ctor266(%String* %303, %StringRef* %"$tmpForRef384")
  ret void

if_else381:                                       ; preds = %if_block379
  br label %if_block388

if_end382:                                        ; preds = %if_end391, %dumy_block387
  br label %if_end373

dumy_block387:                                    ; No predecessors!
  br label %if_end382

if_block388:                                      ; preds = %if_else381
  call void @ctor229(%TokenType* %tmp.v392, i32 44)
  %309 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v392)
  br i1 %309, label %if_then389, label %if_else390

if_then389:                                       ; preds = %if_block388
  %310 = load %String** %_result.addr
  store [13 x i8] c"uint literal\00", [13 x i8]* %const.bytes394
  %311 = getelementptr inbounds [13 x i8]* %const.bytes394, i32 0, i32 0
  %312 = getelementptr inbounds [13 x i8]* %const.bytes394, i32 0, i32 12
  %313 = getelementptr inbounds %StringRef* %const.struct395, i32 0, i32 0
  %314 = getelementptr inbounds %StringRef* %const.struct395, i32 0, i32 1
  store i8* %311, i8** %313
  store i8* %312, i8** %314
  %315 = load %StringRef* %const.struct395
  store %StringRef %315, %StringRef* %"$tmpForRef393"
  call void @ctor266(%String* %310, %StringRef* %"$tmpForRef393")
  ret void

if_else390:                                       ; preds = %if_block388
  br label %if_block397

if_end391:                                        ; preds = %if_end400, %dumy_block396
  br label %if_end382

dumy_block396:                                    ; No predecessors!
  br label %if_end391

if_block397:                                      ; preds = %if_else390
  call void @ctor229(%TokenType* %tmp.v401, i32 45)
  %316 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v401)
  br i1 %316, label %if_then398, label %if_else399

if_then398:                                       ; preds = %if_block397
  %317 = load %String** %_result.addr
  store [14 x i8] c"ulong literal\00", [14 x i8]* %const.bytes403
  %318 = getelementptr inbounds [14 x i8]* %const.bytes403, i32 0, i32 0
  %319 = getelementptr inbounds [14 x i8]* %const.bytes403, i32 0, i32 13
  %320 = getelementptr inbounds %StringRef* %const.struct404, i32 0, i32 0
  %321 = getelementptr inbounds %StringRef* %const.struct404, i32 0, i32 1
  store i8* %318, i8** %320
  store i8* %319, i8** %321
  %322 = load %StringRef* %const.struct404
  store %StringRef %322, %StringRef* %"$tmpForRef402"
  call void @ctor266(%String* %317, %StringRef* %"$tmpForRef402")
  ret void

if_else399:                                       ; preds = %if_block397
  br label %if_block406

if_end400:                                        ; preds = %if_end409, %dumy_block405
  br label %if_end391

dumy_block405:                                    ; No predecessors!
  br label %if_end400

if_block406:                                      ; preds = %if_else399
  call void @ctor229(%TokenType* %tmp.v410, i32 46)
  %323 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v410)
  br i1 %323, label %if_then407, label %if_else408

if_then407:                                       ; preds = %if_block406
  %324 = load %String** %_result.addr
  store [14 x i8] c"float literal\00", [14 x i8]* %const.bytes412
  %325 = getelementptr inbounds [14 x i8]* %const.bytes412, i32 0, i32 0
  %326 = getelementptr inbounds [14 x i8]* %const.bytes412, i32 0, i32 13
  %327 = getelementptr inbounds %StringRef* %const.struct413, i32 0, i32 0
  %328 = getelementptr inbounds %StringRef* %const.struct413, i32 0, i32 1
  store i8* %325, i8** %327
  store i8* %326, i8** %328
  %329 = load %StringRef* %const.struct413
  store %StringRef %329, %StringRef* %"$tmpForRef411"
  call void @ctor266(%String* %324, %StringRef* %"$tmpForRef411")
  ret void

if_else408:                                       ; preds = %if_block406
  br label %if_block415

if_end409:                                        ; preds = %if_end417, %dumy_block414
  br label %if_end400

dumy_block414:                                    ; No predecessors!
  br label %if_end409

if_block415:                                      ; preds = %if_else408
  call void @ctor229(%TokenType* %tmp.v418, i32 47)
  %330 = call i1 @"==227"(%TokenType* %t.addr, %TokenType* %tmp.v418)
  br i1 %330, label %if_then416, label %if_end417

if_then416:                                       ; preds = %if_block415
  %331 = load %String** %_result.addr
  store [15 x i8] c"double literal\00", [15 x i8]* %const.bytes420
  %332 = getelementptr inbounds [15 x i8]* %const.bytes420, i32 0, i32 0
  %333 = getelementptr inbounds [15 x i8]* %const.bytes420, i32 0, i32 14
  %334 = getelementptr inbounds %StringRef* %const.struct421, i32 0, i32 0
  %335 = getelementptr inbounds %StringRef* %const.struct421, i32 0, i32 1
  store i8* %332, i8** %334
  store i8* %333, i8** %335
  %336 = load %StringRef* %const.struct421
  store %StringRef %336, %StringRef* %"$tmpForRef419"
  call void @ctor266(%String* %331, %StringRef* %"$tmpForRef419")
  ret void

if_end417:                                        ; preds = %dumy_block422, %if_block415
  br label %if_end409

dumy_block422:                                    ; No predecessors!
  br label %if_end417
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor391(%Node* %"$this", %Node* %other) #2 {
  %"$this.addr" = alloca %Node*
  store %Node* %"$this", %Node** %"$this.addr"
  %other.addr = alloca %Node*
  store %Node* %other, %Node** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Node** %"$this.addr"
  %2 = getelementptr inbounds %Node* %1, i32 0, i32 0
  %3 = load %Node** %other.addr
  %4 = getelementptr inbounds %Node* %3, i32 0, i32 0
  call void @ctor392(%UntypedPtr* %2, %UntypedPtr* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor392(%UntypedPtr* %"$this", %UntypedPtr* %other) #2 {
  %"$this.addr" = alloca %UntypedPtr*
  store %UntypedPtr* %"$this", %UntypedPtr** %"$this.addr"
  %other.addr = alloca %UntypedPtr*
  store %UntypedPtr* %other, %UntypedPtr** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %UntypedPtr** %other.addr
  %2 = getelementptr inbounds %UntypedPtr* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %UntypedPtr** %"$this.addr"
  %5 = getelementptr inbounds %UntypedPtr* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

declare %Node @comp_parser_mkIdentifier(%Location*, %StringRef)

; Function Attrs: alwaysinline nounwind
define internal void @"=393"(%Node* %"$this", %Node* %other) #2 {
  %"$this.addr" = alloca %Node*
  store %Node* %"$this", %Node** %"$this.addr"
  %other.addr = alloca %Node*
  store %Node* %other, %Node** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Node** %"$this.addr"
  %2 = getelementptr inbounds %Node* %1, i32 0, i32 0
  %3 = load %Node** %other.addr
  %4 = getelementptr inbounds %Node* %3, i32 0, i32 0
  call void @"=394"(%UntypedPtr* %2, %UntypedPtr* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=394"(%UntypedPtr* %"$this", %UntypedPtr* %other) #2 {
  %"$this.addr" = alloca %UntypedPtr*
  store %UntypedPtr* %"$this", %UntypedPtr** %"$this.addr"
  %other.addr = alloca %UntypedPtr*
  store %UntypedPtr* %other, %UntypedPtr** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %UntypedPtr** %other.addr
  %2 = getelementptr inbounds %UntypedPtr* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %UntypedPtr** %"$this.addr"
  %5 = getelementptr inbounds %UntypedPtr* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

declare %Node @comp_parser_mkStarExpr(%Location*, %Node, %StringRef)

; Function Attrs: inlinehint nounwind
define internal void @span(%Location* sret %_result, %Location* %start, %Location* %end) #3 {
  %_result.addr = alloca %Location*
  store %Location* %_result, %Location** %_result.addr
  %start.addr = alloca %Location*
  store %Location* %start, %Location** %start.addr
  %end.addr = alloca %Location*
  store %Location* %end, %Location** %end.addr
  %res = alloca %Location
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %start.addr
  call void @ctor168(%Location* %res, %Location* %1)
  %2 = load %Location** %end.addr
  call void @copyEnd(%Location* %res, %Location* %2)
  %3 = load %Location** %_result.addr
  call void @ctor168(%Location* %3, %Location* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @copyEnd(%Location* %l, %Location* %other) #3 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %l.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 2
  %3 = load %Location** %other.addr
  %4 = getelementptr inbounds %Location* %3, i32 0, i32 2
  call void @"=192"(%LineCol* %2, %LineCol* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @lastLoc(%Location* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %Location*
  store %Location* %_result, %Location** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %_result.addr
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %3 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, i32 0, i32 1
  %4 = getelementptr inbounds %Token* %3, i32 0, i32 0
  call void @ctor168(%Location* %1, %Location* %4)
  ret void
}

declare %Node @comp_parser_mkCompoundExpr(%Location*, %Node, %StringRef)

; Function Attrs: alwaysinline nounwind
define internal void @dtor395(%Node* %"$this") #2 {
  %"$this.addr" = alloca %Node*
  store %Node* %"$this", %Node** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor396(%Node* %"$this") #2 {
  %"$this.addr" = alloca %Node*
  store %Node* %"$this", %Node** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %Node** %"$this.addr"
  %2 = getelementptr inbounds %Node* %1, i32 0, i32 0
  call void @ctor397(%UntypedPtr* %2)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor397(%UntypedPtr* %"$this") #2 {
  %"$this.addr" = alloca %UntypedPtr*
  store %UntypedPtr* %"$this", %UntypedPtr** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %UntypedPtr** %"$this.addr"
  %2 = getelementptr inbounds %UntypedPtr* %1, i32 0, i32 0
  store i8* null, i8** %2
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseStmts(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, i1 %topLevel, %Node* %res) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %topLevel.addr = alloca i1
  store i1 %topLevel, i1* %topLevel.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %child = alloca %Node
  %"$tmpForRef" = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  br i1 true, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %2 = load i1* %topLevel.addr
  call void @parseStmt(%Node* %child, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i1 %2)
  br label %if_block

while_step:                                       ; preds = %dumy_block1, %if_then
  br label %while_block

while_end:                                        ; preds = %if_end, %while_block
  ret void

if_block:                                         ; preds = %while_body
  %3 = load %Node* %child
  %4 = call i1 @isSet434(%Node %3)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %Node** %res.addr
  %6 = load %Node** %res.addr
  %7 = load %Node* %6
  %8 = load %Node* %child
  %9 = call %Node @comp_parser_addToNodeList(%Node %7, %Node %8)
  store %Node %9, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %5, %Node* %"$tmpForRef")
  br label %while_step

if_end:                                           ; preds = %dumy_block, %if_block
  br label %while_end

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block1:                                      ; No predecessors!
  br label %while_step
}

; Function Attrs: noinline nounwind
define void @parseStmt(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, i1 %topLevel) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %topLevel.addr = alloca i1
  store i1 %topLevel, i1* %topLevel.addr
  %res = alloca %Node
  %loc = alloca %Location
  %mods = alloca %Node
  %found = alloca i1
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %Location
  %"$tmpC60" = alloca %Location
  %"$tmpC61" = alloca %String
  %const.bytes = alloca [26 x i8]
  %const.struct = alloca %StringRef
  %"$tmpC62" = alloca %Token
  %const.bytes63 = alloca [22 x i8]
  %const.struct64 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  call void @ctor396(%Node* %res)
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @consumeSemis(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseModifiers(%Node* %mods, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3)
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %5 = call i1 @parseImportLineOpt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, %Node* %res)
  br i1 %5, label %cond.true40, label %cond.false41

cond.true:                                        ; preds = %cond.end3
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %7 = call i1 @parseReturnStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %Node* %res)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res56 = phi i1 [ true, %cond.true ], [ %7, %cond.false ]
  store i1 %cond.res56, i1* %found
  br label %if_block

cond.true1:                                       ; preds = %cond.end6
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %9 = call i1 @parseContinueStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %Node* %res)
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res55 = phi i1 [ true, %cond.true1 ], [ %9, %cond.false2 ]
  br i1 %cond.res55, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %cond.end9
  br label %cond.end6

cond.false5:                                      ; preds = %cond.end9
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %11 = call i1 @parseBreakStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, %Node* %res)
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res54 = phi i1 [ true, %cond.true4 ], [ %11, %cond.false5 ]
  br i1 %cond.res54, label %cond.true1, label %cond.false2

cond.true7:                                       ; preds = %cond.end12
  br label %cond.end9

cond.false8:                                      ; preds = %cond.end12
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %13 = load i1* %topLevel.addr
  %14 = call i1 @parseWhileStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, %Node* %res, i1 %13)
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res53 = phi i1 [ true, %cond.true7 ], [ %14, %cond.false8 ]
  br i1 %cond.res53, label %cond.true4, label %cond.false5

cond.true10:                                      ; preds = %cond.end15
  br label %cond.end12

cond.false11:                                     ; preds = %cond.end15
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %16 = load i1* %topLevel.addr
  %17 = call i1 @parseForStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, %Node* %res, i1 %16)
  br label %cond.end12

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond.res52 = phi i1 [ true, %cond.true10 ], [ %17, %cond.false11 ]
  br i1 %cond.res52, label %cond.true7, label %cond.false8

cond.true13:                                      ; preds = %cond.end18
  br label %cond.end15

cond.false14:                                     ; preds = %cond.end18
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %19 = load i1* %topLevel.addr
  %20 = call i1 @parseIfStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18, %Node* %res, i1 %19)
  br label %cond.end15

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond.res51 = phi i1 [ true, %cond.true13 ], [ %20, %cond.false14 ]
  br i1 %cond.res51, label %cond.true10, label %cond.false11

cond.true16:                                      ; preds = %cond.end21
  br label %cond.end18

cond.false17:                                     ; preds = %cond.end21
  %21 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %22 = load i1* %topLevel.addr
  %23 = call i1 @parseBlockStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %21, %Node* %res, i1 %22)
  br label %cond.end18

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond.res50 = phi i1 [ true, %cond.true16 ], [ %23, %cond.false17 ]
  br i1 %cond.res50, label %cond.true13, label %cond.false14

cond.true19:                                      ; preds = %cond.end24
  br label %cond.end21

cond.false20:                                     ; preds = %cond.end24
  %24 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %25 = call i1 @parseExprStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %24, %Node* %res)
  br label %cond.end21

cond.end21:                                       ; preds = %cond.false20, %cond.true19
  %cond.res49 = phi i1 [ true, %cond.true19 ], [ %25, %cond.false20 ]
  br i1 %cond.res49, label %cond.true16, label %cond.false17

cond.true22:                                      ; preds = %cond.end27
  br label %cond.end24

cond.false23:                                     ; preds = %cond.end27
  %26 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %27 = call i1 @parseFunDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %26, %Node* %res)
  br label %cond.end24

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond.res48 = phi i1 [ true, %cond.true22 ], [ %27, %cond.false23 ]
  br i1 %cond.res48, label %cond.true19, label %cond.false20

cond.true25:                                      ; preds = %cond.end30
  br label %cond.end27

cond.false26:                                     ; preds = %cond.end30
  %28 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %29 = call i1 @parseVarDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %28, %Node* %res)
  br label %cond.end27

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond.res47 = phi i1 [ true, %cond.true25 ], [ %29, %cond.false26 ]
  br i1 %cond.res47, label %cond.true22, label %cond.false23

cond.true28:                                      ; preds = %cond.end33
  br label %cond.end30

cond.false29:                                     ; preds = %cond.end33
  %30 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %31 = call i1 @parseConceptDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %30, %Node* %res)
  br label %cond.end30

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond.res46 = phi i1 [ true, %cond.true28 ], [ %31, %cond.false29 ]
  br i1 %cond.res46, label %cond.true25, label %cond.false26

cond.true31:                                      ; preds = %cond.end36
  br label %cond.end33

cond.false32:                                     ; preds = %cond.end36
  %32 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %33 = call i1 @parseDatatypeDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %32, %Node* %res)
  br label %cond.end33

cond.end33:                                       ; preds = %cond.false32, %cond.true31
  %cond.res45 = phi i1 [ true, %cond.true31 ], [ %33, %cond.false32 ]
  br i1 %cond.res45, label %cond.true28, label %cond.false29

cond.true34:                                      ; preds = %cond.end39
  br label %cond.end36

cond.false35:                                     ; preds = %cond.end39
  %34 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %35 = call i1 @parseClassDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %34, %Node* %res)
  br label %cond.end36

cond.end36:                                       ; preds = %cond.false35, %cond.true34
  %cond.res44 = phi i1 [ true, %cond.true34 ], [ %35, %cond.false35 ]
  br i1 %cond.res44, label %cond.true31, label %cond.false32

cond.true37:                                      ; preds = %cond.end42
  br label %cond.end39

cond.false38:                                     ; preds = %cond.end42
  %36 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %37 = call i1 @parsePackageDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %36, %Node* %res)
  br label %cond.end39

cond.end39:                                       ; preds = %cond.false38, %cond.true37
  %cond.res43 = phi i1 [ true, %cond.true37 ], [ %37, %cond.false38 ]
  br i1 %cond.res43, label %cond.true34, label %cond.false35

cond.true40:                                      ; preds = %code
  br label %cond.end42

cond.false41:                                     ; preds = %code
  %38 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %39 = call i1 @parseUsingDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %38, %Node* %res)
  br label %cond.end42

cond.end42:                                       ; preds = %cond.false41, %cond.true40
  %cond.res = phi i1 [ true, %cond.true40 ], [ %39, %cond.false41 ]
  br i1 %cond.res, label %cond.true37, label %cond.false38

if_block:                                         ; preds = %cond.end
  %40 = load %Node* %mods
  %41 = call i1 @isSet434(%Node %40)
  br i1 %41, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  br label %if_block57

if_end:                                           ; preds = %if_end59, %if_block
  %42 = load %Node** %_result.addr
  call void @ctor391(%Node* %42, %Node* %res)
  ret void

if_block57:                                       ; preds = %if_then
  %43 = load i1* %found
  br i1 %43, label %if_then58, label %if_else

if_then58:                                        ; preds = %if_block57
  %44 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @lastLoc(%Location* %"$tmpC60", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %44)
  call void @span(%Location* %"$tmpC", %Location* %loc, %Location* %"$tmpC60")
  %45 = load %Node* %res
  %46 = load %Node* %mods
  %47 = call %Node @comp_parser_mkModifiers(%Location* %"$tmpC", %Node %45, %Node %46)
  store %Node %47, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef")
  br label %if_end59

if_else:                                          ; preds = %if_block57
  %48 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  store [26 x i8] c"Syntax error, unexpected \00", [26 x i8]* %const.bytes
  %49 = getelementptr inbounds [26 x i8]* %const.bytes, i32 0, i32 0
  %50 = getelementptr inbounds [26 x i8]* %const.bytes, i32 0, i32 25
  %51 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %52 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %49, i8** %51
  store i8* %50, i8** %52
  %53 = load %StringRef* %const.struct
  %54 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %55 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %54, i32 0, i32 0
  call void @"pre_*382"(%Token* %"$tmpC62", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %55)
  %56 = getelementptr inbounds %Token* %"$tmpC62", i32 0, i32 1
  %57 = load %TokenType* %56
  store [22 x i8] c", expecting statement\00", [22 x i8]* %const.bytes63
  %58 = getelementptr inbounds [22 x i8]* %const.bytes63, i32 0, i32 0
  %59 = getelementptr inbounds [22 x i8]* %const.bytes63, i32 0, i32 21
  %60 = getelementptr inbounds %StringRef* %const.struct64, i32 0, i32 0
  %61 = getelementptr inbounds %StringRef* %const.struct64, i32 0, i32 1
  store i8* %58, i8** %60
  store i8* %59, i8** %61
  %62 = load %StringRef* %const.struct64
  call void @toString435(%String* %"$tmpC61", %StringRef %53, %TokenType %57, %StringRef %62)
  call void @reportError386(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %48, %String* %"$tmpC61")
  call void @dtor166(%String* %"$tmpC61")
  call void @dtor299(%Token* %"$tmpC62")
  br label %if_end59

if_end59:                                         ; preds = %if_else, %if_then58
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @consumeSemis(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %tmp.v = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 33)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseModifiers(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res = alloca %Node
  %tmp.v = alloca %TokenType
  %e = alloca %Node
  %"$tmpC" = alloca %Node
  %"$tmpForRef" = alloca %Node
  %tmp.v1 = alloca %TokenType
  %"$tmpC2" = alloca %Node
  %"$tmpForRef3" = alloca %Node
  %tmp.v4 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  call void @ctor396(%Node* %res)
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 28)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  call void @ctor396(%Node* %e)
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i1 true)
  call void @"=393"(%Node* %e, %Node* %"$tmpC")
  %5 = load %Node* %res
  %6 = load %Node* %e
  %7 = call %Node @comp_parser_addToNodeList(%Node %5, %Node %6)
  store %Node %7, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef")
  br label %while_block

if_end:                                           ; preds = %while_end, %if_block
  %8 = load %Node** %_result.addr
  call void @ctor391(%Node* %8, %Node* %res)
  ret void

while_block:                                      ; preds = %while_step, %if_then
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v1, i32 34)
  %10 = load %TokenType* %tmp.v1
  %11 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, %TokenType %10)
  br i1 %11, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %"$tmpC2", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i1 true)
  call void @"=393"(%Node* %e, %Node* %"$tmpC2")
  %13 = load %Node* %res
  %14 = load %Node* %e
  %15 = call %Node @comp_parser_addToNodeList(%Node %13, %Node %14)
  store %Node %15, %Node* %"$tmpForRef3"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef3")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %16 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v4, i32 29)
  %17 = load %TokenType* %tmp.v4
  %18 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %16, %TokenType %17)
  %19 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @consumeSemis(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %19)
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseExpr(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, i1 %withEqual) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %loc = alloca %Location
  %baseExpr = alloca %Node
  %op = alloca %String
  %"$tmpC" = alloca %String
  %rhs = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC4" = alloca %Location
  %"$tmpC5" = alloca %Location
  %"$tmpC6" = alloca %StringRef
  %"$tmpForRef7" = alloca %Node
  %"$tmpC8" = alloca %Location
  %"$tmpC9" = alloca %Location
  %"$tmpC10" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %3 = load i1* %withEqual.addr
  call void @parsePrefixExpr(%Node* %baseExpr, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, i1 %3)
  call void @ctor131(%String* %op)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  br i1 true, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %5 = load i1* %withEqual.addr
  call void @parseIdOrOperOpt(%String* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i1 %5)
  %6 = call %String* @"=198"(%String* %op, %String* %"$tmpC")
  call void @dtor166(%String* %"$tmpC")
  br label %if_block

while_step:                                       ; preds = %if_end3
  br label %while_block

while_end:                                        ; preds = %if_else, %if_then, %while_block
  %7 = load %Node** %_result.addr
  call void @ctor391(%Node* %7, %Node* %baseExpr)
  call void @dtor166(%String* %op)
  ret void

if_block:                                         ; preds = %while_body
  %8 = call i1 @isEmpty285(%String* %op)
  br i1 %8, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  br label %while_end

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %10 = load i1* %withEqual.addr
  %11 = call i1 @nextIsExpr(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 %10)
  br i1 %11, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %13 = load i1* %withEqual.addr
  call void @parsePrefixExpr(%Node* %rhs, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i1 %13)
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @lastLoc(%Location* %"$tmpC5", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14)
  call void @span(%Location* %"$tmpC4", %Location* %loc, %Location* %"$tmpC5")
  %15 = load %Node* %baseExpr
  call void @asStringRef(%StringRef* %"$tmpC6", %String* %op)
  %16 = load %StringRef* %"$tmpC6"
  %17 = load %Node* %rhs
  %18 = call %Node @comp_parser_mkInfixOp(%Location* %"$tmpC4", %Node %15, %StringRef %16, %Node %17)
  store %Node %18, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %baseExpr, %Node* %"$tmpForRef")
  br label %if_end3

if_else:                                          ; preds = %if_block1
  %19 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @lastLoc(%Location* %"$tmpC9", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %19)
  call void @span(%Location* %"$tmpC8", %Location* %loc, %Location* %"$tmpC9")
  %20 = load %Node* %baseExpr
  call void @asStringRef(%StringRef* %"$tmpC10", %String* %op)
  %21 = load %StringRef* %"$tmpC10"
  %22 = call %Node @comp_parser_mkPostfixOp(%Location* %"$tmpC8", %Node %20, %StringRef %21)
  store %Node %22, %Node* %"$tmpForRef7"
  call void @"=393"(%Node* %baseExpr, %Node* %"$tmpForRef7")
  br label %while_end

if_end3:                                          ; preds = %dumy_block11, %if_then2
  br label %while_step

dumy_block11:                                     ; No predecessors!
  br label %if_end3

dumy_block12:                                     ; No predecessors!
  call void @dtor166(%String* %op)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parsePrefixExpr(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, i1 %withEqual) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %loc = alloca %Location
  %op = alloca %String
  %tmp.v = alloca %TokenType
  %"$tmpC" = alloca %String
  %tmp.v1 = alloca %TokenType
  %"$tmpC2" = alloca %String
  %baseExpr = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC7" = alloca %Location
  %"$tmpC8" = alloca %Location
  %"$tmpC9" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  call void @ctor131(%String* %op)
  br label %if_block

if_block:                                         ; preds = %code
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 36)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  br i1 %4, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseId(%String* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5)
  %6 = call %String* @"=198"(%String* %op, %String* %"$tmpC")
  call void @dtor166(%String* %"$tmpC")
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v1, i32 36)
  %8 = load %TokenType* %tmp.v1
  %9 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, %TokenType %8)
  br label %if_end

if_else:                                          ; preds = %if_block
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseOperOpt(%String* %"$tmpC2", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, i1 true)
  %11 = call %String* @"=198"(%String* %op, %String* %"$tmpC2")
  call void @dtor166(%String* %"$tmpC2")
  br label %if_end

if_end:                                           ; preds = %if_else, %if_then
  br label %if_block3

if_block3:                                        ; preds = %if_end
  %12 = call i1 @isEmpty285(%String* %op)
  br i1 %12, label %if_then4, label %if_else5

if_then4:                                         ; preds = %if_block3
  %13 = load %Node** %_result.addr
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseSimpleExpr(%Node* %13, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 true)
  call void @dtor166(%String* %op)
  ret void

if_else5:                                         ; preds = %if_block3
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parsePrefixExpr(%Node* %baseExpr, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, i1 true)
  %16 = load %Node** %_result.addr
  %17 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @lastLoc(%Location* %"$tmpC8", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %17)
  call void @span(%Location* %"$tmpC7", %Location* %loc, %Location* %"$tmpC8")
  call void @asStringRef(%StringRef* %"$tmpC9", %String* %op)
  %18 = load %StringRef* %"$tmpC9"
  %19 = load %Node* %baseExpr
  %20 = call %Node @comp_parser_mkPrefixOp(%Location* %"$tmpC7", %StringRef %18, %Node %19)
  store %Node %20, %Node* %"$tmpForRef"
  call void @ctor391(%Node* %16, %Node* %"$tmpForRef")
  call void @dtor166(%String* %op)
  ret void

if_end6:                                          ; preds = %dumy_block10, %dumy_block
  call void @dtor166(%String* %op)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end6

dumy_block10:                                     ; No predecessors!
  br label %if_end6
}

; Function Attrs: inlinehint nounwind
define internal void @parseId(%String* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %tmp.v = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 38)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = load %String** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 2
  call void @ctor163(%String* %4, %String* %7)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseOperOpt(%String* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, i1 %withEqual) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %tmp.v = alloca %TokenType
  %tmp.v5 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 39)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %4 = load %String** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 2
  call void @ctor163(%String* %4, %String* %7)
  ret void

if_else:                                          ; preds = %if_block
  br label %if_block1

if_end:                                           ; preds = %cond_destruct_end13, %dumy_block
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_else
  %8 = load i1* %withEqual.addr
  br i1 %8, label %cond.true, label %cond.false

if_then2:                                         ; preds = %cond.end
  %9 = load %String** %_result.addr
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %11 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, i32 0, i32 1
  %12 = getelementptr inbounds %Token* %11, i32 0, i32 2
  call void @ctor163(%String* %9, %String* %12)
  br i1 %8, label %cond_destruct_alt1, label %cond_destruct_alt2

if_else3:                                         ; preds = %cond.end
  %13 = load %String** %_result.addr
  call void @ctor131(%String* %13)
  br i1 %8, label %cond_destruct_alt17, label %cond_destruct_alt28

if_end4:                                          ; preds = %dumy_block10, %dumy_block6
  br i1 %8, label %cond_destruct_alt111, label %cond_destruct_alt212

cond.true:                                        ; preds = %if_block1
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v5, i32 37)
  %15 = load %TokenType* %tmp.v5
  %16 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, %TokenType %15)
  br label %cond.end

cond.false:                                       ; preds = %if_block1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %16, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then2, label %if_else3

cond_destruct_alt1:                               ; preds = %if_then2
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_then2
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  ret void

dumy_block6:                                      ; No predecessors!
  br label %if_end4

cond_destruct_alt17:                              ; preds = %if_else3
  br label %cond_destruct_end9

cond_destruct_alt28:                              ; preds = %if_else3
  br label %cond_destruct_end9

cond_destruct_end9:                               ; preds = %cond_destruct_alt28, %cond_destruct_alt17
  ret void

dumy_block10:                                     ; No predecessors!
  br label %if_end4

cond_destruct_alt111:                             ; preds = %if_end4
  br label %cond_destruct_end13

cond_destruct_alt212:                             ; preds = %if_end4
  br label %cond_destruct_end13

cond_destruct_end13:                              ; preds = %cond_destruct_alt212, %cond_destruct_alt111
  br label %if_end
}

; Function Attrs: noinline nounwind
define void @parseSimpleExpr(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, i1 %withEqual) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %res = alloca %Node
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %tmp.v1 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v6 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC7" = alloca %Node
  %tmp.v8 = alloca %TokenType
  %tmp.v13 = alloca %TokenType
  %"$tmpForRef14" = alloca %Node
  %"$tmpC15" = alloca %StringRef
  %tmp.v20 = alloca %TokenType
  %"$tmpForRef21" = alloca %Node
  %tmp.v26 = alloca %TokenType
  %"$tmpForRef27" = alloca %Node
  %tmp.v32 = alloca %TokenType
  %"$tmpForRef33" = alloca %Node
  %tmp.v38 = alloca %TokenType
  %"$tmpForRef39" = alloca %Node
  %tmp.v44 = alloca %TokenType
  %"$tmpForRef45" = alloca %Node
  %tmp.v46 = alloca i32
  %tmp.v51 = alloca %TokenType
  %"$tmpForRef52" = alloca %Node
  %tmp.v53 = alloca i32
  %tmp.v58 = alloca %TokenType
  %"$tmpForRef59" = alloca %Node
  %tmp.v60 = alloca i64
  %tmp.v65 = alloca %TokenType
  %"$tmpForRef66" = alloca %Node
  %tmp.v67 = alloca i64
  %tmp.v72 = alloca %TokenType
  %"$tmpForRef73" = alloca %Node
  %tmp.v74 = alloca float
  %tmp.v79 = alloca %TokenType
  %"$tmpForRef80" = alloca %Node
  %tmp.v81 = alloca double
  %tmp.v86 = alloca %TokenType
  %"$tmpForRef87" = alloca %Node
  %tmp.v91 = alloca %TokenType
  %"$tmpForRef92" = alloca %Node
  %"$tmpC93" = alloca %StringRef
  %"$tmpC97" = alloca %String
  %const.bytes = alloca [26 x i8]
  %const.struct = alloca %StringRef
  %"$tmpC98" = alloca %Token
  %const.bytes99 = alloca [23 x i8]
  %const.struct100 = alloca %StringRef
  %tmp.v105 = alloca %TokenType
  %args = alloca %Node
  %tmp.v106 = alloca %TokenType
  %"$tmpForRef107" = alloca %Node
  %"$tmpC108" = alloca %Location
  %"$tmpC109" = alloca %Location
  %tmp.v114 = alloca %TokenType
  %tmp.v119 = alloca %TokenType
  %tmp.v120 = alloca %TokenType
  %"$tmpForRef121" = alloca %Node
  %"$tmpC122" = alloca %Location
  %"$tmpC123" = alloca %Location
  %const.bytes124 = alloca [3 x i8]
  %const.struct125 = alloca %StringRef
  %id = alloca %String
  %"$tmpForRef126" = alloca %Node
  %"$tmpC127" = alloca %Location
  %"$tmpC128" = alloca %Location
  %"$tmpC129" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  call void @ctor396(%Node* %res)
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  br label %if_block

if_block:                                         ; preds = %code
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 30)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  br i1 %4, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseLambdaExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5)
  call void @"=393"(%Node* %res, %Node* %"$tmpC")
  br label %if_end

if_else:                                          ; preds = %cond.end
  br label %if_block2

if_end:                                           ; preds = %if_end5, %if_then
  br i1 %4, label %cond_destruct_alt1, label %cond_destruct_alt2

cond.true:                                        ; preds = %if_block
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v1, i32 7)
  %7 = load %TokenType* %tmp.v1
  %8 = call i1 @next2Is(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %8, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_else

if_block2:                                        ; preds = %if_else
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v6, i32 30)
  %10 = load %TokenType* %tmp.v6
  %11 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, %TokenType %10)
  br i1 %11, label %if_then3, label %if_else4

if_then3:                                         ; preds = %if_block2
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %"$tmpC7", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i1 true)
  %13 = load %Node* %"$tmpC7"
  %14 = call %Node @comp_parser_mkParenthesisExpr(%Node %13)
  store %Node %14, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef")
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v8, i32 31)
  %16 = load %TokenType* %tmp.v8
  %17 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, %TokenType %16)
  br label %if_end5

if_else4:                                         ; preds = %if_block2
  br label %if_block9

if_end5:                                          ; preds = %if_end12, %if_then3
  br label %if_end

if_block9:                                        ; preds = %if_else4
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v13, i32 38)
  %19 = load %TokenType* %tmp.v13
  %20 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18, %TokenType %19)
  br i1 %20, label %if_then10, label %if_else11

if_then10:                                        ; preds = %if_block9
  %21 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %22 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %21, i32 0, i32 1
  %23 = getelementptr inbounds %Token* %22, i32 0, i32 0
  %24 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %25 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %24, i32 0, i32 1
  %26 = getelementptr inbounds %Token* %25, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC15", %String* %26)
  %27 = load %StringRef* %"$tmpC15"
  %28 = call %Node @comp_parser_mkIdentifier(%Location* %23, %StringRef %27)
  store %Node %28, %Node* %"$tmpForRef14"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef14")
  br label %if_end12

if_else11:                                        ; preds = %if_block9
  br label %if_block16

if_end12:                                         ; preds = %if_end19, %if_then10
  br label %if_end5

if_block16:                                       ; preds = %if_else11
  %29 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v20, i32 23)
  %30 = load %TokenType* %tmp.v20
  %31 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %29, %TokenType %30)
  br i1 %31, label %if_then17, label %if_else18

if_then17:                                        ; preds = %if_block16
  %32 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %33 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %32, i32 0, i32 1
  %34 = getelementptr inbounds %Token* %33, i32 0, i32 0
  %35 = call %Node @comp_parser_mkThisExpr(%Location* %34)
  store %Node %35, %Node* %"$tmpForRef21"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef21")
  br label %if_end19

if_else18:                                        ; preds = %if_block16
  br label %if_block22

if_end19:                                         ; preds = %if_end25, %if_then17
  br label %if_end12

if_block22:                                       ; preds = %if_else18
  %36 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v26, i32 22)
  %37 = load %TokenType* %tmp.v26
  %38 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %36, %TokenType %37)
  br i1 %38, label %if_then23, label %if_else24

if_then23:                                        ; preds = %if_block22
  %39 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %40 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %39, i32 0, i32 1
  %41 = getelementptr inbounds %Token* %40, i32 0, i32 0
  %42 = call %Node @comp_parser_mkNullLiteral(%Location* %41)
  store %Node %42, %Node* %"$tmpForRef27"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef27")
  br label %if_end25

if_else24:                                        ; preds = %if_block22
  br label %if_block28

if_end25:                                         ; preds = %if_end31, %if_then23
  br label %if_end19

if_block28:                                       ; preds = %if_else24
  %43 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v32, i32 24)
  %44 = load %TokenType* %tmp.v32
  %45 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %43, %TokenType %44)
  br i1 %45, label %if_then29, label %if_else30

if_then29:                                        ; preds = %if_block28
  %46 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %47 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %46, i32 0, i32 1
  %48 = getelementptr inbounds %Token* %47, i32 0, i32 0
  %49 = call %Node @comp_parser_mkBoolLiteral(%Location* %48, i1 true)
  store %Node %49, %Node* %"$tmpForRef33"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef33")
  br label %if_end31

if_else30:                                        ; preds = %if_block28
  br label %if_block34

if_end31:                                         ; preds = %if_end37, %if_then29
  br label %if_end25

if_block34:                                       ; preds = %if_else30
  %50 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v38, i32 21)
  %51 = load %TokenType* %tmp.v38
  %52 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %50, %TokenType %51)
  br i1 %52, label %if_then35, label %if_else36

if_then35:                                        ; preds = %if_block34
  %53 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %54 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %53, i32 0, i32 1
  %55 = getelementptr inbounds %Token* %54, i32 0, i32 0
  %56 = call %Node @comp_parser_mkBoolLiteral(%Location* %55, i1 false)
  store %Node %56, %Node* %"$tmpForRef39"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef39")
  br label %if_end37

if_else36:                                        ; preds = %if_block34
  br label %if_block40

if_end37:                                         ; preds = %if_end43, %if_then35
  br label %if_end31

if_block40:                                       ; preds = %if_else36
  %57 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v44, i32 42)
  %58 = load %TokenType* %tmp.v44
  %59 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %57, %TokenType %58)
  br i1 %59, label %if_then41, label %if_else42

if_then41:                                        ; preds = %if_block40
  %60 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %61 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %60, i32 0, i32 1
  %62 = getelementptr inbounds %Token* %61, i32 0, i32 0
  %63 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %64 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %63, i32 0, i32 1
  %65 = getelementptr inbounds %Token* %64, i32 0, i32 3
  %66 = load i64* %65
  %67 = trunc i64 %66 to i32
  store i32 %67, i32* %tmp.v46
  %68 = load i32* %tmp.v46
  %69 = call %Node @comp_parser_mkIntLiteral(%Location* %62, i32 %68)
  store %Node %69, %Node* %"$tmpForRef45"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef45")
  br label %if_end43

if_else42:                                        ; preds = %if_block40
  br label %if_block47

if_end43:                                         ; preds = %if_end50, %if_then41
  br label %if_end37

if_block47:                                       ; preds = %if_else42
  %70 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v51, i32 44)
  %71 = load %TokenType* %tmp.v51
  %72 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %70, %TokenType %71)
  br i1 %72, label %if_then48, label %if_else49

if_then48:                                        ; preds = %if_block47
  %73 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %74 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %73, i32 0, i32 1
  %75 = getelementptr inbounds %Token* %74, i32 0, i32 0
  %76 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %77 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %76, i32 0, i32 1
  %78 = getelementptr inbounds %Token* %77, i32 0, i32 3
  %79 = load i64* %78
  %80 = trunc i64 %79 to i32
  store i32 %80, i32* %tmp.v53
  %81 = load i32* %tmp.v53
  %82 = call %Node @comp_parser_mkUIntLiteral(%Location* %75, i32 %81)
  store %Node %82, %Node* %"$tmpForRef52"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef52")
  br label %if_end50

if_else49:                                        ; preds = %if_block47
  br label %if_block54

if_end50:                                         ; preds = %if_end57, %if_then48
  br label %if_end43

if_block54:                                       ; preds = %if_else49
  %83 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v58, i32 43)
  %84 = load %TokenType* %tmp.v58
  %85 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %83, %TokenType %84)
  br i1 %85, label %if_then55, label %if_else56

if_then55:                                        ; preds = %if_block54
  %86 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %87 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %86, i32 0, i32 1
  %88 = getelementptr inbounds %Token* %87, i32 0, i32 0
  %89 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %90 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %89, i32 0, i32 1
  %91 = getelementptr inbounds %Token* %90, i32 0, i32 3
  %92 = load i64* %91
  store i64 %92, i64* %tmp.v60
  %93 = load i64* %tmp.v60
  %94 = call %Node @comp_parser_mkLongLiteral(%Location* %88, i64 %93)
  store %Node %94, %Node* %"$tmpForRef59"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef59")
  br label %if_end57

if_else56:                                        ; preds = %if_block54
  br label %if_block61

if_end57:                                         ; preds = %if_end64, %if_then55
  br label %if_end50

if_block61:                                       ; preds = %if_else56
  %95 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v65, i32 45)
  %96 = load %TokenType* %tmp.v65
  %97 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %95, %TokenType %96)
  br i1 %97, label %if_then62, label %if_else63

if_then62:                                        ; preds = %if_block61
  %98 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %99 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %98, i32 0, i32 1
  %100 = getelementptr inbounds %Token* %99, i32 0, i32 0
  %101 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %102 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %101, i32 0, i32 1
  %103 = getelementptr inbounds %Token* %102, i32 0, i32 3
  %104 = load i64* %103
  store i64 %104, i64* %tmp.v67
  %105 = load i64* %tmp.v67
  %106 = call %Node @comp_parser_mkULongLiteral(%Location* %100, i64 %105)
  store %Node %106, %Node* %"$tmpForRef66"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef66")
  br label %if_end64

if_else63:                                        ; preds = %if_block61
  br label %if_block68

if_end64:                                         ; preds = %if_end71, %if_then62
  br label %if_end57

if_block68:                                       ; preds = %if_else63
  %107 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v72, i32 46)
  %108 = load %TokenType* %tmp.v72
  %109 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %107, %TokenType %108)
  br i1 %109, label %if_then69, label %if_else70

if_then69:                                        ; preds = %if_block68
  %110 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %111 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %110, i32 0, i32 1
  %112 = getelementptr inbounds %Token* %111, i32 0, i32 0
  %113 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %114 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %113, i32 0, i32 1
  %115 = getelementptr inbounds %Token* %114, i32 0, i32 4
  %116 = load double* %115
  %117 = fptrunc double %116 to float
  store float %117, float* %tmp.v74
  %118 = load float* %tmp.v74
  %119 = call %Node @comp_parser_mkFloatLiteral(%Location* %112, float %118)
  store %Node %119, %Node* %"$tmpForRef73"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef73")
  br label %if_end71

if_else70:                                        ; preds = %if_block68
  br label %if_block75

if_end71:                                         ; preds = %if_end78, %if_then69
  br label %if_end64

if_block75:                                       ; preds = %if_else70
  %120 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v79, i32 47)
  %121 = load %TokenType* %tmp.v79
  %122 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %120, %TokenType %121)
  br i1 %122, label %if_then76, label %if_else77

if_then76:                                        ; preds = %if_block75
  %123 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %124 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %123, i32 0, i32 1
  %125 = getelementptr inbounds %Token* %124, i32 0, i32 0
  %126 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %127 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %126, i32 0, i32 1
  %128 = getelementptr inbounds %Token* %127, i32 0, i32 4
  %129 = load double* %128
  store double %129, double* %tmp.v81
  %130 = load double* %tmp.v81
  %131 = call %Node @comp_parser_mkDoubleLiteral(%Location* %125, double %130)
  store %Node %131, %Node* %"$tmpForRef80"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef80")
  br label %if_end78

if_else77:                                        ; preds = %if_block75
  br label %if_block82

if_end78:                                         ; preds = %if_end85, %if_then76
  br label %if_end71

if_block82:                                       ; preds = %if_else77
  %132 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v86, i32 40)
  %133 = load %TokenType* %tmp.v86
  %134 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %132, %TokenType %133)
  br i1 %134, label %if_then83, label %if_else84

if_then83:                                        ; preds = %if_block82
  %135 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %136 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %135, i32 0, i32 1
  %137 = getelementptr inbounds %Token* %136, i32 0, i32 0
  %138 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %139 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %138, i32 0, i32 1
  %140 = getelementptr inbounds %Token* %139, i32 0, i32 2
  %141 = call i8* @"()436"(%String* %140, i64 0)
  %142 = load i8* %141
  %143 = call %Node @comp_parser_mkCharLiteral(%Location* %137, i8 %142)
  store %Node %143, %Node* %"$tmpForRef87"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef87")
  br label %if_end85

if_else84:                                        ; preds = %if_block82
  br label %if_block88

if_end85:                                         ; preds = %if_end90, %if_then83
  br label %if_end78

if_block88:                                       ; preds = %if_else84
  %144 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v91, i32 41)
  %145 = load %TokenType* %tmp.v91
  %146 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %144, %TokenType %145)
  br i1 %146, label %if_then89, label %if_end90

if_then89:                                        ; preds = %if_block88
  %147 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %148 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %147, i32 0, i32 1
  %149 = getelementptr inbounds %Token* %148, i32 0, i32 0
  %150 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %151 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %150, i32 0, i32 1
  %152 = getelementptr inbounds %Token* %151, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC93", %String* %152)
  %153 = load %StringRef* %"$tmpC93"
  %154 = call %Node @comp_parser_mkStringLiteral(%Location* %149, %StringRef %153)
  store %Node %154, %Node* %"$tmpForRef92"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef92")
  br label %if_end90

if_end90:                                         ; preds = %if_then89, %if_block88
  br label %if_end85

cond_destruct_alt1:                               ; preds = %if_end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  br label %if_block94

if_block94:                                       ; preds = %cond_destruct_end
  %155 = load %Node* %res
  %156 = call i1 @isNull(%Node %155)
  br i1 %156, label %if_then95, label %if_end96

if_then95:                                        ; preds = %if_block94
  %157 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  store [26 x i8] c"Syntax error, unexpected \00", [26 x i8]* %const.bytes
  %158 = getelementptr inbounds [26 x i8]* %const.bytes, i32 0, i32 0
  %159 = getelementptr inbounds [26 x i8]* %const.bytes, i32 0, i32 25
  %160 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %161 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %158, i8** %160
  store i8* %159, i8** %161
  %162 = load %StringRef* %const.struct
  %163 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %164 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %163, i32 0, i32 0
  call void @"pre_*382"(%Token* %"$tmpC98", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %164)
  %165 = getelementptr inbounds %Token* %"$tmpC98", i32 0, i32 1
  %166 = load %TokenType* %165
  store [23 x i8] c", expecting expression\00", [23 x i8]* %const.bytes99
  %167 = getelementptr inbounds [23 x i8]* %const.bytes99, i32 0, i32 0
  %168 = getelementptr inbounds [23 x i8]* %const.bytes99, i32 0, i32 22
  %169 = getelementptr inbounds %StringRef* %const.struct100, i32 0, i32 0
  %170 = getelementptr inbounds %StringRef* %const.struct100, i32 0, i32 1
  store i8* %167, i8** %169
  store i8* %168, i8** %170
  %171 = load %StringRef* %const.struct100
  call void @toString435(%String* %"$tmpC97", %StringRef %162, %TokenType %166, %StringRef %171)
  call void @reportError386(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %157, %String* %"$tmpC97")
  call void @dtor166(%String* %"$tmpC97")
  call void @dtor299(%Token* %"$tmpC98")
  %172 = load %Node** %_result.addr
  call void @ctor396(%Node* %172)
  ret void

if_end96:                                         ; preds = %dumy_block, %if_block94
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end96

while_block:                                      ; preds = %while_step, %if_end96
  br i1 true, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block101

while_step:                                       ; preds = %if_end104
  br label %while_block

while_end:                                        ; preds = %if_else112, %while_block
  %173 = load %Node** %_result.addr
  call void @ctor391(%Node* %173, %Node* %res)
  ret void

if_block101:                                      ; preds = %while_body
  %174 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v105, i32 30)
  %175 = load %TokenType* %tmp.v105
  %176 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %174, %TokenType %175)
  br i1 %176, label %if_then102, label %if_else103

if_then102:                                       ; preds = %if_block101
  %177 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExprListOpt(%Node* %args, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %177)
  %178 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v106, i32 31)
  %179 = load %TokenType* %tmp.v106
  %180 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %178, %TokenType %179)
  %181 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @lastLoc(%Location* %"$tmpC109", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %181)
  call void @span(%Location* %"$tmpC108", %Location* %loc, %Location* %"$tmpC109")
  %182 = load %Node* %res
  %183 = load %Node* %args
  %184 = call %Node @comp_parser_mkFunAppExpr(%Location* %"$tmpC108", %Node %182, %Node %183)
  store %Node %184, %Node* %"$tmpForRef107"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef107")
  br label %if_end104

if_else103:                                       ; preds = %if_block101
  br label %if_block110

if_end104:                                        ; preds = %if_end113, %if_then102
  br label %while_step

if_block110:                                      ; preds = %if_else103
  %185 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v114, i32 35)
  %186 = load %TokenType* %tmp.v114
  %187 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %185, %TokenType %186)
  br i1 %187, label %if_then111, label %if_else112

if_then111:                                       ; preds = %if_block110
  br label %if_block115

if_else112:                                       ; preds = %if_block110
  br label %while_end

if_end113:                                        ; preds = %dumy_block130, %if_end118
  br label %if_end104

if_block115:                                      ; preds = %if_then111
  %188 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v119, i32 30)
  %189 = load %TokenType* %tmp.v119
  %190 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %188, %TokenType %189)
  br i1 %190, label %if_then116, label %if_else117

if_then116:                                       ; preds = %if_block115
  %191 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v120, i32 31)
  %192 = load %TokenType* %tmp.v120
  %193 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %191, %TokenType %192)
  %194 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @lastLoc(%Location* %"$tmpC123", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %194)
  call void @span(%Location* %"$tmpC122", %Location* %loc, %Location* %"$tmpC123")
  %195 = load %Node* %res
  store [3 x i8] c"()\00", [3 x i8]* %const.bytes124
  %196 = getelementptr inbounds [3 x i8]* %const.bytes124, i32 0, i32 0
  %197 = getelementptr inbounds [3 x i8]* %const.bytes124, i32 0, i32 2
  %198 = getelementptr inbounds %StringRef* %const.struct125, i32 0, i32 0
  %199 = getelementptr inbounds %StringRef* %const.struct125, i32 0, i32 1
  store i8* %196, i8** %198
  store i8* %197, i8** %199
  %200 = load %StringRef* %const.struct125
  %201 = call %Node @comp_parser_mkDotExpr(%Location* %"$tmpC122", %Node %195, %StringRef %200)
  store %Node %201, %Node* %"$tmpForRef121"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef121")
  br label %if_end118

if_else117:                                       ; preds = %if_block115
  %202 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %203 = load i1* %withEqual.addr
  call void @parseIdOrOper(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %202, i1 %203)
  %204 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @lastLoc(%Location* %"$tmpC128", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %204)
  call void @span(%Location* %"$tmpC127", %Location* %loc, %Location* %"$tmpC128")
  %205 = load %Node* %res
  call void @asStringRef(%StringRef* %"$tmpC129", %String* %id)
  %206 = load %StringRef* %"$tmpC129"
  %207 = call %Node @comp_parser_mkDotExpr(%Location* %"$tmpC127", %Node %205, %StringRef %206)
  store %Node %207, %Node* %"$tmpForRef126"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef126")
  call void @dtor166(%String* %id)
  br label %if_end118

if_end118:                                        ; preds = %if_else117, %if_then116
  br label %if_end113

dumy_block130:                                    ; No predecessors!
  br label %if_end113
}

; Function Attrs: inlinehint nounwind
define internal i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %TokenType %t) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %t.addr = alloca %TokenType
  store %TokenType %t, %TokenType* %t.addr
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @"pre_*382"(%Token* %"$tmpC", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2)
  %3 = getelementptr inbounds %Token* %"$tmpC", i32 0, i32 1
  %4 = call i1 @"==227"(%TokenType* %3, %TokenType* %t.addr)
  call void @dtor299(%Token* %"$tmpC")
  ret i1 %4

dumy_block:                                       ; No predecessors!
  call void @dtor299(%Token* %"$tmpC")
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal i1 @next2Is(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %TokenType %t) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %t.addr = alloca %TokenType
  store %TokenType %t, %TokenType* %t.addr
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @peek398(%Token* %"$tmpC", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2, i32 1)
  %3 = getelementptr inbounds %Token* %"$tmpC", i32 0, i32 1
  %4 = call i1 @"==227"(%TokenType* %3, %TokenType* %t.addr)
  call void @dtor299(%Token* %"$tmpC")
  ret i1 %4

dumy_block:                                       ; No predecessors!
  call void @dtor299(%Token* %"$tmpC")
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @peek398(%Token* sret %_result, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %s, i32 %n) #3 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %s.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %s, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %s.addr
  %n.addr = alloca i32
  store i32 %n, i32* %n.addr
  %"$tmpC" = alloca %Token
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load i32* %n.addr
  %2 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %s.addr
  %3 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2, i32 0, i32 1
  %4 = call i64 @size205(%"Vector[Token]"* %3)
  %5 = call i1 @">="(i32 %1, i64 %4)
  br i1 %5, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %6 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %s.addr
  %7 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %6, i32 0, i32 1
  %8 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %s.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %8, i32 0, i32 0
  call void @"post_++371"(%Token* %"$tmpC", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %9)
  call void @"+=214"(%"Vector[Token]"* %7, %Token* %"$tmpC")
  call void @dtor299(%Token* %"$tmpC")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  br label %if_block

cond.true:                                        ; preds = %while_block
  %10 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %s.addr
  %11 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %10, i32 0, i32 0
  %12 = call i1 @"pre_!!369"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %11)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %12, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end

if_block:                                         ; preds = %while_end
  %13 = load i32* %n.addr
  %14 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %s.addr
  %15 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %14, i32 0, i32 1
  %16 = call i64 @size205(%"Vector[Token]"* %15)
  %17 = call i1 @"<238"(i32 %13, i64 %16)
  br i1 %17, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %18 = load %Token** %_result.addr
  %19 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %s.addr
  %20 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %19, i32 0, i32 1
  %21 = load i32* %n.addr
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %tmp.v
  %23 = load i64* %tmp.v
  %24 = call %Token* @"()399"(%"Vector[Token]"* %20, i64 %23)
  call void @ctor217(%Token* %18, %Token* %24)
  ret void

if_else:                                          ; preds = %if_block
  %25 = load %Token** %_result.addr
  call void @ctor129(%Token* %25)
  ret void

if_end:                                           ; preds = %dumy_block1, %dumy_block
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block1:                                      ; No predecessors!
  br label %if_end
}

; Function Attrs: alwaysinline nounwind
define internal %Token* @"()399"(%"Vector[Token]"* %"$this", i64 %index) #2 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 0
  %3 = load i64* %index.addr
  call void @advance208(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]"* %2, i64 %3)
  %4 = call %Token* @value219(%"RawPtr[Token]"* %"$tmpC")
  ret %Token* %4
}

; Function Attrs: inlinehint nounwind
define internal void @parseLambdaExpr(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %tmp.v1 = alloca %TokenType
  %closureParams = alloca %Node
  %formals = alloca %Node
  %retType = alloca %Node
  %body = alloca %Node
  %bodyExp = alloca %Node
  %tmp.v2 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %"$tmpC3" = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC5" = alloca %Location
  %"$tmpC6" = alloca %Location
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 30)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v1, i32 7)
  %6 = load %TokenType* %tmp.v1
  %7 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %TokenType %6)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseClosureParams(%Node* %closureParams, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseFormalsOpt(%Node* %formals, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 false)
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseTypeNode(%Node* %retType, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10)
  call void @ctor396(%Node* %body)
  call void @ctor396(%Node* %bodyExp)
  br label %if_block

if_block:                                         ; preds = %code
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v2, i32 37)
  %12 = load %TokenType* %tmp.v2
  %13 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, %TokenType %12)
  br i1 %13, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 true)
  call void @"=393"(%Node* %bodyExp, %Node* %"$tmpC")
  br label %if_end

if_else:                                          ; preds = %if_block
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseFunBody(%Node* %"$tmpC3", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15)
  call void @"=393"(%Node* %body, %Node* %"$tmpC3")
  br label %if_end

if_end:                                           ; preds = %if_else, %if_then
  %16 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v4, i32 31)
  %17 = load %TokenType* %tmp.v4
  %18 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %16, %TokenType %17)
  %19 = load %Node** %_result.addr
  %20 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @lastLoc(%Location* %"$tmpC6", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %20)
  call void @span(%Location* %"$tmpC5", %Location* %loc, %Location* %"$tmpC6")
  %21 = load %Node* %closureParams
  %22 = load %Node* %formals
  %23 = load %Node* %retType
  %24 = load %Node* %body
  %25 = load %Node* %bodyExp
  %26 = call %Node @comp_parser_mkLambdaExpr(%Location* %"$tmpC5", %Node %21, %Node %22, %Node %23, %Node %24, %Node %25)
  store %Node %26, %Node* %"$tmpForRef"
  call void @ctor391(%Node* %19, %Node* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseClosureParams(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res = alloca %Node
  %tmp.v = alloca %TokenType
  %tmp.v1 = alloca %TokenType
  %tmp.v5 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v6 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  call void @ctor396(%Node* %res)
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 35)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v1, i32 26)
  %5 = load %TokenType* %tmp.v1
  %6 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, %TokenType %5)
  br label %if_block2

if_end:                                           ; preds = %if_end4, %if_block
  %7 = load %Node** %_result.addr
  call void @ctor391(%Node* %7, %Node* %res)
  ret void

if_block2:                                        ; preds = %if_then
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v5, i32 38)
  %9 = load %TokenType* %tmp.v5
  %10 = call i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %TokenType %9)
  br i1 %10, label %if_then3, label %if_end4

if_then3:                                         ; preds = %if_block2
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseIdListNode(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11)
  call void @"=393"(%Node* %res, %Node* %"$tmpC")
  br label %if_end4

if_end4:                                          ; preds = %if_then3, %if_block2
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v6, i32 27)
  %13 = load %TokenType* %tmp.v6
  %14 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, %TokenType %13)
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseIdListNode(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res = alloca %Node
  %id = alloca %String
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %tmp.v = alloca %TokenType
  %"$tmpC1" = alloca %String
  %"$tmpForRef2" = alloca %Node
  %"$tmpC3" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  call void @ctor396(%Node* %res)
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %Node* %res
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %Token* %4, i32 0, i32 0
  call void @asStringRef(%StringRef* %"$tmpC", %String* %id)
  %6 = load %StringRef* %"$tmpC"
  %7 = call %Node @comp_parser_mkIdentifier(%Location* %5, %StringRef %6)
  %8 = call %Node @comp_parser_addToNodeList(%Node %2, %Node %7)
  store %Node %8, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef")
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 34)
  %10 = load %TokenType* %tmp.v
  %11 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, %TokenType %10)
  br i1 %11, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseId(%String* %"$tmpC1", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12)
  %13 = call %String* @"=198"(%String* %id, %String* %"$tmpC1")
  call void @dtor166(%String* %"$tmpC1")
  %14 = load %Node* %res
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %16 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, i32 0, i32 1
  %17 = getelementptr inbounds %Token* %16, i32 0, i32 0
  call void @asStringRef(%StringRef* %"$tmpC3", %String* %id)
  %18 = load %StringRef* %"$tmpC3"
  %19 = call %Node @comp_parser_mkIdentifier(%Location* %17, %StringRef %18)
  %20 = call %Node @comp_parser_addToNodeList(%Node %14, %Node %19)
  store %Node %20, %Node* %"$tmpForRef2"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef2")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %21 = load %Node** %_result.addr
  call void @ctor391(%Node* %21, %Node* %res)
  call void @dtor166(%String* %id)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor166(%String* %id)
  ret void
}

declare %Node @comp_parser_addToNodeList(%Node, %Node)

; Function Attrs: inlinehint nounwind
define internal void @parseFormalsOpt(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, i1 %varFormals) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %varFormals.addr = alloca i1
  store i1 %varFormals, i1* %varFormals.addr
  %res = alloca %Node
  %tmp.v = alloca %TokenType
  %tmp.v4 = alloca %TokenType
  %tmp.v5 = alloca %TokenType
  %tmp.v6 = alloca %TokenType
  %tmp.v10 = alloca %TokenType
  %loc = alloca %Location
  %ids = alloca %"Vector[LocString]"
  %"$tmpC" = alloca %Location
  %"$tmpC11" = alloca %Location
  %const.bytes = alloca [8 x i8]
  %const.struct = alloca %StringRef
  %tmp.v12 = alloca %Node
  br label %code

code:                                             ; preds = %0
  call void @ctor396(%Node* %res)
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 30)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  br label %if_block1

if_else:                                          ; preds = %if_block
  br label %if_block7

if_end:                                           ; preds = %if_end9, %while_end
  %4 = load %Node** %_result.addr
  call void @ctor391(%Node* %4, %Node* %res)
  ret void

if_block1:                                        ; preds = %if_then
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v4, i32 31)
  %6 = load %TokenType* %tmp.v4
  %7 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %TokenType %6)
  br i1 %7, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  %8 = load %Node** %_result.addr
  call void @ctor391(%Node* %8, %Node* %res)
  ret void

if_end3:                                          ; preds = %dumy_block, %if_block1
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %10 = load i1* %varFormals.addr
  call void @parseFormal(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 %10, %Node* %res)
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end3

while_block:                                      ; preds = %while_step, %if_end3
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v5, i32 34)
  %12 = load %TokenType* %tmp.v5
  %13 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, %TokenType %12)
  br i1 %13, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %15 = load i1* %varFormals.addr
  call void @parseFormal(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 %15, %Node* %res)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %16 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v6, i32 31)
  %17 = load %TokenType* %tmp.v6
  %18 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %16, %TokenType %17)
  br label %if_end

if_block7:                                        ; preds = %if_else
  %19 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v10, i32 38)
  %20 = load %TokenType* %tmp.v10
  %21 = call i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %19, %TokenType %20)
  br i1 %21, label %if_then8, label %if_end9

if_then8:                                         ; preds = %if_block7
  %22 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %22)
  %23 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseIdList(%"Vector[LocString]"* %ids, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %23)
  %24 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @lastLoc(%Location* %"$tmpC11", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %24)
  call void @span(%Location* %"$tmpC", %Location* %loc, %Location* %"$tmpC11")
  store [8 x i8] c"AnyType\00", [8 x i8]* %const.bytes
  %25 = getelementptr inbounds [8 x i8]* %const.bytes, i32 0, i32 0
  %26 = getelementptr inbounds [8 x i8]* %const.bytes, i32 0, i32 7
  %27 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %28 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %25, i8** %27
  store i8* %26, i8** %28
  %29 = load %StringRef* %const.struct
  %30 = call %Node @comp_parser_mkIdentifier(%Location* %"$tmpC", %StringRef %29)
  call void @ctor396(%Node* %tmp.v12)
  %31 = load %Node* %tmp.v12
  %32 = load i1* %varFormals.addr
  call void @createFormals(%"Vector[LocString]"* %ids, %Node %30, %Node %31, i1 %32, %Node* %res)
  call void @dtor426(%"Vector[LocString]"* %ids)
  br label %if_end9

if_end9:                                          ; preds = %if_then8, %if_block7
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseFormal(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, i1 %varFormals, %Node* %res) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %varFormals.addr = alloca i1
  store i1 %varFormals, i1* %varFormals.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %ids = alloca %"Vector[LocString]"
  %tmp.v = alloca %TokenType
  %typeNode = alloca %Node
  %init = alloca %Node
  %tmp.v1 = alloca %TokenType
  %"$tmpC" = alloca %Node
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseIdList(%"Vector[LocString]"* %ids, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 32)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %typeNode, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i1 false)
  call void @ctor396(%Node* %init)
  br label %if_block

if_block:                                         ; preds = %code
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v1, i32 37)
  %7 = load %TokenType* %tmp.v1
  %8 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  br i1 %8, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 true)
  call void @"=393"(%Node* %init, %Node* %"$tmpC")
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  %10 = load %Node* %typeNode
  %11 = load %Node* %init
  %12 = load i1* %varFormals.addr
  %13 = load %Node** %res.addr
  call void @createFormals(%"Vector[LocString]"* %ids, %Node %10, %Node %11, i1 %12, %Node* %13)
  call void @dtor426(%"Vector[LocString]"* %ids)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseIdList(%"Vector[LocString]"* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %_result, %"Vector[LocString]"** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res = alloca %"Vector[LocString]"
  %id = alloca %String
  %tmp.v = alloca %LocString
  %"$tmpC" = alloca %"Tuple[Location/rtct, String/rtct]"
  %tmp.v1 = alloca %TokenType
  %"$tmpC2" = alloca %String
  %tmp.v3 = alloca %LocString
  %"$tmpC4" = alloca %"Tuple[Location/rtct, String/rtct]"
  br label %code

code:                                             ; preds = %0
  call void @ctor400(%"Vector[LocString]"* %res)
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %3 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, i32 0, i32 1
  %4 = getelementptr inbounds %Token* %3, i32 0, i32 0
  %5 = load %Location* %4
  %6 = load %String* %id
  call void @"~"(%"Tuple[Location/rtct, String/rtct]"* %"$tmpC", %Location %5, %String %6)
  %7 = load %"Tuple[Location/rtct, String/rtct]"* %"$tmpC"
  call void @ctor420(%LocString* %tmp.v, %"Tuple[Location/rtct, String/rtct]" %7)
  call void @"+=402"(%"Vector[LocString]"* %res, %LocString* %tmp.v)
  call void @dtor422(%LocString* %tmp.v)
  call void @dtor423(%"Tuple[Location/rtct, String/rtct]"* %"$tmpC")
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v1, i32 34)
  %9 = load %TokenType* %tmp.v1
  %10 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %TokenType %9)
  br i1 %10, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseId(%String* %"$tmpC2", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11)
  %12 = call %String* @"=198"(%String* %id, %String* %"$tmpC2")
  call void @dtor166(%String* %"$tmpC2")
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %14 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, i32 0, i32 1
  %15 = getelementptr inbounds %Token* %14, i32 0, i32 0
  %16 = load %Location* %15
  %17 = load %String* %id
  call void @"~"(%"Tuple[Location/rtct, String/rtct]"* %"$tmpC4", %Location %16, %String %17)
  %18 = load %"Tuple[Location/rtct, String/rtct]"* %"$tmpC4"
  call void @ctor420(%LocString* %tmp.v3, %"Tuple[Location/rtct, String/rtct]" %18)
  call void @"+=402"(%"Vector[LocString]"* %res, %LocString* %tmp.v3)
  call void @dtor422(%LocString* %tmp.v3)
  call void @dtor423(%"Tuple[Location/rtct, String/rtct]"* %"$tmpC4")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %19 = load %"Vector[LocString]"** %_result.addr
  call void @ctor424(%"Vector[LocString]"* %19, %"Vector[LocString]"* %res)
  call void @dtor166(%String* %id)
  call void @dtor426(%"Vector[LocString]"* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor166(%String* %id)
  call void @dtor426(%"Vector[LocString]"* %res)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor400(%"Vector[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 0
  call void @ctor401(%"RawPtr[LocString]"* %2)
  %3 = load %"Vector[LocString]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[LocString]"* %3, i32 0, i32 1
  call void @ctor401(%"RawPtr[LocString]"* %4)
  %5 = load %"Vector[LocString]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[LocString]"* %5, i32 0, i32 2
  call void @ctor401(%"RawPtr[LocString]"* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor401(%"RawPtr[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[LocString]"* %1, i32 0, i32 0
  store %LocString* null, %LocString** %2
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"+=402"(%"Vector[LocString]"* %"$this", %LocString* %value) #2 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %value.addr = alloca %LocString*
  store %LocString* %value, %LocString** %value.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = load %LocString** %value.addr
  call void @pushBack403(%"Vector[LocString]"* %1, %LocString* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @pushBack403(%"Vector[LocString]"* %"$this", %LocString* %value) #3 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %value.addr = alloca %LocString*
  store %LocString* %value, %LocString** %value.addr
  %t = alloca i64
  %"$tmpC" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 1
  %3 = load %"Vector[LocString]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[LocString]"* %3, i32 0, i32 2
  %5 = load %"RawPtr[LocString]"* %4
  %6 = call i1 @"==404"(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]" %5)
  br i1 %6, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %7 = load %"Vector[LocString]"** %"$this.addr"
  %8 = call i64 @capacity405(%"Vector[LocString]"* %7)
  %9 = call i64 @"*183"(i32 2, i64 %8)
  store i64 %9, i64* %t
  br label %if_block1

if_end:                                           ; preds = %if_end3, %if_block
  %10 = load %"Vector[LocString]"** %"$this.addr"
  %11 = getelementptr inbounds %"Vector[LocString]"* %10, i32 0, i32 1
  %12 = call %LocString* @value418(%"RawPtr[LocString]"* %11)
  %13 = load %LocString** %value.addr
  call void @ctor416(%LocString* %12, %LocString* %13)
  %14 = load %"Vector[LocString]"** %"$this.addr"
  %15 = getelementptr inbounds %"Vector[LocString]"* %14, i32 0, i32 1
  %16 = load %"Vector[LocString]"** %"$this.addr"
  %17 = getelementptr inbounds %"Vector[LocString]"* %16, i32 0, i32 1
  call void @advance419(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]"* %17)
  %18 = load %"RawPtr[LocString]"* %"$tmpC"
  call void @"=411"(%"RawPtr[LocString]"* %15, %"RawPtr[LocString]" %18)
  ret void

if_block1:                                        ; preds = %if_then
  %19 = load i64* %t
  %20 = call i1 @"<182"(i64 %19, i32 2)
  br i1 %20, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 2, i64* %t
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %21 = load %"Vector[LocString]"** %"$this.addr"
  %22 = load i64* %t
  call void @reserve408(%"Vector[LocString]"* %21, i64 %22)
  br label %if_end
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==404"(%"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]" %other) #2 {
  %"$this.addr" = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %other, %"RawPtr[LocString]"* %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[LocString]"* %1, i32 0, i32 0
  %3 = load %LocString** %2
  %4 = bitcast %LocString* %3 to i8*
  %5 = getelementptr inbounds %"RawPtr[LocString]"* %other.addr, i32 0, i32 0
  %6 = load %LocString** %5
  %7 = bitcast %LocString* %6 to i8*
  %8 = call i1 @implOpRefEQ(i8* %4, i8* %7)
  ret i1 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @capacity405(%"Vector[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 2
  %3 = load %"Vector[LocString]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[LocString]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[LocString]"* %4
  %6 = call i64 @diff406(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]" %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @diff406(%"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]" %other) #2 {
  %"$this.addr" = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %other, %"RawPtr[LocString]"* %other.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %"$this.addr"
  %2 = call i8* @bytePtr407(%"RawPtr[LocString]"* %1)
  %3 = call i8* @bytePtr407(%"RawPtr[LocString]"* %other.addr)
  %4 = call i64 @ptrDiff(i8* %2, i8* %3)
  store i64 48, i64* %tmp.v1
  %5 = load i64* %tmp.v1
  %6 = call i64 @"/144"(i64 %4, i64 %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8* @bytePtr407(%"RawPtr[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[LocString]"* %1, i32 0, i32 0
  %3 = load %LocString** %2
  %4 = bitcast %LocString* %3 to i8*
  ret i8* %4
}

; Function Attrs: inlinehint nounwind
define internal void @reserve408(%"Vector[LocString]"* %"$this", i64 %n) #3 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %curCapacity = alloca i64
  %tmp.v = alloca i64
  %curSize = alloca i64
  %"$tmpC" = alloca %"RawPtr[LocString]"
  %"$tmpC7" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = call i64 @capacity405(%"Vector[LocString]"* %1)
  store i64 %2, i64* %curCapacity
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64* %n.addr
  %4 = load i64* %curCapacity
  %5 = call i1 @"<="(i64 %3, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64* %n.addr
  %7 = call i1 @"<182"(i64 %6, i32 8)
  br i1 %7, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 8, i64* %n.addr
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  br label %if_block4

if_block4:                                        ; preds = %if_end3
  %8 = load i64* %n.addr
  %9 = load i64* %curCapacity
  %10 = call double @"*151"(double 2.000000e+00, i64 %9)
  %11 = call i1 @"<148"(i64 %8, double %10)
  br i1 %11, label %if_then5, label %if_end6

if_then5:                                         ; preds = %if_block4
  %12 = load i64* %curCapacity
  %13 = call double @"*151"(double 2.000000e+00, i64 %12)
  %14 = fptoui double %13 to i64
  store i64 %14, i64* %tmp.v
  %15 = load i64* %tmp.v
  store i64 %15, i64* %n.addr
  br label %if_end6

if_end6:                                          ; preds = %if_then5, %if_block4
  %16 = load %"Vector[LocString]"** %"$this.addr"
  %17 = call i64 @size409(%"Vector[LocString]"* %16)
  store i64 %17, i64* %curSize
  %18 = load %"Vector[LocString]"** %"$this.addr"
  %19 = getelementptr inbounds %"Vector[LocString]"* %18, i32 0, i32 0
  %20 = load i64* %n.addr
  call void @reallocPtr410(%"RawPtr[LocString]"* %19, i64 %20)
  %21 = load %"Vector[LocString]"** %"$this.addr"
  %22 = getelementptr inbounds %"Vector[LocString]"* %21, i32 0, i32 1
  %23 = load %"Vector[LocString]"** %"$this.addr"
  %24 = getelementptr inbounds %"Vector[LocString]"* %23, i32 0, i32 0
  %25 = load i64* %curSize
  call void @advance412(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]"* %24, i64 %25)
  %26 = load %"RawPtr[LocString]"* %"$tmpC"
  call void @"=411"(%"RawPtr[LocString]"* %22, %"RawPtr[LocString]" %26)
  %27 = load %"Vector[LocString]"** %"$this.addr"
  %28 = getelementptr inbounds %"Vector[LocString]"* %27, i32 0, i32 2
  %29 = load %"Vector[LocString]"** %"$this.addr"
  %30 = getelementptr inbounds %"Vector[LocString]"* %29, i32 0, i32 0
  %31 = load i64* %n.addr
  call void @advance412(%"RawPtr[LocString]"* %"$tmpC7", %"RawPtr[LocString]"* %30, i64 %31)
  %32 = load %"RawPtr[LocString]"* %"$tmpC7"
  call void @"=411"(%"RawPtr[LocString]"* %28, %"RawPtr[LocString]" %32)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i64 @size409(%"Vector[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 1
  %3 = load %"Vector[LocString]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[LocString]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[LocString]"* %4
  %6 = call i64 @diff406(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]" %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal void @reallocPtr410(%"RawPtr[LocString]"* %"$this", i64 %n) #3 {
  %"$this.addr" = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %"$this.addr"
  %2 = call i8* @bytePtr407(%"RawPtr[LocString]"* %1)
  %3 = load i64* %n.addr
  %4 = call i64 @"*"(i64 %3, i64 48)
  %5 = call i8* @realloc(i8* %2, i64 %4)
  %6 = bitcast i8* %5 to %LocString*
  %7 = load %"RawPtr[LocString]"** %"$this.addr"
  %8 = getelementptr inbounds %"RawPtr[LocString]"* %7, i32 0, i32 0
  store %LocString* %6, %LocString** %8
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=411"(%"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]" %other) #2 {
  %"$this.addr" = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %other, %"RawPtr[LocString]"* %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[LocString]"* %other.addr, i32 0, i32 0
  %2 = load %LocString** %1
  %3 = load %"RawPtr[LocString]"** %"$this.addr"
  %4 = getelementptr inbounds %"RawPtr[LocString]"* %3, i32 0, i32 0
  store %LocString* %2, %LocString** %4
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @advance412(%"RawPtr[LocString]"* sret %_result, %"RawPtr[LocString]"* %"$this", i64 %n) #2 {
  %_result.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %_result, %"RawPtr[LocString]"** %_result.addr
  %"$this.addr" = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %_result.addr
  %2 = load %"RawPtr[LocString]"** %"$this.addr"
  %3 = call i8* @bytePtr407(%"RawPtr[LocString]"* %2)
  %4 = load i64* %n.addr
  %5 = call i64 @"*"(i64 %4, i64 48)
  %6 = call i8* @ptrAdd(i8* %3, i64 %5)
  call void @fromBytePtr413(%"RawPtr[LocString]"* %1, i8* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @fromBytePtr413(%"RawPtr[LocString]"* sret %_result, i8* %ptr) #3 {
  %_result.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %_result, %"RawPtr[LocString]"** %_result.addr
  %ptr.addr = alloca i8*
  store i8* %ptr, i8** %ptr.addr
  %res = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  call void @ctor401(%"RawPtr[LocString]"* %res)
  %1 = load i8** %ptr.addr
  %2 = bitcast i8* %1 to %LocString*
  %3 = getelementptr inbounds %"RawPtr[LocString]"* %res, i32 0, i32 0
  store %LocString* %2, %LocString** %3
  %4 = load %"RawPtr[LocString]"** %_result.addr
  call void @ctor414(%"RawPtr[LocString]"* %4, %"RawPtr[LocString]"* %res)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor414(%"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]"* %other) #2 {
  %"$this.addr" = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %other, %"RawPtr[LocString]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %other.addr
  %2 = getelementptr inbounds %"RawPtr[LocString]"* %1, i32 0, i32 0
  %3 = load %LocString** %2
  %4 = load %"RawPtr[LocString]"** %"$this.addr"
  %5 = getelementptr inbounds %"RawPtr[LocString]"* %4, i32 0, i32 0
  store %LocString* %3, %LocString** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor415(%"RawPtr[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor416(%LocString* %"$this", %LocString* %other) #2 {
  %"$this.addr" = alloca %LocString*
  store %LocString* %"$this", %LocString** %"$this.addr"
  %other.addr = alloca %LocString*
  store %LocString* %other, %LocString** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LocString** %"$this.addr"
  %2 = getelementptr inbounds %LocString* %1, i32 0, i32 0
  %3 = load %LocString** %other.addr
  %4 = getelementptr inbounds %LocString* %3, i32 0, i32 0
  call void @ctor417(%"Tuple[Location/rtct, String/rtct]"* %2, %"Tuple[Location/rtct, String/rtct]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor417(%"Tuple[Location/rtct, String/rtct]"* %"$this", %"Tuple[Location/rtct, String/rtct]"* %other) #2 {
  %"$this.addr" = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %"$this", %"Tuple[Location/rtct, String/rtct]"** %"$this.addr"
  %other.addr = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %other, %"Tuple[Location/rtct, String/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location/rtct, String/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %1, i32 0, i32 0
  %3 = load %"Tuple[Location/rtct, String/rtct]"** %other.addr
  %4 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %3, i32 0, i32 0
  call void @ctor168(%Location* %2, %Location* %4)
  %5 = load %"Tuple[Location/rtct, String/rtct]"** %"$this.addr"
  %6 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %5, i32 0, i32 1
  %7 = load %"Tuple[Location/rtct, String/rtct]"** %other.addr
  %8 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %7, i32 0, i32 1
  call void @ctor163(%String* %6, %String* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal %LocString* @value418(%"RawPtr[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[LocString]"* %1, i32 0, i32 0
  %3 = load %LocString** %2
  ret %LocString* %3
}

; Function Attrs: alwaysinline nounwind
define internal void @advance419(%"RawPtr[LocString]"* sret %_result, %"RawPtr[LocString]"* %"$this") #2 {
  %_result.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %_result, %"RawPtr[LocString]"** %_result.addr
  %"$this.addr" = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %_result.addr
  %2 = load %"RawPtr[LocString]"** %"$this.addr"
  %3 = call i8* @bytePtr407(%"RawPtr[LocString]"* %2)
  %4 = call i8* @ptrAdd(i8* %3, i64 48)
  call void @fromBytePtr413(%"RawPtr[LocString]"* %1, i8* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor420(%LocString* %"$this", %"Tuple[Location/rtct, String/rtct]" %fdata) #2 {
  %"$this.addr" = alloca %LocString*
  store %LocString* %"$this", %LocString** %"$this.addr"
  %fdata.addr = alloca %"Tuple[Location/rtct, String/rtct]"
  store %"Tuple[Location/rtct, String/rtct]" %fdata, %"Tuple[Location/rtct, String/rtct]"* %fdata.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LocString** %"$this.addr"
  %2 = getelementptr inbounds %LocString* %1, i32 0, i32 0
  call void @ctor417(%"Tuple[Location/rtct, String/rtct]"* %2, %"Tuple[Location/rtct, String/rtct]"* %fdata.addr)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"~"(%"Tuple[Location/rtct, String/rtct]"* sret %_result, %Location %v1, %String %v2) #2 {
  %_result.addr = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %_result, %"Tuple[Location/rtct, String/rtct]"** %_result.addr
  %v1.addr = alloca %Location
  store %Location %v1, %Location* %v1.addr
  %v2.addr = alloca %String
  store %String %v2, %String* %v2.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location/rtct, String/rtct]"** %_result.addr
  %2 = load %Location* %v1.addr
  %3 = load %String* %v2.addr
  call void @mkTuple(%"Tuple[Location/rtct, String/rtct]"* %1, %Location %2, %String %3)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @mkTuple(%"Tuple[Location/rtct, String/rtct]"* sret %_result, %Location %v1, %String %v2) #2 {
  %_result.addr = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %_result, %"Tuple[Location/rtct, String/rtct]"** %_result.addr
  %v1.addr = alloca %Location
  store %Location %v1, %Location* %v1.addr
  %v2.addr = alloca %String
  store %String %v2, %String* %v2.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location/rtct, String/rtct]"** %_result.addr
  %2 = load %Location* %v1.addr
  %3 = load %String* %v2.addr
  call void @ctor421(%"Tuple[Location/rtct, String/rtct]"* %1, %Location %2, %String %3)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor421(%"Tuple[Location/rtct, String/rtct]"* %"$this", %Location %fv1, %String %fv2) #2 {
  %"$this.addr" = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %"$this", %"Tuple[Location/rtct, String/rtct]"** %"$this.addr"
  %fv1.addr = alloca %Location
  store %Location %fv1, %Location* %fv1.addr
  %fv2.addr = alloca %String
  store %String %fv2, %String* %fv2.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location/rtct, String/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %1, i32 0, i32 0
  call void @ctor168(%Location* %2, %Location* %fv1.addr)
  %3 = load %"Tuple[Location/rtct, String/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %3, i32 0, i32 1
  call void @ctor163(%String* %4, %String* %fv2.addr)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor422(%LocString* %"$this") #2 {
  %"$this.addr" = alloca %LocString*
  store %LocString* %"$this", %LocString** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %LocString** %"$this.addr"
  %2 = getelementptr inbounds %LocString* %1, i32 0, i32 0
  call void @dtor423(%"Tuple[Location/rtct, String/rtct]"* %2)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor423(%"Tuple[Location/rtct, String/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %"$this", %"Tuple[Location/rtct, String/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location/rtct, String/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %1, i32 0, i32 1
  call void @dtor166(%String* %2)
  %3 = load %"Tuple[Location/rtct, String/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %3, i32 0, i32 0
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor424(%"Vector[LocString]"* %"$this", %"Vector[LocString]"* %other) #3 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %other.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %other, %"Vector[LocString]"** %other.addr
  %size = alloca i64
  %"$tmpC" = alloca %"RawPtr[LocString]"
  %"$tmpC1" = alloca %"RawPtr[LocString]"
  %dst = alloca %"RawPtr[LocString]"
  %src = alloca %"RawPtr[LocString]"
  %"$tmpC2" = alloca %"RawPtr[LocString]"
  %"$tmpC3" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 0
  call void @ctor401(%"RawPtr[LocString]"* %2)
  %3 = load %"Vector[LocString]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[LocString]"* %3, i32 0, i32 1
  call void @ctor401(%"RawPtr[LocString]"* %4)
  %5 = load %"Vector[LocString]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[LocString]"* %5, i32 0, i32 2
  call void @ctor401(%"RawPtr[LocString]"* %6)
  %7 = load %"Vector[LocString]"** %other.addr
  %8 = call i64 @size409(%"Vector[LocString]"* %7)
  store i64 %8, i64* %size
  %9 = load %"Vector[LocString]"** %"$this.addr"
  %10 = getelementptr inbounds %"Vector[LocString]"* %9, i32 0, i32 0
  %11 = load i64* %size
  call void @alloc425(%"RawPtr[LocString]"* %"$tmpC", i64 %11)
  %12 = load %"RawPtr[LocString]"* %"$tmpC"
  call void @"=411"(%"RawPtr[LocString]"* %10, %"RawPtr[LocString]" %12)
  %13 = load %"Vector[LocString]"** %"$this.addr"
  %14 = getelementptr inbounds %"Vector[LocString]"* %13, i32 0, i32 1
  %15 = load %"Vector[LocString]"** %"$this.addr"
  %16 = getelementptr inbounds %"Vector[LocString]"* %15, i32 0, i32 0
  %17 = load i64* %size
  call void @advance412(%"RawPtr[LocString]"* %"$tmpC1", %"RawPtr[LocString]"* %16, i64 %17)
  %18 = load %"RawPtr[LocString]"* %"$tmpC1"
  call void @"=411"(%"RawPtr[LocString]"* %14, %"RawPtr[LocString]" %18)
  %19 = load %"Vector[LocString]"** %"$this.addr"
  %20 = getelementptr inbounds %"Vector[LocString]"* %19, i32 0, i32 2
  %21 = load %"Vector[LocString]"** %"$this.addr"
  %22 = getelementptr inbounds %"Vector[LocString]"* %21, i32 0, i32 1
  %23 = load %"RawPtr[LocString]"* %22
  call void @"=411"(%"RawPtr[LocString]"* %20, %"RawPtr[LocString]" %23)
  %24 = load %"Vector[LocString]"** %"$this.addr"
  %25 = getelementptr inbounds %"Vector[LocString]"* %24, i32 0, i32 0
  call void @ctor414(%"RawPtr[LocString]"* %dst, %"RawPtr[LocString]"* %25)
  %26 = load %"Vector[LocString]"** %other.addr
  %27 = getelementptr inbounds %"Vector[LocString]"* %26, i32 0, i32 0
  call void @ctor414(%"RawPtr[LocString]"* %src, %"RawPtr[LocString]"* %27)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %28 = load %"Vector[LocString]"** %"$this.addr"
  %29 = getelementptr inbounds %"Vector[LocString]"* %28, i32 0, i32 1
  %30 = load %"RawPtr[LocString]"* %29
  %31 = call i1 @"==404"(%"RawPtr[LocString]"* %dst, %"RawPtr[LocString]" %30)
  %32 = xor i1 true, %31
  br i1 %32, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %33 = call %LocString* @value418(%"RawPtr[LocString]"* %dst)
  %34 = call %LocString* @value418(%"RawPtr[LocString]"* %src)
  call void @ctor416(%LocString* %33, %LocString* %34)
  call void @advance419(%"RawPtr[LocString]"* %"$tmpC2", %"RawPtr[LocString]"* %dst)
  %35 = load %"RawPtr[LocString]"* %"$tmpC2"
  call void @"=411"(%"RawPtr[LocString]"* %dst, %"RawPtr[LocString]" %35)
  call void @advance419(%"RawPtr[LocString]"* %"$tmpC3", %"RawPtr[LocString]"* %src)
  %36 = load %"RawPtr[LocString]"* %"$tmpC3"
  call void @"=411"(%"RawPtr[LocString]"* %src, %"RawPtr[LocString]" %36)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @alloc425(%"RawPtr[LocString]"* sret %_result, i64 %num) #3 {
  %_result.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %_result, %"RawPtr[LocString]"** %_result.addr
  %num.addr = alloca i64
  store i64 %num, i64* %num.addr
  %res = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  call void @ctor401(%"RawPtr[LocString]"* %res)
  %1 = load i64* %num.addr
  %2 = call i64 @"*"(i64 %1, i64 48)
  %3 = call i8* @malloc(i64 %2)
  %4 = bitcast i8* %3 to %LocString*
  %5 = getelementptr inbounds %"RawPtr[LocString]"* %res, i32 0, i32 0
  store %LocString* %4, %LocString** %5
  %6 = load %"RawPtr[LocString]"** %_result.addr
  call void @ctor414(%"RawPtr[LocString]"* %6, %"RawPtr[LocString]"* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @dtor426(%"Vector[LocString]"* %"$this") #3 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %p = alloca %"RawPtr[LocString]"
  %"$tmpC" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 0
  call void @ctor414(%"RawPtr[LocString]"* %p, %"RawPtr[LocString]"* %2)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %3 = load %"Vector[LocString]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[LocString]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[LocString]"* %4
  %6 = call i1 @"==404"(%"RawPtr[LocString]"* %p, %"RawPtr[LocString]" %5)
  %7 = xor i1 true, %6
  br i1 %7, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %8 = call %LocString* @value418(%"RawPtr[LocString]"* %p)
  call void @dtor422(%LocString* %8)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @advance419(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]"* %p)
  %9 = load %"RawPtr[LocString]"* %"$tmpC"
  call void @"=411"(%"RawPtr[LocString]"* %p, %"RawPtr[LocString]" %9)
  br label %while_block

while_end:                                        ; preds = %while_block
  %10 = load %"Vector[LocString]"** %"$this.addr"
  %11 = getelementptr inbounds %"Vector[LocString]"* %10, i32 0, i32 0
  call void @freePtr427(%"RawPtr[LocString]"* %11)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @freePtr427(%"RawPtr[LocString]"* %"$this") #3 {
  %"$this.addr" = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"RawPtr[LocString]"** %"$this.addr"
  %2 = call i1 @isSet428(%"RawPtr[LocString]"* %1)
  br i1 %2, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %3 = load %"RawPtr[LocString]"** %"$this.addr"
  %4 = call i8* @bytePtr407(%"RawPtr[LocString]"* %3)
  call void @free(i8* %4)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isSet428(%"RawPtr[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[LocString]"* %1, i32 0, i32 0
  %3 = load %LocString** %2
  %4 = bitcast %LocString* %3 to i8*
  %5 = call i1 @implOpRefNE(i8* %4, i8* null)
  ret i1 %5
}

; Function Attrs: inlinehint nounwind
define internal void @createFormals(%"Vector[LocString]"* %ids, %Node %typeNode, %Node %init, i1 %varFormals, %Node* %res) #3 {
  %ids.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %ids, %"Vector[LocString]"** %ids.addr
  %typeNode.addr = alloca %Node
  store %Node %typeNode, %Node* %typeNode.addr
  %init.addr = alloca %Node
  store %Node %init, %Node* %init.addr
  %varFormals.addr = alloca i1
  store i1 %varFormals, i1* %varFormals.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %"$rangeVar" = alloca %"ContiguousMemoryRange[LocString]"
  %id = alloca %LocString*
  %v = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %"$tmpForRef1" = alloca %Node
  %"$rangeVar2" = alloca %"ContiguousMemoryRange[LocString]"
  %id7 = alloca %LocString*
  %p = alloca %Node
  %"$tmpForRef8" = alloca %Node
  %"$tmpC9" = alloca %StringRef
  %"$tmpForRef10" = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load i1* %varFormals.addr
  br i1 %1, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %2 = load %"Vector[LocString]"** %ids.addr
  call void @all429(%"ContiguousMemoryRange[LocString]"* %"$rangeVar", %"Vector[LocString]"* %2)
  br label %while_block

if_else:                                          ; preds = %if_block
  %3 = load %"Vector[LocString]"** %ids.addr
  call void @all429(%"ContiguousMemoryRange[LocString]"* %"$rangeVar2", %"Vector[LocString]"* %3)
  br label %while_block3

if_end:                                           ; preds = %while_end6, %while_end
  ret void

while_block:                                      ; preds = %while_step, %if_then
  %4 = call i1 @isEmpty431(%"ContiguousMemoryRange[LocString]"* %"$rangeVar")
  %5 = xor i1 true, %4
  br i1 %5, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %6 = call %LocString* @front432(%"ContiguousMemoryRange[LocString]"* %"$rangeVar")
  store %LocString* %6, %LocString** %id
  %7 = load %LocString** %id
  %8 = getelementptr inbounds %LocString* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %8, i32 0, i32 0
  %10 = load %LocString** %id
  %11 = getelementptr inbounds %LocString* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %11, i32 0, i32 1
  call void @asStringRef(%StringRef* %"$tmpC", %String* %12)
  %13 = load %StringRef* %"$tmpC"
  %14 = load %Node* %typeNode.addr
  %15 = load %Node* %init.addr
  %16 = call %Node @comp_parser_mkVar(%Location* %9, %StringRef %13, %Node %14, %Node %15)
  store %Node %16, %Node* %"$tmpForRef"
  call void @ctor391(%Node* %v, %Node* %"$tmpForRef")
  %17 = load %Node** %res.addr
  %18 = load %Node** %res.addr
  %19 = load %Node* %18
  %20 = load %Node* %v
  %21 = call %Node @comp_parser_addToNodeList(%Node %19, %Node %20)
  store %Node %21, %Node* %"$tmpForRef1"
  call void @"=393"(%Node* %17, %Node* %"$tmpForRef1")
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @popFront433(%"ContiguousMemoryRange[LocString]"* %"$rangeVar")
  br label %while_block

while_end:                                        ; preds = %while_block
  br label %if_end

while_block3:                                     ; preds = %while_step5, %if_else
  %22 = call i1 @isEmpty431(%"ContiguousMemoryRange[LocString]"* %"$rangeVar2")
  %23 = xor i1 true, %22
  br i1 %23, label %while_body4, label %while_end6

while_body4:                                      ; preds = %while_block3
  %24 = call %LocString* @front432(%"ContiguousMemoryRange[LocString]"* %"$rangeVar2")
  store %LocString* %24, %LocString** %id7
  %25 = load %LocString** %id7
  %26 = getelementptr inbounds %LocString* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %26, i32 0, i32 0
  %28 = load %LocString** %id7
  %29 = getelementptr inbounds %LocString* %28, i32 0, i32 0
  %30 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %29, i32 0, i32 1
  call void @asStringRef(%StringRef* %"$tmpC9", %String* %30)
  %31 = load %StringRef* %"$tmpC9"
  %32 = load %Node* %typeNode.addr
  %33 = load %Node* %init.addr
  %34 = call %Node @comp_parser_mkParameter(%Location* %27, %StringRef %31, %Node %32, %Node %33)
  store %Node %34, %Node* %"$tmpForRef8"
  call void @ctor391(%Node* %p, %Node* %"$tmpForRef8")
  %35 = load %Node** %res.addr
  %36 = load %Node** %res.addr
  %37 = load %Node* %36
  %38 = load %Node* %p
  %39 = call %Node @comp_parser_addToNodeList(%Node %37, %Node %38)
  store %Node %39, %Node* %"$tmpForRef10"
  call void @"=393"(%Node* %35, %Node* %"$tmpForRef10")
  br label %while_step5

while_step5:                                      ; preds = %while_body4
  call void @popFront433(%"ContiguousMemoryRange[LocString]"* %"$rangeVar2")
  br label %while_block3

while_end6:                                       ; preds = %while_block3
  br label %if_end
}

; Function Attrs: alwaysinline nounwind
define internal void @all429(%"ContiguousMemoryRange[LocString]"* sret %_result, %"Vector[LocString]"* %"$this") #2 {
  %_result.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %_result, %"ContiguousMemoryRange[LocString]"** %_result.addr
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %_result.addr
  %2 = load %"Vector[LocString]"** %"$this.addr"
  %3 = getelementptr inbounds %"Vector[LocString]"* %2, i32 0, i32 0
  %4 = load %"RawPtr[LocString]"* %3
  %5 = load %"Vector[LocString]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[LocString]"* %5, i32 0, i32 1
  %7 = load %"RawPtr[LocString]"* %6
  call void @ctor430(%"ContiguousMemoryRange[LocString]"* %1, %"RawPtr[LocString]" %4, %"RawPtr[LocString]" %7)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor430(%"ContiguousMemoryRange[LocString]"* %"$this", %"RawPtr[LocString]" %begin, %"RawPtr[LocString]" %end) #3 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %"$this", %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %begin.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %begin, %"RawPtr[LocString]"* %begin.addr
  %end.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %end, %"RawPtr[LocString]"* %end.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 0
  call void @ctor414(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]"* %begin.addr)
  %3 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %3, i32 0, i32 1
  call void @ctor414(%"RawPtr[LocString]"* %4, %"RawPtr[LocString]"* %end.addr)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isEmpty431(%"ContiguousMemoryRange[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %"$this", %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[LocString]"* %4
  %6 = call i64 @diff406(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]" %5)
  %7 = call i1 @"<=159"(i64 %6, i32 0)
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal %LocString* @front432(%"ContiguousMemoryRange[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %"$this", %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 0
  %3 = call %LocString* @value418(%"RawPtr[LocString]"* %2)
  ret %LocString* %3
}

declare %Node @comp_parser_mkVar(%Location*, %StringRef, %Node, %Node)

; Function Attrs: alwaysinline nounwind
define internal void @popFront433(%"ContiguousMemoryRange[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %"$this", %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %3, i32 0, i32 0
  call void @advance419(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]"* %4)
  %5 = load %"RawPtr[LocString]"* %"$tmpC"
  call void @"=411"(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]" %5)
  ret void
}

declare %Node @comp_parser_mkParameter(%Location*, %StringRef, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal void @parseTypeNode(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %tmp.v = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 32)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %Node** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %4, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i1 false)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %6 = load %Node** %_result.addr
  call void @ctor396(%Node* %6)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseFunBody(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %tmp.v = alloca %TokenType
  %res = alloca %Node
  %"$tmpC" = alloca %String
  %const.bytes = alloca [26 x i8]
  %const.struct = alloca %StringRef
  %"$tmpC4" = alloca %Token
  %const.bytes5 = alloca [28 x i8]
  %const.struct6 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 33)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %Node** %_result.addr
  call void @ctor396(%Node* %4)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  call void @ctor396(%Node* %res)
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %6 = call i1 @parseBlockStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %Node* %res, i1 false)
  %7 = xor i1 true, %6
  br i1 %7, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  store [26 x i8] c"Syntax error, unexpected \00", [26 x i8]* %const.bytes
  %9 = getelementptr inbounds [26 x i8]* %const.bytes, i32 0, i32 0
  %10 = getelementptr inbounds [26 x i8]* %const.bytes, i32 0, i32 25
  %11 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %12 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %9, i8** %11
  store i8* %10, i8** %12
  %13 = load %StringRef* %const.struct
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %15 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i32 0, i32 0
  call void @"pre_*382"(%Token* %"$tmpC4", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %15)
  %16 = getelementptr inbounds %Token* %"$tmpC4", i32 0, i32 1
  %17 = load %TokenType* %16
  store [28 x i8] c", expecting block statement\00", [28 x i8]* %const.bytes5
  %18 = getelementptr inbounds [28 x i8]* %const.bytes5, i32 0, i32 0
  %19 = getelementptr inbounds [28 x i8]* %const.bytes5, i32 0, i32 27
  %20 = getelementptr inbounds %StringRef* %const.struct6, i32 0, i32 0
  %21 = getelementptr inbounds %StringRef* %const.struct6, i32 0, i32 1
  store i8* %18, i8** %20
  store i8* %19, i8** %21
  %22 = load %StringRef* %const.struct6
  call void @toString435(%String* %"$tmpC", %StringRef %13, %TokenType %17, %StringRef %22)
  call void @reportError386(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %String* %"$tmpC")
  call void @dtor166(%String* %"$tmpC")
  call void @dtor299(%Token* %"$tmpC4")
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %23 = load %Node** %_result.addr
  call void @ctor391(%Node* %23, %Node* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @parseBlockStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %Node* %res, i1 %topLevel) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %topLevel.addr = alloca i1
  store i1 %topLevel, i1* %topLevel.addr
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %tmp.v1 = alloca %Node
  %tmp.v2 = alloca %TokenType
  %s = alloca %Node
  %"$tmpForRef" = alloca %Node
  %tmp.v6 = alloca %TokenType
  %"$tmpForRef10" = alloca %Node
  %"$tmpC" = alloca %Location
  %"$tmpC11" = alloca %Location
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  br label %if_block

if_block:                                         ; preds = %code
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 26)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %Node** %res.addr
  call void @ctor396(%Node* %tmp.v1)
  call void @"=393"(%Node* %5, %Node* %tmp.v1)
  br label %while_block

if_end:                                           ; preds = %dumy_block12, %if_block
  ret i1 false

while_block:                                      ; preds = %while_step, %if_then
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v2, i32 27)
  %7 = load %TokenType* %tmp.v2
  %8 = call i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  %9 = xor i1 true, %8
  br i1 %9, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %11 = load i1* %topLevel.addr
  call void @parseStmt(%Node* %s, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, i1 %11)
  br label %if_block3

while_step:                                       ; preds = %if_end5
  br label %while_block

while_end:                                        ; preds = %if_else, %cond.end
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v6, i32 27)
  %13 = load %TokenType* %tmp.v6
  %14 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, %TokenType %13)
  br label %if_block7

cond.true:                                        ; preds = %while_block
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %16 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, i32 0, i32 2
  %17 = load i1* %16
  %18 = xor i1 true, %17
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %18, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end

if_block3:                                        ; preds = %while_body
  %19 = load %Node* %s
  %20 = call i1 @isSet434(%Node %19)
  br i1 %20, label %if_then4, label %if_else

if_then4:                                         ; preds = %if_block3
  %21 = load %Node** %res.addr
  %22 = load %Node** %res.addr
  %23 = load %Node* %22
  %24 = load %Node* %s
  %25 = call %Node @comp_parser_addToNodeList(%Node %23, %Node %24)
  store %Node %25, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %21, %Node* %"$tmpForRef")
  br label %if_end5

if_else:                                          ; preds = %if_block3
  br label %while_end

if_end5:                                          ; preds = %dumy_block, %if_then4
  br label %while_step

dumy_block:                                       ; No predecessors!
  br label %if_end5

if_block7:                                        ; preds = %while_end
  %26 = load i1* %topLevel.addr
  %27 = xor i1 true, %26
  br i1 %27, label %if_then8, label %if_end9

if_then8:                                         ; preds = %if_block7
  %28 = load %Node** %res.addr
  %29 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @lastLoc(%Location* %"$tmpC11", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %29)
  call void @span(%Location* %"$tmpC", %Location* %loc, %Location* %"$tmpC11")
  %30 = load %Node** %res.addr
  %31 = load %Node* %30
  %32 = call %Node @comp_parser_mkBlockStmt(%Location* %"$tmpC", %Node %31)
  store %Node %32, %Node* %"$tmpForRef10"
  call void @"=393"(%Node* %28, %Node* %"$tmpForRef10")
  br label %if_end9

if_end9:                                          ; preds = %if_then8, %if_block7
  ret i1 true

dumy_block12:                                     ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i1 @isSet434(%Node %n) #3 {
  %n.addr = alloca %Node
  store %Node %n, %Node* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %Node* %n.addr, i32 0, i32 0
  %2 = getelementptr inbounds %UntypedPtr* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = call i1 @implOpRefNE(i8* %3, i8* null)
  ret i1 %4
}

declare %Node @comp_parser_mkBlockStmt(%Location*, %Node)

; Function Attrs: inlinehint nounwind
define internal void @toString435(%String* sret %_result, %StringRef %a1, %TokenType %a2, %StringRef %a3) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %a1.addr = alloca %StringRef
  store %StringRef %a1, %StringRef* %a1.addr
  %a2.addr = alloca %TokenType
  store %TokenType %a2, %TokenType* %a2.addr
  %a3.addr = alloca %StringRef
  store %StringRef %a3, %StringRef* %a3.addr
  %s = alloca %StringOutputStream
  br label %code

code:                                             ; preds = %0
  call void @ctor142(%StringOutputStream* %s)
  %1 = call %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %a1.addr)
  %2 = call %StringOutputStream* @"<<388"(%StringOutputStream* %1, %TokenType* %a2.addr)
  %3 = call %StringOutputStream* @"<<"(%StringOutputStream* %2, %StringRef* %a3.addr)
  %4 = load %String** %_result.addr
  %5 = getelementptr inbounds %StringOutputStream* %s, i32 0, i32 0
  call void @ctor163(%String* %4, %String* %5)
  call void @dtor165(%StringOutputStream* %s)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor165(%StringOutputStream* %s)
  ret void
}

declare %Node @comp_parser_mkLambdaExpr(%Location*, %Node, %Node, %Node, %Node, %Node)

declare %Node @comp_parser_mkParenthesisExpr(%Node)

declare %Node @comp_parser_mkThisExpr(%Location*)

declare %Node @comp_parser_mkNullLiteral(%Location*)

declare %Node @comp_parser_mkBoolLiteral(%Location*, i1)

declare %Node @comp_parser_mkIntLiteral(%Location*, i32)

declare %Node @comp_parser_mkUIntLiteral(%Location*, i32)

declare %Node @comp_parser_mkLongLiteral(%Location*, i64)

declare %Node @comp_parser_mkULongLiteral(%Location*, i64)

declare %Node @comp_parser_mkFloatLiteral(%Location*, float)

declare %Node @comp_parser_mkDoubleLiteral(%Location*, double)

declare %Node @comp_parser_mkCharLiteral(%Location*, i8)

; Function Attrs: alwaysinline nounwind
define internal i8* @"()436"(%String* %"$this", i64 %index) #2 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  %2 = getelementptr inbounds %String* %1, i32 0, i32 0
  %3 = load i64* %index.addr
  store i64 %3, i64* %tmp.v
  %4 = load i64* %tmp.v
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %2, i64 %4)
  %5 = call i8* @value(%"RawPtr[Char/rtct]"* %"$tmpC")
  ret i8* %5
}

declare %Node @comp_parser_mkStringLiteral(%Location*, %StringRef)

; Function Attrs: inlinehint nounwind
define internal i1 @isNull(%Node %n) #3 {
  %n.addr = alloca %Node
  store %Node %n, %Node* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %Node* %n.addr, i32 0, i32 0
  %2 = getelementptr inbounds %UntypedPtr* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = call i1 @implOpRefEQ(i8* %3, i8* null)
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal void @parseExprListOpt(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res = alloca %Node
  %expr = alloca %Node
  %"$tmpForRef" = alloca %Node
  %tmp.v = alloca %TokenType
  %"$tmpC" = alloca %Node
  %"$tmpForRef1" = alloca %Node
  br label %code

code:                                             ; preds = %0
  call void @ctor396(%Node* %res)
  call void @ctor396(%Node* %expr)
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %2 = call i1 @parseExprOpt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %Node* %expr, i1 false)
  %3 = xor i1 true, %2
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %Node** %_result.addr
  call void @ctor391(%Node* %4, %Node* %res)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %Node* %res
  %6 = load %Node* %expr
  %7 = call %Node @comp_parser_addToNodeList(%Node %5, %Node %6)
  store %Node %7, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef")
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 34)
  %9 = load %TokenType* %tmp.v
  %10 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %TokenType %9)
  br i1 %10, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, i1 true)
  call void @"=393"(%Node* %expr, %Node* %"$tmpC")
  %12 = load %Node* %res
  %13 = load %Node* %expr
  %14 = call %Node @comp_parser_addToNodeList(%Node %12, %Node %13)
  store %Node %14, %Node* %"$tmpForRef1"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef1")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %15 = load %Node** %_result.addr
  call void @ctor391(%Node* %15, %Node* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @parseExprOpt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %Node* %res, i1 %allowSemicolons) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %allowSemicolons.addr = alloca i1
  store i1 %allowSemicolons, i1* %allowSemicolons.addr
  %"$tmpC" = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %2 = call i1 @nextIsExpr(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i1 true)
  br i1 %2, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %3 = load %Node** %res.addr
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i1 true)
  call void @"=393"(%Node* %3, %Node* %"$tmpC")
  br label %if_block1

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

if_block1:                                        ; preds = %if_then
  %5 = load i1* %allowSemicolons.addr
  br i1 %5, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @consumeSemis(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6)
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  ret i1 true

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i1 @nextIsExpr(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, i1 %withEqual) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %t = alloca %TokenType
  %"$tmpC" = alloca %Token
  %tmp.v = alloca %TokenType
  %tmp.v43 = alloca %TokenType
  %tmp.v44 = alloca %TokenType
  %tmp.v45 = alloca %TokenType
  %tmp.v47 = alloca %TokenType
  %tmp.v49 = alloca %TokenType
  %tmp.v51 = alloca %TokenType
  %tmp.v53 = alloca %TokenType
  %tmp.v55 = alloca %TokenType
  %tmp.v57 = alloca %TokenType
  %tmp.v59 = alloca %TokenType
  %tmp.v61 = alloca %TokenType
  %tmp.v63 = alloca %TokenType
  %tmp.v65 = alloca %TokenType
  %tmp.v67 = alloca %TokenType
  %tmp.v69 = alloca %TokenType
  %tmp.v71 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @"pre_*382"(%Token* %"$tmpC", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2)
  %3 = getelementptr inbounds %Token* %"$tmpC", i32 0, i32 1
  call void @ctor218(%TokenType* %t, %TokenType* %3)
  call void @dtor299(%Token* %"$tmpC")
  br label %if_block

if_block:                                         ; preds = %code
  call void @ctor229(%TokenType* %tmp.v, i32 37)
  %4 = call i1 @"==227"(%TokenType* %t, %TokenType* %tmp.v)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load i1* %withEqual.addr
  ret i1 %5

if_end:                                           ; preds = %dumy_block, %if_block
  call void @ctor229(%TokenType* %tmp.v43, i32 38)
  %6 = call i1 @"==227"(%TokenType* %t, %TokenType* %tmp.v43)
  br i1 %6, label %cond.true40, label %cond.false41

dumy_block:                                       ; No predecessors!
  br label %if_end

cond.true:                                        ; preds = %cond.end3
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  call void @ctor229(%TokenType* %tmp.v71, i32 47)
  %7 = call i1 @"==227"(%TokenType* %t, %TokenType* %tmp.v71)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res72 = phi i1 [ true, %cond.true ], [ %7, %cond.false ]
  br i1 %cond.res70, label %cond_destruct_alt1, label %cond_destruct_alt2

cond.true1:                                       ; preds = %cond.end6
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  call void @ctor229(%TokenType* %tmp.v69, i32 46)
  %8 = call i1 @"==227"(%TokenType* %t, %TokenType* %tmp.v69)
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res70 = phi i1 [ true, %cond.true1 ], [ %8, %cond.false2 ]
  br i1 %cond.res70, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %cond.end9
  br label %cond.end6

cond.false5:                                      ; preds = %cond.end9
  call void @ctor229(%TokenType* %tmp.v67, i32 45)
  %9 = call i1 @"==227"(%TokenType* %t, %TokenType* %tmp.v67)
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res68 = phi i1 [ true, %cond.true4 ], [ %9, %cond.false5 ]
  br i1 %cond.res68, label %cond.true1, label %cond.false2

cond.true7:                                       ; preds = %cond.end12
  br label %cond.end9

cond.false8:                                      ; preds = %cond.end12
  call void @ctor229(%TokenType* %tmp.v65, i32 44)
  %10 = call i1 @"==227"(%TokenType* %t, %TokenType* %tmp.v65)
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res66 = phi i1 [ true, %cond.true7 ], [ %10, %cond.false8 ]
  br i1 %cond.res66, label %cond.true4, label %cond.false5

cond.true10:                                      ; preds = %cond.end15
  br label %cond.end12

cond.false11:                                     ; preds = %cond.end15
  call void @ctor229(%TokenType* %tmp.v63, i32 43)
  %11 = call i1 @"==227"(%TokenType* %t, %TokenType* %tmp.v63)
  br label %cond.end12

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond.res64 = phi i1 [ true, %cond.true10 ], [ %11, %cond.false11 ]
  br i1 %cond.res64, label %cond.true7, label %cond.false8

cond.true13:                                      ; preds = %cond.end18
  br label %cond.end15

cond.false14:                                     ; preds = %cond.end18
  call void @ctor229(%TokenType* %tmp.v61, i32 42)
  %12 = call i1 @"==227"(%TokenType* %t, %TokenType* %tmp.v61)
  br label %cond.end15

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond.res62 = phi i1 [ true, %cond.true13 ], [ %12, %cond.false14 ]
  br i1 %cond.res62, label %cond.true10, label %cond.false11

cond.true16:                                      ; preds = %cond.end21
  br label %cond.end18

cond.false17:                                     ; preds = %cond.end21
  call void @ctor229(%TokenType* %tmp.v59, i32 41)
  %13 = call i1 @"==227"(%TokenType* %t, %TokenType* %tmp.v59)
  br label %cond.end18

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond.res60 = phi i1 [ true, %cond.true16 ], [ %13, %cond.false17 ]
  br i1 %cond.res60, label %cond.true13, label %cond.false14

cond.true19:                                      ; preds = %cond.end24
  br label %cond.end21

cond.false20:                                     ; preds = %cond.end24
  call void @ctor229(%TokenType* %tmp.v57, i32 40)
  %14 = call i1 @"==227"(%TokenType* %t, %TokenType* %tmp.v57)
  br label %cond.end21

cond.end21:                                       ; preds = %cond.false20, %cond.true19
  %cond.res58 = phi i1 [ true, %cond.true19 ], [ %14, %cond.false20 ]
  br i1 %cond.res58, label %cond.true16, label %cond.false17

cond.true22:                                      ; preds = %cond.end27
  br label %cond.end24

cond.false23:                                     ; preds = %cond.end27
  call void @ctor229(%TokenType* %tmp.v55, i32 21)
  %15 = call i1 @"==227"(%TokenType* %t, %TokenType* %tmp.v55)
  br label %cond.end24

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond.res56 = phi i1 [ true, %cond.true22 ], [ %15, %cond.false23 ]
  br i1 %cond.res56, label %cond.true19, label %cond.false20

cond.true25:                                      ; preds = %cond.end30
  br label %cond.end27

cond.false26:                                     ; preds = %cond.end30
  call void @ctor229(%TokenType* %tmp.v53, i32 24)
  %16 = call i1 @"==227"(%TokenType* %t, %TokenType* %tmp.v53)
  br label %cond.end27

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond.res54 = phi i1 [ true, %cond.true25 ], [ %16, %cond.false26 ]
  br i1 %cond.res54, label %cond.true22, label %cond.false23

cond.true28:                                      ; preds = %cond.end33
  br label %cond.end30

cond.false29:                                     ; preds = %cond.end33
  call void @ctor229(%TokenType* %tmp.v51, i32 22)
  %17 = call i1 @"==227"(%TokenType* %t, %TokenType* %tmp.v51)
  br label %cond.end30

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond.res52 = phi i1 [ true, %cond.true28 ], [ %17, %cond.false29 ]
  br i1 %cond.res52, label %cond.true25, label %cond.false26

cond.true31:                                      ; preds = %cond.end36
  br label %cond.end33

cond.false32:                                     ; preds = %cond.end36
  call void @ctor229(%TokenType* %tmp.v49, i32 23)
  %18 = call i1 @"==227"(%TokenType* %t, %TokenType* %tmp.v49)
  br label %cond.end33

cond.end33:                                       ; preds = %cond.false32, %cond.true31
  %cond.res50 = phi i1 [ true, %cond.true31 ], [ %18, %cond.false32 ]
  br i1 %cond.res50, label %cond.true28, label %cond.false29

cond.true34:                                      ; preds = %cond.end39
  br label %cond.end36

cond.false35:                                     ; preds = %cond.end39
  call void @ctor229(%TokenType* %tmp.v47, i32 30)
  %19 = call i1 @"==227"(%TokenType* %t, %TokenType* %tmp.v47)
  br label %cond.end36

cond.end36:                                       ; preds = %cond.false35, %cond.true34
  %cond.res48 = phi i1 [ true, %cond.true34 ], [ %19, %cond.false35 ]
  br i1 %cond.res48, label %cond.true31, label %cond.false32

cond.true37:                                      ; preds = %cond.end42
  br label %cond.end39

cond.false38:                                     ; preds = %cond.end42
  call void @ctor229(%TokenType* %tmp.v45, i32 36)
  %20 = call i1 @"==227"(%TokenType* %t, %TokenType* %tmp.v45)
  br label %cond.end39

cond.end39:                                       ; preds = %cond.false38, %cond.true37
  %cond.res46 = phi i1 [ true, %cond.true37 ], [ %20, %cond.false38 ]
  br i1 %cond.res46, label %cond.true34, label %cond.false35

cond.true40:                                      ; preds = %if_end
  br label %cond.end42

cond.false41:                                     ; preds = %if_end
  call void @ctor229(%TokenType* %tmp.v44, i32 39)
  %21 = call i1 @"==227"(%TokenType* %t, %TokenType* %tmp.v44)
  br label %cond.end42

cond.end42:                                       ; preds = %cond.false41, %cond.true40
  %cond.res = phi i1 [ true, %cond.true40 ], [ %21, %cond.false41 ]
  br i1 %cond.res, label %cond.true37, label %cond.false38

cond_destruct_alt1:                               ; preds = %cond.end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %cond.end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  br i1 %cond.res68, label %cond_destruct_alt173, label %cond_destruct_alt274

cond_destruct_alt173:                             ; preds = %cond_destruct_end
  br label %cond_destruct_end75

cond_destruct_alt274:                             ; preds = %cond_destruct_end
  br label %cond_destruct_end75

cond_destruct_end75:                              ; preds = %cond_destruct_alt274, %cond_destruct_alt173
  br i1 %cond.res66, label %cond_destruct_alt176, label %cond_destruct_alt277

cond_destruct_alt176:                             ; preds = %cond_destruct_end75
  br label %cond_destruct_end78

cond_destruct_alt277:                             ; preds = %cond_destruct_end75
  br label %cond_destruct_end78

cond_destruct_end78:                              ; preds = %cond_destruct_alt277, %cond_destruct_alt176
  br i1 %cond.res64, label %cond_destruct_alt179, label %cond_destruct_alt280

cond_destruct_alt179:                             ; preds = %cond_destruct_end78
  br label %cond_destruct_end81

cond_destruct_alt280:                             ; preds = %cond_destruct_end78
  br label %cond_destruct_end81

cond_destruct_end81:                              ; preds = %cond_destruct_alt280, %cond_destruct_alt179
  br i1 %cond.res62, label %cond_destruct_alt182, label %cond_destruct_alt283

cond_destruct_alt182:                             ; preds = %cond_destruct_end81
  br label %cond_destruct_end84

cond_destruct_alt283:                             ; preds = %cond_destruct_end81
  br label %cond_destruct_end84

cond_destruct_end84:                              ; preds = %cond_destruct_alt283, %cond_destruct_alt182
  br i1 %cond.res60, label %cond_destruct_alt185, label %cond_destruct_alt286

cond_destruct_alt185:                             ; preds = %cond_destruct_end84
  br label %cond_destruct_end87

cond_destruct_alt286:                             ; preds = %cond_destruct_end84
  br label %cond_destruct_end87

cond_destruct_end87:                              ; preds = %cond_destruct_alt286, %cond_destruct_alt185
  br i1 %cond.res58, label %cond_destruct_alt188, label %cond_destruct_alt289

cond_destruct_alt188:                             ; preds = %cond_destruct_end87
  br label %cond_destruct_end90

cond_destruct_alt289:                             ; preds = %cond_destruct_end87
  br label %cond_destruct_end90

cond_destruct_end90:                              ; preds = %cond_destruct_alt289, %cond_destruct_alt188
  br i1 %cond.res56, label %cond_destruct_alt191, label %cond_destruct_alt292

cond_destruct_alt191:                             ; preds = %cond_destruct_end90
  br label %cond_destruct_end93

cond_destruct_alt292:                             ; preds = %cond_destruct_end90
  br label %cond_destruct_end93

cond_destruct_end93:                              ; preds = %cond_destruct_alt292, %cond_destruct_alt191
  br i1 %cond.res54, label %cond_destruct_alt194, label %cond_destruct_alt295

cond_destruct_alt194:                             ; preds = %cond_destruct_end93
  br label %cond_destruct_end96

cond_destruct_alt295:                             ; preds = %cond_destruct_end93
  br label %cond_destruct_end96

cond_destruct_end96:                              ; preds = %cond_destruct_alt295, %cond_destruct_alt194
  br i1 %cond.res52, label %cond_destruct_alt197, label %cond_destruct_alt298

cond_destruct_alt197:                             ; preds = %cond_destruct_end96
  br label %cond_destruct_end99

cond_destruct_alt298:                             ; preds = %cond_destruct_end96
  br label %cond_destruct_end99

cond_destruct_end99:                              ; preds = %cond_destruct_alt298, %cond_destruct_alt197
  br i1 %cond.res50, label %cond_destruct_alt1100, label %cond_destruct_alt2101

cond_destruct_alt1100:                            ; preds = %cond_destruct_end99
  br label %cond_destruct_end102

cond_destruct_alt2101:                            ; preds = %cond_destruct_end99
  br label %cond_destruct_end102

cond_destruct_end102:                             ; preds = %cond_destruct_alt2101, %cond_destruct_alt1100
  br i1 %cond.res48, label %cond_destruct_alt1103, label %cond_destruct_alt2104

cond_destruct_alt1103:                            ; preds = %cond_destruct_end102
  br label %cond_destruct_end105

cond_destruct_alt2104:                            ; preds = %cond_destruct_end102
  br label %cond_destruct_end105

cond_destruct_end105:                             ; preds = %cond_destruct_alt2104, %cond_destruct_alt1103
  br i1 %cond.res46, label %cond_destruct_alt1106, label %cond_destruct_alt2107

cond_destruct_alt1106:                            ; preds = %cond_destruct_end105
  br label %cond_destruct_end108

cond_destruct_alt2107:                            ; preds = %cond_destruct_end105
  br label %cond_destruct_end108

cond_destruct_end108:                             ; preds = %cond_destruct_alt2107, %cond_destruct_alt1106
  br i1 %cond.res, label %cond_destruct_alt1109, label %cond_destruct_alt2110

cond_destruct_alt1109:                            ; preds = %cond_destruct_end108
  br label %cond_destruct_end111

cond_destruct_alt2110:                            ; preds = %cond_destruct_end108
  br label %cond_destruct_end111

cond_destruct_end111:                             ; preds = %cond_destruct_alt2110, %cond_destruct_alt1109
  br i1 %6, label %cond_destruct_alt1112, label %cond_destruct_alt2113

cond_destruct_alt1112:                            ; preds = %cond_destruct_end111
  br label %cond_destruct_end114

cond_destruct_alt2113:                            ; preds = %cond_destruct_end111
  br label %cond_destruct_end114

cond_destruct_end114:                             ; preds = %cond_destruct_alt2113, %cond_destruct_alt1112
  ret i1 %cond.res72

cond_destruct_alt1115:                            ; preds = %dumy_block118
  br label %cond_destruct_end117

cond_destruct_alt2116:                            ; preds = %dumy_block118
  br label %cond_destruct_end117

cond_destruct_end117:                             ; preds = %cond_destruct_alt2116, %cond_destruct_alt1115
  br i1 %cond.res68, label %cond_destruct_alt1119, label %cond_destruct_alt2120

dumy_block118:                                    ; No predecessors!
  br i1 %cond.res70, label %cond_destruct_alt1115, label %cond_destruct_alt2116

cond_destruct_alt1119:                            ; preds = %cond_destruct_end117
  br label %cond_destruct_end121

cond_destruct_alt2120:                            ; preds = %cond_destruct_end117
  br label %cond_destruct_end121

cond_destruct_end121:                             ; preds = %cond_destruct_alt2120, %cond_destruct_alt1119
  br i1 %cond.res66, label %cond_destruct_alt1122, label %cond_destruct_alt2123

cond_destruct_alt1122:                            ; preds = %cond_destruct_end121
  br label %cond_destruct_end124

cond_destruct_alt2123:                            ; preds = %cond_destruct_end121
  br label %cond_destruct_end124

cond_destruct_end124:                             ; preds = %cond_destruct_alt2123, %cond_destruct_alt1122
  br i1 %cond.res64, label %cond_destruct_alt1125, label %cond_destruct_alt2126

cond_destruct_alt1125:                            ; preds = %cond_destruct_end124
  br label %cond_destruct_end127

cond_destruct_alt2126:                            ; preds = %cond_destruct_end124
  br label %cond_destruct_end127

cond_destruct_end127:                             ; preds = %cond_destruct_alt2126, %cond_destruct_alt1125
  br i1 %cond.res62, label %cond_destruct_alt1128, label %cond_destruct_alt2129

cond_destruct_alt1128:                            ; preds = %cond_destruct_end127
  br label %cond_destruct_end130

cond_destruct_alt2129:                            ; preds = %cond_destruct_end127
  br label %cond_destruct_end130

cond_destruct_end130:                             ; preds = %cond_destruct_alt2129, %cond_destruct_alt1128
  br i1 %cond.res60, label %cond_destruct_alt1131, label %cond_destruct_alt2132

cond_destruct_alt1131:                            ; preds = %cond_destruct_end130
  br label %cond_destruct_end133

cond_destruct_alt2132:                            ; preds = %cond_destruct_end130
  br label %cond_destruct_end133

cond_destruct_end133:                             ; preds = %cond_destruct_alt2132, %cond_destruct_alt1131
  br i1 %cond.res58, label %cond_destruct_alt1134, label %cond_destruct_alt2135

cond_destruct_alt1134:                            ; preds = %cond_destruct_end133
  br label %cond_destruct_end136

cond_destruct_alt2135:                            ; preds = %cond_destruct_end133
  br label %cond_destruct_end136

cond_destruct_end136:                             ; preds = %cond_destruct_alt2135, %cond_destruct_alt1134
  br i1 %cond.res56, label %cond_destruct_alt1137, label %cond_destruct_alt2138

cond_destruct_alt1137:                            ; preds = %cond_destruct_end136
  br label %cond_destruct_end139

cond_destruct_alt2138:                            ; preds = %cond_destruct_end136
  br label %cond_destruct_end139

cond_destruct_end139:                             ; preds = %cond_destruct_alt2138, %cond_destruct_alt1137
  br i1 %cond.res54, label %cond_destruct_alt1140, label %cond_destruct_alt2141

cond_destruct_alt1140:                            ; preds = %cond_destruct_end139
  br label %cond_destruct_end142

cond_destruct_alt2141:                            ; preds = %cond_destruct_end139
  br label %cond_destruct_end142

cond_destruct_end142:                             ; preds = %cond_destruct_alt2141, %cond_destruct_alt1140
  br i1 %cond.res52, label %cond_destruct_alt1143, label %cond_destruct_alt2144

cond_destruct_alt1143:                            ; preds = %cond_destruct_end142
  br label %cond_destruct_end145

cond_destruct_alt2144:                            ; preds = %cond_destruct_end142
  br label %cond_destruct_end145

cond_destruct_end145:                             ; preds = %cond_destruct_alt2144, %cond_destruct_alt1143
  br i1 %cond.res50, label %cond_destruct_alt1146, label %cond_destruct_alt2147

cond_destruct_alt1146:                            ; preds = %cond_destruct_end145
  br label %cond_destruct_end148

cond_destruct_alt2147:                            ; preds = %cond_destruct_end145
  br label %cond_destruct_end148

cond_destruct_end148:                             ; preds = %cond_destruct_alt2147, %cond_destruct_alt1146
  br i1 %cond.res48, label %cond_destruct_alt1149, label %cond_destruct_alt2150

cond_destruct_alt1149:                            ; preds = %cond_destruct_end148
  br label %cond_destruct_end151

cond_destruct_alt2150:                            ; preds = %cond_destruct_end148
  br label %cond_destruct_end151

cond_destruct_end151:                             ; preds = %cond_destruct_alt2150, %cond_destruct_alt1149
  br i1 %cond.res46, label %cond_destruct_alt1152, label %cond_destruct_alt2153

cond_destruct_alt1152:                            ; preds = %cond_destruct_end151
  br label %cond_destruct_end154

cond_destruct_alt2153:                            ; preds = %cond_destruct_end151
  br label %cond_destruct_end154

cond_destruct_end154:                             ; preds = %cond_destruct_alt2153, %cond_destruct_alt1152
  br i1 %cond.res, label %cond_destruct_alt1155, label %cond_destruct_alt2156

cond_destruct_alt1155:                            ; preds = %cond_destruct_end154
  br label %cond_destruct_end157

cond_destruct_alt2156:                            ; preds = %cond_destruct_end154
  br label %cond_destruct_end157

cond_destruct_end157:                             ; preds = %cond_destruct_alt2156, %cond_destruct_alt1155
  br i1 %6, label %cond_destruct_alt1158, label %cond_destruct_alt2159

cond_destruct_alt1158:                            ; preds = %cond_destruct_end157
  br label %cond_destruct_end160

cond_destruct_alt2159:                            ; preds = %cond_destruct_end157
  br label %cond_destruct_end160

cond_destruct_end160:                             ; preds = %cond_destruct_alt2159, %cond_destruct_alt1158
  unreachable
}

declare %Node @comp_parser_mkFunAppExpr(%Location*, %Node, %Node)

declare %Node @comp_parser_mkDotExpr(%Location*, %Node, %StringRef)

; Function Attrs: inlinehint nounwind
define internal void @parseIdOrOper(%String* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, i1 %withEqual) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %tmp.v = alloca %TokenType
  %tmp.v5 = alloca %TokenType
  %tmp.v10 = alloca %TokenType
  %"$tmpForRef" = alloca %StringRef
  %const.bytes = alloca [2 x i8]
  %const.struct = alloca %StringRef
  %"$tmpC" = alloca %String
  %const.bytes15 = alloca [26 x i8]
  %const.struct16 = alloca %StringRef
  %"$tmpC17" = alloca %Token
  %const.bytes18 = alloca [35 x i8]
  %const.struct19 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 38)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %4 = load %String** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 2
  call void @ctor163(%String* %4, %String* %7)
  ret void

if_else:                                          ; preds = %if_block
  br label %if_block1

if_end:                                           ; preds = %if_end4, %dumy_block
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  store [26 x i8] c"Syntax error, unexpected \00", [26 x i8]* %const.bytes15
  %9 = getelementptr inbounds [26 x i8]* %const.bytes15, i32 0, i32 0
  %10 = getelementptr inbounds [26 x i8]* %const.bytes15, i32 0, i32 25
  %11 = getelementptr inbounds %StringRef* %const.struct16, i32 0, i32 0
  %12 = getelementptr inbounds %StringRef* %const.struct16, i32 0, i32 1
  store i8* %9, i8** %11
  store i8* %10, i8** %12
  %13 = load %StringRef* %const.struct16
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %15 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i32 0, i32 0
  call void @"pre_*382"(%Token* %"$tmpC17", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %15)
  %16 = getelementptr inbounds %Token* %"$tmpC17", i32 0, i32 1
  %17 = load %TokenType* %16
  store [35 x i8] c", expecting identifier or operator\00", [35 x i8]* %const.bytes18
  %18 = getelementptr inbounds [35 x i8]* %const.bytes18, i32 0, i32 0
  %19 = getelementptr inbounds [35 x i8]* %const.bytes18, i32 0, i32 34
  %20 = getelementptr inbounds %StringRef* %const.struct19, i32 0, i32 0
  %21 = getelementptr inbounds %StringRef* %const.struct19, i32 0, i32 1
  store i8* %18, i8** %20
  store i8* %19, i8** %21
  %22 = load %StringRef* %const.struct19
  call void @toString435(%String* %"$tmpC", %StringRef %13, %TokenType %17, %StringRef %22)
  call void @reportError386(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %String* %"$tmpC")
  call void @dtor166(%String* %"$tmpC")
  call void @dtor299(%Token* %"$tmpC17")
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_else
  %23 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v5, i32 39)
  %24 = load %TokenType* %tmp.v5
  %25 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %23, %TokenType %24)
  br i1 %25, label %if_then2, label %if_else3

if_then2:                                         ; preds = %if_block1
  %26 = load %String** %_result.addr
  %27 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %28 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %27, i32 0, i32 1
  %29 = getelementptr inbounds %Token* %28, i32 0, i32 2
  call void @ctor163(%String* %26, %String* %29)
  ret void

if_else3:                                         ; preds = %if_block1
  br label %if_block7

if_end4:                                          ; preds = %cond_destruct_end14, %dumy_block6
  br label %if_end

dumy_block6:                                      ; No predecessors!
  br label %if_end4

if_block7:                                        ; preds = %if_else3
  %30 = load i1* %withEqual.addr
  br i1 %30, label %cond.true, label %cond.false

if_then8:                                         ; preds = %cond.end
  %31 = load %String** %_result.addr
  store [2 x i8] c"=\00", [2 x i8]* %const.bytes
  %32 = getelementptr inbounds [2 x i8]* %const.bytes, i32 0, i32 0
  %33 = getelementptr inbounds [2 x i8]* %const.bytes, i32 0, i32 1
  %34 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %35 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %32, i8** %34
  store i8* %33, i8** %35
  %36 = load %StringRef* %const.struct
  store %StringRef %36, %StringRef* %"$tmpForRef"
  call void @ctor266(%String* %31, %StringRef* %"$tmpForRef")
  br i1 %30, label %cond_destruct_alt1, label %cond_destruct_alt2

if_end9:                                          ; preds = %dumy_block11, %cond.end
  br i1 %30, label %cond_destruct_alt112, label %cond_destruct_alt213

cond.true:                                        ; preds = %if_block7
  %37 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v10, i32 37)
  %38 = load %TokenType* %tmp.v10
  %39 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %37, %TokenType %38)
  br label %cond.end

cond.false:                                       ; preds = %if_block7
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %39, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then8, label %if_end9

cond_destruct_alt1:                               ; preds = %if_then8
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_then8
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  ret void

dumy_block11:                                     ; No predecessors!
  br label %if_end9

cond_destruct_alt112:                             ; preds = %if_end9
  br label %cond_destruct_end14

cond_destruct_alt213:                             ; preds = %if_end9
  br label %cond_destruct_end14

cond_destruct_end14:                              ; preds = %cond_destruct_alt213, %cond_destruct_alt112
  br label %if_end4
}

declare %Node @comp_parser_mkPrefixOp(%Location*, %StringRef, %Node)

; Function Attrs: inlinehint nounwind
define internal void @parseIdOrOperOpt(%String* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, i1 %withEqual) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %tmp.v = alloca %TokenType
  %tmp.v5 = alloca %TokenType
  %tmp.v11 = alloca %TokenType
  %"$tmpForRef" = alloca %StringRef
  %const.bytes = alloca [2 x i8]
  %const.struct = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 38)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %4 = load %String** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 2
  call void @ctor163(%String* %4, %String* %7)
  ret void

if_else:                                          ; preds = %if_block
  br label %if_block1

if_end:                                           ; preds = %if_end4, %dumy_block
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_else
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v5, i32 39)
  %9 = load %TokenType* %tmp.v5
  %10 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %TokenType %9)
  br i1 %10, label %if_then2, label %if_else3

if_then2:                                         ; preds = %if_block1
  %11 = load %String** %_result.addr
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %13 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 1
  %14 = getelementptr inbounds %Token* %13, i32 0, i32 2
  call void @ctor163(%String* %11, %String* %14)
  ret void

if_else3:                                         ; preds = %if_block1
  br label %if_block7

if_end4:                                          ; preds = %cond_destruct_end19, %dumy_block6
  br label %if_end

dumy_block6:                                      ; No predecessors!
  br label %if_end4

if_block7:                                        ; preds = %if_else3
  %15 = load i1* %withEqual.addr
  br i1 %15, label %cond.true, label %cond.false

if_then8:                                         ; preds = %cond.end
  %16 = load %String** %_result.addr
  store [2 x i8] c"=\00", [2 x i8]* %const.bytes
  %17 = getelementptr inbounds [2 x i8]* %const.bytes, i32 0, i32 0
  %18 = getelementptr inbounds [2 x i8]* %const.bytes, i32 0, i32 1
  %19 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %20 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %17, i8** %19
  store i8* %18, i8** %20
  %21 = load %StringRef* %const.struct
  store %StringRef %21, %StringRef* %"$tmpForRef"
  call void @ctor266(%String* %16, %StringRef* %"$tmpForRef")
  br i1 %15, label %cond_destruct_alt1, label %cond_destruct_alt2

if_else9:                                         ; preds = %cond.end
  %22 = load %String** %_result.addr
  call void @ctor131(%String* %22)
  br i1 %15, label %cond_destruct_alt113, label %cond_destruct_alt214

if_end10:                                         ; preds = %dumy_block16, %dumy_block12
  br i1 %15, label %cond_destruct_alt117, label %cond_destruct_alt218

cond.true:                                        ; preds = %if_block7
  %23 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v11, i32 37)
  %24 = load %TokenType* %tmp.v11
  %25 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %23, %TokenType %24)
  br label %cond.end

cond.false:                                       ; preds = %if_block7
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %25, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then8, label %if_else9

cond_destruct_alt1:                               ; preds = %if_then8
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_then8
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  ret void

dumy_block12:                                     ; No predecessors!
  br label %if_end10

cond_destruct_alt113:                             ; preds = %if_else9
  br label %cond_destruct_end15

cond_destruct_alt214:                             ; preds = %if_else9
  br label %cond_destruct_end15

cond_destruct_end15:                              ; preds = %cond_destruct_alt214, %cond_destruct_alt113
  ret void

dumy_block16:                                     ; No predecessors!
  br label %if_end10

cond_destruct_alt117:                             ; preds = %if_end10
  br label %cond_destruct_end19

cond_destruct_alt218:                             ; preds = %if_end10
  br label %cond_destruct_end19

cond_destruct_end19:                              ; preds = %cond_destruct_alt218, %cond_destruct_alt117
  br label %if_end4
}

declare %Node @comp_parser_mkInfixOp(%Location*, %Node, %StringRef, %Node)

declare %Node @comp_parser_mkPostfixOp(%Location*, %Node, %StringRef)

; Function Attrs: inlinehint nounwind
define internal i1 @parseImportLineOpt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %Node* %res) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v1 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 3)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %Node** %res.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseImportNames(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5)
  call void @"=393"(%Node* %4, %Node* %"$tmpC")
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v1, i32 33)
  %7 = load %TokenType* %tmp.v1
  %8 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseImportNames(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %Node
  %tmp.v = alloca %TokenType
  %"$tmpForRef1" = alloca %Node
  %"$tmpC2" = alloca %Node
  br label %code

code:                                             ; preds = %0
  call void @ctor396(%Node* %res)
  %1 = load %Node* %res
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseImportName(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %Node* %"$tmpC"
  %4 = call %Node @comp_parser_addToNodeList(%Node %1, %Node %3)
  store %Node %4, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef")
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 34)
  %6 = load %TokenType* %tmp.v
  %7 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %TokenType %6)
  br i1 %7, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %8 = load %Node* %res
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseImportName(%Node* %"$tmpC2", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9)
  %10 = load %Node* %"$tmpC2"
  %11 = call %Node @comp_parser_addToNodeList(%Node %8, %Node %10)
  store %Node %11, %Node* %"$tmpForRef1"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef1")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %12 = load %Node** %_result.addr
  call void @ctor391(%Node* %12, %Node* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseImportName(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %loc = alloca %Location
  %id = alloca %String
  %toImport = alloca %Node
  %declNames = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %Location
  %"$tmpC1" = alloca %Location
  %"$tmpC2" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseIdEqualOpt(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseQidOrString(%Node* %toImport, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3)
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseImportDeclNamesOpt(%Node* %declNames, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4)
  %5 = load %Node** %_result.addr
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @lastLoc(%Location* %"$tmpC1", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6)
  call void @span(%Location* %"$tmpC", %Location* %loc, %Location* %"$tmpC1")
  call void @asStringRef(%StringRef* %"$tmpC2", %String* %id)
  %7 = load %StringRef* %"$tmpC2"
  %8 = load %Node* %toImport
  %9 = load %Node* %declNames
  %10 = call %Node @comp_parser_mkImportName(%Location* %"$tmpC", %StringRef %7, %Node %8, %Node %9)
  store %Node %10, %Node* %"$tmpForRef"
  call void @ctor391(%Node* %5, %Node* %"$tmpForRef")
  call void @dtor166(%String* %id)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor166(%String* %id)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseIdEqualOpt(%String* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %id = alloca %String
  %tmp.v = alloca %TokenType
  %tmp.v1 = alloca %TokenType
  %tmp.v2 = alloca %TokenType
  %tmp.v3 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  call void @ctor131(%String* %id)
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 38)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v2, i32 38)
  %5 = load %TokenType* %tmp.v2
  %6 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, %TokenType %5)
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %8 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 1
  %9 = getelementptr inbounds %Token* %8, i32 0, i32 2
  %10 = call %String* @"=198"(%String* %id, %String* %9)
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v3, i32 37)
  %12 = load %TokenType* %tmp.v3
  %13 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, %TokenType %12)
  br label %if_end

if_end:                                           ; preds = %if_then, %cond.end
  br i1 %3, label %cond_destruct_alt1, label %cond_destruct_alt2

cond.true:                                        ; preds = %if_block
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v1, i32 37)
  %15 = load %TokenType* %tmp.v1
  %16 = call i1 @next2Is(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, %TokenType %15)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %16, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end

cond_destruct_alt1:                               ; preds = %if_end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  %17 = load %String** %_result.addr
  call void @ctor163(%String* %17, %String* %id)
  call void @dtor166(%String* %id)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor166(%String* %id)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseQidOrString(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %tmp.v = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 41)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %Node** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 0
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %9 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, i32 0, i32 1
  %10 = getelementptr inbounds %Token* %9, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC", %String* %10)
  %11 = load %StringRef* %"$tmpC"
  %12 = call %Node @comp_parser_mkStringLiteral(%Location* %7, %StringRef %11)
  store %Node %12, %Node* %"$tmpForRef"
  call void @ctor391(%Node* %4, %Node* %"$tmpForRef")
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %13 = load %Node** %_result.addr
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseQualifiedName(%Node* %13, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 false)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseImportDeclNamesOpt(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res = alloca %Node
  %tmp.v = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v1 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  call void @ctor396(%Node* %res)
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 30)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseIdOrOperListNode(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4)
  call void @"=393"(%Node* %res, %Node* %"$tmpC")
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v1, i32 31)
  %6 = load %TokenType* %tmp.v1
  %7 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %TokenType %6)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  %8 = load %Node** %_result.addr
  call void @ctor391(%Node* %8, %Node* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseIdOrOperListNode(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res = alloca %Node
  %id = alloca %String
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %tmp.v = alloca %TokenType
  %"$tmpC1" = alloca %String
  %"$tmpForRef2" = alloca %Node
  %"$tmpC3" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  call void @ctor396(%Node* %res)
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseIdOrOper(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i1 true)
  %2 = load %Node* %res
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %Token* %4, i32 0, i32 0
  call void @asStringRef(%StringRef* %"$tmpC", %String* %id)
  %6 = load %StringRef* %"$tmpC"
  %7 = call %Node @comp_parser_mkIdentifier(%Location* %5, %StringRef %6)
  %8 = call %Node @comp_parser_addToNodeList(%Node %2, %Node %7)
  store %Node %8, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef")
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 34)
  %10 = load %TokenType* %tmp.v
  %11 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, %TokenType %10)
  br i1 %11, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseIdOrOper(%String* %"$tmpC1", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i1 true)
  %13 = call %String* @"=198"(%String* %id, %String* %"$tmpC1")
  call void @dtor166(%String* %"$tmpC1")
  %14 = load %Node* %res
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %16 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, i32 0, i32 1
  %17 = getelementptr inbounds %Token* %16, i32 0, i32 0
  call void @asStringRef(%StringRef* %"$tmpC3", %String* %id)
  %18 = load %StringRef* %"$tmpC3"
  %19 = call %Node @comp_parser_mkIdentifier(%Location* %17, %StringRef %18)
  %20 = call %Node @comp_parser_addToNodeList(%Node %14, %Node %19)
  store %Node %20, %Node* %"$tmpForRef2"
  call void @"=393"(%Node* %res, %Node* %"$tmpForRef2")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %21 = load %Node** %_result.addr
  call void @ctor391(%Node* %21, %Node* %res)
  call void @dtor166(%String* %id)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor166(%String* %id)
  ret void
}

declare %Node @comp_parser_mkImportName(%Location*, %StringRef, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseUsingDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %Node* %res) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %id = alloca %String
  %usingNode = alloca %Node
  %"$tmpC" = alloca %Node
  %"$tmpC4" = alloca %Node
  %tmp.v5 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC6" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 9)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 0
  call void @ctor168(%Location* %loc, %Location* %7)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseIdEqualOpt(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  call void @ctor396(%Node* %usingNode)
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %9 = call i1 @isEmpty285(%String* %id)
  br i1 %9, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseQualifiedName(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, i1 true)
  call void @"=393"(%Node* %usingNode, %Node* %"$tmpC")
  br label %if_end3

if_else:                                          ; preds = %if_block1
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %"$tmpC4", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, i1 true)
  call void @"=393"(%Node* %usingNode, %Node* %"$tmpC4")
  br label %if_end3

if_end3:                                          ; preds = %if_else, %if_then2
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %13 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 1
  %14 = getelementptr inbounds %Token* %13, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %14)
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v5, i32 33)
  %16 = load %TokenType* %tmp.v5
  %17 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, %TokenType %16)
  %18 = load %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC6", %String* %id)
  %19 = load %StringRef* %"$tmpC6"
  %20 = load %Node* %usingNode
  %21 = call %Node @comp_parser_mkUsing(%Location* %loc, %StringRef %19, %Node %20)
  store %Node %21, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %18, %Node* %"$tmpForRef")
  call void @dtor166(%String* %id)
  ret i1 true

dumy_block7:                                      ; No predecessors!
  call void @dtor166(%String* %id)
  unreachable
}

declare %Node @comp_parser_mkUsing(%Location*, %StringRef, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parsePackageDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %Node* %res) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %id = alloca %String
  %tmp.v1 = alloca %TokenType
  %children = alloca %Node
  %tmp.v2 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 8)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 0
  call void @ctor168(%Location* %loc, %Location* %7)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v1, i32 26)
  %10 = load %TokenType* %tmp.v1
  %11 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, %TokenType %10)
  call void @ctor396(%Node* %children)
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseStmts(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i1 true, %Node* %children)
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v2, i32 27)
  %14 = load %TokenType* %tmp.v2
  %15 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, %TokenType %14)
  %16 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %17 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %16, i32 0, i32 1
  %18 = getelementptr inbounds %Token* %17, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %18)
  %19 = load %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC", %String* %id)
  %20 = load %StringRef* %"$tmpC"
  %21 = load %Node* %children
  %22 = call %Node @comp_parser_mkPackage(%Location* %loc, %StringRef %20, %Node %21)
  store %Node %22, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %19, %Node* %"$tmpForRef")
  call void @dtor166(%String* %id)
  ret i1 true

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block3:                                      ; No predecessors!
  call void @dtor166(%String* %id)
  unreachable
}

declare %Node @comp_parser_mkPackage(%Location*, %StringRef, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseClassDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %Node* %res) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %id = alloca %String
  %formals = alloca %Node
  %ifClause = alloca %Node
  %tmp.v1 = alloca %TokenType
  %children = alloca %Node
  %tmp.v2 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %tmp.v3 = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 4)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 0
  call void @ctor168(%Location* %loc, %Location* %7)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseFormalsOpt(%Node* %formals, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 false)
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseIfClauseOpt(%Node* %ifClause, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10)
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v1, i32 26)
  %12 = load %TokenType* %tmp.v1
  %13 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, %TokenType %12)
  call void @ctor396(%Node* %children)
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseStmts(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 true, %Node* %children)
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v2, i32 27)
  %16 = load %TokenType* %tmp.v2
  %17 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, %TokenType %16)
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %19 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18, i32 0, i32 1
  %20 = getelementptr inbounds %Token* %19, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %20)
  %21 = load %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC", %String* %id)
  %22 = load %StringRef* %"$tmpC"
  %23 = load %Node* %formals
  call void @ctor396(%Node* %tmp.v3)
  %24 = load %Node* %tmp.v3
  %25 = load %Node* %ifClause
  %26 = load %Node* %children
  %27 = call %Node @comp_parser_mkClass(%Location* %loc, %StringRef %22, %Node %23, %Node %24, %Node %25, %Node %26)
  store %Node %27, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %21, %Node* %"$tmpForRef")
  call void @dtor166(%String* %id)
  ret i1 true

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block4:                                      ; No predecessors!
  call void @dtor166(%String* %id)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @parseIfClauseOpt(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %tmp.v = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 16)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %Node** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %4, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i1 true)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %6 = load %Node** %_result.addr
  call void @ctor396(%Node* %6)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkClass(%Location*, %StringRef, %Node, %Node, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseDatatypeDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %Node* %res) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %id = alloca %String
  %formals = alloca %Node
  %tmp.v4 = alloca %TokenType
  %underlyingData = alloca %Node
  %ifClause = alloca %Node
  %tmp.v5 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %tmp.v6 = alloca %Node
  %ifClause7 = alloca %Node
  %tmp.v8 = alloca %TokenType
  %children = alloca %Node
  %tmp.v9 = alloca %TokenType
  %tmp.v10 = alloca %TokenType
  %tmp.v14 = alloca %TokenType
  %tmp.v16 = alloca %TokenType
  %"$tmpForRef17" = alloca %Node
  %"$tmpC18" = alloca %StringRef
  %tmp.v19 = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 6)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 0
  call void @ctor168(%Location* %loc, %Location* %7)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseFormalsOpt(%Node* %formals, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 false)
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v4, i32 37)
  %11 = load %TokenType* %tmp.v4
  %12 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, %TokenType %11)
  br i1 %12, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %underlyingData, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, i1 true)
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseIfClauseOpt(%Node* %ifClause, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14)
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v5, i32 33)
  %16 = load %TokenType* %tmp.v5
  %17 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, %TokenType %16)
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %19 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18, i32 0, i32 1
  %20 = getelementptr inbounds %Token* %19, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %20)
  %21 = load %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC", %String* %id)
  %22 = load %StringRef* %"$tmpC"
  %23 = load %Node* %formals
  %24 = load %Node* %underlyingData
  %25 = load %Node* %ifClause
  call void @ctor396(%Node* %tmp.v6)
  %26 = load %Node* %tmp.v6
  %27 = call %Node @comp_parser_mkClass(%Location* %loc, %StringRef %22, %Node %23, %Node %24, %Node %25, %Node %26)
  store %Node %27, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %21, %Node* %"$tmpForRef")
  br label %if_end3

if_else:                                          ; preds = %if_block1
  %28 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseIfClauseOpt(%Node* %ifClause7, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %28)
  %29 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v8, i32 26)
  %30 = load %TokenType* %tmp.v8
  %31 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %29, %TokenType %30)
  call void @ctor396(%Node* %children)
  %32 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseFormal(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %32, i1 true, %Node* %children)
  br label %while_block

if_end3:                                          ; preds = %cond_destruct_end, %if_then2
  call void @dtor166(%String* %id)
  ret i1 true

while_block:                                      ; preds = %while_step, %if_else
  %33 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v9, i32 34)
  %34 = load %TokenType* %tmp.v9
  %35 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %33, %TokenType %34)
  br i1 %35, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  br label %if_block11

while_step:                                       ; preds = %if_end13
  br label %while_block

while_end:                                        ; preds = %if_then12, %cond.end
  br i1 %35, label %cond_destruct_alt1, label %cond_destruct_alt2

cond.true:                                        ; preds = %while_block
  br label %cond.end

cond.false:                                       ; preds = %while_block
  %36 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v10, i32 33)
  %37 = load %TokenType* %tmp.v10
  %38 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %36, %TokenType %37)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ true, %cond.true ], [ %38, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end

if_block11:                                       ; preds = %while_body
  %39 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v14, i32 27)
  %40 = load %TokenType* %tmp.v14
  %41 = call i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %39, %TokenType %40)
  br i1 %41, label %if_then12, label %if_end13

if_then12:                                        ; preds = %if_block11
  br label %while_end

if_end13:                                         ; preds = %dumy_block15, %if_block11
  %42 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseFormal(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %42, i1 true, %Node* %children)
  br label %while_step

dumy_block15:                                     ; No predecessors!
  br label %if_end13

cond_destruct_alt1:                               ; preds = %while_end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %while_end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  %43 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @consumeSemis(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %43)
  %44 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v16, i32 27)
  %45 = load %TokenType* %tmp.v16
  %46 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %44, %TokenType %45)
  %47 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %48 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %47, i32 0, i32 1
  %49 = getelementptr inbounds %Token* %48, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %49)
  %50 = load %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC18", %String* %id)
  %51 = load %StringRef* %"$tmpC18"
  %52 = load %Node* %formals
  call void @ctor396(%Node* %tmp.v19)
  %53 = load %Node* %tmp.v19
  %54 = load %Node* %ifClause7
  %55 = load %Node* %children
  %56 = call %Node @comp_parser_mkClass(%Location* %loc, %StringRef %51, %Node %52, %Node %53, %Node %54, %Node %55)
  store %Node %56, %Node* %"$tmpForRef17"
  call void @"=393"(%Node* %50, %Node* %"$tmpForRef17")
  br label %if_end3

dumy_block20:                                     ; No predecessors!
  call void @dtor166(%String* %id)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal i1 @parseConceptDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %Node* %res) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %id = alloca %String
  %tmp.v1 = alloca %TokenType
  %paramName = alloca %String
  %baseConcept = alloca %Node
  %tmp.v2 = alloca %TokenType
  %ifClause = alloca %Node
  %tmp.v3 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %"$tmpC4" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 5)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 0
  call void @ctor168(%Location* %loc, %Location* %7)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v1, i32 30)
  %10 = load %TokenType* %tmp.v1
  %11 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, %TokenType %10)
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseId(%String* %paramName, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12)
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseTypeNode(%Node* %baseConcept, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13)
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v2, i32 31)
  %15 = load %TokenType* %tmp.v2
  %16 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, %TokenType %15)
  %17 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseIfClauseOpt(%Node* %ifClause, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %17)
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v3, i32 33)
  %19 = load %TokenType* %tmp.v3
  %20 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18, %TokenType %19)
  %21 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %22 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %21, i32 0, i32 1
  %23 = getelementptr inbounds %Token* %22, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %23)
  %24 = load %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC", %String* %id)
  %25 = load %StringRef* %"$tmpC"
  call void @asStringRef(%StringRef* %"$tmpC4", %String* %paramName)
  %26 = load %StringRef* %"$tmpC4"
  %27 = load %Node* %baseConcept
  %28 = load %Node* %ifClause
  %29 = call %Node @comp_parser_mkConcept(%Location* %loc, %StringRef %25, %StringRef %26, %Node %27, %Node %28)
  store %Node %29, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %24, %Node* %"$tmpForRef")
  call void @dtor166(%String* %paramName)
  call void @dtor166(%String* %id)
  ret i1 true

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block5:                                      ; No predecessors!
  call void @dtor166(%String* %paramName)
  call void @dtor166(%String* %id)
  unreachable
}

declare %Node @comp_parser_mkConcept(%Location*, %StringRef, %StringRef, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseVarDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %Node* %res) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %ids = alloca %"Vector[LocString]"
  %typeNode = alloca %Node
  %init = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v8 = alloca %TokenType
  %"$tmpC9" = alloca %Node
  %tmp.v10 = alloca %TokenType
  %"$tmpC11" = alloca %Node
  %tmp.v12 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 10)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseIdList(%"Vector[LocString]"* %ids, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5)
  call void @ctor396(%Node* %typeNode)
  call void @ctor396(%Node* %init)
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v4, i32 32)
  %7 = load %TokenType* %tmp.v4
  %8 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  br i1 %8, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 false)
  call void @"=393"(%Node* %typeNode, %Node* %"$tmpC")
  br label %if_block5

if_else:                                          ; preds = %if_block1
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v10, i32 37)
  %11 = load %TokenType* %tmp.v10
  %12 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, %TokenType %11)
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %"$tmpC11", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, i1 true)
  call void @"=393"(%Node* %init, %Node* %"$tmpC11")
  br label %if_end3

if_end3:                                          ; preds = %if_else, %if_end7
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v12, i32 33)
  %15 = load %TokenType* %tmp.v12
  %16 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, %TokenType %15)
  %17 = load %Node* %typeNode
  %18 = load %Node* %init
  %19 = load %Node** %res.addr
  call void @createFormals(%"Vector[LocString]"* %ids, %Node %17, %Node %18, i1 true, %Node* %19)
  call void @dtor426(%"Vector[LocString]"* %ids)
  ret i1 true

if_block5:                                        ; preds = %if_then2
  %20 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v8, i32 37)
  %21 = load %TokenType* %tmp.v8
  %22 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %20, %TokenType %21)
  br i1 %22, label %if_then6, label %if_end7

if_then6:                                         ; preds = %if_block5
  %23 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %"$tmpC9", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %23, i1 true)
  call void @"=393"(%Node* %init, %Node* %"$tmpC9")
  br label %if_end7

if_end7:                                          ; preds = %if_then6, %if_block5
  br label %if_end3

dumy_block13:                                     ; No predecessors!
  call void @dtor426(%"Vector[LocString]"* %ids)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal i1 @parseFunDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %Node* %res) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %id = alloca %String
  %formals = alloca %Node
  %retType = alloca %Node
  %body = alloca %Node
  %bodyExp = alloca %Node
  %ifClause = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %"$tmpC5" = alloca %Node
  %tmp.v6 = alloca %TokenType
  %"$tmpC7" = alloca %Node
  %"$tmpC8" = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC9" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 7)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 0
  call void @ctor168(%Location* %loc, %Location* %7)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseFunNameString(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseFormalsOpt(%Node* %formals, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 false)
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseTypeNode(%Node* %retType, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10)
  call void @ctor396(%Node* %body)
  call void @ctor396(%Node* %bodyExp)
  call void @ctor396(%Node* %ifClause)
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v4, i32 37)
  %12 = load %TokenType* %tmp.v4
  %13 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, %TokenType %12)
  br i1 %13, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 true)
  call void @"=393"(%Node* %bodyExp, %Node* %"$tmpC")
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseIfClauseOpt(%Node* %"$tmpC5", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15)
  call void @"=393"(%Node* %ifClause, %Node* %"$tmpC5")
  %16 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v6, i32 33)
  %17 = load %TokenType* %tmp.v6
  %18 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %16, %TokenType %17)
  br label %if_end3

if_else:                                          ; preds = %if_block1
  %19 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseIfClauseOpt(%Node* %"$tmpC7", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %19)
  call void @"=393"(%Node* %ifClause, %Node* %"$tmpC7")
  %20 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseFunBody(%Node* %"$tmpC8", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %20)
  call void @"=393"(%Node* %body, %Node* %"$tmpC8")
  br label %if_end3

if_end3:                                          ; preds = %if_else, %if_then2
  %21 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %22 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %21, i32 0, i32 1
  %23 = getelementptr inbounds %Token* %22, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %23)
  %24 = load %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC9", %String* %id)
  %25 = load %StringRef* %"$tmpC9"
  %26 = load %Node* %formals
  %27 = load %Node* %retType
  %28 = load %Node* %body
  %29 = load %Node* %bodyExp
  %30 = load %Node* %ifClause
  %31 = call %Node @comp_parser_mkFun(%Location* %loc, %StringRef %25, %Node %26, %Node %27, %Node %28, %Node %29, %Node %30)
  store %Node %31, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %24, %Node* %"$tmpForRef")
  call void @dtor166(%String* %id)
  ret i1 true

dumy_block10:                                     ; No predecessors!
  call void @dtor166(%String* %id)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @parseFunNameString(%String* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %tmp.v = alloca %TokenType
  %tmp.v1 = alloca %TokenType
  %"$tmpForRef" = alloca %StringRef
  %const.bytes = alloca [3 x i8]
  %const.struct = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 30)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v1, i32 31)
  %5 = load %TokenType* %tmp.v1
  %6 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, %TokenType %5)
  %7 = load %String** %_result.addr
  store [3 x i8] c"()\00", [3 x i8]* %const.bytes
  %8 = getelementptr inbounds [3 x i8]* %const.bytes, i32 0, i32 0
  %9 = getelementptr inbounds [3 x i8]* %const.bytes, i32 0, i32 2
  %10 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %11 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %8, i8** %10
  store i8* %9, i8** %11
  %12 = load %StringRef* %const.struct
  store %StringRef %12, %StringRef* %"$tmpForRef"
  call void @ctor266(%String* %7, %StringRef* %"$tmpForRef")
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %13 = load %String** %_result.addr
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseIdOrOper(%String* %13, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 true)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkFun(%Location*, %StringRef, %Node, %Node, %Node, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseExprStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %Node* %res) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %2 = load %Node** %res.addr
  %3 = call i1 @parseExprOpt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %Node* %2, i1 true)
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @parseIfStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %Node* %res, i1 %topLevel) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %topLevel.addr = alloca i1
  store i1 %topLevel, i1* %topLevel.addr
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %expr = alloca %Node
  %thenClause = alloca %Node
  %elseClause = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %"$tmpForRef" = alloca %Node
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  br label %if_block

if_block:                                         ; preds = %code
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 16)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %expr, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i1 true)
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %7 = load i1* %topLevel.addr
  call void @parseStmt(%Node* %thenClause, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, i1 %7)
  call void @ctor396(%Node* %elseClause)
  br label %if_block1

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

if_block1:                                        ; preds = %if_then
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v4, i32 25)
  %9 = load %TokenType* %tmp.v4
  %10 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %TokenType %9)
  br i1 %10, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %12 = load i1* %topLevel.addr
  call void @parseStmt(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, i1 %12)
  call void @"=393"(%Node* %elseClause, %Node* %"$tmpC")
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %14 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, i32 0, i32 1
  %15 = getelementptr inbounds %Token* %14, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %15)
  %16 = load %Node** %res.addr
  %17 = load %Node* %expr
  %18 = load %Node* %thenClause
  %19 = load %Node* %elseClause
  %20 = call %Node @comp_parser_mkIfStmt(%Location* %loc, %Node %17, %Node %18, %Node %19)
  store %Node %20, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %16, %Node* %"$tmpForRef")
  ret i1 true

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkIfStmt(%Location*, %Node, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseForStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %Node* %res, i1 %topLevel) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %topLevel.addr = alloca i1
  store i1 %topLevel, i1* %topLevel.addr
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %id = alloca %String
  %typeNode = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v5 = alloca %TokenType
  %range = alloca %Node
  %action = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC6" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  br label %if_block

if_block:                                         ; preds = %code
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 15)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5)
  call void @ctor396(%Node* %typeNode)
  br label %if_block1

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

if_block1:                                        ; preds = %if_then
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v4, i32 32)
  %7 = load %TokenType* %tmp.v4
  %8 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  br i1 %8, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 false)
  call void @"=393"(%Node* %typeNode, %Node* %"$tmpC")
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v5, i32 37)
  %11 = load %TokenType* %tmp.v5
  %12 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, %TokenType %11)
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %range, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, i1 true)
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %15 = load i1* %topLevel.addr
  call void @parseStmt(%Node* %action, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 %15)
  %16 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %17 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %16, i32 0, i32 1
  %18 = getelementptr inbounds %Token* %17, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %18)
  %19 = load %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC6", %String* %id)
  %20 = load %StringRef* %"$tmpC6"
  %21 = load %Node* %typeNode
  %22 = load %Node* %range
  %23 = load %Node* %action
  %24 = call %Node @comp_parser_mkForStmt(%Location* %loc, %StringRef %20, %Node %21, %Node %22, %Node %23)
  store %Node %24, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %19, %Node* %"$tmpForRef")
  call void @dtor166(%String* %id)
  ret i1 true

dumy_block:                                       ; No predecessors!
  call void @dtor166(%String* %id)
  br label %if_end
}

declare %Node @comp_parser_mkForStmt(%Location*, %StringRef, %Node, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseWhileStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %Node* %res, i1 %topLevel) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %topLevel.addr = alloca i1
  store i1 %topLevel, i1* %topLevel.addr
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %expr = alloca %Node
  %stepAction = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpC" = alloca %String
  %const.bytes = alloca [26 x i8]
  %const.struct = alloca %StringRef
  %"$tmpC8" = alloca %Token
  %const.bytes9 = alloca [42 x i8]
  %const.struct10 = alloca %StringRef
  %body = alloca %Node
  %"$tmpForRef" = alloca %Node
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  br label %if_block

if_block:                                         ; preds = %code
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 20)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %expr, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i1 true)
  call void @ctor396(%Node* %stepAction)
  br label %if_block1

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

if_block1:                                        ; preds = %if_then
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v4, i32 33)
  %7 = load %TokenType* %tmp.v4
  %8 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  br i1 %8, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  br label %if_block5

if_end3:                                          ; preds = %if_end7, %if_block1
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %10 = load i1* %topLevel.addr
  call void @parseStmt(%Node* %body, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 %10)
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %12 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, i32 0, i32 1
  %13 = getelementptr inbounds %Token* %12, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %13)
  %14 = load %Node** %res.addr
  %15 = load %Node* %expr
  %16 = load %Node* %stepAction
  %17 = load %Node* %body
  %18 = call %Node @comp_parser_mkWhileStmt(%Location* %loc, %Node %15, %Node %16, %Node %17)
  store %Node %18, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %14, %Node* %"$tmpForRef")
  ret i1 true

if_block5:                                        ; preds = %if_then2
  %19 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %20 = call i1 @parseExprOpt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %19, %Node* %stepAction, i1 true)
  %21 = xor i1 true, %20
  br i1 %21, label %cond.true, label %cond.false

if_then6:                                         ; preds = %cond.end
  %22 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  store [26 x i8] c"Syntax error, unexpected \00", [26 x i8]* %const.bytes
  %23 = getelementptr inbounds [26 x i8]* %const.bytes, i32 0, i32 0
  %24 = getelementptr inbounds [26 x i8]* %const.bytes, i32 0, i32 25
  %25 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %26 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %23, i8** %25
  store i8* %24, i8** %26
  %27 = load %StringRef* %const.struct
  %28 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %29 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %28, i32 0, i32 0
  call void @"pre_*382"(%Token* %"$tmpC8", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %29)
  %30 = getelementptr inbounds %Token* %"$tmpC8", i32 0, i32 1
  %31 = load %TokenType* %30
  store [42 x i8] c", expecting expression or block statement\00", [42 x i8]* %const.bytes9
  %32 = getelementptr inbounds [42 x i8]* %const.bytes9, i32 0, i32 0
  %33 = getelementptr inbounds [42 x i8]* %const.bytes9, i32 0, i32 41
  %34 = getelementptr inbounds %StringRef* %const.struct10, i32 0, i32 0
  %35 = getelementptr inbounds %StringRef* %const.struct10, i32 0, i32 1
  store i8* %32, i8** %34
  store i8* %33, i8** %35
  %36 = load %StringRef* %const.struct10
  call void @toString435(%String* %"$tmpC", %StringRef %27, %TokenType %31, %StringRef %36)
  call void @reportError386(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %22, %String* %"$tmpC")
  call void @dtor166(%String* %"$tmpC")
  call void @dtor299(%Token* %"$tmpC8")
  br label %if_end7

if_end7:                                          ; preds = %if_then6, %cond.end
  br label %if_end3

cond.true:                                        ; preds = %if_block5
  %37 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %38 = load i1* %topLevel.addr
  %39 = call i1 @parseBlockStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %37, %Node* %stepAction, i1 %38)
  %40 = xor i1 true, %39
  br label %cond.end

cond.false:                                       ; preds = %if_block5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %40, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then6, label %if_end7

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkWhileStmt(%Location*, %Node, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseBreakStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %Node* %res) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %tmp.v1 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 11)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %5 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %Token* %5, i32 0, i32 0
  call void @ctor168(%Location* %loc, %Location* %6)
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v1, i32 33)
  %8 = load %TokenType* %tmp.v1
  %9 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, %TokenType %8)
  %10 = load %Node** %res.addr
  %11 = call %Node @comp_parser_mkBreakStmt(%Location* %loc)
  store %Node %11, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %10, %Node* %"$tmpForRef")
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkBreakStmt(%Location*)

; Function Attrs: inlinehint nounwind
define internal i1 @parseContinueStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %Node* %res) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %tmp.v1 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 13)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %5 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %Token* %5, i32 0, i32 0
  call void @ctor168(%Location* %loc, %Location* %6)
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v1, i32 33)
  %8 = load %TokenType* %tmp.v1
  %9 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, %TokenType %8)
  %10 = load %Node** %res.addr
  %11 = call %Node @comp_parser_mkContinueStmt(%Location* %loc)
  store %Node %11, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %10, %Node* %"$tmpForRef")
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkContinueStmt(%Location*)

; Function Attrs: inlinehint nounwind
define internal i1 @parseReturnStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %Node* %res) #3 {
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %expr = alloca %Node
  %tmp.v3 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 17)
  %2 = load %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %5 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %Token* %5, i32 0, i32 0
  call void @ctor168(%Location* %loc, %Location* %6)
  call void @ctor396(%Node* %expr)
  br label %if_block1

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

if_block1:                                        ; preds = %if_then
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v3, i32 33)
  %8 = load %TokenType* %tmp.v3
  %9 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, %TokenType %8)
  br i1 %9, label %if_end2, label %if_else

if_else:                                          ; preds = %if_block1
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, i1 true)
  call void @"=393"(%Node* %expr, %Node* %"$tmpC")
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v4, i32 33)
  %12 = load %TokenType* %tmp.v4
  %13 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, %TokenType %12)
  br label %if_end2

if_end2:                                          ; preds = %if_else, %if_block1
  %14 = load %Node** %res.addr
  %15 = load %Node* %expr
  %16 = call %Node @comp_parser_mkReturnStmt(%Location* %loc, %Node %15)
  store %Node %16, %Node* %"$tmpForRef"
  call void @"=393"(%Node* %14, %Node* %"$tmpForRef")
  ret i1 true

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkReturnStmt(%Location*, %Node)

declare %Node @comp_parser_mkModifiers(%Location*, %Node, %Node)

declare %Node @comp_parser_mkModule(%Location*, %Node, %Node)

; Function Attrs: noinline nounwind
define %Node @spr_parserIf_parseExpression(%ParserContext* %ctx) #4 {
  %ctx.addr = alloca %ParserContext*
  store %ParserContext* %ctx, %ParserContext** %ctx.addr
  %"$tmpC" = alloca %Node
  br label %code

code:                                             ; preds = %0
  %1 = load %ParserContext** %ctx.addr
  %2 = getelementptr inbounds %ParserContext* %1, i32 0, i32 5
  call void @parseExpression(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %Node* %"$tmpC"
  ret %Node %3
}

; Function Attrs: inlinehint nounwind
define internal void @parseExpression(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p) #3 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %p.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %p, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  %res = alloca %Node
  %tmp.v = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @parseExpr(%Node* %res, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i1 true)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %p.addr
  call void @ctor229(%TokenType* %tmp.v, i32 0)
  %3 = load %TokenType* %tmp.v
  %4 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  %5 = load %Node** %_result.addr
  call void @ctor391(%Node* %5, %Node* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isOctalDigit(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  %2 = icmp sle i8 48, %1
  br i1 %2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %3 = load i8* %c.addr
  %4 = icmp sle i8 %3, 55
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %4, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal i1 @isBinDigit(i8 %c) #3 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  %2 = icmp eq i8 %1, 48
  br i1 %2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  br label %cond.end

cond.false:                                       ; preds = %code
  %3 = load i8* %c.addr
  %4 = icmp eq i8 %3, 49
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ true, %cond.true ], [ %4, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal void @mkLineCol(%LineCol* sret %_result, i32 %line, i32 %col) #3 {
  %_result.addr = alloca %LineCol*
  store %LineCol* %_result, %LineCol** %_result.addr
  %line.addr = alloca i32
  store i32 %line, i32* %line.addr
  %col.addr = alloca i32
  store i32 %col, i32* %col.addr
  %res = alloca %LineCol
  br label %code

code:                                             ; preds = %0
  call void @ctor124(%LineCol* %res)
  %1 = load i32* %line.addr
  %2 = getelementptr inbounds %LineCol* %res, i32 0, i32 0
  store i32 %1, i32* %2
  %3 = load i32* %col.addr
  %4 = getelementptr inbounds %LineCol* %res, i32 0, i32 1
  store i32 %3, i32* %4
  %5 = load %LineCol** %_result.addr
  call void @ctor170(%LineCol* %5, %LineCol* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @mkLocation(%Location* sret %_result) #3 {
  %_result.addr = alloca %Location*
  store %Location* %_result, %Location** %_result.addr
  %res = alloca %Location
  br label %code

code:                                             ; preds = %0
  call void @ctor122(%Location* %res)
  call void @setOne(%Location* %res)
  %1 = load %Location** %_result.addr
  call void @ctor168(%Location* %1, %Location* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @setOne(%Location* %l) #3 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %l.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 1
  %3 = getelementptr inbounds %LineCol* %2, i32 0, i32 0
  store i32 1, i32* %3
  %4 = load %Location** %l.addr
  %5 = getelementptr inbounds %Location* %4, i32 0, i32 1
  %6 = getelementptr inbounds %LineCol* %5, i32 0, i32 1
  store i32 1, i32* %6
  %7 = load %Location** %l.addr
  %8 = getelementptr inbounds %Location* %7, i32 0, i32 2
  %9 = getelementptr inbounds %LineCol* %8, i32 0, i32 0
  store i32 1, i32* %9
  %10 = load %Location** %l.addr
  %11 = getelementptr inbounds %Location* %10, i32 0, i32 2
  %12 = getelementptr inbounds %LineCol* %11, i32 0, i32 1
  store i32 1, i32* %12
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @mkLocation437(%Location* sret %_result, %SourceCode %sourceCode) #3 {
  %_result.addr = alloca %Location*
  store %Location* %_result, %Location** %_result.addr
  %sourceCode.addr = alloca %SourceCode
  store %SourceCode %sourceCode, %SourceCode* %sourceCode.addr
  %res = alloca %Location
  br label %code

code:                                             ; preds = %0
  call void @ctor122(%Location* %res)
  %1 = getelementptr inbounds %Location* %res, i32 0, i32 0
  call void @"=191"(%SourceCode* %1, %SourceCode* %sourceCode.addr)
  call void @setOne(%Location* %res)
  %2 = load %Location** %_result.addr
  call void @ctor168(%Location* %2, %Location* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @mkLocation438(%Location* sret %_result, %SourceCode %sourceCode, %LineCol %start, %LineCol %end) #3 {
  %_result.addr = alloca %Location*
  store %Location* %_result, %Location** %_result.addr
  %sourceCode.addr = alloca %SourceCode
  store %SourceCode %sourceCode, %SourceCode* %sourceCode.addr
  %start.addr = alloca %LineCol
  store %LineCol %start, %LineCol* %start.addr
  %end.addr = alloca %LineCol
  store %LineCol %end, %LineCol* %end.addr
  %res = alloca %Location
  br label %code

code:                                             ; preds = %0
  call void @ctor122(%Location* %res)
  %1 = getelementptr inbounds %Location* %res, i32 0, i32 0
  call void @"=191"(%SourceCode* %1, %SourceCode* %sourceCode.addr)
  %2 = getelementptr inbounds %Location* %res, i32 0, i32 1
  call void @"=192"(%LineCol* %2, %LineCol* %start.addr)
  %3 = getelementptr inbounds %Location* %res, i32 0, i32 2
  call void @"=192"(%LineCol* %3, %LineCol* %end.addr)
  %4 = load %Location** %_result.addr
  call void @ctor168(%Location* %4, %Location* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @copyStart(%Location* %l, %Location* %other) #3 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %l.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 1
  %3 = load %Location** %other.addr
  %4 = getelementptr inbounds %Location* %3, i32 0, i32 1
  call void @"=192"(%LineCol* %2, %LineCol* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @setAsStartOf(%Location* %l, %Location* %other) #3 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %l.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 1
  %3 = load %Location** %other.addr
  %4 = getelementptr inbounds %Location* %3, i32 0, i32 1
  call void @"=192"(%LineCol* %2, %LineCol* %4)
  %5 = load %Location** %l.addr
  %6 = getelementptr inbounds %Location* %5, i32 0, i32 2
  %7 = load %Location** %other.addr
  %8 = getelementptr inbounds %Location* %7, i32 0, i32 1
  call void @"=192"(%LineCol* %6, %LineCol* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @setAsEndOf(%Location* %l, %Location* %other) #3 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %l.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 1
  %3 = load %Location** %other.addr
  %4 = getelementptr inbounds %Location* %3, i32 0, i32 2
  call void @"=192"(%LineCol* %2, %LineCol* %4)
  %5 = load %Location** %l.addr
  %6 = getelementptr inbounds %Location* %5, i32 0, i32 2
  %7 = load %Location** %other.addr
  %8 = getelementptr inbounds %Location* %7, i32 0, i32 2
  call void @"=192"(%LineCol* %6, %LineCol* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"<439"(%Location* %lhs, %Location* %rhs) #3 {
  %lhs.addr = alloca %Location*
  store %Location* %lhs, %Location** %lhs.addr
  %rhs.addr = alloca %Location*
  store %Location* %rhs, %Location** %rhs.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %Location** %lhs.addr
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 1
  %3 = getelementptr inbounds %LineCol* %2, i32 0, i32 0
  %4 = load i32* %3
  %5 = load %Location** %rhs.addr
  %6 = getelementptr inbounds %Location* %5, i32 0, i32 1
  %7 = getelementptr inbounds %LineCol* %6, i32 0, i32 0
  %8 = load i32* %7
  %9 = call i1 @"<342"(i32 %4, i32 %8)
  br i1 %9, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %10 = load %Location** %lhs.addr
  %11 = getelementptr inbounds %Location* %10, i32 0, i32 1
  %12 = getelementptr inbounds %LineCol* %11, i32 0, i32 0
  %13 = load i32* %12
  %14 = load %Location** %rhs.addr
  %15 = getelementptr inbounds %Location* %14, i32 0, i32 1
  %16 = getelementptr inbounds %LineCol* %15, i32 0, i32 0
  %17 = load i32* %16
  %18 = call i1 @">341"(i32 %13, i32 %17)
  br i1 %18, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block4, %if_block1
  br label %if_block5

dumy_block4:                                      ; No predecessors!
  br label %if_end3

if_block5:                                        ; preds = %if_end3
  %19 = load %Location** %lhs.addr
  %20 = getelementptr inbounds %Location* %19, i32 0, i32 1
  %21 = getelementptr inbounds %LineCol* %20, i32 0, i32 1
  %22 = load i32* %21
  %23 = load %Location** %rhs.addr
  %24 = getelementptr inbounds %Location* %23, i32 0, i32 1
  %25 = getelementptr inbounds %LineCol* %24, i32 0, i32 1
  %26 = load i32* %25
  %27 = call i1 @"<342"(i32 %22, i32 %26)
  br i1 %27, label %if_then6, label %if_end7

if_then6:                                         ; preds = %if_block5
  ret i1 true

if_end7:                                          ; preds = %dumy_block8, %if_block5
  br label %if_block9

dumy_block8:                                      ; No predecessors!
  br label %if_end7

if_block9:                                        ; preds = %if_end7
  %28 = load %Location** %lhs.addr
  %29 = getelementptr inbounds %Location* %28, i32 0, i32 1
  %30 = getelementptr inbounds %LineCol* %29, i32 0, i32 1
  %31 = load i32* %30
  %32 = load %Location** %rhs.addr
  %33 = getelementptr inbounds %Location* %32, i32 0, i32 1
  %34 = getelementptr inbounds %LineCol* %33, i32 0, i32 1
  %35 = load i32* %34
  %36 = call i1 @">341"(i32 %31, i32 %35)
  br i1 %36, label %if_then10, label %if_end11

if_then10:                                        ; preds = %if_block9
  ret i1 false

if_end11:                                         ; preds = %dumy_block12, %if_block9
  br label %if_block13

dumy_block12:                                     ; No predecessors!
  br label %if_end11

if_block13:                                       ; preds = %if_end11
  %37 = load %Location** %lhs.addr
  %38 = getelementptr inbounds %Location* %37, i32 0, i32 2
  %39 = getelementptr inbounds %LineCol* %38, i32 0, i32 0
  %40 = load i32* %39
  %41 = load %Location** %rhs.addr
  %42 = getelementptr inbounds %Location* %41, i32 0, i32 2
  %43 = getelementptr inbounds %LineCol* %42, i32 0, i32 0
  %44 = load i32* %43
  %45 = call i1 @"<342"(i32 %40, i32 %44)
  br i1 %45, label %if_then14, label %if_end15

if_then14:                                        ; preds = %if_block13
  ret i1 true

if_end15:                                         ; preds = %dumy_block16, %if_block13
  br label %if_block17

dumy_block16:                                     ; No predecessors!
  br label %if_end15

if_block17:                                       ; preds = %if_end15
  %46 = load %Location** %lhs.addr
  %47 = getelementptr inbounds %Location* %46, i32 0, i32 2
  %48 = getelementptr inbounds %LineCol* %47, i32 0, i32 0
  %49 = load i32* %48
  %50 = load %Location** %rhs.addr
  %51 = getelementptr inbounds %Location* %50, i32 0, i32 2
  %52 = getelementptr inbounds %LineCol* %51, i32 0, i32 0
  %53 = load i32* %52
  %54 = call i1 @">341"(i32 %49, i32 %53)
  br i1 %54, label %if_then18, label %if_end19

if_then18:                                        ; preds = %if_block17
  ret i1 false

if_end19:                                         ; preds = %dumy_block20, %if_block17
  %55 = load %Location** %lhs.addr
  %56 = getelementptr inbounds %Location* %55, i32 0, i32 2
  %57 = getelementptr inbounds %LineCol* %56, i32 0, i32 1
  %58 = load i32* %57
  %59 = load %Location** %rhs.addr
  %60 = getelementptr inbounds %Location* %59, i32 0, i32 2
  %61 = getelementptr inbounds %LineCol* %60, i32 0, i32 1
  %62 = load i32* %61
  %63 = call i1 @"<342"(i32 %58, i32 %62)
  ret i1 %63

dumy_block20:                                     ; No predecessors!
  br label %if_end19
}

; Function Attrs: inlinehint nounwind
define internal void @"+440"(%String* sret %_result, %String %x, %String %y) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %x.addr = alloca %String
  store %String %x, %String* %x.addr
  %y.addr = alloca %String
  store %String %y, %String* %y.addr
  %sz1 = alloca i64
  %sz2 = alloca i64
  %res = alloca %String
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = call i64 @size152(%String* %x.addr)
  store i64 %1, i64* %sz1
  %2 = call i64 @size152(%String* %y.addr)
  store i64 %2, i64* %sz2
  %3 = load i64* %sz1
  %4 = load i64* %sz2
  %5 = call i64 @"+24"(i64 %3, i64 %4)
  call void @ctor164(%String* %res, i64 %5)
  %6 = getelementptr inbounds %String* %res, i32 0, i32 0
  %7 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %6)
  %8 = getelementptr inbounds %String* %x.addr, i32 0, i32 0
  %9 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %8)
  %10 = load i64* %sz1
  call void @_spr_memcpy(i8* %7, i8* %9, i64 %10)
  %11 = getelementptr inbounds %String* %res, i32 0, i32 0
  %12 = load i64* %sz1
  call void @advance176(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %11, i64 %12)
  %13 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %"$tmpC")
  %14 = getelementptr inbounds %String* %y.addr, i32 0, i32 0
  %15 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %14)
  %16 = load i64* %sz2
  call void @_spr_memcpy(i8* %13, i8* %15, i64 %16)
  %17 = load %String** %_result.addr
  call void @ctor163(%String* %17, %String* %res)
  call void @dtor166(%String* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor166(%String* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"+441"(%String* sret %_result, %String %x, %StringRef %y) #3 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %x.addr = alloca %String
  store %String %x, %String* %x.addr
  %y.addr = alloca %StringRef
  store %StringRef %y, %StringRef* %y.addr
  %sz1 = alloca i64
  %sz2 = alloca i64
  %res = alloca %String
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = call i64 @size152(%String* %x.addr)
  store i64 %1, i64* %sz1
  %2 = call i64 @size(%StringRef* %y.addr)
  store i64 %2, i64* %sz2
  %3 = load i64* %sz1
  %4 = load i64* %sz2
  %5 = call i64 @"+24"(i64 %3, i64 %4)
  call void @ctor164(%String* %res, i64 %5)
  %6 = getelementptr inbounds %String* %res, i32 0, i32 0
  %7 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %6)
  %8 = getelementptr inbounds %String* %x.addr, i32 0, i32 0
  %9 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %8)
  %10 = load i64* %sz1
  call void @_spr_memcpy(i8* %7, i8* %9, i64 %10)
  %11 = getelementptr inbounds %String* %res, i32 0, i32 0
  %12 = load i64* %sz1
  call void @advance176(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %11, i64 %12)
  %13 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %"$tmpC")
  %14 = getelementptr inbounds %StringRef* %y.addr, i32 0, i32 0
  %15 = load i8** %14
  %16 = load i64* %sz2
  call void @_spr_memcpy(i8* %13, i8* %15, i64 %16)
  %17 = load %String** %_result.addr
  call void @ctor163(%String* %17, %String* %res)
  call void @dtor166(%String* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor166(%String* %res)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @toString442(%String* sret %_result) #2 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %_result.addr
  call void @ctor131(%String* %1)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i64 @size443(%"ContiguousMemoryRange[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %"$this", %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[LocString]"* %4
  %6 = call i64 @diff406(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]" %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal %LocString* @back444(%"ContiguousMemoryRange[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %"$this", %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 1
  call void @advance445(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]"* %2, i64 -1)
  %3 = call %LocString* @value418(%"RawPtr[LocString]"* %"$tmpC")
  ret %LocString* %3
}

; Function Attrs: alwaysinline nounwind
define internal void @advance445(%"RawPtr[LocString]"* sret %_result, %"RawPtr[LocString]"* %"$this", i64 %n) #2 {
  %_result.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %_result, %"RawPtr[LocString]"** %_result.addr
  %"$this.addr" = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %_result.addr
  %2 = load %"RawPtr[LocString]"** %"$this.addr"
  %3 = call i8* @bytePtr407(%"RawPtr[LocString]"* %2)
  %4 = load i64* %n.addr
  store i64 48, i64* %tmp.v1
  %5 = load i64* %tmp.v1
  %6 = call i64 @"*154"(i64 %4, i64 %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  %8 = call i8* @ptrAdd(i8* %3, i64 %7)
  call void @fromBytePtr413(%"RawPtr[LocString]"* %1, i8* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal %LocString* @"()446"(%"ContiguousMemoryRange[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %"$this", %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 0
  %3 = call %LocString* @value418(%"RawPtr[LocString]"* %2)
  ret %LocString* %3
}

; Function Attrs: alwaysinline nounwind
define internal %LocString* @"()447"(%"ContiguousMemoryRange[LocString]"* %"$this", i64 %n) #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %"$this", %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[LocString]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 0
  %3 = load i64* %n.addr
  store i64 %3, i64* %tmp.v
  %4 = load i64* %tmp.v
  call void @advance445(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]"* %2, i64 %4)
  %5 = call %LocString* @value418(%"RawPtr[LocString]"* %"$tmpC")
  ret %LocString* %5
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack448(%"ContiguousMemoryRange[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %"$this", %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %3, i32 0, i32 1
  call void @advance445(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]"* %4, i64 -1)
  %5 = load %"RawPtr[LocString]"* %"$tmpC"
  call void @"=411"(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]" %5)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront449(%"ContiguousMemoryRange[LocString]"* %"$this", i64 %n) #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %"$this", %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[LocString]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %3, i32 0, i32 0
  %5 = load i64* %n.addr
  store i64 %5, i64* %tmp.v
  %6 = load i64* %tmp.v
  call void @advance445(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]"* %4, i64 %6)
  %7 = load %"RawPtr[LocString]"* %"$tmpC"
  call void @"=411"(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]" %7)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack450(%"ContiguousMemoryRange[LocString]"* %"$this", i64 %n) #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %"$this", %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[LocString]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %3, i32 0, i32 1
  %5 = load i64* %n.addr
  store i64 %5, i64* %tmp.v
  %6 = load i64* %tmp.v
  %7 = sub i64 0, %6
  call void @advance445(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]"* %4, i64 %7)
  %8 = load %"RawPtr[LocString]"* %"$tmpC"
  call void @"=411"(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]" %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal %LocString* @"pre_++451"(%"ContiguousMemoryRange[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %"$this", %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  call void @popFront433(%"ContiguousMemoryRange[LocString]"* %1)
  %2 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %3 = call %LocString* @front432(%"ContiguousMemoryRange[LocString]"* %2)
  ret %LocString* %3
}

; Function Attrs: alwaysinline nounwind
define internal %LocString* @"post_++452"(%"ContiguousMemoryRange[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %"$this", %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %res = alloca %LocString*
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %2 = call %LocString* @front432(%"ContiguousMemoryRange[LocString]"* %1)
  store %LocString* %2, %LocString** %res
  %3 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  call void @popFront433(%"ContiguousMemoryRange[LocString]"* %3)
  %4 = load %LocString** %res
  ret %LocString* %4
}

; Function Attrs: alwaysinline nounwind
define internal void @frontPtr453(%"RawPtr[LocString]"* sret %_result, %"ContiguousMemoryRange[LocString]"* %"$this") #2 {
  %_result.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %_result, %"RawPtr[LocString]"** %_result.addr
  %"$this.addr" = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %"$this", %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %_result.addr
  %2 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %3 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %2, i32 0, i32 0
  call void @ctor414(%"RawPtr[LocString]"* %1, %"RawPtr[LocString]"* %3)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @backPtr454(%"RawPtr[LocString]"* sret %_result, %"ContiguousMemoryRange[LocString]"* %"$this") #2 {
  %_result.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %_result, %"RawPtr[LocString]"** %_result.addr
  %"$this.addr" = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %"$this", %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %_result.addr
  %2 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %3 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %2, i32 0, i32 1
  call void @ctor414(%"RawPtr[LocString]"* %1, %"RawPtr[LocString]"* %3)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i8* @back455(%"ContiguousMemoryRange[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %"$this", %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %1, i32 0, i32 1
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %2, i64 -1)
  %3 = call i8* @value(%"RawPtr[Char/rtct]"* %"$tmpC")
  ret i8* %3
}

; Function Attrs: alwaysinline nounwind
define internal i8* @"()456"(%"ContiguousMemoryRange[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %"$this", %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %1, i32 0, i32 0
  %3 = call i8* @value(%"RawPtr[Char/rtct]"* %2)
  ret i8* %3
}

; Function Attrs: alwaysinline nounwind
define internal i8* @"()457"(%"ContiguousMemoryRange[Char/rtct]"* %"$this", i64 %n) #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %"$this", %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %1, i32 0, i32 0
  %3 = load i64* %n.addr
  store i64 %3, i64* %tmp.v
  %4 = load i64* %tmp.v
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %2, i64 %4)
  %5 = call i8* @value(%"RawPtr[Char/rtct]"* %"$tmpC")
  ret i8* %5
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack458(%"ContiguousMemoryRange[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %"$this", %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char/rtct]"* %3, i32 0, i32 1
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %4, i64 -1)
  %5 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=153"(%"RawPtr[Char/rtct]"* %2, %"RawPtr[Char/rtct]" %5)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i8* @"pre_++459"(%"ContiguousMemoryRange[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %"$this", %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  call void @popFront161(%"ContiguousMemoryRange[Char/rtct]"* %1)
  %2 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %3 = call i8* @front160(%"ContiguousMemoryRange[Char/rtct]"* %2)
  ret i8* %3
}

; Function Attrs: alwaysinline nounwind
define internal i8* @"post_++460"(%"ContiguousMemoryRange[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %"$this", %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %res = alloca i8*
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  %2 = call i8* @front160(%"ContiguousMemoryRange[Char/rtct]"* %1)
  store i8* %2, i8** %res
  %3 = load %"ContiguousMemoryRange[Char/rtct]"** %"$this.addr"
  call void @popFront161(%"ContiguousMemoryRange[Char/rtct]"* %3)
  %4 = load i8** %res
  ret i8* %4
}

; Function Attrs: alwaysinline nounwind
define internal i64 @size461(%"ContiguousMemoryRange[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %"$this", %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Token]"* %4
  %6 = call i64 @diff203(%"RawPtr[Token]"* %2, %"RawPtr[Token]" %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal %Token* @back462(%"ContiguousMemoryRange[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %"$this", %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 1
  call void @advance328(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]"* %2, i64 -1)
  %3 = call %Token* @value219(%"RawPtr[Token]"* %"$tmpC")
  ret %Token* %3
}

; Function Attrs: alwaysinline nounwind
define internal %Token* @"()463"(%"ContiguousMemoryRange[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %"$this", %"ContiguousMemoryRange[Token]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  %3 = call %Token* @value219(%"RawPtr[Token]"* %2)
  ret %Token* %3
}

; Function Attrs: alwaysinline nounwind
define internal %Token* @"()464"(%"ContiguousMemoryRange[Token]"* %"$this", i64 %n) #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %"$this", %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[Token]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  %3 = load i64* %n.addr
  store i64 %3, i64* %tmp.v
  %4 = load i64* %tmp.v
  call void @advance328(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]"* %2, i64 %4)
  %5 = call %Token* @value219(%"RawPtr[Token]"* %"$tmpC")
  ret %Token* %5
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack465(%"ContiguousMemoryRange[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %"$this", %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 1
  call void @advance328(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]"* %4, i64 -1)
  %5 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=207"(%"RawPtr[Token]"* %2, %"RawPtr[Token]" %5)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal %Token* @"pre_++466"(%"ContiguousMemoryRange[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %"$this", %"ContiguousMemoryRange[Token]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  call void @popFront336(%"ContiguousMemoryRange[Token]"* %1)
  %2 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %3 = call %Token* @front335(%"ContiguousMemoryRange[Token]"* %2)
  ret %Token* %3
}

; Function Attrs: alwaysinline nounwind
define internal %Token* @"post_++467"(%"ContiguousMemoryRange[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %"$this", %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %res = alloca %Token*
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  %2 = call %Token* @front335(%"ContiguousMemoryRange[Token]"* %1)
  store %Token* %2, %Token** %res
  %3 = load %"ContiguousMemoryRange[Token]"** %"$this.addr"
  call void @popFront336(%"ContiguousMemoryRange[Token]"* %3)
  %4 = load %Token** %res
  ret %Token* %4
}

; Function Attrs: inlinehint nounwind
define internal void @ctor468(%"ContiguousMemoryRange[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]" %begin, %"RawPtr[UInt/rtct]" %end) #3 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %"$this", %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %begin.addr = alloca %"RawPtr[UInt/rtct]"
  store %"RawPtr[UInt/rtct]" %begin, %"RawPtr[UInt/rtct]"* %begin.addr
  %end.addr = alloca %"RawPtr[UInt/rtct]"
  store %"RawPtr[UInt/rtct]" %end, %"RawPtr[UInt/rtct]"* %end.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %1, i32 0, i32 0
  call void @ctor312(%"RawPtr[UInt/rtct]"* %2, %"RawPtr[UInt/rtct]"* %begin.addr)
  %3 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %3, i32 0, i32 1
  call void @ctor312(%"RawPtr[UInt/rtct]"* %4, %"RawPtr[UInt/rtct]"* %end.addr)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isEmpty469(%"ContiguousMemoryRange[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %"$this", %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[UInt/rtct]"* %4
  %6 = call i64 @diff304(%"RawPtr[UInt/rtct]"* %2, %"RawPtr[UInt/rtct]" %5)
  %7 = call i1 @"<=159"(i64 %6, i32 0)
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @size470(%"ContiguousMemoryRange[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %"$this", %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[UInt/rtct]"* %4
  %6 = call i64 @diff304(%"RawPtr[UInt/rtct]"* %2, %"RawPtr[UInt/rtct]" %5)
  store i64 %6, i64* %tmp.v
  %7 = load i64* %tmp.v
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i32* @front471(%"ContiguousMemoryRange[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %"$this", %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %1, i32 0, i32 0
  %3 = call i32* @value314(%"RawPtr[UInt/rtct]"* %2)
  ret i32* %3
}

; Function Attrs: alwaysinline nounwind
define internal i32* @back472(%"ContiguousMemoryRange[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %"$this", %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %1, i32 0, i32 1
  call void @advance339(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]"* %2, i64 -1)
  %3 = call i32* @value314(%"RawPtr[UInt/rtct]"* %"$tmpC")
  ret i32* %3
}

; Function Attrs: alwaysinline nounwind
define internal i32* @"()473"(%"ContiguousMemoryRange[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %"$this", %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %1, i32 0, i32 0
  %3 = call i32* @value314(%"RawPtr[UInt/rtct]"* %2)
  ret i32* %3
}

; Function Attrs: alwaysinline nounwind
define internal i32* @"()474"(%"ContiguousMemoryRange[UInt/rtct]"* %"$this", i64 %n) #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %"$this", %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load i64* %n.addr
  store i64 %3, i64* %tmp.v
  %4 = load i64* %tmp.v
  call void @advance339(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]"* %2, i64 %4)
  %5 = call i32* @value314(%"RawPtr[UInt/rtct]"* %"$tmpC")
  ret i32* %5
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront475(%"ContiguousMemoryRange[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %"$this", %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %3, i32 0, i32 0
  call void @advance315(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]"* %4)
  %5 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %2, %"RawPtr[UInt/rtct]" %5)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack476(%"ContiguousMemoryRange[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %"$this", %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %3, i32 0, i32 1
  call void @advance339(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]"* %4, i64 -1)
  %5 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %2, %"RawPtr[UInt/rtct]" %5)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront477(%"ContiguousMemoryRange[UInt/rtct]"* %"$this", i64 %n) #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %"$this", %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %3, i32 0, i32 0
  %5 = load i64* %n.addr
  store i64 %5, i64* %tmp.v
  %6 = load i64* %tmp.v
  call void @advance339(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]"* %4, i64 %6)
  %7 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %2, %"RawPtr[UInt/rtct]" %7)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack478(%"ContiguousMemoryRange[UInt/rtct]"* %"$this", i64 %n) #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %"$this", %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %3, i32 0, i32 1
  %5 = load i64* %n.addr
  store i64 %5, i64* %tmp.v
  %6 = load i64* %tmp.v
  %7 = sub i64 0, %6
  call void @advance339(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]"* %4, i64 %7)
  %8 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %2, %"RawPtr[UInt/rtct]" %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i32* @"pre_++479"(%"ContiguousMemoryRange[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %"$this", %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  call void @popFront475(%"ContiguousMemoryRange[UInt/rtct]"* %1)
  %2 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %3 = call i32* @front471(%"ContiguousMemoryRange[UInt/rtct]"* %2)
  ret i32* %3
}

; Function Attrs: alwaysinline nounwind
define internal i32* @"post_++480"(%"ContiguousMemoryRange[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %"$this", %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %res = alloca i32*
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %2 = call i32* @front471(%"ContiguousMemoryRange[UInt/rtct]"* %1)
  store i32* %2, i32** %res
  %3 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  call void @popFront475(%"ContiguousMemoryRange[UInt/rtct]"* %3)
  %4 = load i32** %res
  ret i32* %4
}

; Function Attrs: alwaysinline nounwind
define internal void @frontPtr481(%"RawPtr[UInt/rtct]"* sret %_result, %"ContiguousMemoryRange[UInt/rtct]"* %"$this") #2 {
  %_result.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %_result, %"RawPtr[UInt/rtct]"** %_result.addr
  %"$this.addr" = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %"$this", %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %_result.addr
  %2 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %3 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %2, i32 0, i32 0
  call void @ctor312(%"RawPtr[UInt/rtct]"* %1, %"RawPtr[UInt/rtct]"* %3)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @backPtr482(%"RawPtr[UInt/rtct]"* sret %_result, %"ContiguousMemoryRange[UInt/rtct]"* %"$this") #2 {
  %_result.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %_result, %"RawPtr[UInt/rtct]"** %_result.addr
  %"$this.addr" = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %"$this", %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %_result.addr
  %2 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %3 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %2, i32 0, i32 1
  call void @ctor312(%"RawPtr[UInt/rtct]"* %1, %"RawPtr[UInt/rtct]"* %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @fromRef(%"RawPtr[Char/rtct]"* sret %_result, i8* %ptr) #3 {
  %_result.addr = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %_result, %"RawPtr[Char/rtct]"** %_result.addr
  %ptr.addr = alloca i8*
  store i8* %ptr, i8** %ptr.addr
  %res = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  call void @ctor128(%"RawPtr[Char/rtct]"* %res)
  %1 = load i8** %ptr.addr
  %2 = getelementptr inbounds %"RawPtr[Char/rtct]"* %res, i32 0, i32 0
  store i8* %1, i8** %2
  %3 = load %"RawPtr[Char/rtct]"** %_result.addr
  call void @ctor146(%"RawPtr[Char/rtct]"* %3, %"RawPtr[Char/rtct]"* %res)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isNull483(%"RawPtr[Char/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[Char/rtct]"* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = call i1 @implOpRefEQ(i8* %3, i8* null)
  ret i1 %4
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"<484"(%"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]" %other) #2 {
  %"$this.addr" = alloca %"RawPtr[Char/rtct]"*
  store %"RawPtr[Char/rtct]"* %"$this", %"RawPtr[Char/rtct]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[Char/rtct]"
  store %"RawPtr[Char/rtct]" %other, %"RawPtr[Char/rtct]"* %other.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char/rtct]"** %"$this.addr"
  %2 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %1)
  %3 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %other.addr)
  %4 = call i64 @ptrDiff(i8* %2, i8* %3)
  store i64 0, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i1 @"<485"(i64 %4, i64 %5)
  ret i1 %6
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"<485"(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn28(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn28(i64 %4, i64 %5)
  %7 = icmp slt i64 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal void @fromRef486(%"RawPtr[LocString]"* sret %_result, %LocString* %ptr) #3 {
  %_result.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %_result, %"RawPtr[LocString]"** %_result.addr
  %ptr.addr = alloca %LocString*
  store %LocString* %ptr, %LocString** %ptr.addr
  %res = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  call void @ctor401(%"RawPtr[LocString]"* %res)
  %1 = load %LocString** %ptr.addr
  %2 = getelementptr inbounds %"RawPtr[LocString]"* %res, i32 0, i32 0
  store %LocString* %1, %LocString** %2
  %3 = load %"RawPtr[LocString]"** %_result.addr
  call void @ctor414(%"RawPtr[LocString]"* %3, %"RawPtr[LocString]"* %res)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isNull487(%"RawPtr[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[LocString]"* %1, i32 0, i32 0
  %3 = load %LocString** %2
  %4 = bitcast %LocString* %3 to i8*
  %5 = call i1 @implOpRefEQ(i8* %4, i8* null)
  ret i1 %5
}

; Function Attrs: inlinehint nounwind
define internal void @swap488(%"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]"* %other) #3 {
  %"$this.addr" = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %other, %"RawPtr[LocString]"** %other.addr
  %t = alloca %LocString*
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[LocString]"* %1, i32 0, i32 0
  %3 = load %LocString** %2
  store %LocString* %3, %LocString** %t
  %4 = load %"RawPtr[LocString]"** %other.addr
  %5 = getelementptr inbounds %"RawPtr[LocString]"* %4, i32 0, i32 0
  %6 = load %LocString** %5
  %7 = load %"RawPtr[LocString]"** %"$this.addr"
  %8 = getelementptr inbounds %"RawPtr[LocString]"* %7, i32 0, i32 0
  store %LocString* %6, %LocString** %8
  %9 = load %LocString** %t
  %10 = load %"RawPtr[LocString]"** %other.addr
  %11 = getelementptr inbounds %"RawPtr[LocString]"* %10, i32 0, i32 0
  store %LocString* %9, %LocString** %11
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"<489"(%"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]" %other) #2 {
  %"$this.addr" = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %"$this", %"RawPtr[LocString]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %other, %"RawPtr[LocString]"* %other.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"** %"$this.addr"
  %2 = call i8* @bytePtr407(%"RawPtr[LocString]"* %1)
  %3 = call i8* @bytePtr407(%"RawPtr[LocString]"* %other.addr)
  %4 = call i64 @ptrDiff(i8* %2, i8* %3)
  store i64 0, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i1 @"<485"(i64 %4, i64 %5)
  ret i1 %6
}

; Function Attrs: inlinehint nounwind
define internal void @fromRef490(%"RawPtr[Token]"* sret %_result, %Token* %ptr) #3 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %ptr.addr = alloca %Token*
  store %Token* %ptr, %Token** %ptr.addr
  %res = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  call void @ctor133(%"RawPtr[Token]"* %res)
  %1 = load %Token** %ptr.addr
  %2 = getelementptr inbounds %"RawPtr[Token]"* %res, i32 0, i32 0
  store %Token* %1, %Token** %2
  %3 = load %"RawPtr[Token]"** %_result.addr
  call void @ctor210(%"RawPtr[Token]"* %3, %"RawPtr[Token]"* %res)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isNull491(%"RawPtr[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %"$this", %"RawPtr[Token]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[Token]"* %1, i32 0, i32 0
  %3 = load %Token** %2
  %4 = bitcast %Token* %3 to i8*
  %5 = call i1 @implOpRefEQ(i8* %4, i8* null)
  ret i1 %5
}

; Function Attrs: inlinehint nounwind
define internal void @swap492(%"RawPtr[Token]"* %"$this", %"RawPtr[Token]"* %other) #3 {
  %"$this.addr" = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %"$this", %"RawPtr[Token]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %other, %"RawPtr[Token]"** %other.addr
  %t = alloca %Token*
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[Token]"* %1, i32 0, i32 0
  %3 = load %Token** %2
  store %Token* %3, %Token** %t
  %4 = load %"RawPtr[Token]"** %other.addr
  %5 = getelementptr inbounds %"RawPtr[Token]"* %4, i32 0, i32 0
  %6 = load %Token** %5
  %7 = load %"RawPtr[Token]"** %"$this.addr"
  %8 = getelementptr inbounds %"RawPtr[Token]"* %7, i32 0, i32 0
  store %Token* %6, %Token** %8
  %9 = load %Token** %t
  %10 = load %"RawPtr[Token]"** %other.addr
  %11 = getelementptr inbounds %"RawPtr[Token]"* %10, i32 0, i32 0
  store %Token* %9, %Token** %11
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"<493"(%"RawPtr[Token]"* %"$this", %"RawPtr[Token]" %other) #2 {
  %"$this.addr" = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %"$this", %"RawPtr[Token]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %other, %"RawPtr[Token]"* %other.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"** %"$this.addr"
  %2 = call i8* @bytePtr204(%"RawPtr[Token]"* %1)
  %3 = call i8* @bytePtr204(%"RawPtr[Token]"* %other.addr)
  %4 = call i64 @ptrDiff(i8* %2, i8* %3)
  store i64 0, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i1 @"<485"(i64 %4, i64 %5)
  ret i1 %6
}

; Function Attrs: inlinehint nounwind
define internal void @fromRef494(%"RawPtr[UInt/rtct]"* sret %_result, i32* %ptr) #3 {
  %_result.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %_result, %"RawPtr[UInt/rtct]"** %_result.addr
  %ptr.addr = alloca i32*
  store i32* %ptr, i32** %ptr.addr
  %res = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  call void @ctor135(%"RawPtr[UInt/rtct]"* %res)
  %1 = load i32** %ptr.addr
  %2 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %res, i32 0, i32 0
  store i32* %1, i32** %2
  %3 = load %"RawPtr[UInt/rtct]"** %_result.addr
  call void @ctor312(%"RawPtr[UInt/rtct]"* %3, %"RawPtr[UInt/rtct]"* %res)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isNull495(%"RawPtr[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load i32** %2
  %4 = bitcast i32* %3 to i8*
  %5 = call i1 @implOpRefEQ(i8* %4, i8* null)
  ret i1 %5
}

; Function Attrs: inlinehint nounwind
define internal void @swap496(%"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]"* %other) #3 {
  %"$this.addr" = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %other, %"RawPtr[UInt/rtct]"** %other.addr
  %t = alloca i32*
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load i32** %2
  store i32* %3, i32** %t
  %4 = load %"RawPtr[UInt/rtct]"** %other.addr
  %5 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %4, i32 0, i32 0
  %6 = load i32** %5
  %7 = load %"RawPtr[UInt/rtct]"** %"$this.addr"
  %8 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %7, i32 0, i32 0
  store i32* %6, i32** %8
  %9 = load i32** %t
  %10 = load %"RawPtr[UInt/rtct]"** %other.addr
  %11 = getelementptr inbounds %"RawPtr[UInt/rtct]"* %10, i32 0, i32 0
  store i32* %9, i32** %11
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"<497"(%"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]" %other) #2 {
  %"$this.addr" = alloca %"RawPtr[UInt/rtct]"*
  store %"RawPtr[UInt/rtct]"* %"$this", %"RawPtr[UInt/rtct]"** %"$this.addr"
  %other.addr = alloca %"RawPtr[UInt/rtct]"
  store %"RawPtr[UInt/rtct]" %other, %"RawPtr[UInt/rtct]"* %other.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt/rtct]"** %"$this.addr"
  %2 = call i8* @bytePtr305(%"RawPtr[UInt/rtct]"* %1)
  %3 = call i8* @bytePtr305(%"RawPtr[UInt/rtct]"* %other.addr)
  %4 = call i64 @ptrDiff(i8* %2, i8* %3)
  store i64 0, i64* %tmp.v
  %5 = load i64* %tmp.v
  %6 = call i1 @"<485"(i64 %4, i64 %5)
  ret i1 %6
}

; Function Attrs: nounwind readnone
declare float @llvm.sqrt.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.sin.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.cos.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.powi.f32(float, i32) #5

; Function Attrs: nounwind readnone
declare float @llvm.pow.f32(float, float) #5

; Function Attrs: nounwind readnone
declare float @llvm.exp.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.exp2.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.log.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.log10.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.log2.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.floor.f32(float) #5

; Function Attrs: nounwind readnone
declare float @llvm.ceil.f32(float) #5

declare float @llvm.truc.f32(float)

; Function Attrs: nounwind readnone
declare float @llvm.rint.f32(float) #5

; Function Attrs: nounwind readnone
declare double @llvm.sqrt.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.sin.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.cos.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.powi.f64(double, i32) #5

; Function Attrs: nounwind readnone
declare double @llvm.pow.f64(double, double) #5

; Function Attrs: nounwind readnone
declare double @llvm.exp.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.exp2.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.log.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.log10.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.log2.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.floor.f64(double) #5

; Function Attrs: nounwind readnone
declare double @llvm.ceil.f64(double) #5

declare double @llvm.truc.f64(double)

; Function Attrs: nounwind readnone
declare double @llvm.rint.f64(double) #5

; Function Attrs: inlinehint nounwind
define internal void @ctor498(%"Vector[LocString]"* %"$this", i64 %size) #3 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %size.addr = alloca i64
  store i64 %size, i64* %size.addr
  %"$tmpC" = alloca %"RawPtr[LocString]"
  %"$tmpC1" = alloca %"RawPtr[LocString]"
  %p = alloca %"RawPtr[LocString]"
  %"$tmpC2" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 0
  call void @ctor401(%"RawPtr[LocString]"* %2)
  %3 = load %"Vector[LocString]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[LocString]"* %3, i32 0, i32 1
  call void @ctor401(%"RawPtr[LocString]"* %4)
  %5 = load %"Vector[LocString]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[LocString]"* %5, i32 0, i32 2
  call void @ctor401(%"RawPtr[LocString]"* %6)
  %7 = load %"Vector[LocString]"** %"$this.addr"
  %8 = getelementptr inbounds %"Vector[LocString]"* %7, i32 0, i32 0
  %9 = load i64* %size.addr
  call void @alloc425(%"RawPtr[LocString]"* %"$tmpC", i64 %9)
  %10 = load %"RawPtr[LocString]"* %"$tmpC"
  call void @"=411"(%"RawPtr[LocString]"* %8, %"RawPtr[LocString]" %10)
  %11 = load %"Vector[LocString]"** %"$this.addr"
  %12 = getelementptr inbounds %"Vector[LocString]"* %11, i32 0, i32 1
  %13 = load %"Vector[LocString]"** %"$this.addr"
  %14 = getelementptr inbounds %"Vector[LocString]"* %13, i32 0, i32 0
  %15 = load i64* %size.addr
  call void @advance412(%"RawPtr[LocString]"* %"$tmpC1", %"RawPtr[LocString]"* %14, i64 %15)
  %16 = load %"RawPtr[LocString]"* %"$tmpC1"
  call void @"=411"(%"RawPtr[LocString]"* %12, %"RawPtr[LocString]" %16)
  %17 = load %"Vector[LocString]"** %"$this.addr"
  %18 = getelementptr inbounds %"Vector[LocString]"* %17, i32 0, i32 2
  %19 = load %"Vector[LocString]"** %"$this.addr"
  %20 = getelementptr inbounds %"Vector[LocString]"* %19, i32 0, i32 1
  %21 = load %"RawPtr[LocString]"* %20
  call void @"=411"(%"RawPtr[LocString]"* %18, %"RawPtr[LocString]" %21)
  %22 = load %"Vector[LocString]"** %"$this.addr"
  %23 = getelementptr inbounds %"Vector[LocString]"* %22, i32 0, i32 0
  call void @ctor414(%"RawPtr[LocString]"* %p, %"RawPtr[LocString]"* %23)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %24 = load %"Vector[LocString]"** %"$this.addr"
  %25 = getelementptr inbounds %"Vector[LocString]"* %24, i32 0, i32 1
  %26 = load %"RawPtr[LocString]"* %25
  %27 = call i1 @"==404"(%"RawPtr[LocString]"* %p, %"RawPtr[LocString]" %26)
  %28 = xor i1 true, %27
  br i1 %28, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %29 = call %LocString* @value418(%"RawPtr[LocString]"* %p)
  call void @ctor499(%LocString* %29)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @advance419(%"RawPtr[LocString]"* %"$tmpC2", %"RawPtr[LocString]"* %p)
  %30 = load %"RawPtr[LocString]"* %"$tmpC2"
  call void @"=411"(%"RawPtr[LocString]"* %p, %"RawPtr[LocString]" %30)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor499(%LocString* %"$this") #2 {
  %"$this.addr" = alloca %LocString*
  store %LocString* %"$this", %LocString** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %LocString** %"$this.addr"
  %2 = getelementptr inbounds %LocString* %1, i32 0, i32 0
  call void @ctor500(%"Tuple[Location/rtct, String/rtct]"* %2)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor500(%"Tuple[Location/rtct, String/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %"$this", %"Tuple[Location/rtct, String/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location/rtct, String/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %1, i32 0, i32 0
  call void @ctor122(%Location* %2)
  %3 = load %"Tuple[Location/rtct, String/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %3, i32 0, i32 1
  call void @ctor131(%String* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @swap501(%"Vector[LocString]"* %"$this", %"Vector[LocString]"* %other) #3 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %other.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %other, %"Vector[LocString]"** %other.addr
  %tmp = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 0
  call void @ctor414(%"RawPtr[LocString]"* %tmp, %"RawPtr[LocString]"* %2)
  %3 = load %"Vector[LocString]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[LocString]"* %3, i32 0, i32 0
  %5 = load %"Vector[LocString]"** %other.addr
  %6 = getelementptr inbounds %"Vector[LocString]"* %5, i32 0, i32 0
  %7 = load %"RawPtr[LocString]"* %6
  call void @"=411"(%"RawPtr[LocString]"* %4, %"RawPtr[LocString]" %7)
  %8 = load %"Vector[LocString]"** %other.addr
  %9 = getelementptr inbounds %"Vector[LocString]"* %8, i32 0, i32 0
  %10 = load %"RawPtr[LocString]"* %tmp
  call void @"=411"(%"RawPtr[LocString]"* %9, %"RawPtr[LocString]" %10)
  %11 = load %"Vector[LocString]"** %"$this.addr"
  %12 = getelementptr inbounds %"Vector[LocString]"* %11, i32 0, i32 1
  %13 = load %"RawPtr[LocString]"* %12
  call void @"=411"(%"RawPtr[LocString]"* %tmp, %"RawPtr[LocString]" %13)
  %14 = load %"Vector[LocString]"** %"$this.addr"
  %15 = getelementptr inbounds %"Vector[LocString]"* %14, i32 0, i32 1
  %16 = load %"Vector[LocString]"** %other.addr
  %17 = getelementptr inbounds %"Vector[LocString]"* %16, i32 0, i32 1
  %18 = load %"RawPtr[LocString]"* %17
  call void @"=411"(%"RawPtr[LocString]"* %15, %"RawPtr[LocString]" %18)
  %19 = load %"Vector[LocString]"** %other.addr
  %20 = getelementptr inbounds %"Vector[LocString]"* %19, i32 0, i32 1
  %21 = load %"RawPtr[LocString]"* %tmp
  call void @"=411"(%"RawPtr[LocString]"* %20, %"RawPtr[LocString]" %21)
  %22 = load %"Vector[LocString]"** %"$this.addr"
  %23 = getelementptr inbounds %"Vector[LocString]"* %22, i32 0, i32 2
  %24 = load %"RawPtr[LocString]"* %23
  call void @"=411"(%"RawPtr[LocString]"* %tmp, %"RawPtr[LocString]" %24)
  %25 = load %"Vector[LocString]"** %"$this.addr"
  %26 = getelementptr inbounds %"Vector[LocString]"* %25, i32 0, i32 2
  %27 = load %"Vector[LocString]"** %other.addr
  %28 = getelementptr inbounds %"Vector[LocString]"* %27, i32 0, i32 2
  %29 = load %"RawPtr[LocString]"* %28
  call void @"=411"(%"RawPtr[LocString]"* %26, %"RawPtr[LocString]" %29)
  %30 = load %"Vector[LocString]"** %other.addr
  %31 = getelementptr inbounds %"Vector[LocString]"* %30, i32 0, i32 2
  %32 = load %"RawPtr[LocString]"* %tmp
  call void @"=411"(%"RawPtr[LocString]"* %31, %"RawPtr[LocString]" %32)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isEmpty502(%"Vector[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 0
  %3 = load %"Vector[LocString]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[LocString]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[LocString]"* %4
  %6 = call i1 @"==404"(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]" %5)
  ret i1 %6
}

; Function Attrs: alwaysinline nounwind
define internal %LocString* @at503(%"Vector[LocString]"* %"$this", i64 %index) #2 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 0
  %3 = load i64* %index.addr
  call void @advance412(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]"* %2, i64 %3)
  %4 = call %LocString* @value418(%"RawPtr[LocString]"* %"$tmpC")
  ret %LocString* %4
}

; Function Attrs: alwaysinline nounwind
define internal %LocString* @"()504"(%"Vector[LocString]"* %"$this", i64 %index) #2 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 0
  %3 = load i64* %index.addr
  call void @advance412(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]"* %2, i64 %3)
  %4 = call %LocString* @value418(%"RawPtr[LocString]"* %"$tmpC")
  ret %LocString* %4
}

; Function Attrs: alwaysinline nounwind
define internal %LocString* @front505(%"Vector[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 0
  %3 = call %LocString* @value418(%"RawPtr[LocString]"* %2)
  ret %LocString* %3
}

; Function Attrs: alwaysinline nounwind
define internal %LocString* @back506(%"Vector[LocString]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 1
  call void @advance445(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]"* %2, i64 -1)
  %3 = call %LocString* @value418(%"RawPtr[LocString]"* %"$tmpC")
  ret %LocString* %3
}

; Function Attrs: alwaysinline nounwind
define internal void @subrange(%"ContiguousMemoryRange[LocString]"* sret %_result, %"Vector[LocString]"* %"$this", i64 %index, i64 %num) #2 {
  %_result.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %_result, %"ContiguousMemoryRange[LocString]"** %_result.addr
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %num.addr = alloca i64
  store i64 %num, i64* %num.addr
  %"$tmpC" = alloca %"RawPtr[LocString]"
  %"$tmpC1" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %_result.addr
  %2 = load %"Vector[LocString]"** %"$this.addr"
  %3 = getelementptr inbounds %"Vector[LocString]"* %2, i32 0, i32 0
  %4 = load i64* %index.addr
  call void @advance412(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]"* %3, i64 %4)
  %5 = load %"RawPtr[LocString]"* %"$tmpC"
  %6 = load %"Vector[LocString]"** %"$this.addr"
  %7 = getelementptr inbounds %"Vector[LocString]"* %6, i32 0, i32 0
  %8 = load i64* %index.addr
  %9 = load i64* %num.addr
  %10 = call i64 @"+24"(i64 %8, i64 %9)
  call void @advance412(%"RawPtr[LocString]"* %"$tmpC1", %"RawPtr[LocString]"* %7, i64 %10)
  %11 = load %"RawPtr[LocString]"* %"$tmpC1"
  call void @ctor430(%"ContiguousMemoryRange[LocString]"* %1, %"RawPtr[LocString]" %5, %"RawPtr[LocString]" %11)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @insertBefore507(%"Vector[LocString]"* %"$this", %LocString* %value, %"ContiguousMemoryRange[LocString]" %pos) #3 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %value.addr = alloca %LocString*
  store %LocString* %value, %LocString** %value.addr
  %pos.addr = alloca %"ContiguousMemoryRange[LocString]"
  store %"ContiguousMemoryRange[LocString]" %pos, %"ContiguousMemoryRange[LocString]"* %pos.addr
  %posCount = alloca i64
  %"$tmpC" = alloca %"RawPtr[LocString]"
  %p = alloca %"RawPtr[LocString]"
  %q = alloca %"RawPtr[LocString]"
  %"$tmpC1" = alloca %"RawPtr[LocString]"
  %"$tmpC2" = alloca %"RawPtr[LocString]"
  %"$tmpC3" = alloca %"RawPtr[LocString]"
  %"$tmpC4" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  call void @frontPtr453(%"RawPtr[LocString]"* %"$tmpC", %"ContiguousMemoryRange[LocString]"* %pos.addr)
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 0
  %3 = load %"RawPtr[LocString]"* %2
  %4 = call i64 @diff406(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]" %3)
  store i64 %4, i64* %posCount
  %5 = load %"Vector[LocString]"** %"$this.addr"
  %6 = load %"Vector[LocString]"** %"$this.addr"
  %7 = call i64 @size409(%"Vector[LocString]"* %6)
  %8 = call i64 @"+67"(i64 %7, i32 1)
  call void @reserve408(%"Vector[LocString]"* %5, i64 %8)
  %9 = load %"Vector[LocString]"** %"$this.addr"
  %10 = getelementptr inbounds %"Vector[LocString]"* %9, i32 0, i32 1
  call void @advance445(%"RawPtr[LocString]"* %p, %"RawPtr[LocString]"* %10, i64 -1)
  %11 = load %"Vector[LocString]"** %"$this.addr"
  %12 = getelementptr inbounds %"Vector[LocString]"* %11, i32 0, i32 0
  %13 = load i64* %posCount
  %14 = call i64 @-508(i64 %13, i32 1)
  call void @advance445(%"RawPtr[LocString]"* %q, %"RawPtr[LocString]"* %12, i64 %14)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %15 = load %"RawPtr[LocString]"* %q
  %16 = call i1 @"==404"(%"RawPtr[LocString]"* %p, %"RawPtr[LocString]" %15)
  %17 = xor i1 true, %16
  br i1 %17, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  call void @advance419(%"RawPtr[LocString]"* %"$tmpC1", %"RawPtr[LocString]"* %p)
  %18 = call %LocString* @value418(%"RawPtr[LocString]"* %"$tmpC1")
  %19 = call %LocString* @value418(%"RawPtr[LocString]"* %p)
  call void @ctor416(%LocString* %18, %LocString* %19)
  %20 = call %LocString* @value418(%"RawPtr[LocString]"* %p)
  call void @dtor422(%LocString* %20)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @advance445(%"RawPtr[LocString]"* %"$tmpC2", %"RawPtr[LocString]"* %p, i64 -1)
  %21 = load %"RawPtr[LocString]"* %"$tmpC2"
  call void @"=411"(%"RawPtr[LocString]"* %p, %"RawPtr[LocString]" %21)
  br label %while_block

while_end:                                        ; preds = %while_block
  call void @advance419(%"RawPtr[LocString]"* %"$tmpC3", %"RawPtr[LocString]"* %p)
  %22 = call %LocString* @value418(%"RawPtr[LocString]"* %"$tmpC3")
  %23 = load %LocString** %value.addr
  call void @ctor416(%LocString* %22, %LocString* %23)
  %24 = load %"Vector[LocString]"** %"$this.addr"
  %25 = getelementptr inbounds %"Vector[LocString]"* %24, i32 0, i32 1
  %26 = load %"Vector[LocString]"** %"$this.addr"
  %27 = getelementptr inbounds %"Vector[LocString]"* %26, i32 0, i32 1
  call void @advance419(%"RawPtr[LocString]"* %"$tmpC4", %"RawPtr[LocString]"* %27)
  %28 = load %"RawPtr[LocString]"* %"$tmpC4"
  call void @"=411"(%"RawPtr[LocString]"* %25, %"RawPtr[LocString]" %28)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i64 @-508(i64 %x, i32 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i32
  store i32 %y, i32* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i32* %y.addr
  %3 = call i64 @cmn106(i64 %1, i32 %2)
  %4 = load i32* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn107(i32 %4, i64 %5)
  %7 = call i64 @_DiffType_opMinus(i64 %3, i64 %6)
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal void @insertAfter(%"Vector[LocString]"* %"$this", %LocString* %value, %"ContiguousMemoryRange[LocString]" %pos) #3 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %value.addr = alloca %LocString*
  store %LocString* %value, %LocString** %value.addr
  %pos.addr = alloca %"ContiguousMemoryRange[LocString]"
  store %"ContiguousMemoryRange[LocString]" %pos, %"ContiguousMemoryRange[LocString]"* %pos.addr
  %tmp.v = alloca %"ContiguousMemoryRange[LocString]"
  %"$tmpC" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = load %LocString** %value.addr
  call void @backPtr454(%"RawPtr[LocString]"* %"$tmpC", %"ContiguousMemoryRange[LocString]"* %pos.addr)
  %3 = load %"RawPtr[LocString]"* %"$tmpC"
  %4 = load %"Vector[LocString]"** %"$this.addr"
  %5 = getelementptr inbounds %"Vector[LocString]"* %4, i32 0, i32 1
  %6 = load %"RawPtr[LocString]"* %5
  call void @ctor430(%"ContiguousMemoryRange[LocString]"* %tmp.v, %"RawPtr[LocString]" %3, %"RawPtr[LocString]" %6)
  %7 = load %"ContiguousMemoryRange[LocString]"* %tmp.v
  call void @insertBefore507(%"Vector[LocString]"* %1, %LocString* %2, %"ContiguousMemoryRange[LocString]" %7)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popBack509(%"Vector[LocString]"* %"$this") #3 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[LocString]"* %1, i32 0, i32 1
  %3 = load %"Vector[LocString]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[LocString]"* %3, i32 0, i32 1
  call void @advance445(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]"* %4, i64 -1)
  %5 = load %"RawPtr[LocString]"* %"$tmpC"
  call void @"=411"(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]" %5)
  %6 = load %"Vector[LocString]"** %"$this.addr"
  %7 = getelementptr inbounds %"Vector[LocString]"* %6, i32 0, i32 1
  %8 = call %LocString* @value418(%"RawPtr[LocString]"* %7)
  call void @dtor422(%LocString* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @remove510(%"Vector[LocString]"* %"$this", %"ContiguousMemoryRange[LocString]" %range) #3 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %range.addr = alloca %"ContiguousMemoryRange[LocString]"
  store %"ContiguousMemoryRange[LocString]" %range, %"ContiguousMemoryRange[LocString]"* %range.addr
  %rBegin = alloca %"RawPtr[LocString]"
  %rEnd = alloca %"RawPtr[LocString]"
  %"$rangeVar" = alloca %"ContiguousMemoryRange[LocString]"
  %el = alloca %LocString*
  %"$tmpC" = alloca %"RawPtr[LocString]"
  %"$tmpC5" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  call void @frontPtr453(%"RawPtr[LocString]"* %rBegin, %"ContiguousMemoryRange[LocString]"* %range.addr)
  call void @backPtr454(%"RawPtr[LocString]"* %rEnd, %"ContiguousMemoryRange[LocString]"* %range.addr)
  call void @ctor511(%"ContiguousMemoryRange[LocString]"* %"$rangeVar", %"ContiguousMemoryRange[LocString]"* %range.addr)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = call i1 @isEmpty431(%"ContiguousMemoryRange[LocString]"* %"$rangeVar")
  %2 = xor i1 true, %1
  br i1 %2, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %3 = call %LocString* @front432(%"ContiguousMemoryRange[LocString]"* %"$rangeVar")
  store %LocString* %3, %LocString** %el
  %4 = load %LocString** %el
  call void @dtor422(%LocString* %4)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @popFront433(%"ContiguousMemoryRange[LocString]"* %"$rangeVar")
  br label %while_block

while_end:                                        ; preds = %while_block
  br label %while_block1

while_block1:                                     ; preds = %while_step3, %while_end
  %5 = load %"Vector[LocString]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[LocString]"* %5, i32 0, i32 1
  %7 = load %"RawPtr[LocString]"* %6
  %8 = call i1 @"==404"(%"RawPtr[LocString]"* %rEnd, %"RawPtr[LocString]" %7)
  %9 = xor i1 true, %8
  br i1 %9, label %while_body2, label %while_end4

while_body2:                                      ; preds = %while_block1
  %10 = call %LocString* @value418(%"RawPtr[LocString]"* %rBegin)
  %11 = call %LocString* @value418(%"RawPtr[LocString]"* %rEnd)
  call void @ctor416(%LocString* %10, %LocString* %11)
  %12 = call %LocString* @value418(%"RawPtr[LocString]"* %rEnd)
  call void @dtor422(%LocString* %12)
  call void @advance419(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]"* %rBegin)
  %13 = load %"RawPtr[LocString]"* %"$tmpC"
  call void @"=411"(%"RawPtr[LocString]"* %rBegin, %"RawPtr[LocString]" %13)
  call void @advance419(%"RawPtr[LocString]"* %"$tmpC5", %"RawPtr[LocString]"* %rEnd)
  %14 = load %"RawPtr[LocString]"* %"$tmpC5"
  call void @"=411"(%"RawPtr[LocString]"* %rEnd, %"RawPtr[LocString]" %14)
  br label %while_step3

while_step3:                                      ; preds = %while_body2
  br label %while_block1

while_end4:                                       ; preds = %while_block1
  %15 = load %"Vector[LocString]"** %"$this.addr"
  %16 = getelementptr inbounds %"Vector[LocString]"* %15, i32 0, i32 1
  %17 = load %"RawPtr[LocString]"* %rBegin
  call void @"=411"(%"RawPtr[LocString]"* %16, %"RawPtr[LocString]" %17)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor511(%"ContiguousMemoryRange[LocString]"* %"$this", %"ContiguousMemoryRange[LocString]"* %other) #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %"$this", %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %other.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %other, %"ContiguousMemoryRange[LocString]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[LocString]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %3, i32 0, i32 0
  call void @ctor414(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]"* %4)
  %5 = load %"ContiguousMemoryRange[LocString]"** %"$this.addr"
  %6 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %5, i32 0, i32 1
  %7 = load %"ContiguousMemoryRange[LocString]"** %other.addr
  %8 = getelementptr inbounds %"ContiguousMemoryRange[LocString]"* %7, i32 0, i32 1
  call void @ctor414(%"RawPtr[LocString]"* %6, %"RawPtr[LocString]"* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @remove512(%"Vector[LocString]"* %"$this", i64 %index) #3 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %r = alloca %"ContiguousMemoryRange[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  call void @all429(%"ContiguousMemoryRange[LocString]"* %r, %"Vector[LocString]"* %1)
  %2 = load i64* %index.addr
  call void @popFront449(%"ContiguousMemoryRange[LocString]"* %r, i64 %2)
  %3 = load %"Vector[LocString]"** %"$this.addr"
  %4 = call i64 @size409(%"Vector[LocString]"* %3)
  %5 = load i64* %index.addr
  %6 = call i64 @-44(i64 %4, i64 %5)
  %7 = call i64 @-246(i64 %6, i32 1)
  call void @popBack450(%"ContiguousMemoryRange[LocString]"* %r, i64 %7)
  %8 = load %"Vector[LocString]"** %"$this.addr"
  %9 = load %"ContiguousMemoryRange[LocString]"* %r
  call void @remove510(%"Vector[LocString]"* %8, %"ContiguousMemoryRange[LocString]" %9)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @resize(%"Vector[LocString]"* %"$this", i64 %n) #3 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %oldSize = alloca i64
  %newEnd = alloca %"RawPtr[LocString]"
  %"$tmpC" = alloca %"RawPtr[LocString]"
  %newEnd4 = alloca %"RawPtr[LocString]"
  %"$tmpC9" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = call i64 @size409(%"Vector[LocString]"* %1)
  store i64 %2, i64* %oldSize
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64* %n.addr
  %4 = load i64* %oldSize
  %5 = call i1 @"==513"(i64 %3, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64* %n.addr
  %7 = load i64* %oldSize
  %8 = call i1 @"<"(i64 %6, i64 %7)
  br i1 %8, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %9 = load %"Vector[LocString]"** %"$this.addr"
  %10 = getelementptr inbounds %"Vector[LocString]"* %9, i32 0, i32 0
  %11 = load i64* %n.addr
  call void @advance412(%"RawPtr[LocString]"* %newEnd, %"RawPtr[LocString]"* %10, i64 %11)
  br label %while_block

if_else:                                          ; preds = %if_block1
  %12 = load %"Vector[LocString]"** %"$this.addr"
  %13 = load i64* %n.addr
  call void @reserve408(%"Vector[LocString]"* %12, i64 %13)
  %14 = load %"Vector[LocString]"** %"$this.addr"
  %15 = getelementptr inbounds %"Vector[LocString]"* %14, i32 0, i32 0
  %16 = load i64* %n.addr
  call void @advance412(%"RawPtr[LocString]"* %newEnd4, %"RawPtr[LocString]"* %15, i64 %16)
  br label %while_block5

if_end3:                                          ; preds = %while_end8, %while_end
  ret void

while_block:                                      ; preds = %while_step, %if_then2
  %17 = load %"Vector[LocString]"** %"$this.addr"
  %18 = getelementptr inbounds %"Vector[LocString]"* %17, i32 0, i32 1
  %19 = load %"RawPtr[LocString]"* %newEnd
  %20 = call i1 @"==404"(%"RawPtr[LocString]"* %18, %"RawPtr[LocString]" %19)
  %21 = xor i1 true, %20
  br i1 %21, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %22 = load %"Vector[LocString]"** %"$this.addr"
  %23 = getelementptr inbounds %"Vector[LocString]"* %22, i32 0, i32 1
  %24 = load %"Vector[LocString]"** %"$this.addr"
  %25 = getelementptr inbounds %"Vector[LocString]"* %24, i32 0, i32 1
  call void @advance445(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]"* %25, i64 -1)
  %26 = load %"RawPtr[LocString]"* %"$tmpC"
  call void @"=411"(%"RawPtr[LocString]"* %23, %"RawPtr[LocString]" %26)
  %27 = load %"Vector[LocString]"** %"$this.addr"
  %28 = getelementptr inbounds %"Vector[LocString]"* %27, i32 0, i32 1
  %29 = call %LocString* @value418(%"RawPtr[LocString]"* %28)
  call void @dtor422(%LocString* %29)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  br label %if_end3

while_block5:                                     ; preds = %while_step7, %if_else
  %30 = load %"Vector[LocString]"** %"$this.addr"
  %31 = getelementptr inbounds %"Vector[LocString]"* %30, i32 0, i32 1
  %32 = load %"RawPtr[LocString]"* %newEnd4
  %33 = call i1 @"==404"(%"RawPtr[LocString]"* %31, %"RawPtr[LocString]" %32)
  %34 = xor i1 true, %33
  br i1 %34, label %while_body6, label %while_end8

while_body6:                                      ; preds = %while_block5
  %35 = load %"Vector[LocString]"** %"$this.addr"
  %36 = getelementptr inbounds %"Vector[LocString]"* %35, i32 0, i32 1
  %37 = call %LocString* @value418(%"RawPtr[LocString]"* %36)
  call void @ctor499(%LocString* %37)
  %38 = load %"Vector[LocString]"** %"$this.addr"
  %39 = getelementptr inbounds %"Vector[LocString]"* %38, i32 0, i32 1
  %40 = load %"Vector[LocString]"** %"$this.addr"
  %41 = getelementptr inbounds %"Vector[LocString]"* %40, i32 0, i32 1
  call void @advance419(%"RawPtr[LocString]"* %"$tmpC9", %"RawPtr[LocString]"* %41)
  %42 = load %"RawPtr[LocString]"* %"$tmpC9"
  call void @"=411"(%"RawPtr[LocString]"* %39, %"RawPtr[LocString]" %42)
  br label %while_step7

while_step7:                                      ; preds = %while_body6
  br label %while_block5

while_end8:                                       ; preds = %while_block5
  br label %if_end3
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==513"(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn25(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn25(i64 %4, i64 %5)
  %7 = icmp eq i64 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal void @clear514(%"Vector[LocString]"* %"$this") #3 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %tmp.v = alloca %"ContiguousMemoryRange[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = load %"Vector[LocString]"** %"$this.addr"
  %3 = getelementptr inbounds %"Vector[LocString]"* %2, i32 0, i32 0
  %4 = load %"RawPtr[LocString]"* %3
  %5 = load %"Vector[LocString]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[LocString]"* %5, i32 0, i32 1
  %7 = load %"RawPtr[LocString]"* %6
  call void @ctor430(%"ContiguousMemoryRange[LocString]"* %tmp.v, %"RawPtr[LocString]" %4, %"RawPtr[LocString]" %7)
  %8 = load %"ContiguousMemoryRange[LocString]"* %tmp.v
  call void @remove510(%"Vector[LocString]"* %1, %"ContiguousMemoryRange[LocString]" %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %"Vector[LocString]"* @"=515"(%"Vector[LocString]"* %"$this", %"Vector[LocString]"* %other) #3 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %other.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %other, %"Vector[LocString]"** %other.addr
  %tmp = alloca %"Vector[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %other.addr
  call void @ctor424(%"Vector[LocString]"* %tmp, %"Vector[LocString]"* %1)
  %2 = load %"Vector[LocString]"** %"$this.addr"
  call void @swap501(%"Vector[LocString]"* %tmp, %"Vector[LocString]"* %2)
  %3 = load %"Vector[LocString]"** %"$this.addr"
  call void @dtor426(%"Vector[LocString]"* %tmp)
  ret %"Vector[LocString]"* %3

dumy_block:                                       ; No predecessors!
  call void @dtor426(%"Vector[LocString]"* %tmp)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==516"(%"Vector[LocString]"* %"$this", %"Vector[LocString]"* %other) #3 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %other.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %other, %"Vector[LocString]"** %other.addr
  %i = alloca i32
  %s = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = call i64 @size409(%"Vector[LocString]"* %1)
  %3 = load %"Vector[LocString]"** %other.addr
  %4 = call i64 @size409(%"Vector[LocString]"* %3)
  %5 = call i1 @"!=278"(i64 %2, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  store i32 0, i32* %i
  %6 = load %"Vector[LocString]"** %"$this.addr"
  %7 = call i64 @size409(%"Vector[LocString]"* %6)
  store i64 %7, i64* %s
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %8 = load i32* %i
  %9 = load i64* %s
  %10 = call i1 @"<517"(i32 %8, i64 %9)
  br i1 %10, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block1

while_step:                                       ; preds = %if_end3
  %11 = call i32 @"post_++50"(i32* %i)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret i1 true

if_block1:                                        ; preds = %while_body
  %12 = load %"Vector[LocString]"** %"$this.addr"
  %13 = load i32* %i
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %tmp.v
  %15 = load i64* %tmp.v
  %16 = call %LocString* @at503(%"Vector[LocString]"* %12, i64 %15)
  %17 = load %"Vector[LocString]"** %other.addr
  %18 = load i32* %i
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %tmp.v4
  %20 = load i64* %tmp.v4
  %21 = call %LocString* @at503(%"Vector[LocString]"* %17, i64 %20)
  %22 = call i1 @"==518"(%LocString* %16, %LocString* %21)
  %23 = xor i1 true, %22
  br i1 %23, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block5, %if_block1
  br label %while_step

dumy_block5:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"<517"(i32 %x, i64 %y) #2 {
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn69(i32 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i32* %x.addr
  %6 = call i64 @cmn68(i64 %4, i32 %5)
  %7 = icmp slt i64 %3, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==518"(%LocString* %"$this", %LocString* %other) #2 {
  %"$this.addr" = alloca %LocString*
  store %LocString* %"$this", %LocString** %"$this.addr"
  %other.addr = alloca %LocString*
  store %LocString* %other, %LocString** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LocString** %"$this.addr"
  %2 = getelementptr inbounds %LocString* %1, i32 0, i32 0
  %3 = load %LocString** %other.addr
  %4 = getelementptr inbounds %LocString* %3, i32 0, i32 0
  %5 = call i1 @"==519"(%"Tuple[Location/rtct, String/rtct]"* %2, %"Tuple[Location/rtct, String/rtct]"* %4)
  ret i1 %5
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==519"(%"Tuple[Location/rtct, String/rtct]"* %"$this", %"Tuple[Location/rtct, String/rtct]"* %other) #2 {
  %"$this.addr" = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %"$this", %"Tuple[Location/rtct, String/rtct]"** %"$this.addr"
  %other.addr = alloca %"Tuple[Location/rtct, String/rtct]"*
  store %"Tuple[Location/rtct, String/rtct]"* %other, %"Tuple[Location/rtct, String/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location/rtct, String/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %1, i32 0, i32 0
  %3 = load %"Tuple[Location/rtct, String/rtct]"** %other.addr
  %4 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %3, i32 0, i32 0
  %5 = call i1 @"==520"(%Location* %2, %Location* %4)
  br i1 %5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %6 = load %"Tuple[Location/rtct, String/rtct]"** %"$this.addr"
  %7 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %6, i32 0, i32 1
  %8 = load %"Tuple[Location/rtct, String/rtct]"** %other.addr
  %9 = getelementptr inbounds %"Tuple[Location/rtct, String/rtct]"* %8, i32 0, i32 1
  %10 = call i1 @"==523"(%String* %7, %String* %9)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==520"(%Location* %"$this", %Location* %other) #2 {
  %"$this.addr" = alloca %Location*
  store %Location* %"$this", %Location** %"$this.addr"
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location** %"$this.addr"
  %2 = getelementptr inbounds %Location* %1, i32 0, i32 0
  %3 = load %Location** %other.addr
  %4 = getelementptr inbounds %Location* %3, i32 0, i32 0
  %5 = call i1 @"==521"(%SourceCode* %2, %SourceCode* %4)
  br i1 %5, label %cond.true1, label %cond.false2

cond.true:                                        ; preds = %cond.end3
  %6 = load %Location** %"$this.addr"
  %7 = getelementptr inbounds %Location* %6, i32 0, i32 2
  %8 = load %Location** %other.addr
  %9 = getelementptr inbounds %Location* %8, i32 0, i32 2
  %10 = call i1 @"==522"(%LineCol* %7, %LineCol* %9)
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res4 = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res4

cond.true1:                                       ; preds = %code
  %11 = load %Location** %"$this.addr"
  %12 = getelementptr inbounds %Location* %11, i32 0, i32 1
  %13 = load %Location** %other.addr
  %14 = getelementptr inbounds %Location* %13, i32 0, i32 1
  %15 = call i1 @"==522"(%LineCol* %12, %LineCol* %14)
  br label %cond.end3

cond.false2:                                      ; preds = %code
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ %15, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res, label %cond.true, label %cond.false
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==521"(%SourceCode* %"$this", %SourceCode* %other) #2 {
  %"$this.addr" = alloca %SourceCode*
  store %SourceCode* %"$this", %SourceCode** %"$this.addr"
  %other.addr = alloca %SourceCode*
  store %SourceCode* %other, %SourceCode** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %SourceCode** %"$this.addr"
  %2 = getelementptr inbounds %SourceCode* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %SourceCode** %other.addr
  %5 = getelementptr inbounds %SourceCode* %4, i32 0, i32 0
  %6 = load i8** %5
  %7 = call i1 @implOpRefEQ(i8* %3, i8* %6)
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==522"(%LineCol* %"$this", %LineCol* %other) #2 {
  %"$this.addr" = alloca %LineCol*
  store %LineCol* %"$this", %LineCol** %"$this.addr"
  %other.addr = alloca %LineCol*
  store %LineCol* %other, %LineCol** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LineCol** %"$this.addr"
  %2 = getelementptr inbounds %LineCol* %1, i32 0, i32 0
  %3 = load i32* %2
  %4 = load %LineCol** %other.addr
  %5 = getelementptr inbounds %LineCol* %4, i32 0, i32 0
  %6 = load i32* %5
  %7 = call i1 @"==340"(i32 %3, i32 %6)
  br i1 %7, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %8 = load %LineCol** %"$this.addr"
  %9 = getelementptr inbounds %LineCol* %8, i32 0, i32 1
  %10 = load i32* %9
  %11 = load %LineCol** %other.addr
  %12 = getelementptr inbounds %LineCol* %11, i32 0, i32 1
  %13 = load i32* %12
  %14 = call i1 @"==340"(i32 %10, i32 %13)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %14, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==523"(%String* %"$this", %String* %other) #3 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %other.addr = alloca %String*
  store %String* %other, %String** %other.addr
  %i = alloca i64
  %s = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %String** %"$this.addr"
  %2 = call i64 @size152(%String* %1)
  %3 = load %String** %other.addr
  %4 = call i64 @size152(%String* %3)
  %5 = call i1 @"!=278"(i64 %2, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  store i64 0, i64* %i
  %6 = load %String** %"$this.addr"
  %7 = call i64 @size152(%String* %6)
  store i64 %7, i64* %s
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %8 = load i64* %i
  %9 = load i64* %s
  %10 = call i1 @"<"(i64 %8, i64 %9)
  br i1 %10, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block1

while_step:                                       ; preds = %if_end3
  %11 = call i64 @"post_++54"(i64* %i)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret i1 true

if_block1:                                        ; preds = %while_body
  %12 = load %String** %"$this.addr"
  %13 = load i64* %i
  %14 = call i8* @at524(%String* %12, i64 %13)
  %15 = load i8* %14
  %16 = load %String** %other.addr
  %17 = load i64* %i
  %18 = call i8* @at524(%String* %16, i64 %17)
  %19 = load i8* %18
  %20 = icmp ne i8 %15, %19
  br i1 %20, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block4, %if_block1
  br label %while_step

dumy_block4:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: alwaysinline nounwind
define internal i8* @at524(%String* %"$this", i64 %index) #2 {
  %"$this.addr" = alloca %String*
  store %String* %"$this", %String** %"$this.addr"
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String** %"$this.addr"
  %2 = getelementptr inbounds %String* %1, i32 0, i32 0
  %3 = load i64* %index.addr
  store i64 %3, i64* %tmp.v
  %4 = load i64* %tmp.v
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %2, i64 %4)
  %5 = call i8* @value(%"RawPtr[Char/rtct]"* %"$tmpC")
  ret i8* %5
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"!=525"(%"Vector[LocString]"* %"$this", %"Vector[LocString]"* %other) #2 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %other.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %other, %"Vector[LocString]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"** %"$this.addr"
  %2 = load %"Vector[LocString]"** %other.addr
  %3 = call i1 @"==516"(%"Vector[LocString]"* %1, %"Vector[LocString]"* %2)
  %4 = xor i1 true, %3
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal void @_dumpThis(%"Vector[LocString]"* %"$this", %StringRef %prefix) #3 {
  %"$this.addr" = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %"$this", %"Vector[LocString]"** %"$this.addr"
  %prefix.addr = alloca %StringRef
  store %StringRef %prefix, %StringRef* %prefix.addr
  %"$tmpForRef" = alloca %StringRef
  %const.bytes = alloca [9 x i8]
  %const.struct = alloca %StringRef
  %"$tmpForRef1" = alloca %StringRef
  %const.bytes2 = alloca [18 x i8]
  %const.struct3 = alloca %StringRef
  %"$tmpForRef4" = alloca %StringRef
  %const.bytes5 = alloca [3 x i8]
  %const.struct6 = alloca %StringRef
  %"$tmpC" = alloca %StreamRefWrapperHelperClass
  %"$tmpForRef7" = alloca %StringRef
  %const.bytes8 = alloca [11 x i8]
  %const.struct9 = alloca %StringRef
  %tmp.v = alloca i32
  %"$tmpForRef10" = alloca %StringRef
  %const.bytes11 = alloca [13 x i8]
  %const.struct12 = alloca %StringRef
  %"$tmpC13" = alloca %StreamRefWrapperHelperClass
  %"$tmpForRef14" = alloca %StringRef
  %const.bytes15 = alloca [11 x i8]
  %const.struct16 = alloca %StringRef
  %"$tmpC17" = alloca %StreamRefWrapperHelperClass
  %"$tmpForRef18" = alloca %StringRef
  %const.bytes19 = alloca [18 x i8]
  %const.struct20 = alloca %StringRef
  %"$tmpC21" = alloca %StreamRefWrapperHelperClass
  br label %code

code:                                             ; preds = %0
  %1 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %prefix.addr)
  store [9 x i8] c"dumping \00", [9 x i8]* %const.bytes
  %2 = getelementptr inbounds [9 x i8]* %const.bytes, i32 0, i32 0
  %3 = getelementptr inbounds [9 x i8]* %const.bytes, i32 0, i32 8
  %4 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %5 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %2, i8** %4
  store i8* %3, i8** %5
  %6 = load %StringRef* %const.struct
  store %StringRef %6, %StringRef* %"$tmpForRef"
  %7 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* %1, %StringRef* %"$tmpForRef")
  store [18 x i8] c"Vector[LocString]\00", [18 x i8]* %const.bytes2
  %8 = getelementptr inbounds [18 x i8]* %const.bytes2, i32 0, i32 0
  %9 = getelementptr inbounds [18 x i8]* %const.bytes2, i32 0, i32 17
  %10 = getelementptr inbounds %StringRef* %const.struct3, i32 0, i32 0
  %11 = getelementptr inbounds %StringRef* %const.struct3, i32 0, i32 1
  store i8* %8, i8** %10
  store i8* %9, i8** %11
  %12 = load %StringRef* %const.struct3
  store %StringRef %12, %StringRef* %"$tmpForRef1"
  %13 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* %7, %StringRef* %"$tmpForRef1")
  store [3 x i8] c": \00", [3 x i8]* %const.bytes5
  %14 = getelementptr inbounds [3 x i8]* %const.bytes5, i32 0, i32 0
  %15 = getelementptr inbounds [3 x i8]* %const.bytes5, i32 0, i32 2
  %16 = getelementptr inbounds %StringRef* %const.struct6, i32 0, i32 0
  %17 = getelementptr inbounds %StringRef* %const.struct6, i32 0, i32 1
  store i8* %14, i8** %16
  store i8* %15, i8** %17
  %18 = load %StringRef* %const.struct6
  store %StringRef %18, %StringRef* %"$tmpForRef4"
  %19 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* %13, %StringRef* %"$tmpForRef4")
  %20 = load %"Vector[LocString]"** %"$this.addr"
  call void @mkStreamRefWrapper(%StreamRefWrapperHelperClass* %"$tmpC", %"Vector[LocString]"* %20)
  %21 = call %ConsoleOutputStream* @"<<530"(%ConsoleOutputStream* %19, %StreamRefWrapperHelperClass* %"$tmpC")
  %22 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %21, %EndLineHelperClass* @endl)
  store [11 x i8] c"    size: \00", [11 x i8]* %const.bytes8
  %23 = getelementptr inbounds [11 x i8]* %const.bytes8, i32 0, i32 0
  %24 = getelementptr inbounds [11 x i8]* %const.bytes8, i32 0, i32 10
  %25 = getelementptr inbounds %StringRef* %const.struct9, i32 0, i32 0
  %26 = getelementptr inbounds %StringRef* %const.struct9, i32 0, i32 1
  store i8* %23, i8** %25
  store i8* %24, i8** %26
  %27 = load %StringRef* %const.struct9
  store %StringRef %27, %StringRef* %"$tmpForRef7"
  %28 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %"$tmpForRef7")
  %29 = load %"Vector[LocString]"** %"$this.addr"
  %30 = call i64 @size409(%"Vector[LocString]"* %29)
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* %tmp.v
  %32 = call %ConsoleOutputStream* @"<<534"(%ConsoleOutputStream* %28, i32* %tmp.v)
  %33 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %32, %EndLineHelperClass* @endl)
  store [13 x i8] c"    _begin: \00", [13 x i8]* %const.bytes11
  %34 = getelementptr inbounds [13 x i8]* %const.bytes11, i32 0, i32 0
  %35 = getelementptr inbounds [13 x i8]* %const.bytes11, i32 0, i32 12
  %36 = getelementptr inbounds %StringRef* %const.struct12, i32 0, i32 0
  %37 = getelementptr inbounds %StringRef* %const.struct12, i32 0, i32 1
  store i8* %34, i8** %36
  store i8* %35, i8** %37
  %38 = load %StringRef* %const.struct12
  store %StringRef %38, %StringRef* %"$tmpForRef10"
  %39 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %"$tmpForRef10")
  %40 = load %"Vector[LocString]"** %"$this.addr"
  %41 = getelementptr inbounds %"Vector[LocString]"* %40, i32 0, i32 0
  %42 = call i8* @bytePtr407(%"RawPtr[LocString]"* %41)
  call void @mkStreamRefWrapper536(%StreamRefWrapperHelperClass* %"$tmpC13", i8* %42)
  %43 = call %ConsoleOutputStream* @"<<530"(%ConsoleOutputStream* %39, %StreamRefWrapperHelperClass* %"$tmpC13")
  %44 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %43, %EndLineHelperClass* @endl)
  store [11 x i8] c"    _end: \00", [11 x i8]* %const.bytes15
  %45 = getelementptr inbounds [11 x i8]* %const.bytes15, i32 0, i32 0
  %46 = getelementptr inbounds [11 x i8]* %const.bytes15, i32 0, i32 10
  %47 = getelementptr inbounds %StringRef* %const.struct16, i32 0, i32 0
  %48 = getelementptr inbounds %StringRef* %const.struct16, i32 0, i32 1
  store i8* %45, i8** %47
  store i8* %46, i8** %48
  %49 = load %StringRef* %const.struct16
  store %StringRef %49, %StringRef* %"$tmpForRef14"
  %50 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %"$tmpForRef14")
  %51 = load %"Vector[LocString]"** %"$this.addr"
  %52 = getelementptr inbounds %"Vector[LocString]"* %51, i32 0, i32 1
  %53 = call i8* @bytePtr407(%"RawPtr[LocString]"* %52)
  call void @mkStreamRefWrapper536(%StreamRefWrapperHelperClass* %"$tmpC17", i8* %53)
  %54 = call %ConsoleOutputStream* @"<<530"(%ConsoleOutputStream* %50, %StreamRefWrapperHelperClass* %"$tmpC17")
  %55 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %54, %EndLineHelperClass* @endl)
  store [18 x i8] c"    _endOfStore: \00", [18 x i8]* %const.bytes19
  %56 = getelementptr inbounds [18 x i8]* %const.bytes19, i32 0, i32 0
  %57 = getelementptr inbounds [18 x i8]* %const.bytes19, i32 0, i32 17
  %58 = getelementptr inbounds %StringRef* %const.struct20, i32 0, i32 0
  %59 = getelementptr inbounds %StringRef* %const.struct20, i32 0, i32 1
  store i8* %56, i8** %58
  store i8* %57, i8** %59
  %60 = load %StringRef* %const.struct20
  store %StringRef %60, %StringRef* %"$tmpForRef18"
  %61 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %"$tmpForRef18")
  %62 = load %"Vector[LocString]"** %"$this.addr"
  %63 = getelementptr inbounds %"Vector[LocString]"* %62, i32 0, i32 2
  %64 = call i8* @bytePtr407(%"RawPtr[LocString]"* %63)
  call void @mkStreamRefWrapper536(%StreamRefWrapperHelperClass* %"$tmpC21", i8* %64)
  %65 = call %ConsoleOutputStream* @"<<530"(%ConsoleOutputStream* %61, %StreamRefWrapperHelperClass* %"$tmpC21")
  %66 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %65, %EndLineHelperClass* @endl)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %s, %EndLineHelperClass* %x) #3 {
  %s.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %s, %ConsoleOutputStream** %s.addr
  %x.addr = alloca %EndLineHelperClass*
  store %EndLineHelperClass* %x, %EndLineHelperClass** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %EndLineHelperClass** %x.addr
  %2 = load %ConsoleOutputStream** %s.addr
  call void @">>527"(%EndLineHelperClass* %1, %ConsoleOutputStream* %2)
  %3 = load %ConsoleOutputStream** %s.addr
  ret %ConsoleOutputStream* %3
}

; Function Attrs: inlinehint nounwind
define internal void @">>527"(%EndLineHelperClass* %"$this", %ConsoleOutputStream* %os) #3 {
  %"$this.addr" = alloca %EndLineHelperClass*
  store %EndLineHelperClass* %"$this", %EndLineHelperClass** %"$this.addr"
  %os.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %os, %ConsoleOutputStream** %os.addr
  %"$tmpForRef" = alloca %StringRef
  %const.bytes = alloca [2 x i8]
  %const.struct = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %ConsoleOutputStream** %os.addr
  store [2 x i8] c"\0A\00", [2 x i8]* %const.bytes
  %2 = getelementptr inbounds [2 x i8]* %const.bytes, i32 0, i32 0
  %3 = getelementptr inbounds [2 x i8]* %const.bytes, i32 0, i32 1
  %4 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %5 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %2, i8** %4
  store i8* %3, i8** %5
  %6 = load %StringRef* %const.struct
  store %StringRef %6, %StringRef* %"$tmpForRef"
  %7 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* %1, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* %s, %StringRef* %x) #3 {
  %s.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %s, %ConsoleOutputStream** %s.addr
  %x.addr = alloca %StringRef*
  store %StringRef* %x, %StringRef** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %ConsoleOutputStream** %s.addr
  %2 = load %StringRef** %x.addr
  %3 = load %StringRef* %2
  call void @"<<<529"(%ConsoleOutputStream* %1, %StringRef %3)
  %4 = load %ConsoleOutputStream** %s.addr
  ret %ConsoleOutputStream* %4
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<529"(%ConsoleOutputStream* %"$this", %StringRef %x) #2 {
  %"$this.addr" = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %"$this", %ConsoleOutputStream** %"$this.addr"
  %x.addr = alloca %StringRef
  store %StringRef %x, %StringRef* %x.addr
  %"$rangeVar" = alloca %StringRef
  %c = alloca i8*
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef* %x.addr
  call void @ctor70(%StringRef* %"$rangeVar", %StringRef %1)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %2 = call i1 @isEmpty104(%StringRef* %"$rangeVar")
  %3 = xor i1 true, %2
  br i1 %3, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %4 = call i8* @front110(%StringRef* %"$rangeVar")
  store i8* %4, i8** %c
  %5 = load i8** %c
  %6 = load i8* %5
  call void @writeChar(i8 %6)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @popFront114(%StringRef* %"$rangeVar")
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %ConsoleOutputStream* @"<<530"(%ConsoleOutputStream* %s, %StreamRefWrapperHelperClass* %x) #3 {
  %s.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %s, %ConsoleOutputStream** %s.addr
  %x.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %x, %StreamRefWrapperHelperClass** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StreamRefWrapperHelperClass** %x.addr
  %2 = load %StreamRefWrapperHelperClass* %1
  %3 = load %ConsoleOutputStream** %s.addr
  call void @">>531"(%StreamRefWrapperHelperClass %2, %ConsoleOutputStream* %3)
  %4 = load %ConsoleOutputStream** %s.addr
  ret %ConsoleOutputStream* %4
}

; Function Attrs: inlinehint nounwind
define internal void @">>531"(%StreamRefWrapperHelperClass %p, %ConsoleOutputStream* %os) #3 {
  %p.addr = alloca %StreamRefWrapperHelperClass
  store %StreamRefWrapperHelperClass %p, %StreamRefWrapperHelperClass* %p.addr
  %os.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %os, %ConsoleOutputStream** %os.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %StreamRefWrapperHelperClass* %p.addr, i32 0, i32 0
  %2 = load i8** %1
  call void @writePointer(i8* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @mkStreamRefWrapper(%StreamRefWrapperHelperClass* sret %_result, %"Vector[LocString]"* %x) #3 {
  %_result.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %_result, %StreamRefWrapperHelperClass** %_result.addr
  %x.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %x, %"Vector[LocString]"** %x.addr
  %res = alloca %StreamRefWrapperHelperClass
  br label %code

code:                                             ; preds = %0
  call void @ctor532(%StreamRefWrapperHelperClass* %res)
  %1 = load %"Vector[LocString]"** %x.addr
  %2 = bitcast %"Vector[LocString]"* %1 to i8*
  %3 = getelementptr inbounds %StreamRefWrapperHelperClass* %res, i32 0, i32 0
  store i8* %2, i8** %3
  %4 = load %StreamRefWrapperHelperClass** %_result.addr
  call void @ctor533(%StreamRefWrapperHelperClass* %4, %StreamRefWrapperHelperClass* %res)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor532(%StreamRefWrapperHelperClass* %"$this") #2 {
  %"$this.addr" = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %"$this", %StreamRefWrapperHelperClass** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %StreamRefWrapperHelperClass** %"$this.addr"
  %2 = getelementptr inbounds %StreamRefWrapperHelperClass* %1, i32 0, i32 0
  store i8* null, i8** %2
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor533(%StreamRefWrapperHelperClass* %"$this", %StreamRefWrapperHelperClass* %other) #2 {
  %"$this.addr" = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %"$this", %StreamRefWrapperHelperClass** %"$this.addr"
  %other.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %other, %StreamRefWrapperHelperClass** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StreamRefWrapperHelperClass** %other.addr
  %2 = getelementptr inbounds %StreamRefWrapperHelperClass* %1, i32 0, i32 0
  %3 = load i8** %2
  %4 = load %StreamRefWrapperHelperClass** %"$this.addr"
  %5 = getelementptr inbounds %StreamRefWrapperHelperClass* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %ConsoleOutputStream* @"<<534"(%ConsoleOutputStream* %s, i32* %x) #3 {
  %s.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %s, %ConsoleOutputStream** %s.addr
  %x.addr = alloca i32*
  store i32* %x, i32** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %ConsoleOutputStream** %s.addr
  %2 = load i32** %x.addr
  %3 = load i32* %2
  call void @"<<<535"(%ConsoleOutputStream* %1, i32 %3)
  %4 = load %ConsoleOutputStream** %s.addr
  ret %ConsoleOutputStream* %4
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<535"(%ConsoleOutputStream* %"$this", i32 %x) #2 {
  %"$this.addr" = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %"$this", %ConsoleOutputStream** %"$this.addr"
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32* %x.addr
  call void @writeInt(i32 %1)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @mkStreamRefWrapper536(%StreamRefWrapperHelperClass* sret %_result, i8* %x) #3 {
  %_result.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %_result, %StreamRefWrapperHelperClass** %_result.addr
  %x.addr = alloca i8*
  store i8* %x, i8** %x.addr
  %res = alloca %StreamRefWrapperHelperClass
  br label %code

code:                                             ; preds = %0
  call void @ctor532(%StreamRefWrapperHelperClass* %res)
  %1 = load i8** %x.addr
  %2 = getelementptr inbounds %StreamRefWrapperHelperClass* %res, i32 0, i32 0
  store i8* %1, i8** %2
  %3 = load %StreamRefWrapperHelperClass** %_result.addr
  call void @ctor533(%StreamRefWrapperHelperClass* %3, %StreamRefWrapperHelperClass* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor537(%"Vector[Char/rtct]"* %"$this", i64 %size) #3 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %size.addr = alloca i64
  store i64 %size, i64* %size.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC1" = alloca %"RawPtr[Char/rtct]"
  %p = alloca %"RawPtr[Char/rtct]"
  %"$tmpC2" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 0
  call void @ctor128(%"RawPtr[Char/rtct]"* %2)
  %3 = load %"Vector[Char/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Char/rtct]"* %3, i32 0, i32 1
  call void @ctor128(%"RawPtr[Char/rtct]"* %4)
  %5 = load %"Vector[Char/rtct]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[Char/rtct]"* %5, i32 0, i32 2
  call void @ctor128(%"RawPtr[Char/rtct]"* %6)
  %7 = load %"Vector[Char/rtct]"** %"$this.addr"
  %8 = getelementptr inbounds %"Vector[Char/rtct]"* %7, i32 0, i32 0
  %9 = load i64* %size.addr
  call void @alloc(%"RawPtr[Char/rtct]"* %"$tmpC", i64 %9)
  %10 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=153"(%"RawPtr[Char/rtct]"* %8, %"RawPtr[Char/rtct]" %10)
  %11 = load %"Vector[Char/rtct]"** %"$this.addr"
  %12 = getelementptr inbounds %"Vector[Char/rtct]"* %11, i32 0, i32 1
  %13 = load %"Vector[Char/rtct]"** %"$this.addr"
  %14 = getelementptr inbounds %"Vector[Char/rtct]"* %13, i32 0, i32 0
  %15 = load i64* %size.addr
  call void @advance176(%"RawPtr[Char/rtct]"* %"$tmpC1", %"RawPtr[Char/rtct]"* %14, i64 %15)
  %16 = load %"RawPtr[Char/rtct]"* %"$tmpC1"
  call void @"=153"(%"RawPtr[Char/rtct]"* %12, %"RawPtr[Char/rtct]" %16)
  %17 = load %"Vector[Char/rtct]"** %"$this.addr"
  %18 = getelementptr inbounds %"Vector[Char/rtct]"* %17, i32 0, i32 2
  %19 = load %"Vector[Char/rtct]"** %"$this.addr"
  %20 = getelementptr inbounds %"Vector[Char/rtct]"* %19, i32 0, i32 1
  %21 = load %"RawPtr[Char/rtct]"* %20
  call void @"=153"(%"RawPtr[Char/rtct]"* %18, %"RawPtr[Char/rtct]" %21)
  %22 = load %"Vector[Char/rtct]"** %"$this.addr"
  %23 = getelementptr inbounds %"Vector[Char/rtct]"* %22, i32 0, i32 0
  call void @ctor146(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]"* %23)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %24 = load %"Vector[Char/rtct]"** %"$this.addr"
  %25 = getelementptr inbounds %"Vector[Char/rtct]"* %24, i32 0, i32 1
  %26 = load %"RawPtr[Char/rtct]"* %25
  %27 = call i1 @"==155"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %26)
  %28 = xor i1 true, %27
  br i1 %28, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %29 = call i8* @value(%"RawPtr[Char/rtct]"* %p)
  store i8 0, i8* %29
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC2", %"RawPtr[Char/rtct]"* %p)
  %30 = load %"RawPtr[Char/rtct]"* %"$tmpC2"
  call void @"=153"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %30)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i8* @at538(%"Vector[Char/rtct]"* %"$this", i64 %index) #2 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 0
  %3 = load i64* %index.addr
  call void @advance176(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %2, i64 %3)
  %4 = call i8* @value(%"RawPtr[Char/rtct]"* %"$tmpC")
  ret i8* %4
}

; Function Attrs: alwaysinline nounwind
define internal void @subrange539(%"ContiguousMemoryRange[Char/rtct]"* sret %_result, %"Vector[Char/rtct]"* %"$this", i64 %index, i64 %num) #2 {
  %_result.addr = alloca %"ContiguousMemoryRange[Char/rtct]"*
  store %"ContiguousMemoryRange[Char/rtct]"* %_result, %"ContiguousMemoryRange[Char/rtct]"** %_result.addr
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %num.addr = alloca i64
  store i64 %num, i64* %num.addr
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC1" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char/rtct]"** %_result.addr
  %2 = load %"Vector[Char/rtct]"** %"$this.addr"
  %3 = getelementptr inbounds %"Vector[Char/rtct]"* %2, i32 0, i32 0
  %4 = load i64* %index.addr
  call void @advance176(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %3, i64 %4)
  %5 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  %6 = load %"Vector[Char/rtct]"** %"$this.addr"
  %7 = getelementptr inbounds %"Vector[Char/rtct]"* %6, i32 0, i32 0
  %8 = load i64* %index.addr
  %9 = load i64* %num.addr
  %10 = call i64 @"+24"(i64 %8, i64 %9)
  call void @advance176(%"RawPtr[Char/rtct]"* %"$tmpC1", %"RawPtr[Char/rtct]"* %7, i64 %10)
  %11 = load %"RawPtr[Char/rtct]"* %"$tmpC1"
  call void @ctor162(%"ContiguousMemoryRange[Char/rtct]"* %1, %"RawPtr[Char/rtct]" %5, %"RawPtr[Char/rtct]" %11)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @insertBefore540(%"Vector[Char/rtct]"* %"$this", i8* %value, %"ContiguousMemoryRange[Char/rtct]" %pos) #3 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %value.addr = alloca i8*
  store i8* %value, i8** %value.addr
  %pos.addr = alloca %"ContiguousMemoryRange[Char/rtct]"
  store %"ContiguousMemoryRange[Char/rtct]" %pos, %"ContiguousMemoryRange[Char/rtct]"* %pos.addr
  %posCount = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %p = alloca %"RawPtr[Char/rtct]"
  %q = alloca %"RawPtr[Char/rtct]"
  %"$tmpC1" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC2" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC3" = alloca %"RawPtr[Char/rtct]"
  %"$tmpC4" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  call void @frontPtr(%"RawPtr[Char/rtct]"* %"$tmpC", %"ContiguousMemoryRange[Char/rtct]"* %pos.addr)
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Char/rtct]"* %1, i32 0, i32 0
  %3 = load %"RawPtr[Char/rtct]"* %2
  %4 = call i64 @diff(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]" %3)
  store i64 %4, i64* %posCount
  %5 = load %"Vector[Char/rtct]"** %"$this.addr"
  %6 = load %"Vector[Char/rtct]"** %"$this.addr"
  %7 = call i64 @size175(%"Vector[Char/rtct]"* %6)
  %8 = call i64 @"+67"(i64 %7, i32 1)
  call void @reserve180(%"Vector[Char/rtct]"* %5, i64 %8)
  %9 = load %"Vector[Char/rtct]"** %"$this.addr"
  %10 = getelementptr inbounds %"Vector[Char/rtct]"* %9, i32 0, i32 1
  call void @advance(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]"* %10, i64 -1)
  %11 = load %"Vector[Char/rtct]"** %"$this.addr"
  %12 = getelementptr inbounds %"Vector[Char/rtct]"* %11, i32 0, i32 0
  %13 = load i64* %posCount
  %14 = call i64 @-508(i64 %13, i32 1)
  call void @advance(%"RawPtr[Char/rtct]"* %q, %"RawPtr[Char/rtct]"* %12, i64 %14)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %15 = load %"RawPtr[Char/rtct]"* %q
  %16 = call i1 @"==155"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %15)
  %17 = xor i1 true, %16
  br i1 %17, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %18 = call i8* @value(%"RawPtr[Char/rtct]"* %p)
  %19 = load i8* %18
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC1", %"RawPtr[Char/rtct]"* %p)
  %20 = call i8* @value(%"RawPtr[Char/rtct]"* %"$tmpC1")
  store i8 %19, i8* %20
  %21 = call i8* @value(%"RawPtr[Char/rtct]"* %p)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC2", %"RawPtr[Char/rtct]"* %p, i64 -1)
  %22 = load %"RawPtr[Char/rtct]"* %"$tmpC2"
  call void @"=153"(%"RawPtr[Char/rtct]"* %p, %"RawPtr[Char/rtct]" %22)
  br label %while_block

while_end:                                        ; preds = %while_block
  %23 = load i8** %value.addr
  %24 = load i8* %23
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC3", %"RawPtr[Char/rtct]"* %p)
  %25 = call i8* @value(%"RawPtr[Char/rtct]"* %"$tmpC3")
  store i8 %24, i8* %25
  %26 = load %"Vector[Char/rtct]"** %"$this.addr"
  %27 = getelementptr inbounds %"Vector[Char/rtct]"* %26, i32 0, i32 1
  %28 = load %"Vector[Char/rtct]"** %"$this.addr"
  %29 = getelementptr inbounds %"Vector[Char/rtct]"* %28, i32 0, i32 1
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC4", %"RawPtr[Char/rtct]"* %29)
  %30 = load %"RawPtr[Char/rtct]"* %"$tmpC4"
  call void @"=153"(%"RawPtr[Char/rtct]"* %27, %"RawPtr[Char/rtct]" %30)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @insertAfter541(%"Vector[Char/rtct]"* %"$this", i8* %value, %"ContiguousMemoryRange[Char/rtct]" %pos) #3 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %value.addr = alloca i8*
  store i8* %value, i8** %value.addr
  %pos.addr = alloca %"ContiguousMemoryRange[Char/rtct]"
  store %"ContiguousMemoryRange[Char/rtct]" %pos, %"ContiguousMemoryRange[Char/rtct]"* %pos.addr
  %tmp.v = alloca %"ContiguousMemoryRange[Char/rtct]"
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = load i8** %value.addr
  call void @backPtr(%"RawPtr[Char/rtct]"* %"$tmpC", %"ContiguousMemoryRange[Char/rtct]"* %pos.addr)
  %3 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  %4 = load %"Vector[Char/rtct]"** %"$this.addr"
  %5 = getelementptr inbounds %"Vector[Char/rtct]"* %4, i32 0, i32 1
  %6 = load %"RawPtr[Char/rtct]"* %5
  call void @ctor162(%"ContiguousMemoryRange[Char/rtct]"* %tmp.v, %"RawPtr[Char/rtct]" %3, %"RawPtr[Char/rtct]" %6)
  %7 = load %"ContiguousMemoryRange[Char/rtct]"* %tmp.v
  call void @insertBefore540(%"Vector[Char/rtct]"* %1, i8* %2, %"ContiguousMemoryRange[Char/rtct]" %7)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @resize542(%"Vector[Char/rtct]"* %"$this", i64 %n) #3 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %oldSize = alloca i64
  %newEnd = alloca %"RawPtr[Char/rtct]"
  %"$tmpC" = alloca %"RawPtr[Char/rtct]"
  %newEnd4 = alloca %"RawPtr[Char/rtct]"
  %"$tmpC9" = alloca %"RawPtr[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = call i64 @size175(%"Vector[Char/rtct]"* %1)
  store i64 %2, i64* %oldSize
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64* %n.addr
  %4 = load i64* %oldSize
  %5 = call i1 @"==513"(i64 %3, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64* %n.addr
  %7 = load i64* %oldSize
  %8 = call i1 @"<"(i64 %6, i64 %7)
  br i1 %8, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %9 = load %"Vector[Char/rtct]"** %"$this.addr"
  %10 = getelementptr inbounds %"Vector[Char/rtct]"* %9, i32 0, i32 0
  %11 = load i64* %n.addr
  call void @advance176(%"RawPtr[Char/rtct]"* %newEnd, %"RawPtr[Char/rtct]"* %10, i64 %11)
  br label %while_block

if_else:                                          ; preds = %if_block1
  %12 = load %"Vector[Char/rtct]"** %"$this.addr"
  %13 = load i64* %n.addr
  call void @reserve180(%"Vector[Char/rtct]"* %12, i64 %13)
  %14 = load %"Vector[Char/rtct]"** %"$this.addr"
  %15 = getelementptr inbounds %"Vector[Char/rtct]"* %14, i32 0, i32 0
  %16 = load i64* %n.addr
  call void @advance176(%"RawPtr[Char/rtct]"* %newEnd4, %"RawPtr[Char/rtct]"* %15, i64 %16)
  br label %while_block5

if_end3:                                          ; preds = %while_end8, %while_end
  ret void

while_block:                                      ; preds = %while_step, %if_then2
  %17 = load %"Vector[Char/rtct]"** %"$this.addr"
  %18 = getelementptr inbounds %"Vector[Char/rtct]"* %17, i32 0, i32 1
  %19 = load %"RawPtr[Char/rtct]"* %newEnd
  %20 = call i1 @"==155"(%"RawPtr[Char/rtct]"* %18, %"RawPtr[Char/rtct]" %19)
  %21 = xor i1 true, %20
  br i1 %21, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %22 = load %"Vector[Char/rtct]"** %"$this.addr"
  %23 = getelementptr inbounds %"Vector[Char/rtct]"* %22, i32 0, i32 1
  %24 = load %"Vector[Char/rtct]"** %"$this.addr"
  %25 = getelementptr inbounds %"Vector[Char/rtct]"* %24, i32 0, i32 1
  call void @advance(%"RawPtr[Char/rtct]"* %"$tmpC", %"RawPtr[Char/rtct]"* %25, i64 -1)
  %26 = load %"RawPtr[Char/rtct]"* %"$tmpC"
  call void @"=153"(%"RawPtr[Char/rtct]"* %23, %"RawPtr[Char/rtct]" %26)
  %27 = load %"Vector[Char/rtct]"** %"$this.addr"
  %28 = getelementptr inbounds %"Vector[Char/rtct]"* %27, i32 0, i32 1
  %29 = call i8* @value(%"RawPtr[Char/rtct]"* %28)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  br label %if_end3

while_block5:                                     ; preds = %while_step7, %if_else
  %30 = load %"Vector[Char/rtct]"** %"$this.addr"
  %31 = getelementptr inbounds %"Vector[Char/rtct]"* %30, i32 0, i32 1
  %32 = load %"RawPtr[Char/rtct]"* %newEnd4
  %33 = call i1 @"==155"(%"RawPtr[Char/rtct]"* %31, %"RawPtr[Char/rtct]" %32)
  %34 = xor i1 true, %33
  br i1 %34, label %while_body6, label %while_end8

while_body6:                                      ; preds = %while_block5
  %35 = load %"Vector[Char/rtct]"** %"$this.addr"
  %36 = getelementptr inbounds %"Vector[Char/rtct]"* %35, i32 0, i32 1
  %37 = call i8* @value(%"RawPtr[Char/rtct]"* %36)
  store i8 0, i8* %37
  %38 = load %"Vector[Char/rtct]"** %"$this.addr"
  %39 = getelementptr inbounds %"Vector[Char/rtct]"* %38, i32 0, i32 1
  %40 = load %"Vector[Char/rtct]"** %"$this.addr"
  %41 = getelementptr inbounds %"Vector[Char/rtct]"* %40, i32 0, i32 1
  call void @advance157(%"RawPtr[Char/rtct]"* %"$tmpC9", %"RawPtr[Char/rtct]"* %41)
  %42 = load %"RawPtr[Char/rtct]"* %"$tmpC9"
  call void @"=153"(%"RawPtr[Char/rtct]"* %39, %"RawPtr[Char/rtct]" %42)
  br label %while_step7

while_step7:                                      ; preds = %while_body6
  br label %while_block5

while_end8:                                       ; preds = %while_block5
  br label %if_end3
}

; Function Attrs: inlinehint nounwind
define internal void @clear543(%"Vector[Char/rtct]"* %"$this") #3 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %tmp.v = alloca %"ContiguousMemoryRange[Char/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = load %"Vector[Char/rtct]"** %"$this.addr"
  %3 = getelementptr inbounds %"Vector[Char/rtct]"* %2, i32 0, i32 0
  %4 = load %"RawPtr[Char/rtct]"* %3
  %5 = load %"Vector[Char/rtct]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[Char/rtct]"* %5, i32 0, i32 1
  %7 = load %"RawPtr[Char/rtct]"* %6
  call void @ctor162(%"ContiguousMemoryRange[Char/rtct]"* %tmp.v, %"RawPtr[Char/rtct]" %4, %"RawPtr[Char/rtct]" %7)
  %8 = load %"ContiguousMemoryRange[Char/rtct]"* %tmp.v
  call void @remove247(%"Vector[Char/rtct]"* %1, %"ContiguousMemoryRange[Char/rtct]" %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==544"(%"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"* %other) #3 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %other.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %other, %"Vector[Char/rtct]"** %other.addr
  %i = alloca i32
  %s = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = call i64 @size175(%"Vector[Char/rtct]"* %1)
  %3 = load %"Vector[Char/rtct]"** %other.addr
  %4 = call i64 @size175(%"Vector[Char/rtct]"* %3)
  %5 = call i1 @"!=278"(i64 %2, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  store i32 0, i32* %i
  %6 = load %"Vector[Char/rtct]"** %"$this.addr"
  %7 = call i64 @size175(%"Vector[Char/rtct]"* %6)
  store i64 %7, i64* %s
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %8 = load i32* %i
  %9 = load i64* %s
  %10 = call i1 @"<517"(i32 %8, i64 %9)
  br i1 %10, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block1

while_step:                                       ; preds = %if_end3
  %11 = call i32 @"post_++50"(i32* %i)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret i1 true

if_block1:                                        ; preds = %while_body
  %12 = load %"Vector[Char/rtct]"** %"$this.addr"
  %13 = load i32* %i
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %tmp.v
  %15 = load i64* %tmp.v
  %16 = call i8* @at538(%"Vector[Char/rtct]"* %12, i64 %15)
  %17 = load i8* %16
  %18 = load %"Vector[Char/rtct]"** %other.addr
  %19 = load i32* %i
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %tmp.v4
  %21 = load i64* %tmp.v4
  %22 = call i8* @at538(%"Vector[Char/rtct]"* %18, i64 %21)
  %23 = load i8* %22
  %24 = icmp eq i8 %17, %23
  %25 = xor i1 true, %24
  br i1 %25, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block5, %if_block1
  br label %while_step

dumy_block5:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"!=545"(%"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"* %other) #2 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %other.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %other, %"Vector[Char/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char/rtct]"** %"$this.addr"
  %2 = load %"Vector[Char/rtct]"** %other.addr
  %3 = call i1 @"==544"(%"Vector[Char/rtct]"* %1, %"Vector[Char/rtct]"* %2)
  %4 = xor i1 true, %3
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal void @_dumpThis546(%"Vector[Char/rtct]"* %"$this", %StringRef %prefix) #3 {
  %"$this.addr" = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %"$this", %"Vector[Char/rtct]"** %"$this.addr"
  %prefix.addr = alloca %StringRef
  store %StringRef %prefix, %StringRef* %prefix.addr
  %"$tmpForRef" = alloca %StringRef
  %const.bytes = alloca [9 x i8]
  %const.struct = alloca %StringRef
  %"$tmpForRef1" = alloca %StringRef
  %const.bytes2 = alloca [23 x i8]
  %const.struct3 = alloca %StringRef
  %"$tmpForRef4" = alloca %StringRef
  %const.bytes5 = alloca [3 x i8]
  %const.struct6 = alloca %StringRef
  %"$tmpC" = alloca %StreamRefWrapperHelperClass
  %"$tmpForRef7" = alloca %StringRef
  %const.bytes8 = alloca [11 x i8]
  %const.struct9 = alloca %StringRef
  %tmp.v = alloca i32
  %"$tmpForRef10" = alloca %StringRef
  %const.bytes11 = alloca [13 x i8]
  %const.struct12 = alloca %StringRef
  %"$tmpC13" = alloca %StreamRefWrapperHelperClass
  %"$tmpForRef14" = alloca %StringRef
  %const.bytes15 = alloca [11 x i8]
  %const.struct16 = alloca %StringRef
  %"$tmpC17" = alloca %StreamRefWrapperHelperClass
  %"$tmpForRef18" = alloca %StringRef
  %const.bytes19 = alloca [18 x i8]
  %const.struct20 = alloca %StringRef
  %"$tmpC21" = alloca %StreamRefWrapperHelperClass
  br label %code

code:                                             ; preds = %0
  %1 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %prefix.addr)
  store [9 x i8] c"dumping \00", [9 x i8]* %const.bytes
  %2 = getelementptr inbounds [9 x i8]* %const.bytes, i32 0, i32 0
  %3 = getelementptr inbounds [9 x i8]* %const.bytes, i32 0, i32 8
  %4 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %5 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %2, i8** %4
  store i8* %3, i8** %5
  %6 = load %StringRef* %const.struct
  store %StringRef %6, %StringRef* %"$tmpForRef"
  %7 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* %1, %StringRef* %"$tmpForRef")
  store [23 x i8] c"Vector[Char/rtct]/rtct\00", [23 x i8]* %const.bytes2
  %8 = getelementptr inbounds [23 x i8]* %const.bytes2, i32 0, i32 0
  %9 = getelementptr inbounds [23 x i8]* %const.bytes2, i32 0, i32 22
  %10 = getelementptr inbounds %StringRef* %const.struct3, i32 0, i32 0
  %11 = getelementptr inbounds %StringRef* %const.struct3, i32 0, i32 1
  store i8* %8, i8** %10
  store i8* %9, i8** %11
  %12 = load %StringRef* %const.struct3
  store %StringRef %12, %StringRef* %"$tmpForRef1"
  %13 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* %7, %StringRef* %"$tmpForRef1")
  store [3 x i8] c": \00", [3 x i8]* %const.bytes5
  %14 = getelementptr inbounds [3 x i8]* %const.bytes5, i32 0, i32 0
  %15 = getelementptr inbounds [3 x i8]* %const.bytes5, i32 0, i32 2
  %16 = getelementptr inbounds %StringRef* %const.struct6, i32 0, i32 0
  %17 = getelementptr inbounds %StringRef* %const.struct6, i32 0, i32 1
  store i8* %14, i8** %16
  store i8* %15, i8** %17
  %18 = load %StringRef* %const.struct6
  store %StringRef %18, %StringRef* %"$tmpForRef4"
  %19 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* %13, %StringRef* %"$tmpForRef4")
  %20 = load %"Vector[Char/rtct]"** %"$this.addr"
  call void @mkStreamRefWrapper547(%StreamRefWrapperHelperClass* %"$tmpC", %"Vector[Char/rtct]"* %20)
  %21 = call %ConsoleOutputStream* @"<<530"(%ConsoleOutputStream* %19, %StreamRefWrapperHelperClass* %"$tmpC")
  %22 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %21, %EndLineHelperClass* @endl)
  store [11 x i8] c"    size: \00", [11 x i8]* %const.bytes8
  %23 = getelementptr inbounds [11 x i8]* %const.bytes8, i32 0, i32 0
  %24 = getelementptr inbounds [11 x i8]* %const.bytes8, i32 0, i32 10
  %25 = getelementptr inbounds %StringRef* %const.struct9, i32 0, i32 0
  %26 = getelementptr inbounds %StringRef* %const.struct9, i32 0, i32 1
  store i8* %23, i8** %25
  store i8* %24, i8** %26
  %27 = load %StringRef* %const.struct9
  store %StringRef %27, %StringRef* %"$tmpForRef7"
  %28 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %"$tmpForRef7")
  %29 = load %"Vector[Char/rtct]"** %"$this.addr"
  %30 = call i64 @size175(%"Vector[Char/rtct]"* %29)
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* %tmp.v
  %32 = call %ConsoleOutputStream* @"<<534"(%ConsoleOutputStream* %28, i32* %tmp.v)
  %33 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %32, %EndLineHelperClass* @endl)
  store [13 x i8] c"    _begin: \00", [13 x i8]* %const.bytes11
  %34 = getelementptr inbounds [13 x i8]* %const.bytes11, i32 0, i32 0
  %35 = getelementptr inbounds [13 x i8]* %const.bytes11, i32 0, i32 12
  %36 = getelementptr inbounds %StringRef* %const.struct12, i32 0, i32 0
  %37 = getelementptr inbounds %StringRef* %const.struct12, i32 0, i32 1
  store i8* %34, i8** %36
  store i8* %35, i8** %37
  %38 = load %StringRef* %const.struct12
  store %StringRef %38, %StringRef* %"$tmpForRef10"
  %39 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %"$tmpForRef10")
  %40 = load %"Vector[Char/rtct]"** %"$this.addr"
  %41 = getelementptr inbounds %"Vector[Char/rtct]"* %40, i32 0, i32 0
  %42 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %41)
  call void @mkStreamRefWrapper536(%StreamRefWrapperHelperClass* %"$tmpC13", i8* %42)
  %43 = call %ConsoleOutputStream* @"<<530"(%ConsoleOutputStream* %39, %StreamRefWrapperHelperClass* %"$tmpC13")
  %44 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %43, %EndLineHelperClass* @endl)
  store [11 x i8] c"    _end: \00", [11 x i8]* %const.bytes15
  %45 = getelementptr inbounds [11 x i8]* %const.bytes15, i32 0, i32 0
  %46 = getelementptr inbounds [11 x i8]* %const.bytes15, i32 0, i32 10
  %47 = getelementptr inbounds %StringRef* %const.struct16, i32 0, i32 0
  %48 = getelementptr inbounds %StringRef* %const.struct16, i32 0, i32 1
  store i8* %45, i8** %47
  store i8* %46, i8** %48
  %49 = load %StringRef* %const.struct16
  store %StringRef %49, %StringRef* %"$tmpForRef14"
  %50 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %"$tmpForRef14")
  %51 = load %"Vector[Char/rtct]"** %"$this.addr"
  %52 = getelementptr inbounds %"Vector[Char/rtct]"* %51, i32 0, i32 1
  %53 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %52)
  call void @mkStreamRefWrapper536(%StreamRefWrapperHelperClass* %"$tmpC17", i8* %53)
  %54 = call %ConsoleOutputStream* @"<<530"(%ConsoleOutputStream* %50, %StreamRefWrapperHelperClass* %"$tmpC17")
  %55 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %54, %EndLineHelperClass* @endl)
  store [18 x i8] c"    _endOfStore: \00", [18 x i8]* %const.bytes19
  %56 = getelementptr inbounds [18 x i8]* %const.bytes19, i32 0, i32 0
  %57 = getelementptr inbounds [18 x i8]* %const.bytes19, i32 0, i32 17
  %58 = getelementptr inbounds %StringRef* %const.struct20, i32 0, i32 0
  %59 = getelementptr inbounds %StringRef* %const.struct20, i32 0, i32 1
  store i8* %56, i8** %58
  store i8* %57, i8** %59
  %60 = load %StringRef* %const.struct20
  store %StringRef %60, %StringRef* %"$tmpForRef18"
  %61 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %"$tmpForRef18")
  %62 = load %"Vector[Char/rtct]"** %"$this.addr"
  %63 = getelementptr inbounds %"Vector[Char/rtct]"* %62, i32 0, i32 2
  %64 = call i8* @bytePtr(%"RawPtr[Char/rtct]"* %63)
  call void @mkStreamRefWrapper536(%StreamRefWrapperHelperClass* %"$tmpC21", i8* %64)
  %65 = call %ConsoleOutputStream* @"<<530"(%ConsoleOutputStream* %61, %StreamRefWrapperHelperClass* %"$tmpC21")
  %66 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %65, %EndLineHelperClass* @endl)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @mkStreamRefWrapper547(%StreamRefWrapperHelperClass* sret %_result, %"Vector[Char/rtct]"* %x) #3 {
  %_result.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %_result, %StreamRefWrapperHelperClass** %_result.addr
  %x.addr = alloca %"Vector[Char/rtct]"*
  store %"Vector[Char/rtct]"* %x, %"Vector[Char/rtct]"** %x.addr
  %res = alloca %StreamRefWrapperHelperClass
  br label %code

code:                                             ; preds = %0
  call void @ctor532(%StreamRefWrapperHelperClass* %res)
  %1 = load %"Vector[Char/rtct]"** %x.addr
  %2 = bitcast %"Vector[Char/rtct]"* %1 to i8*
  %3 = getelementptr inbounds %StreamRefWrapperHelperClass* %res, i32 0, i32 0
  store i8* %2, i8** %3
  %4 = load %StreamRefWrapperHelperClass** %_result.addr
  call void @ctor533(%StreamRefWrapperHelperClass* %4, %StreamRefWrapperHelperClass* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor548(%"Vector[Token]"* %"$this", i64 %size) #3 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %size.addr = alloca i64
  store i64 %size, i64* %size.addr
  %"$tmpC" = alloca %"RawPtr[Token]"
  %"$tmpC1" = alloca %"RawPtr[Token]"
  %p = alloca %"RawPtr[Token]"
  %"$tmpC2" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 0
  call void @ctor133(%"RawPtr[Token]"* %2)
  %3 = load %"Vector[Token]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Token]"* %3, i32 0, i32 1
  call void @ctor133(%"RawPtr[Token]"* %4)
  %5 = load %"Vector[Token]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[Token]"* %5, i32 0, i32 2
  call void @ctor133(%"RawPtr[Token]"* %6)
  %7 = load %"Vector[Token]"** %"$this.addr"
  %8 = getelementptr inbounds %"Vector[Token]"* %7, i32 0, i32 0
  %9 = load i64* %size.addr
  call void @alloc357(%"RawPtr[Token]"* %"$tmpC", i64 %9)
  %10 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=207"(%"RawPtr[Token]"* %8, %"RawPtr[Token]" %10)
  %11 = load %"Vector[Token]"** %"$this.addr"
  %12 = getelementptr inbounds %"Vector[Token]"* %11, i32 0, i32 1
  %13 = load %"Vector[Token]"** %"$this.addr"
  %14 = getelementptr inbounds %"Vector[Token]"* %13, i32 0, i32 0
  %15 = load i64* %size.addr
  call void @advance208(%"RawPtr[Token]"* %"$tmpC1", %"RawPtr[Token]"* %14, i64 %15)
  %16 = load %"RawPtr[Token]"* %"$tmpC1"
  call void @"=207"(%"RawPtr[Token]"* %12, %"RawPtr[Token]" %16)
  %17 = load %"Vector[Token]"** %"$this.addr"
  %18 = getelementptr inbounds %"Vector[Token]"* %17, i32 0, i32 2
  %19 = load %"Vector[Token]"** %"$this.addr"
  %20 = getelementptr inbounds %"Vector[Token]"* %19, i32 0, i32 1
  %21 = load %"RawPtr[Token]"* %20
  call void @"=207"(%"RawPtr[Token]"* %18, %"RawPtr[Token]" %21)
  %22 = load %"Vector[Token]"** %"$this.addr"
  %23 = getelementptr inbounds %"Vector[Token]"* %22, i32 0, i32 0
  call void @ctor210(%"RawPtr[Token]"* %p, %"RawPtr[Token]"* %23)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %24 = load %"Vector[Token]"** %"$this.addr"
  %25 = getelementptr inbounds %"Vector[Token]"* %24, i32 0, i32 1
  %26 = load %"RawPtr[Token]"* %25
  %27 = call i1 @"==216"(%"RawPtr[Token]"* %p, %"RawPtr[Token]" %26)
  %28 = xor i1 true, %27
  br i1 %28, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %29 = call %Token* @value219(%"RawPtr[Token]"* %p)
  call void @ctor129(%Token* %29)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @advance220(%"RawPtr[Token]"* %"$tmpC2", %"RawPtr[Token]"* %p)
  %30 = load %"RawPtr[Token]"* %"$tmpC2"
  call void @"=207"(%"RawPtr[Token]"* %p, %"RawPtr[Token]" %30)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal %Token* @at549(%"Vector[Token]"* %"$this", i64 %index) #2 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 0
  %3 = load i64* %index.addr
  call void @advance208(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]"* %2, i64 %3)
  %4 = call %Token* @value219(%"RawPtr[Token]"* %"$tmpC")
  ret %Token* %4
}

; Function Attrs: alwaysinline nounwind
define internal %Token* @back550(%"Vector[Token]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 1
  call void @advance328(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]"* %2, i64 -1)
  %3 = call %Token* @value219(%"RawPtr[Token]"* %"$tmpC")
  ret %Token* %3
}

; Function Attrs: alwaysinline nounwind
define internal void @subrange551(%"ContiguousMemoryRange[Token]"* sret %_result, %"Vector[Token]"* %"$this", i64 %index, i64 %num) #2 {
  %_result.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %_result, %"ContiguousMemoryRange[Token]"** %_result.addr
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %num.addr = alloca i64
  store i64 %num, i64* %num.addr
  %"$tmpC" = alloca %"RawPtr[Token]"
  %"$tmpC1" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"** %_result.addr
  %2 = load %"Vector[Token]"** %"$this.addr"
  %3 = getelementptr inbounds %"Vector[Token]"* %2, i32 0, i32 0
  %4 = load i64* %index.addr
  call void @advance208(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]"* %3, i64 %4)
  %5 = load %"RawPtr[Token]"* %"$tmpC"
  %6 = load %"Vector[Token]"** %"$this.addr"
  %7 = getelementptr inbounds %"Vector[Token]"* %6, i32 0, i32 0
  %8 = load i64* %index.addr
  %9 = load i64* %num.addr
  %10 = call i64 @"+24"(i64 %8, i64 %9)
  call void @advance208(%"RawPtr[Token]"* %"$tmpC1", %"RawPtr[Token]"* %7, i64 %10)
  %11 = load %"RawPtr[Token]"* %"$tmpC1"
  call void @ctor326(%"ContiguousMemoryRange[Token]"* %1, %"RawPtr[Token]" %5, %"RawPtr[Token]" %11)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @insertBefore552(%"Vector[Token]"* %"$this", %Token* %value, %"ContiguousMemoryRange[Token]" %pos) #3 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %value.addr = alloca %Token*
  store %Token* %value, %Token** %value.addr
  %pos.addr = alloca %"ContiguousMemoryRange[Token]"
  store %"ContiguousMemoryRange[Token]" %pos, %"ContiguousMemoryRange[Token]"* %pos.addr
  %posCount = alloca i64
  %"$tmpC" = alloca %"RawPtr[Token]"
  %p = alloca %"RawPtr[Token]"
  %q = alloca %"RawPtr[Token]"
  %"$tmpC1" = alloca %"RawPtr[Token]"
  %"$tmpC2" = alloca %"RawPtr[Token]"
  %"$tmpC3" = alloca %"RawPtr[Token]"
  %"$tmpC4" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  call void @frontPtr331(%"RawPtr[Token]"* %"$tmpC", %"ContiguousMemoryRange[Token]"* %pos.addr)
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 0
  %3 = load %"RawPtr[Token]"* %2
  %4 = call i64 @diff203(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]" %3)
  store i64 %4, i64* %posCount
  %5 = load %"Vector[Token]"** %"$this.addr"
  %6 = load %"Vector[Token]"** %"$this.addr"
  %7 = call i64 @size205(%"Vector[Token]"* %6)
  %8 = call i64 @"+67"(i64 %7, i32 1)
  call void @reserve201(%"Vector[Token]"* %5, i64 %8)
  %9 = load %"Vector[Token]"** %"$this.addr"
  %10 = getelementptr inbounds %"Vector[Token]"* %9, i32 0, i32 1
  call void @advance328(%"RawPtr[Token]"* %p, %"RawPtr[Token]"* %10, i64 -1)
  %11 = load %"Vector[Token]"** %"$this.addr"
  %12 = getelementptr inbounds %"Vector[Token]"* %11, i32 0, i32 0
  %13 = load i64* %posCount
  %14 = call i64 @-508(i64 %13, i32 1)
  call void @advance328(%"RawPtr[Token]"* %q, %"RawPtr[Token]"* %12, i64 %14)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %15 = load %"RawPtr[Token]"* %q
  %16 = call i1 @"==216"(%"RawPtr[Token]"* %p, %"RawPtr[Token]" %15)
  %17 = xor i1 true, %16
  br i1 %17, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  call void @advance220(%"RawPtr[Token]"* %"$tmpC1", %"RawPtr[Token]"* %p)
  %18 = call %Token* @value219(%"RawPtr[Token]"* %"$tmpC1")
  %19 = call %Token* @value219(%"RawPtr[Token]"* %p)
  call void @ctor217(%Token* %18, %Token* %19)
  %20 = call %Token* @value219(%"RawPtr[Token]"* %p)
  call void @dtor299(%Token* %20)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @advance328(%"RawPtr[Token]"* %"$tmpC2", %"RawPtr[Token]"* %p, i64 -1)
  %21 = load %"RawPtr[Token]"* %"$tmpC2"
  call void @"=207"(%"RawPtr[Token]"* %p, %"RawPtr[Token]" %21)
  br label %while_block

while_end:                                        ; preds = %while_block
  call void @advance220(%"RawPtr[Token]"* %"$tmpC3", %"RawPtr[Token]"* %p)
  %22 = call %Token* @value219(%"RawPtr[Token]"* %"$tmpC3")
  %23 = load %Token** %value.addr
  call void @ctor217(%Token* %22, %Token* %23)
  %24 = load %"Vector[Token]"** %"$this.addr"
  %25 = getelementptr inbounds %"Vector[Token]"* %24, i32 0, i32 1
  %26 = load %"Vector[Token]"** %"$this.addr"
  %27 = getelementptr inbounds %"Vector[Token]"* %26, i32 0, i32 1
  call void @advance220(%"RawPtr[Token]"* %"$tmpC4", %"RawPtr[Token]"* %27)
  %28 = load %"RawPtr[Token]"* %"$tmpC4"
  call void @"=207"(%"RawPtr[Token]"* %25, %"RawPtr[Token]" %28)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @insertAfter553(%"Vector[Token]"* %"$this", %Token* %value, %"ContiguousMemoryRange[Token]" %pos) #3 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %value.addr = alloca %Token*
  store %Token* %value, %Token** %value.addr
  %pos.addr = alloca %"ContiguousMemoryRange[Token]"
  store %"ContiguousMemoryRange[Token]" %pos, %"ContiguousMemoryRange[Token]"* %pos.addr
  %tmp.v = alloca %"ContiguousMemoryRange[Token]"
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = load %Token** %value.addr
  call void @backPtr332(%"RawPtr[Token]"* %"$tmpC", %"ContiguousMemoryRange[Token]"* %pos.addr)
  %3 = load %"RawPtr[Token]"* %"$tmpC"
  %4 = load %"Vector[Token]"** %"$this.addr"
  %5 = getelementptr inbounds %"Vector[Token]"* %4, i32 0, i32 1
  %6 = load %"RawPtr[Token]"* %5
  call void @ctor326(%"ContiguousMemoryRange[Token]"* %tmp.v, %"RawPtr[Token]" %3, %"RawPtr[Token]" %6)
  %7 = load %"ContiguousMemoryRange[Token]"* %tmp.v
  call void @insertBefore552(%"Vector[Token]"* %1, %Token* %2, %"ContiguousMemoryRange[Token]" %7)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popBack554(%"Vector[Token]"* %"$this") #3 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[Token]"* %1, i32 0, i32 1
  %3 = load %"Vector[Token]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[Token]"* %3, i32 0, i32 1
  call void @advance328(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]"* %4, i64 -1)
  %5 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=207"(%"RawPtr[Token]"* %2, %"RawPtr[Token]" %5)
  %6 = load %"Vector[Token]"** %"$this.addr"
  %7 = getelementptr inbounds %"Vector[Token]"* %6, i32 0, i32 1
  %8 = call %Token* @value219(%"RawPtr[Token]"* %7)
  call void @dtor299(%Token* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @resize555(%"Vector[Token]"* %"$this", i64 %n) #3 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %oldSize = alloca i64
  %newEnd = alloca %"RawPtr[Token]"
  %"$tmpC" = alloca %"RawPtr[Token]"
  %newEnd4 = alloca %"RawPtr[Token]"
  %"$tmpC9" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = call i64 @size205(%"Vector[Token]"* %1)
  store i64 %2, i64* %oldSize
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64* %n.addr
  %4 = load i64* %oldSize
  %5 = call i1 @"==513"(i64 %3, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64* %n.addr
  %7 = load i64* %oldSize
  %8 = call i1 @"<"(i64 %6, i64 %7)
  br i1 %8, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %9 = load %"Vector[Token]"** %"$this.addr"
  %10 = getelementptr inbounds %"Vector[Token]"* %9, i32 0, i32 0
  %11 = load i64* %n.addr
  call void @advance208(%"RawPtr[Token]"* %newEnd, %"RawPtr[Token]"* %10, i64 %11)
  br label %while_block

if_else:                                          ; preds = %if_block1
  %12 = load %"Vector[Token]"** %"$this.addr"
  %13 = load i64* %n.addr
  call void @reserve201(%"Vector[Token]"* %12, i64 %13)
  %14 = load %"Vector[Token]"** %"$this.addr"
  %15 = getelementptr inbounds %"Vector[Token]"* %14, i32 0, i32 0
  %16 = load i64* %n.addr
  call void @advance208(%"RawPtr[Token]"* %newEnd4, %"RawPtr[Token]"* %15, i64 %16)
  br label %while_block5

if_end3:                                          ; preds = %while_end8, %while_end
  ret void

while_block:                                      ; preds = %while_step, %if_then2
  %17 = load %"Vector[Token]"** %"$this.addr"
  %18 = getelementptr inbounds %"Vector[Token]"* %17, i32 0, i32 1
  %19 = load %"RawPtr[Token]"* %newEnd
  %20 = call i1 @"==216"(%"RawPtr[Token]"* %18, %"RawPtr[Token]" %19)
  %21 = xor i1 true, %20
  br i1 %21, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %22 = load %"Vector[Token]"** %"$this.addr"
  %23 = getelementptr inbounds %"Vector[Token]"* %22, i32 0, i32 1
  %24 = load %"Vector[Token]"** %"$this.addr"
  %25 = getelementptr inbounds %"Vector[Token]"* %24, i32 0, i32 1
  call void @advance328(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]"* %25, i64 -1)
  %26 = load %"RawPtr[Token]"* %"$tmpC"
  call void @"=207"(%"RawPtr[Token]"* %23, %"RawPtr[Token]" %26)
  %27 = load %"Vector[Token]"** %"$this.addr"
  %28 = getelementptr inbounds %"Vector[Token]"* %27, i32 0, i32 1
  %29 = call %Token* @value219(%"RawPtr[Token]"* %28)
  call void @dtor299(%Token* %29)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  br label %if_end3

while_block5:                                     ; preds = %while_step7, %if_else
  %30 = load %"Vector[Token]"** %"$this.addr"
  %31 = getelementptr inbounds %"Vector[Token]"* %30, i32 0, i32 1
  %32 = load %"RawPtr[Token]"* %newEnd4
  %33 = call i1 @"==216"(%"RawPtr[Token]"* %31, %"RawPtr[Token]" %32)
  %34 = xor i1 true, %33
  br i1 %34, label %while_body6, label %while_end8

while_body6:                                      ; preds = %while_block5
  %35 = load %"Vector[Token]"** %"$this.addr"
  %36 = getelementptr inbounds %"Vector[Token]"* %35, i32 0, i32 1
  %37 = call %Token* @value219(%"RawPtr[Token]"* %36)
  call void @ctor129(%Token* %37)
  %38 = load %"Vector[Token]"** %"$this.addr"
  %39 = getelementptr inbounds %"Vector[Token]"* %38, i32 0, i32 1
  %40 = load %"Vector[Token]"** %"$this.addr"
  %41 = getelementptr inbounds %"Vector[Token]"* %40, i32 0, i32 1
  call void @advance220(%"RawPtr[Token]"* %"$tmpC9", %"RawPtr[Token]"* %41)
  %42 = load %"RawPtr[Token]"* %"$tmpC9"
  call void @"=207"(%"RawPtr[Token]"* %39, %"RawPtr[Token]" %42)
  br label %while_step7

while_step7:                                      ; preds = %while_body6
  br label %while_block5

while_end8:                                       ; preds = %while_block5
  br label %if_end3
}

; Function Attrs: inlinehint nounwind
define internal void @clear556(%"Vector[Token]"* %"$this") #3 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %tmp.v = alloca %"ContiguousMemoryRange[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = load %"Vector[Token]"** %"$this.addr"
  %3 = getelementptr inbounds %"Vector[Token]"* %2, i32 0, i32 0
  %4 = load %"RawPtr[Token]"* %3
  %5 = load %"Vector[Token]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[Token]"* %5, i32 0, i32 1
  %7 = load %"RawPtr[Token]"* %6
  call void @ctor326(%"ContiguousMemoryRange[Token]"* %tmp.v, %"RawPtr[Token]" %4, %"RawPtr[Token]" %7)
  %8 = load %"ContiguousMemoryRange[Token]"* %tmp.v
  call void @remove330(%"Vector[Token]"* %1, %"ContiguousMemoryRange[Token]" %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==557"(%"Vector[Token]"* %"$this", %"Vector[Token]"* %other) #3 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %other.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %other, %"Vector[Token]"** %other.addr
  %i = alloca i32
  %s = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = call i64 @size205(%"Vector[Token]"* %1)
  %3 = load %"Vector[Token]"** %other.addr
  %4 = call i64 @size205(%"Vector[Token]"* %3)
  %5 = call i1 @"!=278"(i64 %2, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  store i32 0, i32* %i
  %6 = load %"Vector[Token]"** %"$this.addr"
  %7 = call i64 @size205(%"Vector[Token]"* %6)
  store i64 %7, i64* %s
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %8 = load i32* %i
  %9 = load i64* %s
  %10 = call i1 @"<517"(i32 %8, i64 %9)
  br i1 %10, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block1

while_step:                                       ; preds = %if_end3
  %11 = call i32 @"post_++50"(i32* %i)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret i1 true

if_block1:                                        ; preds = %while_body
  %12 = load %"Vector[Token]"** %"$this.addr"
  %13 = load i32* %i
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %tmp.v
  %15 = load i64* %tmp.v
  %16 = call %Token* @at549(%"Vector[Token]"* %12, i64 %15)
  %17 = load %"Vector[Token]"** %other.addr
  %18 = load i32* %i
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %tmp.v4
  %20 = load i64* %tmp.v4
  %21 = call %Token* @at549(%"Vector[Token]"* %17, i64 %20)
  %22 = call i1 @"==558"(%Token* %16, %Token* %21)
  %23 = xor i1 true, %22
  br i1 %23, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block5, %if_block1
  br label %while_step

dumy_block5:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==558"(%Token* %"$this", %Token* %other) #2 {
  %"$this.addr" = alloca %Token*
  store %Token* %"$this", %Token** %"$this.addr"
  %other.addr = alloca %Token*
  store %Token* %other, %Token** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token** %"$this.addr"
  %2 = getelementptr inbounds %Token* %1, i32 0, i32 0
  %3 = load %Token** %other.addr
  %4 = getelementptr inbounds %Token* %3, i32 0, i32 0
  %5 = call i1 @"==520"(%Location* %2, %Location* %4)
  br i1 %5, label %cond.true7, label %cond.false8

cond.true:                                        ; preds = %cond.end3
  %6 = load %Token** %"$this.addr"
  %7 = getelementptr inbounds %Token* %6, i32 0, i32 4
  %8 = load double* %7
  %9 = load %Token** %other.addr
  %10 = getelementptr inbounds %Token* %9, i32 0, i32 4
  %11 = load double* %10
  %12 = call i1 @"==560"(double %8, double %11)
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res12 = phi i1 [ %12, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res12

cond.true1:                                       ; preds = %cond.end6
  %13 = load %Token** %"$this.addr"
  %14 = getelementptr inbounds %Token* %13, i32 0, i32 3
  %15 = load i64* %14
  %16 = load %Token** %other.addr
  %17 = getelementptr inbounds %Token* %16, i32 0, i32 3
  %18 = load i64* %17
  %19 = call i1 @"==559"(i64 %15, i64 %18)
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res11 = phi i1 [ %19, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res11, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %cond.end9
  %20 = load %Token** %"$this.addr"
  %21 = getelementptr inbounds %Token* %20, i32 0, i32 2
  %22 = load %Token** %other.addr
  %23 = getelementptr inbounds %Token* %22, i32 0, i32 2
  %24 = call i1 @"==523"(%String* %21, %String* %23)
  br label %cond.end6

cond.false5:                                      ; preds = %cond.end9
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res10 = phi i1 [ %24, %cond.true4 ], [ false, %cond.false5 ]
  br i1 %cond.res10, label %cond.true1, label %cond.false2

cond.true7:                                       ; preds = %code
  %25 = load %Token** %"$this.addr"
  %26 = getelementptr inbounds %Token* %25, i32 0, i32 1
  %27 = load %Token** %other.addr
  %28 = getelementptr inbounds %Token* %27, i32 0, i32 1
  %29 = call i1 @"==227"(%TokenType* %26, %TokenType* %28)
  br label %cond.end9

cond.false8:                                      ; preds = %code
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res = phi i1 [ %29, %cond.true7 ], [ false, %cond.false8 ]
  br i1 %cond.res, label %cond.true4, label %cond.false5
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==559"(i64 %x, i64 %y) #2 {
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %y.addr = alloca i64
  store i64 %y, i64* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i64* %x.addr
  %2 = load i64* %y.addr
  %3 = call i64 @cmn22(i64 %1, i64 %2)
  %4 = load i64* %y.addr
  %5 = load i64* %x.addr
  %6 = call i64 @cmn22(i64 %4, i64 %5)
  %7 = icmp eq i64 %3, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==560"(double %x, double %y) #2 {
  %x.addr = alloca double
  store double %x, double* %x.addr
  %y.addr = alloca double
  store double %y, double* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load double* %x.addr
  %2 = load double* %y.addr
  %3 = call double @cmn561(double %1, double %2)
  %4 = load double* %y.addr
  %5 = load double* %x.addr
  %6 = call double @cmn561(double %4, double %5)
  %7 = call i1 @_Double_opEQ(double %3, double %6)
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal double @cmn561(double %x, double %y) #2 {
  %x.addr = alloca double
  store double %x, double* %x.addr
  %y.addr = alloca double
  store double %y, double* %y.addr
  br label %code

code:                                             ; preds = %0
  %1 = load double* %x.addr
  ret double %1
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"!=562"(%"Vector[Token]"* %"$this", %"Vector[Token]"* %other) #2 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %other.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %other, %"Vector[Token]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"** %"$this.addr"
  %2 = load %"Vector[Token]"** %other.addr
  %3 = call i1 @"==557"(%"Vector[Token]"* %1, %"Vector[Token]"* %2)
  %4 = xor i1 true, %3
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal void @_dumpThis563(%"Vector[Token]"* %"$this", %StringRef %prefix) #3 {
  %"$this.addr" = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %"$this", %"Vector[Token]"** %"$this.addr"
  %prefix.addr = alloca %StringRef
  store %StringRef %prefix, %StringRef* %prefix.addr
  %"$tmpForRef" = alloca %StringRef
  %const.bytes = alloca [9 x i8]
  %const.struct = alloca %StringRef
  %"$tmpForRef1" = alloca %StringRef
  %const.bytes2 = alloca [14 x i8]
  %const.struct3 = alloca %StringRef
  %"$tmpForRef4" = alloca %StringRef
  %const.bytes5 = alloca [3 x i8]
  %const.struct6 = alloca %StringRef
  %"$tmpC" = alloca %StreamRefWrapperHelperClass
  %"$tmpForRef7" = alloca %StringRef
  %const.bytes8 = alloca [11 x i8]
  %const.struct9 = alloca %StringRef
  %tmp.v = alloca i32
  %"$tmpForRef10" = alloca %StringRef
  %const.bytes11 = alloca [13 x i8]
  %const.struct12 = alloca %StringRef
  %"$tmpC13" = alloca %StreamRefWrapperHelperClass
  %"$tmpForRef14" = alloca %StringRef
  %const.bytes15 = alloca [11 x i8]
  %const.struct16 = alloca %StringRef
  %"$tmpC17" = alloca %StreamRefWrapperHelperClass
  %"$tmpForRef18" = alloca %StringRef
  %const.bytes19 = alloca [18 x i8]
  %const.struct20 = alloca %StringRef
  %"$tmpC21" = alloca %StreamRefWrapperHelperClass
  br label %code

code:                                             ; preds = %0
  %1 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %prefix.addr)
  store [9 x i8] c"dumping \00", [9 x i8]* %const.bytes
  %2 = getelementptr inbounds [9 x i8]* %const.bytes, i32 0, i32 0
  %3 = getelementptr inbounds [9 x i8]* %const.bytes, i32 0, i32 8
  %4 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %5 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %2, i8** %4
  store i8* %3, i8** %5
  %6 = load %StringRef* %const.struct
  store %StringRef %6, %StringRef* %"$tmpForRef"
  %7 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* %1, %StringRef* %"$tmpForRef")
  store [14 x i8] c"Vector[Token]\00", [14 x i8]* %const.bytes2
  %8 = getelementptr inbounds [14 x i8]* %const.bytes2, i32 0, i32 0
  %9 = getelementptr inbounds [14 x i8]* %const.bytes2, i32 0, i32 13
  %10 = getelementptr inbounds %StringRef* %const.struct3, i32 0, i32 0
  %11 = getelementptr inbounds %StringRef* %const.struct3, i32 0, i32 1
  store i8* %8, i8** %10
  store i8* %9, i8** %11
  %12 = load %StringRef* %const.struct3
  store %StringRef %12, %StringRef* %"$tmpForRef1"
  %13 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* %7, %StringRef* %"$tmpForRef1")
  store [3 x i8] c": \00", [3 x i8]* %const.bytes5
  %14 = getelementptr inbounds [3 x i8]* %const.bytes5, i32 0, i32 0
  %15 = getelementptr inbounds [3 x i8]* %const.bytes5, i32 0, i32 2
  %16 = getelementptr inbounds %StringRef* %const.struct6, i32 0, i32 0
  %17 = getelementptr inbounds %StringRef* %const.struct6, i32 0, i32 1
  store i8* %14, i8** %16
  store i8* %15, i8** %17
  %18 = load %StringRef* %const.struct6
  store %StringRef %18, %StringRef* %"$tmpForRef4"
  %19 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* %13, %StringRef* %"$tmpForRef4")
  %20 = load %"Vector[Token]"** %"$this.addr"
  call void @mkStreamRefWrapper564(%StreamRefWrapperHelperClass* %"$tmpC", %"Vector[Token]"* %20)
  %21 = call %ConsoleOutputStream* @"<<530"(%ConsoleOutputStream* %19, %StreamRefWrapperHelperClass* %"$tmpC")
  %22 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %21, %EndLineHelperClass* @endl)
  store [11 x i8] c"    size: \00", [11 x i8]* %const.bytes8
  %23 = getelementptr inbounds [11 x i8]* %const.bytes8, i32 0, i32 0
  %24 = getelementptr inbounds [11 x i8]* %const.bytes8, i32 0, i32 10
  %25 = getelementptr inbounds %StringRef* %const.struct9, i32 0, i32 0
  %26 = getelementptr inbounds %StringRef* %const.struct9, i32 0, i32 1
  store i8* %23, i8** %25
  store i8* %24, i8** %26
  %27 = load %StringRef* %const.struct9
  store %StringRef %27, %StringRef* %"$tmpForRef7"
  %28 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %"$tmpForRef7")
  %29 = load %"Vector[Token]"** %"$this.addr"
  %30 = call i64 @size205(%"Vector[Token]"* %29)
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* %tmp.v
  %32 = call %ConsoleOutputStream* @"<<534"(%ConsoleOutputStream* %28, i32* %tmp.v)
  %33 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %32, %EndLineHelperClass* @endl)
  store [13 x i8] c"    _begin: \00", [13 x i8]* %const.bytes11
  %34 = getelementptr inbounds [13 x i8]* %const.bytes11, i32 0, i32 0
  %35 = getelementptr inbounds [13 x i8]* %const.bytes11, i32 0, i32 12
  %36 = getelementptr inbounds %StringRef* %const.struct12, i32 0, i32 0
  %37 = getelementptr inbounds %StringRef* %const.struct12, i32 0, i32 1
  store i8* %34, i8** %36
  store i8* %35, i8** %37
  %38 = load %StringRef* %const.struct12
  store %StringRef %38, %StringRef* %"$tmpForRef10"
  %39 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %"$tmpForRef10")
  %40 = load %"Vector[Token]"** %"$this.addr"
  %41 = getelementptr inbounds %"Vector[Token]"* %40, i32 0, i32 0
  %42 = call i8* @bytePtr204(%"RawPtr[Token]"* %41)
  call void @mkStreamRefWrapper536(%StreamRefWrapperHelperClass* %"$tmpC13", i8* %42)
  %43 = call %ConsoleOutputStream* @"<<530"(%ConsoleOutputStream* %39, %StreamRefWrapperHelperClass* %"$tmpC13")
  %44 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %43, %EndLineHelperClass* @endl)
  store [11 x i8] c"    _end: \00", [11 x i8]* %const.bytes15
  %45 = getelementptr inbounds [11 x i8]* %const.bytes15, i32 0, i32 0
  %46 = getelementptr inbounds [11 x i8]* %const.bytes15, i32 0, i32 10
  %47 = getelementptr inbounds %StringRef* %const.struct16, i32 0, i32 0
  %48 = getelementptr inbounds %StringRef* %const.struct16, i32 0, i32 1
  store i8* %45, i8** %47
  store i8* %46, i8** %48
  %49 = load %StringRef* %const.struct16
  store %StringRef %49, %StringRef* %"$tmpForRef14"
  %50 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %"$tmpForRef14")
  %51 = load %"Vector[Token]"** %"$this.addr"
  %52 = getelementptr inbounds %"Vector[Token]"* %51, i32 0, i32 1
  %53 = call i8* @bytePtr204(%"RawPtr[Token]"* %52)
  call void @mkStreamRefWrapper536(%StreamRefWrapperHelperClass* %"$tmpC17", i8* %53)
  %54 = call %ConsoleOutputStream* @"<<530"(%ConsoleOutputStream* %50, %StreamRefWrapperHelperClass* %"$tmpC17")
  %55 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %54, %EndLineHelperClass* @endl)
  store [18 x i8] c"    _endOfStore: \00", [18 x i8]* %const.bytes19
  %56 = getelementptr inbounds [18 x i8]* %const.bytes19, i32 0, i32 0
  %57 = getelementptr inbounds [18 x i8]* %const.bytes19, i32 0, i32 17
  %58 = getelementptr inbounds %StringRef* %const.struct20, i32 0, i32 0
  %59 = getelementptr inbounds %StringRef* %const.struct20, i32 0, i32 1
  store i8* %56, i8** %58
  store i8* %57, i8** %59
  %60 = load %StringRef* %const.struct20
  store %StringRef %60, %StringRef* %"$tmpForRef18"
  %61 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %"$tmpForRef18")
  %62 = load %"Vector[Token]"** %"$this.addr"
  %63 = getelementptr inbounds %"Vector[Token]"* %62, i32 0, i32 2
  %64 = call i8* @bytePtr204(%"RawPtr[Token]"* %63)
  call void @mkStreamRefWrapper536(%StreamRefWrapperHelperClass* %"$tmpC21", i8* %64)
  %65 = call %ConsoleOutputStream* @"<<530"(%ConsoleOutputStream* %61, %StreamRefWrapperHelperClass* %"$tmpC21")
  %66 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %65, %EndLineHelperClass* @endl)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @mkStreamRefWrapper564(%StreamRefWrapperHelperClass* sret %_result, %"Vector[Token]"* %x) #3 {
  %_result.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %_result, %StreamRefWrapperHelperClass** %_result.addr
  %x.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %x, %"Vector[Token]"** %x.addr
  %res = alloca %StreamRefWrapperHelperClass
  br label %code

code:                                             ; preds = %0
  call void @ctor532(%StreamRefWrapperHelperClass* %res)
  %1 = load %"Vector[Token]"** %x.addr
  %2 = bitcast %"Vector[Token]"* %1 to i8*
  %3 = getelementptr inbounds %StreamRefWrapperHelperClass* %res, i32 0, i32 0
  store i8* %2, i8** %3
  %4 = load %StreamRefWrapperHelperClass** %_result.addr
  call void @ctor533(%StreamRefWrapperHelperClass* %4, %StreamRefWrapperHelperClass* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor565(%"Vector[UInt/rtct]"* %"$this", i64 %size) #3 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %size.addr = alloca i64
  store i64 %size, i64* %size.addr
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC1" = alloca %"RawPtr[UInt/rtct]"
  %p = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC2" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 0
  call void @ctor135(%"RawPtr[UInt/rtct]"* %2)
  %3 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[UInt/rtct]"* %3, i32 0, i32 1
  call void @ctor135(%"RawPtr[UInt/rtct]"* %4)
  %5 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[UInt/rtct]"* %5, i32 0, i32 2
  call void @ctor135(%"RawPtr[UInt/rtct]"* %6)
  %7 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %8 = getelementptr inbounds %"Vector[UInt/rtct]"* %7, i32 0, i32 0
  %9 = load i64* %size.addr
  call void @alloc364(%"RawPtr[UInt/rtct]"* %"$tmpC", i64 %9)
  %10 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %8, %"RawPtr[UInt/rtct]" %10)
  %11 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %12 = getelementptr inbounds %"Vector[UInt/rtct]"* %11, i32 0, i32 1
  %13 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %14 = getelementptr inbounds %"Vector[UInt/rtct]"* %13, i32 0, i32 0
  %15 = load i64* %size.addr
  call void @advance310(%"RawPtr[UInt/rtct]"* %"$tmpC1", %"RawPtr[UInt/rtct]"* %14, i64 %15)
  %16 = load %"RawPtr[UInt/rtct]"* %"$tmpC1"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %12, %"RawPtr[UInt/rtct]" %16)
  %17 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %18 = getelementptr inbounds %"Vector[UInt/rtct]"* %17, i32 0, i32 2
  %19 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %20 = getelementptr inbounds %"Vector[UInt/rtct]"* %19, i32 0, i32 1
  %21 = load %"RawPtr[UInt/rtct]"* %20
  call void @"=309"(%"RawPtr[UInt/rtct]"* %18, %"RawPtr[UInt/rtct]" %21)
  %22 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %23 = getelementptr inbounds %"Vector[UInt/rtct]"* %22, i32 0, i32 0
  call void @ctor312(%"RawPtr[UInt/rtct]"* %p, %"RawPtr[UInt/rtct]"* %23)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %24 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %25 = getelementptr inbounds %"Vector[UInt/rtct]"* %24, i32 0, i32 1
  %26 = load %"RawPtr[UInt/rtct]"* %25
  %27 = call i1 @"==302"(%"RawPtr[UInt/rtct]"* %p, %"RawPtr[UInt/rtct]" %26)
  %28 = xor i1 true, %27
  br i1 %28, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %29 = call i32* @value314(%"RawPtr[UInt/rtct]"* %p)
  store i32 0, i32* %29
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @advance315(%"RawPtr[UInt/rtct]"* %"$tmpC2", %"RawPtr[UInt/rtct]"* %p)
  %30 = load %"RawPtr[UInt/rtct]"* %"$tmpC2"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %p, %"RawPtr[UInt/rtct]" %30)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isEmpty566(%"Vector[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %4 = getelementptr inbounds %"Vector[UInt/rtct]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[UInt/rtct]"* %4
  %6 = call i1 @"==302"(%"RawPtr[UInt/rtct]"* %2, %"RawPtr[UInt/rtct]" %5)
  ret i1 %6
}

; Function Attrs: alwaysinline nounwind
define internal i32* @at567(%"Vector[UInt/rtct]"* %"$this", i64 %index) #2 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load i64* %index.addr
  call void @advance310(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]"* %2, i64 %3)
  %4 = call i32* @value314(%"RawPtr[UInt/rtct]"* %"$tmpC")
  ret i32* %4
}

; Function Attrs: alwaysinline nounwind
define internal i32* @"()568"(%"Vector[UInt/rtct]"* %"$this", i64 %index) #2 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load i64* %index.addr
  call void @advance310(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]"* %2, i64 %3)
  %4 = call i32* @value314(%"RawPtr[UInt/rtct]"* %"$tmpC")
  ret i32* %4
}

; Function Attrs: alwaysinline nounwind
define internal i32* @front569(%"Vector[UInt/rtct]"* %"$this") #2 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 0
  %3 = call i32* @value314(%"RawPtr[UInt/rtct]"* %2)
  ret i32* %3
}

; Function Attrs: alwaysinline nounwind
define internal void @all570(%"ContiguousMemoryRange[UInt/rtct]"* sret %_result, %"Vector[UInt/rtct]"* %"$this") #2 {
  %_result.addr = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %_result, %"ContiguousMemoryRange[UInt/rtct]"** %_result.addr
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt/rtct]"** %_result.addr
  %2 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %3 = getelementptr inbounds %"Vector[UInt/rtct]"* %2, i32 0, i32 0
  %4 = load %"RawPtr[UInt/rtct]"* %3
  %5 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[UInt/rtct]"* %5, i32 0, i32 1
  %7 = load %"RawPtr[UInt/rtct]"* %6
  call void @ctor468(%"ContiguousMemoryRange[UInt/rtct]"* %1, %"RawPtr[UInt/rtct]" %4, %"RawPtr[UInt/rtct]" %7)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @subrange571(%"ContiguousMemoryRange[UInt/rtct]"* sret %_result, %"Vector[UInt/rtct]"* %"$this", i64 %index, i64 %num) #2 {
  %_result.addr = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %_result, %"ContiguousMemoryRange[UInt/rtct]"** %_result.addr
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %num.addr = alloca i64
  store i64 %num, i64* %num.addr
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC1" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt/rtct]"** %_result.addr
  %2 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %3 = getelementptr inbounds %"Vector[UInt/rtct]"* %2, i32 0, i32 0
  %4 = load i64* %index.addr
  call void @advance310(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]"* %3, i64 %4)
  %5 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  %6 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %7 = getelementptr inbounds %"Vector[UInt/rtct]"* %6, i32 0, i32 0
  %8 = load i64* %index.addr
  %9 = load i64* %num.addr
  %10 = call i64 @"+24"(i64 %8, i64 %9)
  call void @advance310(%"RawPtr[UInt/rtct]"* %"$tmpC1", %"RawPtr[UInt/rtct]"* %7, i64 %10)
  %11 = load %"RawPtr[UInt/rtct]"* %"$tmpC1"
  call void @ctor468(%"ContiguousMemoryRange[UInt/rtct]"* %1, %"RawPtr[UInt/rtct]" %5, %"RawPtr[UInt/rtct]" %11)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @insertBefore572(%"Vector[UInt/rtct]"* %"$this", i32* %value, %"ContiguousMemoryRange[UInt/rtct]" %pos) #3 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %value.addr = alloca i32*
  store i32* %value, i32** %value.addr
  %pos.addr = alloca %"ContiguousMemoryRange[UInt/rtct]"
  store %"ContiguousMemoryRange[UInt/rtct]" %pos, %"ContiguousMemoryRange[UInt/rtct]"* %pos.addr
  %posCount = alloca i64
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  %p = alloca %"RawPtr[UInt/rtct]"
  %q = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC1" = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC2" = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC3" = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC4" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  call void @frontPtr481(%"RawPtr[UInt/rtct]"* %"$tmpC", %"ContiguousMemoryRange[UInt/rtct]"* %pos.addr)
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"Vector[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load %"RawPtr[UInt/rtct]"* %2
  %4 = call i64 @diff304(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]" %3)
  store i64 %4, i64* %posCount
  %5 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %6 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %7 = call i64 @size307(%"Vector[UInt/rtct]"* %6)
  %8 = call i64 @"+67"(i64 %7, i32 1)
  call void @reserve306(%"Vector[UInt/rtct]"* %5, i64 %8)
  %9 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %10 = getelementptr inbounds %"Vector[UInt/rtct]"* %9, i32 0, i32 1
  call void @advance339(%"RawPtr[UInt/rtct]"* %p, %"RawPtr[UInt/rtct]"* %10, i64 -1)
  %11 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %12 = getelementptr inbounds %"Vector[UInt/rtct]"* %11, i32 0, i32 0
  %13 = load i64* %posCount
  %14 = call i64 @-508(i64 %13, i32 1)
  call void @advance339(%"RawPtr[UInt/rtct]"* %q, %"RawPtr[UInt/rtct]"* %12, i64 %14)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %15 = load %"RawPtr[UInt/rtct]"* %q
  %16 = call i1 @"==302"(%"RawPtr[UInt/rtct]"* %p, %"RawPtr[UInt/rtct]" %15)
  %17 = xor i1 true, %16
  br i1 %17, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %18 = call i32* @value314(%"RawPtr[UInt/rtct]"* %p)
  %19 = load i32* %18
  call void @advance315(%"RawPtr[UInt/rtct]"* %"$tmpC1", %"RawPtr[UInt/rtct]"* %p)
  %20 = call i32* @value314(%"RawPtr[UInt/rtct]"* %"$tmpC1")
  store i32 %19, i32* %20
  %21 = call i32* @value314(%"RawPtr[UInt/rtct]"* %p)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @advance339(%"RawPtr[UInt/rtct]"* %"$tmpC2", %"RawPtr[UInt/rtct]"* %p, i64 -1)
  %22 = load %"RawPtr[UInt/rtct]"* %"$tmpC2"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %p, %"RawPtr[UInt/rtct]" %22)
  br label %while_block

while_end:                                        ; preds = %while_block
  %23 = load i32** %value.addr
  %24 = load i32* %23
  call void @advance315(%"RawPtr[UInt/rtct]"* %"$tmpC3", %"RawPtr[UInt/rtct]"* %p)
  %25 = call i32* @value314(%"RawPtr[UInt/rtct]"* %"$tmpC3")
  store i32 %24, i32* %25
  %26 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %27 = getelementptr inbounds %"Vector[UInt/rtct]"* %26, i32 0, i32 1
  %28 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %29 = getelementptr inbounds %"Vector[UInt/rtct]"* %28, i32 0, i32 1
  call void @advance315(%"RawPtr[UInt/rtct]"* %"$tmpC4", %"RawPtr[UInt/rtct]"* %29)
  %30 = load %"RawPtr[UInt/rtct]"* %"$tmpC4"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %27, %"RawPtr[UInt/rtct]" %30)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @insertAfter573(%"Vector[UInt/rtct]"* %"$this", i32* %value, %"ContiguousMemoryRange[UInt/rtct]" %pos) #3 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %value.addr = alloca i32*
  store i32* %value, i32** %value.addr
  %pos.addr = alloca %"ContiguousMemoryRange[UInt/rtct]"
  store %"ContiguousMemoryRange[UInt/rtct]" %pos, %"ContiguousMemoryRange[UInt/rtct]"* %pos.addr
  %tmp.v = alloca %"ContiguousMemoryRange[UInt/rtct]"
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = load i32** %value.addr
  call void @backPtr482(%"RawPtr[UInt/rtct]"* %"$tmpC", %"ContiguousMemoryRange[UInt/rtct]"* %pos.addr)
  %3 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  %4 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %5 = getelementptr inbounds %"Vector[UInt/rtct]"* %4, i32 0, i32 1
  %6 = load %"RawPtr[UInt/rtct]"* %5
  call void @ctor468(%"ContiguousMemoryRange[UInt/rtct]"* %tmp.v, %"RawPtr[UInt/rtct]" %3, %"RawPtr[UInt/rtct]" %6)
  %7 = load %"ContiguousMemoryRange[UInt/rtct]"* %tmp.v
  call void @insertBefore572(%"Vector[UInt/rtct]"* %1, i32* %2, %"ContiguousMemoryRange[UInt/rtct]" %7)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @remove574(%"Vector[UInt/rtct]"* %"$this", %"ContiguousMemoryRange[UInt/rtct]" %range) #3 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %range.addr = alloca %"ContiguousMemoryRange[UInt/rtct]"
  store %"ContiguousMemoryRange[UInt/rtct]" %range, %"ContiguousMemoryRange[UInt/rtct]"* %range.addr
  %rBegin = alloca %"RawPtr[UInt/rtct]"
  %rEnd = alloca %"RawPtr[UInt/rtct]"
  %"$rangeVar" = alloca %"ContiguousMemoryRange[UInt/rtct]"
  %el = alloca i32*
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC5" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  call void @frontPtr481(%"RawPtr[UInt/rtct]"* %rBegin, %"ContiguousMemoryRange[UInt/rtct]"* %range.addr)
  call void @backPtr482(%"RawPtr[UInt/rtct]"* %rEnd, %"ContiguousMemoryRange[UInt/rtct]"* %range.addr)
  call void @ctor575(%"ContiguousMemoryRange[UInt/rtct]"* %"$rangeVar", %"ContiguousMemoryRange[UInt/rtct]"* %range.addr)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = call i1 @isEmpty469(%"ContiguousMemoryRange[UInt/rtct]"* %"$rangeVar")
  %2 = xor i1 true, %1
  br i1 %2, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %3 = call i32* @front471(%"ContiguousMemoryRange[UInt/rtct]"* %"$rangeVar")
  store i32* %3, i32** %el
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @popFront475(%"ContiguousMemoryRange[UInt/rtct]"* %"$rangeVar")
  br label %while_block

while_end:                                        ; preds = %while_block
  br label %while_block1

while_block1:                                     ; preds = %while_step3, %while_end
  %4 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %5 = getelementptr inbounds %"Vector[UInt/rtct]"* %4, i32 0, i32 1
  %6 = load %"RawPtr[UInt/rtct]"* %5
  %7 = call i1 @"==302"(%"RawPtr[UInt/rtct]"* %rEnd, %"RawPtr[UInt/rtct]" %6)
  %8 = xor i1 true, %7
  br i1 %8, label %while_body2, label %while_end4

while_body2:                                      ; preds = %while_block1
  %9 = call i32* @value314(%"RawPtr[UInt/rtct]"* %rEnd)
  %10 = load i32* %9
  %11 = call i32* @value314(%"RawPtr[UInt/rtct]"* %rBegin)
  store i32 %10, i32* %11
  %12 = call i32* @value314(%"RawPtr[UInt/rtct]"* %rEnd)
  call void @advance315(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]"* %rBegin)
  %13 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %rBegin, %"RawPtr[UInt/rtct]" %13)
  call void @advance315(%"RawPtr[UInt/rtct]"* %"$tmpC5", %"RawPtr[UInt/rtct]"* %rEnd)
  %14 = load %"RawPtr[UInt/rtct]"* %"$tmpC5"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %rEnd, %"RawPtr[UInt/rtct]" %14)
  br label %while_step3

while_step3:                                      ; preds = %while_body2
  br label %while_block1

while_end4:                                       ; preds = %while_block1
  %15 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %16 = getelementptr inbounds %"Vector[UInt/rtct]"* %15, i32 0, i32 1
  %17 = load %"RawPtr[UInt/rtct]"* %rBegin
  call void @"=309"(%"RawPtr[UInt/rtct]"* %16, %"RawPtr[UInt/rtct]" %17)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor575(%"ContiguousMemoryRange[UInt/rtct]"* %"$this", %"ContiguousMemoryRange[UInt/rtct]"* %other) #2 {
  %"$this.addr" = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %"$this", %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %other.addr = alloca %"ContiguousMemoryRange[UInt/rtct]"*
  store %"ContiguousMemoryRange[UInt/rtct]"* %other, %"ContiguousMemoryRange[UInt/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %2 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[UInt/rtct]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %3, i32 0, i32 0
  call void @ctor312(%"RawPtr[UInt/rtct]"* %2, %"RawPtr[UInt/rtct]"* %4)
  %5 = load %"ContiguousMemoryRange[UInt/rtct]"** %"$this.addr"
  %6 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %5, i32 0, i32 1
  %7 = load %"ContiguousMemoryRange[UInt/rtct]"** %other.addr
  %8 = getelementptr inbounds %"ContiguousMemoryRange[UInt/rtct]"* %7, i32 0, i32 1
  call void @ctor312(%"RawPtr[UInt/rtct]"* %6, %"RawPtr[UInt/rtct]"* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @remove576(%"Vector[UInt/rtct]"* %"$this", i64 %index) #3 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %r = alloca %"ContiguousMemoryRange[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  call void @all570(%"ContiguousMemoryRange[UInt/rtct]"* %r, %"Vector[UInt/rtct]"* %1)
  %2 = load i64* %index.addr
  call void @popFront477(%"ContiguousMemoryRange[UInt/rtct]"* %r, i64 %2)
  %3 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %4 = call i64 @size307(%"Vector[UInt/rtct]"* %3)
  %5 = load i64* %index.addr
  %6 = call i64 @-44(i64 %4, i64 %5)
  %7 = call i64 @-246(i64 %6, i32 1)
  call void @popBack478(%"ContiguousMemoryRange[UInt/rtct]"* %r, i64 %7)
  %8 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %9 = load %"ContiguousMemoryRange[UInt/rtct]"* %r
  call void @remove574(%"Vector[UInt/rtct]"* %8, %"ContiguousMemoryRange[UInt/rtct]" %9)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @resize577(%"Vector[UInt/rtct]"* %"$this", i64 %n) #3 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %oldSize = alloca i64
  %newEnd = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC" = alloca %"RawPtr[UInt/rtct]"
  %newEnd4 = alloca %"RawPtr[UInt/rtct]"
  %"$tmpC9" = alloca %"RawPtr[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = call i64 @size307(%"Vector[UInt/rtct]"* %1)
  store i64 %2, i64* %oldSize
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64* %n.addr
  %4 = load i64* %oldSize
  %5 = call i1 @"==513"(i64 %3, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64* %n.addr
  %7 = load i64* %oldSize
  %8 = call i1 @"<"(i64 %6, i64 %7)
  br i1 %8, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %9 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %10 = getelementptr inbounds %"Vector[UInt/rtct]"* %9, i32 0, i32 0
  %11 = load i64* %n.addr
  call void @advance310(%"RawPtr[UInt/rtct]"* %newEnd, %"RawPtr[UInt/rtct]"* %10, i64 %11)
  br label %while_block

if_else:                                          ; preds = %if_block1
  %12 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %13 = load i64* %n.addr
  call void @reserve306(%"Vector[UInt/rtct]"* %12, i64 %13)
  %14 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %15 = getelementptr inbounds %"Vector[UInt/rtct]"* %14, i32 0, i32 0
  %16 = load i64* %n.addr
  call void @advance310(%"RawPtr[UInt/rtct]"* %newEnd4, %"RawPtr[UInt/rtct]"* %15, i64 %16)
  br label %while_block5

if_end3:                                          ; preds = %while_end8, %while_end
  ret void

while_block:                                      ; preds = %while_step, %if_then2
  %17 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %18 = getelementptr inbounds %"Vector[UInt/rtct]"* %17, i32 0, i32 1
  %19 = load %"RawPtr[UInt/rtct]"* %newEnd
  %20 = call i1 @"==302"(%"RawPtr[UInt/rtct]"* %18, %"RawPtr[UInt/rtct]" %19)
  %21 = xor i1 true, %20
  br i1 %21, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %22 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %23 = getelementptr inbounds %"Vector[UInt/rtct]"* %22, i32 0, i32 1
  %24 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %25 = getelementptr inbounds %"Vector[UInt/rtct]"* %24, i32 0, i32 1
  call void @advance339(%"RawPtr[UInt/rtct]"* %"$tmpC", %"RawPtr[UInt/rtct]"* %25, i64 -1)
  %26 = load %"RawPtr[UInt/rtct]"* %"$tmpC"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %23, %"RawPtr[UInt/rtct]" %26)
  %27 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %28 = getelementptr inbounds %"Vector[UInt/rtct]"* %27, i32 0, i32 1
  %29 = call i32* @value314(%"RawPtr[UInt/rtct]"* %28)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  br label %if_end3

while_block5:                                     ; preds = %while_step7, %if_else
  %30 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %31 = getelementptr inbounds %"Vector[UInt/rtct]"* %30, i32 0, i32 1
  %32 = load %"RawPtr[UInt/rtct]"* %newEnd4
  %33 = call i1 @"==302"(%"RawPtr[UInt/rtct]"* %31, %"RawPtr[UInt/rtct]" %32)
  %34 = xor i1 true, %33
  br i1 %34, label %while_body6, label %while_end8

while_body6:                                      ; preds = %while_block5
  %35 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %36 = getelementptr inbounds %"Vector[UInt/rtct]"* %35, i32 0, i32 1
  %37 = call i32* @value314(%"RawPtr[UInt/rtct]"* %36)
  store i32 0, i32* %37
  %38 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %39 = getelementptr inbounds %"Vector[UInt/rtct]"* %38, i32 0, i32 1
  %40 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %41 = getelementptr inbounds %"Vector[UInt/rtct]"* %40, i32 0, i32 1
  call void @advance315(%"RawPtr[UInt/rtct]"* %"$tmpC9", %"RawPtr[UInt/rtct]"* %41)
  %42 = load %"RawPtr[UInt/rtct]"* %"$tmpC9"
  call void @"=309"(%"RawPtr[UInt/rtct]"* %39, %"RawPtr[UInt/rtct]" %42)
  br label %while_step7

while_step7:                                      ; preds = %while_body6
  br label %while_block5

while_end8:                                       ; preds = %while_block5
  br label %if_end3
}

; Function Attrs: inlinehint nounwind
define internal void @clear578(%"Vector[UInt/rtct]"* %"$this") #3 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %tmp.v = alloca %"ContiguousMemoryRange[UInt/rtct]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %3 = getelementptr inbounds %"Vector[UInt/rtct]"* %2, i32 0, i32 0
  %4 = load %"RawPtr[UInt/rtct]"* %3
  %5 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %6 = getelementptr inbounds %"Vector[UInt/rtct]"* %5, i32 0, i32 1
  %7 = load %"RawPtr[UInt/rtct]"* %6
  call void @ctor468(%"ContiguousMemoryRange[UInt/rtct]"* %tmp.v, %"RawPtr[UInt/rtct]" %4, %"RawPtr[UInt/rtct]" %7)
  %8 = load %"ContiguousMemoryRange[UInt/rtct]"* %tmp.v
  call void @remove574(%"Vector[UInt/rtct]"* %1, %"ContiguousMemoryRange[UInt/rtct]" %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==579"(%"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"* %other) #3 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %other.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %other, %"Vector[UInt/rtct]"** %other.addr
  %i = alloca i32
  %s = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = call i64 @size307(%"Vector[UInt/rtct]"* %1)
  %3 = load %"Vector[UInt/rtct]"** %other.addr
  %4 = call i64 @size307(%"Vector[UInt/rtct]"* %3)
  %5 = call i1 @"!=278"(i64 %2, i64 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  store i32 0, i32* %i
  %6 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %7 = call i64 @size307(%"Vector[UInt/rtct]"* %6)
  store i64 %7, i64* %s
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %8 = load i32* %i
  %9 = load i64* %s
  %10 = call i1 @"<517"(i32 %8, i64 %9)
  br i1 %10, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block1

while_step:                                       ; preds = %if_end3
  %11 = call i32 @"post_++50"(i32* %i)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret i1 true

if_block1:                                        ; preds = %while_body
  %12 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %13 = load i32* %i
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %tmp.v
  %15 = load i64* %tmp.v
  %16 = call i32* @at567(%"Vector[UInt/rtct]"* %12, i64 %15)
  %17 = load i32* %16
  %18 = load %"Vector[UInt/rtct]"** %other.addr
  %19 = load i32* %i
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %tmp.v4
  %21 = load i64* %tmp.v4
  %22 = call i32* @at567(%"Vector[UInt/rtct]"* %18, i64 %21)
  %23 = load i32* %22
  %24 = call i1 @"==340"(i32 %17, i32 %23)
  %25 = xor i1 true, %24
  br i1 %25, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block5, %if_block1
  br label %while_step

dumy_block5:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"!=580"(%"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"* %other) #2 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %other.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %other, %"Vector[UInt/rtct]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %2 = load %"Vector[UInt/rtct]"** %other.addr
  %3 = call i1 @"==579"(%"Vector[UInt/rtct]"* %1, %"Vector[UInt/rtct]"* %2)
  %4 = xor i1 true, %3
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal void @_dumpThis581(%"Vector[UInt/rtct]"* %"$this", %StringRef %prefix) #3 {
  %"$this.addr" = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %"$this", %"Vector[UInt/rtct]"** %"$this.addr"
  %prefix.addr = alloca %StringRef
  store %StringRef %prefix, %StringRef* %prefix.addr
  %"$tmpForRef" = alloca %StringRef
  %const.bytes = alloca [9 x i8]
  %const.struct = alloca %StringRef
  %"$tmpForRef1" = alloca %StringRef
  %const.bytes2 = alloca [23 x i8]
  %const.struct3 = alloca %StringRef
  %"$tmpForRef4" = alloca %StringRef
  %const.bytes5 = alloca [3 x i8]
  %const.struct6 = alloca %StringRef
  %"$tmpC" = alloca %StreamRefWrapperHelperClass
  %"$tmpForRef7" = alloca %StringRef
  %const.bytes8 = alloca [11 x i8]
  %const.struct9 = alloca %StringRef
  %tmp.v = alloca i32
  %"$tmpForRef10" = alloca %StringRef
  %const.bytes11 = alloca [13 x i8]
  %const.struct12 = alloca %StringRef
  %"$tmpC13" = alloca %StreamRefWrapperHelperClass
  %"$tmpForRef14" = alloca %StringRef
  %const.bytes15 = alloca [11 x i8]
  %const.struct16 = alloca %StringRef
  %"$tmpC17" = alloca %StreamRefWrapperHelperClass
  %"$tmpForRef18" = alloca %StringRef
  %const.bytes19 = alloca [18 x i8]
  %const.struct20 = alloca %StringRef
  %"$tmpC21" = alloca %StreamRefWrapperHelperClass
  br label %code

code:                                             ; preds = %0
  %1 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %prefix.addr)
  store [9 x i8] c"dumping \00", [9 x i8]* %const.bytes
  %2 = getelementptr inbounds [9 x i8]* %const.bytes, i32 0, i32 0
  %3 = getelementptr inbounds [9 x i8]* %const.bytes, i32 0, i32 8
  %4 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 0
  %5 = getelementptr inbounds %StringRef* %const.struct, i32 0, i32 1
  store i8* %2, i8** %4
  store i8* %3, i8** %5
  %6 = load %StringRef* %const.struct
  store %StringRef %6, %StringRef* %"$tmpForRef"
  %7 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* %1, %StringRef* %"$tmpForRef")
  store [23 x i8] c"Vector[UInt/rtct]/rtct\00", [23 x i8]* %const.bytes2
  %8 = getelementptr inbounds [23 x i8]* %const.bytes2, i32 0, i32 0
  %9 = getelementptr inbounds [23 x i8]* %const.bytes2, i32 0, i32 22
  %10 = getelementptr inbounds %StringRef* %const.struct3, i32 0, i32 0
  %11 = getelementptr inbounds %StringRef* %const.struct3, i32 0, i32 1
  store i8* %8, i8** %10
  store i8* %9, i8** %11
  %12 = load %StringRef* %const.struct3
  store %StringRef %12, %StringRef* %"$tmpForRef1"
  %13 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* %7, %StringRef* %"$tmpForRef1")
  store [3 x i8] c": \00", [3 x i8]* %const.bytes5
  %14 = getelementptr inbounds [3 x i8]* %const.bytes5, i32 0, i32 0
  %15 = getelementptr inbounds [3 x i8]* %const.bytes5, i32 0, i32 2
  %16 = getelementptr inbounds %StringRef* %const.struct6, i32 0, i32 0
  %17 = getelementptr inbounds %StringRef* %const.struct6, i32 0, i32 1
  store i8* %14, i8** %16
  store i8* %15, i8** %17
  %18 = load %StringRef* %const.struct6
  store %StringRef %18, %StringRef* %"$tmpForRef4"
  %19 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* %13, %StringRef* %"$tmpForRef4")
  %20 = load %"Vector[UInt/rtct]"** %"$this.addr"
  call void @mkStreamRefWrapper582(%StreamRefWrapperHelperClass* %"$tmpC", %"Vector[UInt/rtct]"* %20)
  %21 = call %ConsoleOutputStream* @"<<530"(%ConsoleOutputStream* %19, %StreamRefWrapperHelperClass* %"$tmpC")
  %22 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %21, %EndLineHelperClass* @endl)
  store [11 x i8] c"    size: \00", [11 x i8]* %const.bytes8
  %23 = getelementptr inbounds [11 x i8]* %const.bytes8, i32 0, i32 0
  %24 = getelementptr inbounds [11 x i8]* %const.bytes8, i32 0, i32 10
  %25 = getelementptr inbounds %StringRef* %const.struct9, i32 0, i32 0
  %26 = getelementptr inbounds %StringRef* %const.struct9, i32 0, i32 1
  store i8* %23, i8** %25
  store i8* %24, i8** %26
  %27 = load %StringRef* %const.struct9
  store %StringRef %27, %StringRef* %"$tmpForRef7"
  %28 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %"$tmpForRef7")
  %29 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %30 = call i64 @size307(%"Vector[UInt/rtct]"* %29)
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* %tmp.v
  %32 = call %ConsoleOutputStream* @"<<534"(%ConsoleOutputStream* %28, i32* %tmp.v)
  %33 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %32, %EndLineHelperClass* @endl)
  store [13 x i8] c"    _begin: \00", [13 x i8]* %const.bytes11
  %34 = getelementptr inbounds [13 x i8]* %const.bytes11, i32 0, i32 0
  %35 = getelementptr inbounds [13 x i8]* %const.bytes11, i32 0, i32 12
  %36 = getelementptr inbounds %StringRef* %const.struct12, i32 0, i32 0
  %37 = getelementptr inbounds %StringRef* %const.struct12, i32 0, i32 1
  store i8* %34, i8** %36
  store i8* %35, i8** %37
  %38 = load %StringRef* %const.struct12
  store %StringRef %38, %StringRef* %"$tmpForRef10"
  %39 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %"$tmpForRef10")
  %40 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %41 = getelementptr inbounds %"Vector[UInt/rtct]"* %40, i32 0, i32 0
  %42 = call i8* @bytePtr305(%"RawPtr[UInt/rtct]"* %41)
  call void @mkStreamRefWrapper536(%StreamRefWrapperHelperClass* %"$tmpC13", i8* %42)
  %43 = call %ConsoleOutputStream* @"<<530"(%ConsoleOutputStream* %39, %StreamRefWrapperHelperClass* %"$tmpC13")
  %44 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %43, %EndLineHelperClass* @endl)
  store [11 x i8] c"    _end: \00", [11 x i8]* %const.bytes15
  %45 = getelementptr inbounds [11 x i8]* %const.bytes15, i32 0, i32 0
  %46 = getelementptr inbounds [11 x i8]* %const.bytes15, i32 0, i32 10
  %47 = getelementptr inbounds %StringRef* %const.struct16, i32 0, i32 0
  %48 = getelementptr inbounds %StringRef* %const.struct16, i32 0, i32 1
  store i8* %45, i8** %47
  store i8* %46, i8** %48
  %49 = load %StringRef* %const.struct16
  store %StringRef %49, %StringRef* %"$tmpForRef14"
  %50 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %"$tmpForRef14")
  %51 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %52 = getelementptr inbounds %"Vector[UInt/rtct]"* %51, i32 0, i32 1
  %53 = call i8* @bytePtr305(%"RawPtr[UInt/rtct]"* %52)
  call void @mkStreamRefWrapper536(%StreamRefWrapperHelperClass* %"$tmpC17", i8* %53)
  %54 = call %ConsoleOutputStream* @"<<530"(%ConsoleOutputStream* %50, %StreamRefWrapperHelperClass* %"$tmpC17")
  %55 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %54, %EndLineHelperClass* @endl)
  store [18 x i8] c"    _endOfStore: \00", [18 x i8]* %const.bytes19
  %56 = getelementptr inbounds [18 x i8]* %const.bytes19, i32 0, i32 0
  %57 = getelementptr inbounds [18 x i8]* %const.bytes19, i32 0, i32 17
  %58 = getelementptr inbounds %StringRef* %const.struct20, i32 0, i32 0
  %59 = getelementptr inbounds %StringRef* %const.struct20, i32 0, i32 1
  store i8* %56, i8** %58
  store i8* %57, i8** %59
  %60 = load %StringRef* %const.struct20
  store %StringRef %60, %StringRef* %"$tmpForRef18"
  %61 = call %ConsoleOutputStream* @"<<528"(%ConsoleOutputStream* @cout, %StringRef* %"$tmpForRef18")
  %62 = load %"Vector[UInt/rtct]"** %"$this.addr"
  %63 = getelementptr inbounds %"Vector[UInt/rtct]"* %62, i32 0, i32 2
  %64 = call i8* @bytePtr305(%"RawPtr[UInt/rtct]"* %63)
  call void @mkStreamRefWrapper536(%StreamRefWrapperHelperClass* %"$tmpC21", i8* %64)
  %65 = call %ConsoleOutputStream* @"<<530"(%ConsoleOutputStream* %61, %StreamRefWrapperHelperClass* %"$tmpC21")
  %66 = call %ConsoleOutputStream* @"<<526"(%ConsoleOutputStream* %65, %EndLineHelperClass* @endl)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @mkStreamRefWrapper582(%StreamRefWrapperHelperClass* sret %_result, %"Vector[UInt/rtct]"* %x) #3 {
  %_result.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %_result, %StreamRefWrapperHelperClass** %_result.addr
  %x.addr = alloca %"Vector[UInt/rtct]"*
  store %"Vector[UInt/rtct]"* %x, %"Vector[UInt/rtct]"** %x.addr
  %res = alloca %StreamRefWrapperHelperClass
  br label %code

code:                                             ; preds = %0
  call void @ctor532(%StreamRefWrapperHelperClass* %res)
  %1 = load %"Vector[UInt/rtct]"** %x.addr
  %2 = bitcast %"Vector[UInt/rtct]"* %1 to i8*
  %3 = getelementptr inbounds %StreamRefWrapperHelperClass* %res, i32 0, i32 0
  store i8* %2, i8** %3
  %4 = load %StreamRefWrapperHelperClass** %_result.addr
  call void @ctor533(%StreamRefWrapperHelperClass* %4, %StreamRefWrapperHelperClass* %res)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @isAlnum(i8 %c) #2 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @isalnum(i32 %2)
  %4 = call i1 @"!=113"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @isalnum(i32)

; Function Attrs: alwaysinline nounwind
define internal i1 @isBlank(i8 %c) #2 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @isblank(i32 %2)
  %4 = call i1 @"!=113"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @isblank(i32)

; Function Attrs: alwaysinline nounwind
define internal i1 @isCntrl(i8 %c) #2 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @iscntrl(i32 %2)
  %4 = call i1 @"!=113"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @iscntrl(i32)

; Function Attrs: alwaysinline nounwind
define internal i1 @isGraph(i8 %c) #2 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @isgraph(i32 %2)
  %4 = call i1 @"!=113"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @isgraph(i32)

; Function Attrs: alwaysinline nounwind
define internal i1 @isLower(i8 %c) #2 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @islower(i32 %2)
  %4 = call i1 @"!=113"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @islower(i32)

; Function Attrs: alwaysinline nounwind
define internal i1 @isPrint(i8 %c) #2 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @isprint(i32 %2)
  %4 = call i1 @"!=113"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @isprint(i32)

; Function Attrs: alwaysinline nounwind
define internal i1 @isPunct(i8 %c) #2 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @ispunct(i32 %2)
  %4 = call i1 @"!=113"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @ispunct(i32)

; Function Attrs: alwaysinline nounwind
define internal i1 @isSpace(i8 %c) #2 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @isspace(i32 %2)
  %4 = call i1 @"!=113"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @isspace(i32)

; Function Attrs: alwaysinline nounwind
define internal i1 @isUpper(i8 %c) #2 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32* %tmp.v
  %3 = call i32 @isupper(i32 %2)
  %4 = call i1 @"!=113"(i32 0, i32 %3)
  ret i1 %4
}

declare i32 @isupper(i32)

declare void @exit(i32)

; Function Attrs: inlinehint nounwind
define internal i32 @systemCall(%StringRef %cmd) #3 {
  %cmd.addr = alloca %StringRef
  store %StringRef %cmd, %StringRef* %cmd.addr
  br label %code

code:                                             ; preds = %0
  %1 = call i8* @cStr(%StringRef* %cmd.addr)
  %2 = call i32 bitcast (void (i8*)* @system to i32 (i8*)*)(i8* %1)
  ret i32 %2
}

declare i8* @fgets(i8*, i32, i8*)

declare i32 @fread(i8*, i32, i32, i8*)

attributes #0 = { alwaysinline }
attributes #1 = { nounwind }
attributes #2 = { alwaysinline nounwind }
attributes #3 = { inlinehint nounwind }
attributes #4 = { noinline nounwind }
attributes #5 = { nounwind readnone }
