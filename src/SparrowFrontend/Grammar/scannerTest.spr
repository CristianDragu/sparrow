import scanner;
import scannerIf;

import std.ranges;

fun sprMain
{
    if ( programArgs.size() < 2 )
        return;
    var n = programArgs(1) asInt;

    if      ( n == 0 ) handleFile(programArgs(1));
    else if ( n == 1 ) test1();
    else if ( n == 2 ) test2();
    else if ( n == 3 ) test3();
    else if ( n == 4 ) test4();
}

class ConsoleErrorReporter {
    fun reportError(loc: Location, msg: @String) {
        cout << loc << " ERROR: " << msg << endl;   // IGNORE-ERROR for test.py
    }
}

fun handleFile(filename: StringRef) {
    var loc = mkLocation();

    var ctx: @ScannerContext = openFile(filename, loc);
    if ( ctx === null )
        return;

    var token: Token;
    token.type = tkSTART_PROGRAM;
    while ( token.type != tkEND ) {
        nextToken(ctx, token);
        cout << token.type._data << " - '" << token.data << "' - " << token.loc << endl;
    }
    closeFile(ctx);
}

fun parseAndPrint(inputText: StringRef) {
    var loc = mkLocation();
    var src = inputText;
    var scanner = SparrowScanner(StringRef, ConsoleErrorReporter)(src, ConsoleErrorReporter(), loc);

    for ( token = scanner ) {
        cout << token.type._data << " - '" << token.data << "' - " << token.loc << endl;
    }
}

fun test1 {
    parseAndPrint("1 2 3 4 5 0xff, 0b101, 0777, 0789, .123 0.123 1.123 12.34e2f 123_456 1_2.3_4");
}
/*<<<Numbers test(1)
303 - '1' - 1:1-1:2
303 - '2' - 1:3-1:4
303 - '3' - 1:5-1:6
303 - '4' - 1:7-1:8
303 - '5' - 1:9-1:10
303 - 'ff' - 1:11-1:15
295 - '' - 1:15-1:16
303 - '101' - 1:17-1:22
295 - '' - 1:22-1:23
303 - '0777' - 1:24-1:28
295 - '' - 1:28-1:29
303 - '0789' - 1:30-1:34
295 - '' - 1:34-1:35
308 - '.123' - 1:36-1:40
308 - '0.123' - 1:41-1:46
308 - '1.123' - 1:47-1:52
307 - '12.34e2' - 1:53-1:61
303 - '123456' - 1:62-1:69
307 - '12.34' - 1:70-1:77
>>>*/

fun test2 {
    parseAndPrint("a b c d e if then else abc_def _1 _a a1 a@#$ a.b.c ab.bc.cd abc.*");
}
/*<<<ids test(2)
299 - 'a' - 1:1-1:2
299 - 'b' - 1:3-1:4
299 - 'c' - 1:5-1:6
299 - 'd' - 1:7-1:8
299 - 'e' - 1:9-1:10
276 - 'if' - 1:11-1:13
299 - 'then' - 1:14-1:18
286 - 'else' - 1:19-1:23
299 - 'abc_def' - 1:24-1:31
299 - '_1' - 1:32-1:34
299 - '_a' - 1:35-1:37
299 - 'a1' - 1:38-1:40
299 - 'a@#$' - 1:41-1:45
299 - 'a' - 1:46-1:47
296 - '' - 1:47-1:48
299 - 'b' - 1:48-1:49
296 - '' - 1:49-1:50
299 - 'c' - 1:50-1:51
299 - 'ab' - 1:52-1:54
296 - '' - 1:54-1:55
299 - 'bc' - 1:55-1:57
296 - '' - 1:57-1:58
299 - 'cd' - 1:58-1:60
299 - 'abc' - 1:61-1:64
296 - '' - 1:64-1:65
300 - '*' - 1:65-1:66
>>>*/

fun test3 {
    parseAndPrint(". .. ... !!! .* # !@#$%^&*-+=");
}
/*<<<operators test(3)
296 - '' - 1:1-1:2
300 - '..' - 1:3-1:5
300 - '...' - 1:6-1:9
300 - '!!!' - 1:10-1:13
296 - '' - 1:14-1:15
300 - '*' - 1:15-1:16
300 - '#' - 1:17-1:18
300 - '!@#$%^&*-+=' - 1:19-1:30
>>>*/

fun test4 {
    parseAndPrint("\"abcd\" 'a' <{abc\\nop}>");
}
/*<<<strings test(4)
302 - 'abcd' - 1:1-1:7
301 - 'a' - 1:8-1:11
302 - 'abc\nop' - 1:12-1:23
>>>*/

//<<<Pair test(~/work/sparrow/SparrowImplicitLib/std/ranges.spr)
//<<<Pair test(~/work/sparrow/SparrowImplicitLib/std/vector.spr)
