//!! -t "SparrowImplicitLib.spr"

fun[native("writeLnDouble"), autoCt] writeLnDoubleCt(x: Double);

// Function that can be called only with compile-time arguments
fun[ct] ctTest(x: Double)
{
    writeLnDoubleCt(x);
}

class TestClass
{
    fun[ct,static] ctMethod(n: Int): Int
    {
        return add(n,1000);
    }

    if[ct] ( true )
        fun f { writeLn("f.1"); }
    else
        fun f { writeLn("f.2"); }

    if[ct] ( false )
        fun g { writeLn("g.1"); }
    else
        fun g { writeLn("g.2"); }
}

class Gen(t: Type)
{
    if[ct] ( t == Int )
        fun print { writeLn("Int"); }
    else if[ct] ( t == Double )
        fun print { writeLn("Double"); }
    else
        fun print { writeLn("unknown type"); }
}

fun[native("test")] test(n: Int)
{
    if ( true )
        ctTest(1.0);
    else
        ctTest(2.0);

    if[ct] ( true )
        ctTest(11.0);
    else
        ctTest(12.0);
    if[ct] ( false )
        ctTest(21.0);
    else
        ctTest(22.0);

    if[ct] ( true )
    {
        writeLn("ok");
    }
    else
    {
        writeLn("fail");
        some error here;
    }

    var x: TestClass;
    x.f();
    x.g();

    var gi: Gen(Int);
    var gd: Gen(Double);
    var gc: Gen(Char);
    gi.print();
    gd.print();
    gc.print();
}

/*<<<Running()
ok
f.1
g.2
Int
Double
unknown type
>>>*/