//!! -t "SparrowImplicitLib.spr"

concept AnyType(x); // Always true

class A
{
    var b: static_buffer(32);
}

class Array(t: Type, n: SizeType)
{
    var buffer: static_buffer(n * sizeOf(t));

    fun asBytes(): @Byte
    {
        return reinterpretCast(@Byte, buffer);
    }

    fun at(n: SizeType): t@
    {
        var p: @AnyType = ptrAdd(this.asBytes(), sizeOf(t)*n);
        return reinterpretCast(t@, p);
    }

    fun ()(n: SizeType): t@
    {
        return this.at(n);
    }
}


fun[native("test")] test(n: Int)
{
    writeLn(sizeOf(A));

    var arr: Array(Int, 100);
    writeLn(sizeOf(arr));

    arr(0) = 1;
    arr(1) = 2;
    arr(2) = 3;
    arr(3) = 4;
    arr(4) = 5;

    writeLn(arr(0));
    writeLn(arr(1));
    writeLn(arr(2));
    writeLn(arr(3));
    writeLn(arr(4));
}

/*<<<Running()
32
400
1
2
3
4
5
>>>*/