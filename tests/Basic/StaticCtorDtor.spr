//!! -t "SparrowImplicitLib.spr"

class MyType
{
    fun ctor()
    {
        write('c'); write('t'); write('o'); write('r'); write('('); writeLn(')');
    }
    fun ctor(i: Int)
    {
        x = i;
        write('c'); write('t'); write('o'); write('r'); write('('); write(i); writeLn(')');
    }
    fun ctor(other: MyType@)
    {
        x = other.x;
        write('c'); write('t'); write('o'); write('r'); write('('); write('C'); write(' '); write(x); writeLn(')');
    }
    fun dtor
    {
        write('d'); write('t'); write('o'); write('r'); write('-'); writeLn(x);
    }
    
    var x: Int;
}

fun ctor()
{
    write('c'); write('t'); write('o'); write('r'); write('-'); writeLn(1);
}

fun dtor
{
    write('d'); write('t'); write('o'); write('r'); write('-'); writeLn(1);
}

/*fun ctor(i: Int)
{
    write('c'); write('t'); write('o'); write('r'); write('-'); writeLn(2);
}*/

fun ctor()
{
    write('c'); write('t'); write('o'); write('r'); write('-'); writeLn(3);
}

fun dtor
{
    write('d'); write('t'); write('o'); write('r'); write('-'); writeLn(2);
}

fun[native("test")] test(n: Int)
{
    write('o'); writeLn('k');
}

/*<<<Running()
ctor-1
ctor-3
ok
dtor-2
dtor-1
>>>*/