//! ! -O3
// -g -O1 --dump-assembly
import par.tasks;
import par.parFor;
import test;

using par.parFor;
using par.Atomic;

var counter: Int Atomic;
var outOfOrderCount: Int Atomic;

fun foo(x: Int) {
    var curIdx = counter++;
    if ( curIdx != x )
        outOfOrderCount++;
    par.sleep(0);
}

fun sprMain
{
    if ( programArgs.size() < 2 )
        return;
    var n = programArgs(1) asInt;

    0..n parFor \foo;

    //cout << "Num out of order: " << (outOfOrderCount load) << endl;
    test.assertGt(outOfOrderCount load, 0);
    test.assertLe(outOfOrderCount load, n);
}

/*<<<Mid range (100)
>>>*/

/*<<<Big range (1000)
>>>*/

